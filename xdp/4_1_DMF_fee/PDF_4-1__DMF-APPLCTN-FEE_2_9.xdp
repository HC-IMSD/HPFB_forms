<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="AdobeLiveCycleDesignerES_V10.0.2.20120224.1.869952" APIVersion="3.5.12002.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2015-07-28T19:56:17Z" uuid="0e9e46f6-0a26-445e-b109-6502375b20f5">
<template xmlns:xliff="urn:oasis:names:tc:xliff:document:1.1" xmlns="http://www.xfa.org/schema/xfa-template/3.0/">
   <?formServer defaultPDFRenderFormat acrobat9.1dynamic?>
   <?formServer allowRenderCaching 0?>
   <?formServer formModel client?>
   <subform name="DrugAppl" layout="tb" locale="en_CA" restoreState="auto">
      <pageSet>
         <pageArea name="Page1" id="Page1">
            <contentArea w="203.2mm" h="252.336mm" x="6.35mm" y="13.508mm"/>
            <medium stock="default" short="612pt" long="792pt"/>
            <draw h="6.35mm" name="imgHCLogo" w="47.625mm" y="6.35mm" x="6.35mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/bmp">Qk1bkAAAAAAAAAAAAAAoAAAALAEAACkAAAABABgAAAAAACSQAAAAAAAAAAAAAAAAAAAAAAAAAgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/
+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+///8///8//j///j/+//3+P/38fj/
8fj/8//3+v/3///8//7///3///3/+v/8+v/8/f/////////+///++v/8+v/8//7///7////+///+
5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7+
+v3/+v3////3///3+v//+v/////+///+/f36///8//j//vb++//36vHp8fj/8fj/8//3+v/3+PXy
/v3++/n7//3/+v/8+v/8/f/////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7
AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
/////////////////////Pz8+vr6////////////////////////////////9/f32trapqameXl5
aGhodXV1mJiY3d3d+fn5////8/Pz////8/Pz/////v7+vLy8fX19Z2dni4uLurq69/f3////vLy8
xsbG0NDQ/f39/v7+tbW1uLi48vLy+fn5+vr6/Pz8////+Pj4o6Ojv7+/9vb2/f39////+fn5tra2
hISEZ2dnhISEwsLC7e3t////vb29w8PDzc3N/////f39+vr6////zs7OhISEY2NjlJSU2dnZ+/v7
t7e3vLy8////////+Pj4+vr6ubm5gYGBbm5uf39/z8/P+/v7////srKywsLC3d3d////////////
////////////////////////////////////////////////////////////////////////////
////////////////+/v7////+/v7/v7+////+vr65ubmlpaWYGBgREREQkJCW1tbj4+P3t7e/f39
+vr6/v7+/f398/Pz////ycnJdnZ2Q0NDS0tLaGhoqKio////8PDwc3Nzo6Oj8/Pz////3t7egICA
s7Oz////9vb2////////////sLCwhISEzs7O/f39////////ysrKa2trV1dXUVFRXFxctbW1////
4+Pjjo6OlJSU/v7+9vb2/Pz8////29vbgYGBUVFRRkZGhoaG6Ojo09PTe3t74ODg/////Pz8////
z8/PaGhoREREPT09d3d3uLi4////4ODgkZGRmpqaAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3
+v//+v/////+///+///8///8//j///f/+//3+P/38fj/2+L73vHi+v/3//z5//7///3///z/9v34
+P/6/f/////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
/////Pz8/Pz8/////////f39+/v7/v7+9vb2////39/fbGxsFBQUAAAAAAAAEBAQBQUFAQEBCAgI
h4eH2tra/////Pz8////+fn5ZWVlAAAACAgIAwMDAAAACwsLPj4+u7u7FhYWAAAAsLCw////2tra
BgYGAAAA0dHR+/v7////////+vr6rq6uCgoKCwsL8vLy////4+PjbGxsAAAAAgICBwcHAAAABgYG
Tk5OmpqaGxsbAAAAvLy8+/v7////////bW1tAAAAAAAAFxcXBQUFFhYWYGBgAAAAMzMz9vb2////
+fn5VFRUBwcHAgICAAAAAAAABAQEPj4+oaGhGhoaAAAAwsLC////////////////////////////
////////////////////////////////////////////////////////////////////+fn5////
////////////////6urqmJiYFhYWAAAAAAAABgYGBQUFAAAAAAAAFRUVg4OD////////+/v7////
sLCwGxsbAQEBBQUFBgYGAQEBAgICTExMYWFhIiIiLy8v/v7+9vb2mpqaCAgIUFBQ8fHx+fn5/v7+
/Pz88fHxUlJSCQkJgYGB+/v7/Pz8paWlCQkJAAAAAAAAAgICBwcHAAAAVlZWb29vAQEBTk5O4ODg
////////pqamMjIyBQUFAwMDAQEBAwMDLS0tOjo6EhISmpqa////////qampGBgYAAAAAAAAGxsb
AAAAAAAAaGhoaWlpBgYGOTk5AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+
//38//38+/v1+vr0+v/+6/b3xbX/ZVXFqKTs8u///fr9///8///3///3+v77+////f/////////+
///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4
AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////
/////////////////////////////////////////////////////////////v7+/f39/v7+////
////+/v7+fn5+/v7////zs7OVlZWAAAAAAAAQEBAc3NzkZGRYWFhREREAAAAAwMDW1tb4uLi////
+Pj4l5eXAgICAAAAeHh4urq6xsbGg4ODHx8fDQ0NAAAAHBwc7e3t+vr68/PzCAgIAAAAysrK////
////+/v7////srKyAwMDFxcX9vb2+vr6jo6OAAAAAAAAhoaGxsbGzs7OdHR0GRkZDAwMAAAAERER
/////v7+////fn5+AQEBCwsLenp6srKyh4eHMjIyAAAABAQEMjIy////9/f3lJSUAAAADAwMe3t7
y8vLwsLCenp6GBgYCgoKAAAAICAg////////////////////////////////////////////////
////////////////////////////////////////////////////9/f3////////9/f3////8/Pz
hYWFERERAAAAMzMzeXl5r6+vsLCwfX19OTk5AAAAAAAAl5eX4uLi////8vLyNjY2AAAAQkJCwMDA
39/f1tbWenp6Hx8fAAAACAgIYGBg/f39+vr6lZWVAAAAUVFR////////9fX1/////f39Tk5OAAAA
fHx8////6OjoMDAwAAAAV1dX0tLS2dnZ1dXVh4eHCgoKAAAAAAAAfX19////////zc3NKioqAAAA
S0tLxMTEzs7Oi4uLKioqAAAAAAAAmpqa////5+fnIyMjAAAAUVFR3Nzc4ODgzMzMgoKCAAAABQUF
AAAAkJCQAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+
AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+//r5//38///5///5
+v/+8/7/wbH/NCSUhoLK7uv///z////8///3///3+//8+////f/////////+///++v/8+v/8//7/
//7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/
AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////
/////////////////////////////////////////////v7+/v7+/////////v7+/f39/f39////
////WFhYAAAAHBwcm5ub9fX1////+vr6////6+vrlZWVAAAAAAAAenp6////9/f3UFBQAAAAVlZW
////////////////19fXEBAQAAAAJycn////8vLy7+/vDAwMAQEB0NDQ/////v7+9fX1////q6ur
AAAAFxcX////8PDwVlZWAAAAZmZm/v7+/v7++fn5////rq6uJSUlAAAAHBwc7e3t////1tbWAAAA
BAQEn5+f+fn5/Pz8////xsbGHx8fBAQEOjo6/////v7+QkJCAAAAbGxs////////+/v7/Pz8tra2
GhoaAAAATExM7e3t////////////////////////////////////////////////////////////
/////////////////////////////////////////////////Pz8/v7+rKysHx8fAAAAXFxc3Nzc
////+fn5+vr6////4uLiY2NjAgICBgYGwMDA////w8PDAAAAAAAAwsLC+/v7////////9fX1oaGh
ExMTAQEBgYGB/v7++fn5l5eXBQUFW1tb////////////////////U1NTCQkJgoKC////0tLSAAAA
CgoKs7Oz////////////7e3tnp6eDAwMAAAAioqK////8/Pzc3NzAAAAUFBQ8fHx////////////
lJSUDg4OBQUFrq6u/v7+19fXAgICBQUFzMzM////////////+vr6mZmZBAQEAAAAg4ODAgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v//
//3+//z8//7++v3/+v3////3///3+v//+v/////+///+//3///3////w///w9P/+7fP/zbb/Nh/B
e3bf7Oz/+P7////7///3/f3x9vf7/P3+///////////+///++v/8+v/8//7///7////+///+5O//
V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5
Dg/jhYr/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////f39/v7+////////////t7e3CgoKBwcHmpqa
+fn5/////v7+9/f3////+Pj4+vr6dnZ2AAAAGBgY2NjY////W1tbAAAAW1tb////+fn58PDw////
////h4eHAAAADw8P8vLy/f3929vbCQkJAAAAyMjI+fn5////////////srKyBgYGFhYW9/f38PDw
Xl5eAAAAaGho/Pz8/v7+/v7+/v7+////eXl5AQEBOTk57+/v////fHx8BgYGTExM9vb2////5eXl
////////gYGBAAAAMzMz/v7++/v7QkJCAQEBY2Nj/Pz8////////////////a2trAAAAODg4////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////Pz8////9fX1Xl5eAAAARERE9PT0////+/v7/////////Pz8
////9vb2OTk5AAAATExM9vb28fHxAQEBDAwMrKys/////v7+8vLy////9/f3PT09AAAAh4eH////
+fn5kJCQAAAATU1N8fHx+fn5////////+/v7RkZGAQEBgICA+/v70NDQAwMDDw8PqKio+Pj4////
9vb2/////Pz8ISEhAwMDenp6////39/fJSUlAAAApKSk////+/v77e3t////6urqQEBAAAAAm5ub
////v7+/AQEBAwMDwsLC+/v7+/v7/////////Pz8GRkZAQEBi4uLAgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/
+v3////3///3+v//+v/////+///+//3///3////w/f/u7fv35+3/w6z/LBW3gHvk7Oz/+P7//P74
///2/f3x+vv//f7////////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8
BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////
////////////////////////////////////////////////////////////////////////////
/////////////////////v7+/Pz8/////////////v7+ZGRkAAAAT09P6urq////+fn5/f39////
////+vr6////39/fDAwMAgICkZGR7OzsnZ2dBwcHAAAAjIyM09PT/f39////7OzsoKCgDw8PISEh
7+/v/Pz809PTFxcXCgoK1NTU9/f3/Pz8/v7++Pj4qKioBgYGFhYW8fHx/v7+mpqaCQkJAAAAi4uL
2tra8fHx+Pj4////mpqaAAAASUlJ////+Pj4S0tLAgICdnZ2/////////f39/f39+Pj4qqqqCgoK
MDAw////7OzskZGRAAAAGxsbjIyM0NDQ+vr6+vr6////oKCgBwcHKSkp/Pz8////////////////
////////////////////////////////////////////////////////////////////////////
/////////Pz89/f3////z8/PFxcXAAAAqqqq/v7+////////+vr6+fn5////////+/v7fHx8DAwM
ExMT0dHR////T09PDw8PBQUFiYmJxsbG4+Pj/v7++vr6VFRUAAAAf39//Pz8////nZ2dAAAAWVlZ
/////////Pz8/Pz8////V1dXBgYGhoaG////8PDwWFhYAAAAHBwclZWVy8vL09PT////+Pj4U1NT
DAwMe3t7////1NTUAAAACQkJ6Ojo/////////v7+////+vr6Xl5eAAAAmJiY////+fn5UFBQAAAA
HBwcnp6eu7u76urq+vr6/f39SUlJAQEBgICAAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//
+v/////+///++/f7//v////z///08///5fH/v7X/LCKygo7W5vn/7f71+vz4//7///r//fz//fz/
///////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+
AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////
////////////////////////////////////////////////////////////////////////////
/////f39+/v7/////////Pz87+/vJCQkAAAAhISE////////////////+Pj4+/v7+/v7+vr68vLy
e3t7fn5+zMzM////+vr6ZmZmAAAACQkJBQUFCgoKOjo6iIiIh4eHBQUFDg4O+Pj4////5OTkAAAA
AAAA1dXV/v7+////////////ra2tBAQEFxcX9vb2////5ubmbGxsAAAAAwMDDg4ODAwMPj4+fHx8
enp6AAAAMDAw////+vr6Ozs7AQEBlJSU/f399/f3/////////Pz8t7e3AAAANDQ0////////7u7u
V1dXAAAAAwMDCAgIERERQ0NDhoaGY2NjAAAAMzMz////////////////////////////////////
////////////////////////////////////////////////////////////////////////+/v7
/Pz8nJycAAAAFBQU3d3d////9vb2+vr6////////+fn59PT0////9fX1enp6wMDA9/f3////5OTk
REREBQUFAAAACAgIDQ0NIyMjYWFhOjo6DQ0Ng4OD+/v7////mpqaAAAAVVVV/////////f399fX1
////VVVVAAAAenp6////////0tLSTExMFBQUAAAAAwMDDQ0NIyMjbW1tLS0tAAAAh4eH////1NTU
AAAACQkJ8PDw+/v79vb2/////////f39aGhoDg4OoqKi9vb2////1dXVTU1NEhISAAAAERERCQkJ
LCwsZWVlKioqAAAAgYGBAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+//v/
//r/+frq///08///4Oz/vrT/NCq6kZ3l5vn/7v/2/f/7//7///j//fz/9/b////////////+///+
+v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+
AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////
/////////////////////////////////////////////////////////f39/v7+/Pz8/Pz8////
////9PT04eHhAAAABwcHnp6e////+fn5+/v7/////v7+/////Pz8////9/f3////8vLy////////
////////vLy8ZGRkLS0tHh4eAQEBAAAAAAAAAAAAJCQk+Pj47+/v6+vrAwMDAgICzMzM/Pz8/Pz8
////////rq6uAAAAHBwc8fHx9vb2////9/f3r6+vZ2dnJycnKCgoAgICAAAAAAAAAAAANjY2/Pz8
/Pz8LCwsAAAAlpaW/////f39////+Pj4////tLS0AAAAPz8/6Ojo////////////nJycX19fODg4
FhYWDAwMAAAABgYGAgICQkJC8vLy////////////////////////////////////////////////
/////////////////////////////////////////////////v7+////////9/f3gYGBAAAAQUFB
9PT0/////Pz8/////v7+/v7+/////Pz8////7e3t////9vb2/////////v7+9/f3vr6+e3t7TU1N
MDAwCgoKCwsLAAAAAAAAhoaG9/f3/v7+lpaWAAAAVlZW+/v7+vr6/////////Pz8T09PAAAAh4eH
+vr6////+/v7////pqamiIiIS0tLMTExHR0dAAAAAgICAAAAjo6O9fX1ycnJAAAADg4O5+fn/v7+
+/v7////9vb2////Xl5eAAAAqqqq////+/v7////9PT0p6enc3NzSUlJNDQ0Dw8PAAAABAQEBwcH
gICAAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/
DQT0TDj/5P/49f/3+/3+/f//8vf2+v/++/r7+fj5///8+fn24uL/3tj/6t//7eL/7fL/7fb/6fX/
7fn/0sT/NSeNl4zo7ej/7fv/6ff/7fH/7Oj/7eb/5d7/8PL9//z///7+//7+//n///v/+v/x+v/x
+//4+/z/7PL/XlzeEgD/BQD9AAfrAgvvAAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9
AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////
/////////////////////////////////////////Pz8////+/v7/////v7+////////vLy8AAAA
AAAAzs7O+/v7/v7++fn5////////////+fn5/v7+////8/Pz////////9/f3////+/v7////////
/v7+8vLy2traubm5XFxcAQEBGBgY7Ozs+vr64+PjCgoKAgICx8fH+Pj4////+fn5////sLCwAgIC
ICAg7e3t+/v7/////////////Pz88vLy+vr62dnZubm5VFRUAAAAQEBA+/v7+/v7TU1NAQEBcXFx
/////////Pz89PT0////n5+fAAAANTU1+fn5+fn5/////Pz8/f39/////Pz88vLy2NjYsrKyV1dX
AAAAPj4++/v7////////////////////////////////////////////////////////////////
/////////////////////////////////f39////////////UVFRBgYGOzs7+vr6/////Pz8/Pz8
////////+/v7+vr6////+vr6////////9/f3////////9/f3+fn5/Pz8////9/f36urqxcXFPDw8
AwMDenp6/////f39l5eXBwcHMDAw+/v7////+/v7////////V1dXEBAQgoKC6+vr////9/f38/Pz
+fn5/v7+/v7+////4+Pjurq6OTk5AAAAfn5+////19fXBAQEDg4O0NDQ+/v7////+fn5/v7+////
QkJCAAAAkZGR/////////Pz88PDw////+/v79PT0////7OzsyMjIKCgoBQUFkpKSAgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/DQT0TDj/5P/49f/3
+/3+/f//+v/+8vn2//7///7/8e7q///82dn/Ylyza2C9i4Ddp6zZx9Dx1OD45vL/x7n/Sz2jpJn1
39r/2Ob5xtTnuLztjIjPa2S1WlOk8PL9//r///z8//n5//j///v/+v/x9f/s+//4+/z/7PL/Xlze
EgD/BQD9AAfrAgvvAAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/j
hYr/////////////////////////////////////////////////////////////////////////
////////////////////////+/v7////+/v7/////v7+/////f39vb29AAAACQkJzs7O////////
////////+/v7+fn5/v7++Pj4/////v7+////////////xcXFT09Pbm5u7e3t////8PDw/f39////
srKyDw8PJCQk+Pj4+fn55OTkDg4OAAAAmJiY////////9/f3////lpaWAQEBGBgY////////vr6+
RUVFampq////////7e3t+vr6////mpqaCAgIPz8/8vLy////iYmJAAAAPz8/8vLy/////f39////
/Pz8XV1dAQEBPT09////////xcXFTExMY2Nj////////9fX1////////lZWVCQkJPz8/+Pj4////
////////////////////////////////////////////////////////////////////////////
////////////////////////////+vr6WVlZBQUFRkZG////+Pj4////////////////////////
+/v7////9vb2+/v7////9fX1e3t7KysrjY2N////////+fn5////7+/vTExMAgICgYGB/////Pz8
kJCQAAAAGhoa0NDQ////8/Pz////9PT0Ozs7AAAAhISE////+fn5enp6MDAwkJCQ////////7e3t
/////v7+RkZGBwcHjo6O+/v75eXlR0dHAAAAeXl5////9vb2////////wcHBCAgIAAAAq6ur+vr6
8vLyc3NzKCgonZ2d////////+vr6/v7+////Ojo6AAAAqqqqAgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAH/AAH/CwbxTj3/5v/3+v/2//T///b///f/9u76
/vT///7////y///y2uLoWmK2AADpCwP1DAj2FhP9HRr/MC3/OCz/AgD2HRP/KCH/GRb7DAztDwv/
BQD5DQXuNjXR7vfw+/vx///0///0//n///X//Pr6/Pz8//7///3/7/X/XmfJEAH8AwD9AAD8AAP/
AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////
////////////////////////////////////////////////////////////////////////////
////////+/v7/////Pz8/////v7+/////Pz8xsbGAAAACwsLwsLC+/v7/v7++/v7/v7+9vb2/v7+
+fn5////7e3t////9PT0/f39/Pz80NDQCAgIAAAAoaGh/Pz8////////7OzsZGRkAAAANzc39/f3
////7OzsEBAQAwMDLi4uvr6+8/Pz////6OjoVlZWAAAASUlJ+/v7////ycnJBwcHAAAArKys////
////////8/PzZ2dnAAAATk5O6+vr////0NDQGxsbAAAAkJCQ+Pj4////8vLynZ2dDAwMAAAAPj4+
+/v7////wsLCCgoKAAAAurq6/////v7+////6enpXFxcAAAAS0tL9/f3////////////////////
////////////////////////////////////////////////////////////////////////////
/////Pz8////8/Pzb29vAAAAMzMz/Pz8/////v7+9/f3/f39+/v79PT0////////+vr69/f3////
/Pz8////j4+PAAAAHx8f09PT9fX1////////t7e3ExMTAAAAmpqa////////np6eCgoKAQEBVFRU
x8fH////+vr6ra2tCwsLAgICoaGh////7u7uhISEAAAAMTEx0dHR////////7u7usbGxBwcHAAAA
ra2t////////lpaWAAAAEBAQurq6+vr6////wsLCUVFRAQEBAgICnZ2d////////fHx8AAAAMTEx
zMzM/////v7+////sLCwAAAACAgIrq6uAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AAH/AAH/CwbxTj3/5v/3+v/2//T///b///f/+/P/+vD9//3+///y///y
8fn/o6v/Egr+FQ3/BADuAwDqAwDmBQLoEwf/BwD7EAb/DQb3CwjtAADhBAD4CAD8Hhb/ZGP/9v/4
///1///z///0//n//fP//fv7//////7///3/7/X/XmfJEAH8AwD9AAD8AAP/AAL7AAL7AAH+AAH+
AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////
/////////////////////////////////////////////////////////////////////f39////
/Pz8/////f39////////2traEhISAQEBm5ub+Pj4////////////+/v7////+/v7/////////f39
/f39////+/v7////c3NzAwMDDAwMT09Pfn5+bm5uQEBAAAAADg4OiIiI9vb2/v7+3d3dAAAADAwM
EBAQCwsLTk5OZGRkMzMzAAAABQUFpKSk9/f3////////enp6BgYGERERREREgICAd3d3REREAAAA
CQkJnJyc+vr6/v7+////h4eHAQEBBAQEUVFRgYGBQUFBGRkZAAAAAAAAPz8/+fn5////+vr6a2tr
AAAACQkJaWlpcHBwcXFxNzc3AAAACwsLlpaW////////////////////////////////////////
////////////////////////////////////////////////////////////////+fn5////9PT0
mJiYAAAAFBQU5ubm8/Pz/////////////Pz8////////+vr6/v7+////////7u7u////7u7uUlJS
AAAADAwMOjo6VlZWODg4BgYGAAAAQkJC8fHx////////hISEAAAAHR0dFBQUEBAQOTk5Li4uAAAA
AAAAV1dX3Nzc////+vr66+vrRkZGAAAACQkJPj4+W1tbMTExCgoKAAAAOTk539/f////////7e3t
Y2NjAAAAAAAAR0dHREREERERBQUFERERAAAAlpaW/////f3919fXTk5OAAAAEhISRERET09POzs7
AAAABwcHPz8/6OjoAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AAL+AAL+CwXyUTj/7f////z///X///f//v70+vrw///1/f/16/Dw8/T/6dr/b2f/AALrAgT7
BQX4Cgr/CA3/AwP+AgL6AAD5AAD0AAD3DAz/Dg7/CQn/BAT/DAz1KTn/19P/8PL/9Pv/+//++f/2
///1///y///y//v//+7/8e3/YF3bEAD/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+
AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////
/////////////////////////////////////////////////////////////Pz8/v7+/v7+////
////8fHxNjY2AAAAcHBw////////7e3t+vr6/v7+/////////Pz8////gYGBwsLC8PDw////////
8fHxk5OTJycnAAAACAgIBQUFAAAAGhoagICA7u7u////////4ODgICAgNDQ0xsbGOTk5CwsLAAAA
AAAAJiYmhYWF/////////Pz8////6enphISEFxcXAAAABQUFAwMDAAAAGBgYhISE8/Pz////9PT0
////+fn5lpaWHR0dAAAAAAAABgYGW1tbcnJyBAQEOzs79/f3+vr6////5ubmfn5+IiIiAAAAAAAA
AwMDBAQEIiIii4uL7e3t////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////f39yMjIDw8PAAAAtbW1
////////9vb2/////v7+8PDw/Pz8////paWlc3NzpaWl8PDw////////29vbjIyMGBgYDAwMCgoK
AAAAFhYWYmJivb29/////f39/f39qampPj4+lZWVoKCgPDw8BgYGAQEBHx8fZWVlycnJ////////
////////5+fnfHx8KysrAAAABQUFAAAADAwMVVVVy8vL/////v7+8vLy////6urqfn5+JycnAQEB
AAAARkZGnZ2dU1NTAwMDoaGh6+vr////////0tLScXFxKSkpCQkJBAQEAAAAGBgYVlZW09PT////
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAL+CwXy
UTj/7f////z///X///f////1///1/P/w/f/1+v//3+D/koP2Jh7PAAfwAAL5AADzAAD5AAX/AAD7
AAD4AAD8AAT8AAD4AAD9AAD0AAD6AAD7AADpARHzc2/ZyMrz9Pv/+//+9//0///1///y///x//v/
/+7/8e3/YF3bEAD/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9
AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////////
/////////////////////////////////////////////f39/f39/v7+////////////f39/AAAA
Hh4ez8/P/////////f39/v7++/v79vb2////jY2NAAAAGRkZycnJ/Pz89/f3////////6enpubm5
pKSkr6+vu7u73d3d9/f3////9/f39vb2////xcXF5OTk////6urqurq6r6+vw8PD09PT/f399fX1
+fn5/Pz8+vr6////////2traxsbGqampoaGhtbW12tra/v7+////////+Pj49/f3////////2dnZ
vLy8r6+vv7+/+vr6pqamBAQEMzMz/f39+/v7/Pz8////////3NzczMzMra2tq6urx8fH5eXl////
/////Pz8////////////////////////////////////////////////////////////////////
////////////////////////////////////////////7OzsR0dHAAAAR0dH/////////v7+////
/////v7+/////f39NjY2AAAAXFxc////////8/Pz/////f39+fn5z8/Px8fHycnJ2dnZ////////
/Pz8+Pj4////////09PT8/Pz////7u7u1tbWw8PD3Nzc/Pz8/////v7+////////+/v7////+vr6
8PDwzs7Ow8PD09PT5ubm/////////////////v7++vr6////////7e3tz8/PyMjI8fHx////V1dX
AAAArKys/v7+/////v7+////////6urqxsbGxcXF0dHR5ubm////9vb2/v7+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAT7CwX0UTT/7f////39//z5
///1///r+//r5PDy6u7/3t//dm3/HQf/BgD3BQL4CAX7BAD5BAP5Cgr9CQb8BgL8CAX+BQL4BAH3
AgH0AwH1Dgn/Dg7/BQX6Cwr6CwDiWk3/sbH/3+n/5vf/6/nz9//j///n//3//+3/7+j/XlbpCwD/
AAD+AAT0AAj4AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/
////////////////////////////////////////////////////////////////////////////
/////////////////////v7+/////v7+/////////f39/v7+////5eXlPz8/AAAAVVVVzMzM////
////9/f3////7+/v4+PjMDAwAAAANTU19fX1////////9PT0/v7+/////////Pz8/////////f39
/v7+9/f3+/v7/////////v7+////8/Pz////////8vLy/v7++/v7////////+/v7////////+fn5
/////////////Pz8////////////+fn58fHx/Pz8/////////////v7++vr6////8/Pz/Pz8////
kpKSAAAANDQ0////////+vr69PT0////////////9PT08/Pz/////////Pz89fX1+vr6////////
////////////////////////////////////////////////////////////////////////////
////////////+fn5////////////+/v7paWlIiIiAAAAenp64eHh////8/Pz+Pj4////6enpe3t7
AwMDEhISm5ub/////////Pz8////////////+vr6/////////Pz8////////////////+Pj4////
////+vr6+/v79/f3+/v7////+/v7////+/v79fX1/v7+////////8/Pz/Pz8////////+fn5/v7+
/v7+////////9fX1/f39////+vr69PT0/Pz8+vr68fHx////////9/f3UlJSAQEBmZmZ////////
/Pz89/f3////////////////////////+fn5/////v7+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAT7CwX0UTT/7f////39//z5///1///o9//n8f3/
29//dXbRIhm2FgD8BgD3BAH3Cgf9CQX+AQD2AADzAwD2BAD6AwD5BAH3CAX7AQDzBAL2BwL/AAD3
AAD1Bwb2EwbqFwrKTk7Qsbv/5vf/8f/59v/i///n//3//+3/7+j/XlbpCwD/AAD+AAT0AAj4AAP6
AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////
////////////////////////////////////////////////////////////////////////////
////+/v7/f39////////////+vr69vb2+vr6////rKysFRUVAAAAKysrkJCQysrK5+fnysrKpaWl
JSUlAAAAExMT1dXV////8vLy/Pz8////////9vb2+vr6////////////+Pj4/////v7+////////
9fX1/////v7+////8PDw////9vb2////////+vr6////////+/v7////+vr6////////8PDw////
////+fn59/f3////////////+vr6/Pz8////9fX1/Pz8////////////+Pj4lZWVAAAAPT09+fn5
9vb2////////+vr6/f399/f3////////+/v7/f39/////v7+////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+fn5/v7+/v7+////f39/AQEBAAAAQ0NDhYWFycnJ0tLSmJiYUlJSAAAAAAAAc3Nz////+/v7
8/Pz////9fX1////9/f3/v7+////////////////+fn5/////v7+////7+/v////+/v7////////
/v7+/////Pz8////////+/v7////////////////////+/v7/f39////////+Pj4/////Pz8////
////+/v7/////////////////////v7+9/f3////RUVFAAAAnp6e////////////////9vb2/v7+
////+vr6/v7+/////////f39////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AQP8AQT5CwbxUTf/7f/3///2///1///38/X47O7/wbr/Ukf/DwneBgPzExP/
AADlBAT7EQ//Cwv7Cgj/AwP/BQX/AQH6AgD9DQ3/Bwf/Bgb5AgL+AAD3AAD5Cgj/BQX+ERH/AADr
ERL8ICHniY7/3eP/7f//+vr6//7+//7+7fP/XF3dBwL/AAH9AAD7AAT/AAL7AAL7AAH+AAH+AAT4
AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////u7u7Ojo6BQUFAAAABgYGFRUVAgICAAAAAAAAKSkpsbGx+fn5
/////f39/f39/////Pz8/f39////////+/v7/f39/////////Pz8////////+/v7////////+Pj4
////////+vr6/////////////v7+/////Pz8/////////////////f39/Pz8////+Pj49vb2////
/Pz8+Pj4////9/f3/////f39/////////Pz8////////hoaGAAAALS0t8vLy////+vr6/////Pz8
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////f39////////////
////6urqrKysJCQkAwMDAAAABQUFCAgIAAAAAAAADg4OfHx87+/v////////////+vr6////////
+vr6////////9vb2+/v7////+vr6/Pz8/////////////Pz8////////9vb2////////////////
+/v7////////9PT0/Pz8+fn5/////////////Pz8/////v7++fn5////+/v7/////////Pz8/f39
////////////+vr6////9/f3R0dHAAAAo6Oj////////////////////////////////////////
////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AQP8AQT5CwbxUTf/7f/3///2///1///3+vz/urz2XlfiGg/XEQvgBQLyAADyBxL/AAD3AgD+AADw
BgT/AAD8AAD7AAD5BAL/AAD2AAD7AADzAAD8BwX/AwH/BQP/AAD5AAD2AAP/DA33BgfNOj/ak5n4
4fX2//////7+//7+7fP/XF3dBwL/AAH9AAD7AAT/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+
AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+vr6////////0NDQnp6eVVVVJSUlAwMDFxcXQ0NDjY2N0NDQ/////////Pz89/f39/f3////
////////+fn59/f3+vr6////////////+vr6+/v7+vr6+vr6/////////////////f39/Pz8////
+/v7/v7+/////////v7++/v7/////////v7+////////////////////+/v7/v7+////////////
////+vr6+vr6+/v7/f39+/v7////yMjIV1dXe3t77e3t/////Pz8////////+/v7////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////+vr6+vr6/////f399/f3////////+Pj44uLi
o6OjXFxcNDQ0Li4uSEhIhYWFvr6+9/f3////////9vb2/f39+/v7/////v7+/v7+////+fn5+vr6
/////////////////Pz8+vr6/f39+Pj4/v7+////+Pj4/////Pz89fX1////////+fn5////////
/////////Pz89/f39vb2/v7++/v7/////////////////////////f39////////////////////
+vr6////qqqqd3d309PT/Pz8////////////////////////////////////////////////AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwT5AwX3CwX0SjP/
6v///vz///r///z/09f1QUOnCQDWCQT5Cgr+DAz/AAj2CQn/CQnyBw76AAL7Cgr/Bwf6AAD9AA3s
BA3sAArwCQ78BQX/Awb/Bwr7AQX2AAn6Cgr9AAL4Awr/AQH0AADrAADYMyrUoK7Y9fT5//7///7/
6vL/WFzgBAL/AAD+AAH5AAX9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////9fX1////
////////9fX18PDw5+fn5ubm7Ozs////////////8fHx/////////////////f399/f3+/v7////
/////Pz8+fn5/////v7+////////////////+vr67+/v/f39/////////v7+8vLy+fn5/Pz8/Pz8
////9/f3/f39/////f39/////Pz8/Pz8+/v7/////v7+/////////Pz8////////////////////
/////v7+////+/v79vb2/////////////f399/f3/////v7+////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////Pz8/v7+////////+fn59/f3+/v7+/v7/////////////////v7+
/Pz8/////////////v7+/Pz8////////9/f3/Pz8////////////9vb2/Pz8/////Pz8+fn5/Pz8
/////////////////////////Pz8////////+Pj4////////8vLy////////////////+Pj4+vr6
/f39////+Pj4////////+Pj4/////////f39/Pz8/////v7++vr6////////+Pj4////////7+/v
+vr6+/v7////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwT5AwX3CwX0SjP/6v///vz///r///z/
3eH/ZGbKHgzrDgn+AAD0AAD4ABH/AAD3AADpAAfzAAP8AAD6AADzAAH+AhHwAAnoAQ70AAXzAAD9
AAP/AAP0AAT1AAn6AADzAAn/AAf/AADzEw//EAztWlH7tsTu+/r///7///7/6vL/WFzgBAL/AAD+
AAH5AAX9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////+Pj4+/v7/////f39+fn5////
/f39+/v7/v7+////+fn5////////////9PT0+fn5/Pz8/////////////////////f39////////
////////////////////////////////+/v7////+/v7////////+vr69/f3////+vr6+/v7////
////////+Pj4////+fn5+Pj4/f397u7u/f39////9/f3+Pj4/////////////////////f39/f39
/////////////////////v7+////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////v7++fn5/f39/////////f39////9vb2/f39/////f39/Pz8/f39/Pz89/f3////
/f39/Pz8/////////////v7+////9vb2////////////+vr68/Pz////////+Pj4/v7+////+Pj4
+/v7/////v7++vr6/////////////////Pz8////////+vr69fX19vb2////////////+Pj4////
+/v7/////v7+9vb2+Pj4////////////+Pj49/f3////////+vr6/////////f39////////////
////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQT5AQX3CgX0SDP/5v//+vr///f///n/7fT/ydL/Niz/AADt
DQ34AAD3AAD4CAv/CQj/BQX4AgL2AQH2BwP0BwP/CQn+AAD7CAX/AADxAADyCAT/BwjwDhH5DQ3/
AAD0AAD4Cgr+AAD8Bwf5FhHup6L/7Pr//fv///v///v/6Ov/V1joAAL/AAD+AAPyAAf2AAP6AAH9
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////9/f3////////////+/v7////////+vr6+/v7////////
8/Pz////////////+fn5////+fn59vb2/f39/////////////////v7++Pj4+fn5/f39/f39+vr6
+fn5////9/f3////////////9/f3////+/v7/////f39/////////////////////f39////+fn5
/////v7+/////f39////////////////////////+vr69vb2////////////////9fX1+Pj4/v7+
/Pz8/Pz89fX1+vr6////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////v7+
/f39/////////v7+/Pz8/////f39/v7++/v7+fn5/f39////////////9PT0////////+fn5////
////9fX1////////////9/f3////////////////7+/v+Pj4/////////////Pz8////////+Pj4
8PDw/////////////////////f39/////Pz8/////////f398fHx8PDw////9fX1+/v7/f39////
/////f399vb2+/v7////+/v7////////9vb2+vr6////9/f3////////////////////////////
////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AQT5AQX3CgX0SDP/5v//+vr///f///n/7fT/rrf/IBbyAADuFBT/AAP/AAb/AAP+
CQj/AADzAAD0AAD1Eg7/BQH/AAD1BAD/AwD+AQD8Cwf/BgL/AAHpAAPrAAD7BQH/AAL8AAD0AAH+
AADyEw7rnpn/7Pr/9fP///v///v/6Ov/V1joAAL/AAD+AAPyAAf2AAP6AAH9AAH+AAH+AAT4AAP4
AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////Pz8+/v7////9fX1/v7+/////////////////////////Pz8+vr6////
/////v7+////////////////9/f39/f3/////////////////f39/Pz8////////////////+fn5
9PT0/////Pz8////6urq////8PDw////////8PDw+Pj4////+Pj4////+Pj4////9fX19/f39/f3
/////f399fX1/v7+////+Pj4/Pz8/f39/////f399PT0/////////f39/Pz8+Pj4////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////+Pj4////////////+fn5////
/////////////v7+/Pz8////////+vr6+Pj4+fn59vb2////+vr69PT0////////9fX19fX1+fn5
/Pz8+/v7////////6Ojo////////////+Pj47+/v////////////////////////9/f37Ozs/f39
////9vb2+/v7/v7+////////7u7u/////Pz8////////9PT0////+vr6/f39////////////////
9vb2////+vr6/v7+/Pz8/Pz8/////Pz8/f39////////////////////////////////////////
////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+
AQL+CAjuR0L85P/0+f/z//z8//T/7/D/X1jeDADxBwD4AADwAADyDxD/AADmAADZGhqjKjaaAQ3J
CAzgBQToAQD2DAT/AADyDQL3DAzxBQrbJzqXIjWVAADbBwH0CAz+AADsBwP9Fg//Ixvyd3H46vj9
///8///3///36PP/V13eAAL/AAD+AAD8AAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/
AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
ubm5fX19paWl////////////////+Pj4/Pz8+vr6/f39u7u7hYWFra2t/f39+vr66+vr////+Pj4
tbW1gYGBW1tbUVFRaGhovb295ubm/////////v7+////39/ftbW1XV1dU1NTZWVlnZ2d5ubm////
oKCggICA0dHR/v7+9/f3hoaGjo6O9/f3/v7+/Pz8////wMDAioqKb29viYmJ/Pz80NDQi4uLrq6u
////////////////////x8fHh4eHsrKy/////////////////////Pz88/Pz////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////+Pj4+Pj4/////Pz8zc3NfHx8VVVV
MTExKSkpODg4ZmZmtbW1+/v7////////////////8PDwmpqaVFRUHx8fKCgoX19ftra2/Pz8u7u7
YWFhm5ub9PT0/f39lZWVbGxswcHB////+/v7/v7+////8fHxampqampq3Nzc////////////w8PD
VVVVT09PWFhY6enp////////1dXVqampRUVFJCQkJiYmUlJSmJiY8fHx////+/v7/////v7+/f39
/////////////////v7+////////////////////////////////////////////////AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQL+CAjuR0L85P/0
+f/z//z8//T/4OH/QzzCGAH9DgP/AQD4DQn/AAHzAQjxDgv0dnb/j5v/IS3pBAjcCwruCgD/CAD9
CwD/FQr/AADlGyDxj6L/jJ//IBv/BwH0AQX3AQT5CQX/BwD3CgLZT0nQ7Pr////7///3///36PP/
V13eAAL/AAD+AAD8AAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5
Dg/jhYr/////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////a2trAAAAQEBA9PT0
////+fn5/////v7+////////+Pj4ZGRkAAAAUFBQ+Pj4////////7e3td3d3CQkJAAAABwcHAQEB
BQUFAAAAcXFx6enp////////4uLiZ2dnAAAAAAAAAAAAAAAAAAAAOTk5iIiIGxsbAAAAv7+/////
2dnZAgICCwsL3Nzc////+/v70NDQISEhAAAAAAAAJycn8/Pzo6OjAAAAQkJC8vLy/////f39////
8fHxeXl5AAAAW1tb+vr69/f3////////+fn5/////v7+////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////+/v7////////////7Ozsh4eHAwMDBgYGAAAAAAAABgYGAAAAAAAA
FhYWSEhI6enp+/v7////7+/vcnJyAAAAAAAAEBAQJCQkAAAACwsLV1dXODg4AQEBdXV1////////
SUlJAAAAjIyM////////9vb2////6+vrAAAAAgICxcXF////////0NDQHx8fBAQEAAAADAwM5eXl
+vr6z8/PQEBAAAAABgYGCAgIEBAQAAAAAgICa2tr5eXl/////Pz8/////////////v7++vr6/v7+
////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7Awb1BAjxNTr/7P//8v7/8vv/9Pz/oKLS
KiVyQzt1eGyTXmaKPT25FwDcLA/PkJGv6er7naf/CxLXBwf/Bwf/AwXwAALtAAH9AAX8BQr5FQvh
na/q7+z/vqzSQCGQIA3ULBnReHapamiKQD1qPjaAt6/L+/T////x///x5vD/WF7dBwjyAgT2AAP0
AAX6AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////bm5uBwcHPz8//////////v7++vr6////
/f39/////Pz8WVlZAQEBWFhY/v7++vr6////dnZ2AAAADAwMaGhoxMTEx8fHmZmZEBAQAAAAVVVV
+Pj4////e3t7EhISAwMDmJiY2tra1dXVp6enLy8vAAAACAgIGhoa9fX1/v7+39/fBwcHERER6+vr
////////lZWVAAAAEhISfHx8paWl6urqpaWlAQEBUFBQ/Pz8////////+vr6/Pz8cXFxAAAAX19f
/////f39/////////f39////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+/v7////7u7u////+/v7bGxsAAAACAgILy8vfX19ubm5ubm5qKioZGRkCwsLAAAASkpK////
////p6enEhISAAAAkpKS29vb9fX12dnZf39/AAAAAgICBAQEr6+v/Pz8/f39VFRUCAgIkJCQ////
/Pz8/v7+////5+fnDAwMAAAAxsbG////////nJycCQkJCwsLmpqara2t////5ubmLy8vAAAALCws
uLi43Nzc6urqjIyMDw8PAQEBdHR0////////////////////////////////////////////////
////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AwP7Awb1BAjxNTr/7P//8v7/8vv/9Pz/zc//t7L/zcX/5Nj/09v/
g4P/KA/tXD//4OH/7e7/doD/AAfMAAD8AAD4AALtCAz3AAH9AAj/Bgv6DwXbgJLN7+z/69n/r5D/
JRLZWkf/zsz/393/1dL/vbX/6+P/+vP////x///x5vD/WF7dBwjyAgT2AAP0AAX6AAP6AAH9AAH+
AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////b29vBQUFQUFB/////////////Pz8/v7+/v7+////////XFxc
AAAAU1NT////////xsbGHBwcBgYGmpqa8fHx////////9vb2qqqqAQEBCQkJwMDA9PT0UVFRAAAA
XV1d/f39////7u7u////zMzMQkJCAAAAFBQU9vb2/v7+39/fBgYGERER6urq////////e3t7BQUF
Wlpa6+vr/v7+////o6OjAAAAUVFR////////////////////dHR0AAAAYGBg/////v7+////////
/Pz8////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////Pz89/f3
////ubm5FhYWAAAAWlpa8vLy/////v7+/Pz8////////rq6uCAgIBQUFqamp+Pj4lZWVAAAAJycn
6urq////////////6+vrhYWFBAQECAgIwcHB/Pz8////U1NTAwMDlJSU////+/v7+/v7////6+vr
Dw8PAAAAxcXF/////Pz8lJSUAAAAOzs7////+/v7////lpaWAAAAJiYm3Nzc////+Pj4/f39+Pj4
kJCQAAAADw8P1NTU////////////////////////////////////////////////////////////
////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+CAD+CwH7CwbxQD3/9P///v/4///y///05+jx9vf/+/n/8/L/7f7/wtPZhoOq2dbp7///
7///SEb+BgjwDA7/BAT/AAjiBhLsAAL4AgX/Bwf/DAz7Y2H76OX/+P/88/r3g4mjqK7B7f//8f7/
8fn/6+/6+/v/9/f2///p///p6vD/WFvhBQP9AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+
AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////dHR0AQEBQUFB/v7+/Pz8/////////v7+////////////X19fAgICVVVV////////
k5OTAAAAMzMz8PDw////+Pj49fX1////////d3d3cXFx3Nzc+vr6YWFhAAAAUVFR8vLy/////f39
/////Pz8d3d3AAAAJiYm9/f3////4ODgBgYGEBAQ6urq////////gICABgYGaGho/////////v7+
m5ubBQUFUFBQ////////////////////dHR0AAAAYGBg/////f39/////////Pz8/f39/f39////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////f39/Pz8/////v7+aWlpAAAARERE
////8fHx////////////7Ozs////////UVFRAAAAdHR0/Pz8s7OzAAAAFxcX0NDQ/v7+////+/v7
////2traAAAAAAAAy8vL////////U1NTAAAAnJyc+/v7+/v7+Pj4////6urqDg4OAAAAxMTE/v7+
+vr6kJCQAAAAQ0ND/////////f39QUFBAAAAbGxs////8/Pz////////////6+vrqampnZ2d+/v7
////////////////////////////////////////////////////////////////////////////
////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CAD+CwH7
CwbxQD3/9P///v/4///y///09fb/9vf/+/n/8/L/7f7/6Pn/29j/7+z/7///1+nqJyXdAgTsAAL/
AAD7AAnjAg7oAAX7AAP9AAD6AADvOTfR1tP/+P/8+P/83+X/5uz/7f//4/D46/P/8PT/+/v////+
///p///p6vD/WFvhBQP9AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9
AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////e3t7
AAAAQkJC/v7+/v7++/v7+/v7/Pz8+Pj4////+vr6WlpaAgICV1dX////+/v7WFhYAQEBbGxs/v7+
/v7++/v7+Pj4////////////////+fn5+/v7np6eDw8PAAAAdXV1urq65ubm9vb2////q6urEhIS
JSUl+fn5////4ODgBQUFDw8P6enp////////i4uLBQUFYmJi/////////Pz8m5ubBQUFTk5O////
/f39/f39////////bm5uAAAAXl5e////+/v7/////////v7+/////f39////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////v7+////////5eXlY2NjDQ0Nb29v////////////8/Pz
////8vLy////////VlZWAAAAZGRk/v7+6enpOTk5AAAAMjIyenp6w8PDwMDA+fn58/PzGhoaAAAA
v7+/////////VVVVAAAAoqKi+fn5////+Pj4////5eXlCgoKAAAAxMTE/////f39lJSUAAAARkZG
8/Pz/////v7+GRkZERERlZWV5eXl5+fn8/Pz9/f36enp8PDw9vb28fHx////////////////////
////////////////////////////////////////////////////////////////AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+BgH+CgL7CwjtQET79v7///77
///1///3///+9PPy///z///u/f3l///n///t9vbs+vv/ycf/LRL8CQf4AAD8BQX/BAb+AADzAAT4
DQ35Cw//CAD1KBDqu6P/9f70+v/1+f7+/f7////q+/vm///5///8/fz8+fj4///u///u7O7/Wlrk
BwH/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/j
hYr/////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////enp6AAAATExM////////
/////////////Pz8/////v7+W1tbAAAAUlJS////9/f3SUlJBgYGHR0dPT09LS0tQEBAMTExMjIy
KysrOTk5Nzc3f39/////////fX19CAgIAwMDAAAAEBAQLS0tW1tbWlpaBwcHNjY2+vr6////4ODg
BQUFDg4O6Ojo/v7+////hoaGAQEBZGRk////////////np6eAAAATExM/////////Pz8/////f39
bGxsAgICXl5e/v7++fn5////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////+fn5/v7++fn5/v7+7Ozs0tLS5eXl////+/v7////////////////////sbGx
Hx8fAgICjY2N////////vLy8R0dHAAAADAwMDw8PAAAAJiYmRUVFDQ0NAAAAx8fH////////V1dX
AAAAnJyc/v7+////+/v7/v7+5ubmDAwMAAAAx8fH////////lZWVAAAAODg4////+fn56+vrFxcX
AAAAFhYWHh4eGhoaGBgYGRkZFxcXHh4eGxsbPDw8lZWV////////////////////////////////
////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+BgH+CgL7CwjtQET79v7///77///1///3///+//79
///x///u///n///n///t///1+vv/qaf5HgPtAgDxAAL/AAD6BAb+AAD1AAn9AADsBQn8CwP4IQnj
o4v/9v/19//y+v//+/z////o///q///5/v/7//7+//7+///u///u7O7/WlrkBwH/AAD+AAD8AAP/
AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////b29vAAAATExM7u7u/v7+/Pz8+fn5////+fn5
////9PT0X19fBQUFTExM/////v7+VlZWBwcHAAAAERERBgYGEhISCAgIDw8PDw8PAAAAAwMDeHh4
7e3t////6+vr0tLSf39/RUVFLy8vDw8PCQkJERERAAAAQUFB/Pz8////4ODgBAQEDQ0N5+fn/v7+
////hoaGAQEBYWFh+fn59PT0+Pj4oKCgBAQEQkJC/////////////////v7+bGxsBwcHY2Nj////
+fn5/v7+////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/f39////+Pj4+vr6////////////////////////9/f31dXVqqqqampqGRkZAAAAJSUlyMjI////
/Pz8////////r6+vhYWFWlpaODg4Hh4eCgoKAAAABwcHzMzM+vr6/f39WFhYAAAAhoaG////////
/////Pz86urqDw8PAwMDycnJ/////f39kpKSAAAARkZG/////v7++Pj4LS0tAAAAExMTHR0dICAg
KSkpISEhKSkpMDAwAAAABwcHrq6u////////////////////////////////////////////////
////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AAH/AAH/AwrtN0j17fz/+vr///n///v/9vj6+/3///j7/vz++///9/v8
/f39+/r69uv/fm/bLBmuPjR8SU58Chi+AAD4Cgb/Dw//AADbMEiOQEd+MB2yflvy9Pv/9/b7/fb9
+/H7+/r3///8//j/+fX5+/X7/vj+///4///46u//WFzgBwT6AAP4AAL2AAb6AAP6AAH9AAH+AAH+
AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////bW1tAQEBKCgoiIiIioqKkJCQj4+PlpaWlJSUj4+PkpKSOTk5BwcH
Tk5O////////cXFxDg4ORERE29vb8fHx4+Pj3t7e3t7e4uLiMDAwBgYGjIyM/Pz8/////v7+////
+fn5/v7+////6+vrwcHBdXV1AwMDMjIy/f39////4ODgBAQEDQ0N5+fn/v7+////iYmJAwMDampq
/////v7++vr6oaGhBQUFKSkp8/Pz/v7+////////+/v7Z2dnBAQEbGxs////+/v7/v7+////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////9/f3/////////Pz8
+/v7////////8PDwwcHBeHh4ODg4GhoaDg4OAAAAAAAAHh4ep6en////////9fX139/f39/f////
////////////8fHxs7OzERERAAAAwsLC/v7++/v7V1dXAAAAZmZm/////v7+////+/v75ubmDAwM
AAAAx8fH/////Pz8kZGRAAAASEhI/v7+/////f39Pj4+AQEBdnZ2////////7Ozs5eXl+vr6w8PD
EBAQAAAAzs7O////////////////////////////////////////////////////////////////
////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AAH/AAH/AwrtN0j17fz/+vr///n///v/+/3/+/3///b5//3/+///8/f4//////7+7OH/dWbS
cV7zwbf/zNH/PkzyAAD5BgL/AAD1Gh3/obn/wcj/dmP4cU7l7/b/+/r///j///X///77///8/vf+
//v///n///n////4///46u//WFzgBwT6AAP4AAL2AAb6AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+
AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////dHR0AQEBAAAAEhISAAAAAAAAAAAAAAAAAQEBAAAADAwMAAAAAAAAUVFR////////tLS0
AAAAHBwc6Ojo////9fX1////////7OzsAgICDAwMwsLC////srKyRkZGOjo6////+/v79/f3////
////paWlBAQEMzMz/v7+////4ODgAwMDDAwM5ubm/f39////i4uLAAAAYmJi////////+Pj4mpqa
AAAAERER4+Pj9vb2/f39////9fX1X19fAAAAc3Nz/////v7+/v7+/////v7+/////v7+////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////f39////+/v7/f39////+vr6srKyNzc3
AAAAAQEBAgICAAAAAAAAKSkpiIiI2NjY////////+/v76enpTU1NERERtra2/Pz8/////////v7+
8/PzCQkJAAAAxsbG/v7++vr6V1dXAAAAT09P/f39+fn5////+vr63NzcBAQEAAAAxMTE/////v7+
lJSUAAAANDQ0////9PT0////jIyMAAAAKysr+/v7////////////////mJiYBQUFKSkp+/v7////
////////////////////////////////////////////////////////////////////////////
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/Awnu
N0b67fr/+vr///r/////+P/7+P/7///8////9P//9P//+v/8+v/85e3x4+v1+Pj88vL47/n/qr/f
CwHNEAjyBgXRf4vh2Pfy8//79uv66d70+P/19f/y+v3//fz////////8+v/5+v/5//7///7////1
///15PT/V1/bBQT8AAL6AAH4AAX8AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9
AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////dHR0AAAA
CAgIbW1tS0tLVlZWYmJiXV1dXV1dVlZWcHBwGRkZAAAAXFxc////////6enpRUVFAAAAT09P3t7e
////9vb25ubmWVlZAAAAWFhY7e3t////x8fHDAwMAAAAmpqa9fX1////////6+vrVFRUAAAASUlJ
////////4eHhBwcHCQkJ5+fn////////kJCQAAAAYmJi////////////nJycCAgIBAQETU1N0tLS
/////Pz8xMTEDAwMAQEBqKio8vLy////9fX1////////+vr6////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////v7+////////8/Pz////oaGhFhYWAAAAAAAALCwsVVVVk5OT
0tLS6urq+/v7/////////v7+/////f39cHBwAAAANTU15+fn9/f3////3t7eeHh4AAAAFhYW3Nzc
/////f39WlpaAAAAFBQUYWFhzc3N////6enpW1tbAAAAEhIS6enp/Pz8+vr6fX19AQEBQkJC3Nzc
+Pj4////19fXNzc3AAAAYGBg4+Pj////////qKioEhISAgICl5eX////////////////////////
////////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/AwnuN0b67fr/+vr///r/
////+P/7+P/7///8////9P//9P//+v/8+v/88/v/7fX/+/v/+fn/7/n/yt//PTP/CADqJSTwnan/
4P/68//7+/D/9On/+P/19f/y+v3//fz////////8+v/5+v/5//7///7////1///15PT/V1/bBQT8
AAL6AAH4AAX8AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////cnJyAgICT09P/////////f39
+/v7+/v7////+Pj49PT0Y2NjDAwMUVFR8/Pz/Pz8////r6+vNzc3AAAAIyMjYGBgWVlZJycnAAAA
QEBAxcXF////////////eHh4CgoKAAAAQEBAV1dXSkpKKioqAAAAERERmZmZ////////39/fDAwM
DAwM+vr65eXlNTU1DQ0NAwMDJCQkKCgobm5u/f39qKioAAAADQ0NEBAQExMTPj4+Pj4+EhISAAAA
MjIy3Nzc////////9/f3////////+vr6////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////+Pj4////8vLyPDw8AAAAREREvr6+4+Pj////////+fn5////////9PT0
8vLy////+vr6////u7u7QkJCAAAAAQEBODg4MzMzExMTCAgIERERcnJy9vb2/Pz8////QUFBAAAA
ISEhFRUVEBAQHh4eAwMDAAAAAAAAj4+P////8/PzQkJCCwsLAAAAAAAAHBwcSUlJ5eXl////qKio
LS0tAAAAFxcXHx8fJCQkAAAAAAAAe3t7////9fX1////////////////////////////////////
////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CgD/DQD/DQfuQUP8+Pf///3///73///3/f/0/f/0///4
///7+v//+v//+//++//4+P/x9Pvt///x/v7t///78/j/jZTPICeccHvH2+v2+v/r+f7j//n///n/
///1+P/y9v//9v//+P//+P//9P/09P/0+P/++//+/f/5/f/54/X/VV7dBwH/AgD+AAD8AgL/AAL7
AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////dHR0AAAAR0dH////////////////////////////
////X19fAAAASkpK+/v7////////////x8fHWFhYBQUFAAAAAgICBgYGY2NjyMjI////////8PDw
////8vLyoqKiJiYmGRkZBgYGAAAABwcHKysrjIyM+Pj49/f3////1tbWBAQEAgIC9vb27u7uJiYm
CwsLAAAABwcHBwcHZ2dn/f39oKCgBgYGYmJikpKSLi4uCQkJAAAACQkJX19fxsbG/////////f39
+/v7////////+vr6////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////9/f3
////7u7u////19fXBgYGAQEBsLCw9/f3/f39////////8/Pz////3t7ebW1tdnZ28fHx+vr6////
////0dHReHh4NjY2BQUFEBAQDg4OODg4jo6O4eHh////////////a2trYWFhw8PDnp6eLi4uDQ0N
HBwcQkJCh4eH/v7+/////v7+UlJSJCQkAwMDDg4OPj4+Z2dn5+fn////////0tLSbGxsExMTDg4O
GRkZPz8/lpaW7+/v/////v7+////////////////////////////////////////////////////
////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+CgD/DQD/DQfuQUP8+Pf///3///73///3/f/0/f/0///4///7+v//+v//+//+
+//4+P/x+P/x///t///u//v28/j/vcT/U1rPqLP/5PT/+v/r+v/k//n///n////1+P/y9v//9v//
+P//+P//9P/09P/0+P/++//+/f/5/f/54/X/VV7dBwH/AgD+AAD8AgL/AAL7AAL7AAH+AAH+AAT4
AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////dHR0AAAARkZG8/Pz+Pj4/Pz8+/v79vb2/Pz8////////YGBgBAQEVVVV
/Pz8/v7++/v7+fn5////////4eHhvb29xcXF5ubm9vb2/f39/f39////9/f38/Pz////////////
1dXVt7e3vb290NDQ6Ojo/////////Pz8////3t7eCwsLExMT8PDw////19fXa2trAwMDY2Nj19fX
8fHx////mJiYAAAAR0dH////7e3ty8vLv7+/zc3N9PT0+Pj4////+/v79/f3/v7+////////+/v7
+fn5////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////Pz8////+vr6/f39y8vL
CAgICQkJy8vL////9/f37Ozs9PT0////////mpqaBgYGDQ0N29vb/////Pz8/////////v7+8PDw
2NjY6+vr7e3t7+/v////////+/v7+vr6/f399vb29/f3////////+vr64uLi2NjY4ODg////////
+/v7////9vb2jIyMERERRkZG7u7u/Pz8////9/f3+vr6////9fX19fX14eHh7+/v+/v7////////
9/f3+/v7////////////////////////////////////////////////////////////////////
////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
CgD+DQH7DwfuQz//+Pf///z////1///3///7///+//z///v//f3//f3///3///3///7///7///n8
//z///b/+/f/7/r/v8zP8fb2/f///vv///v/+vj/+/n///j//vf++/7/+/7//fr//fr/9v/49v/4
+v3//fz//f7//f7/4/T/VV7eBQH/AwD+AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+
AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////cnJyAAAASEhI+/v7////////////////////////+/v7W1tbBQUFWlpa/f39+fn5////9/f3
8/Pz////////////+/v7+fn5////+Pj4+vr6/////////////f39+vr6/v7++vr6/v7+////////
/////v7++vr6+/v7////29vbAgICExMT5OTk9PT0////jIyMAAAAc3Nz////7Ozs/v7+qampAAAA
R0dH////+/v7+Pj4/////////////v7++vr6+Pj4+/v7/v7+/f39////////+vr6////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////v7+////////6enpNzc3AAAAbm5u8/Pz
////////////////v7+/QUFBAAAARkZG9PT0/////f39////9fX1/////////Pz8/f39////+vr6
////////9vb2////////////9vb29vb2/////v7++vr6////////////6Ojo////9vb2////jY2N
AAAANzc3////////+/v7////+fn59vb2////u7u7Ozs7fn5++/v7+/v78/Pz////////////////
////////////////////////////////////////////////////////////////////////AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CgD+DQH7DwfuQz//
+Pf///z////1///3///7///+//z///v//f3//f3///3///3/+vn9//7///b5//z///b/8u7/7/r/
7/z/+v//+Pr6+/j///v/+Pb/+Pb///j///j/+/7/+/7//fr//fr/9v/49v/4+v3//fz//f7//f7/
4/T/VV7eBQH/AwD+AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////fX19AAAAQUFB
/Pz8////+Pj4+/v7////////////+/v7VlZWAAAAUlJS/v7+////+/v7/////////Pz89/f3+/v7
////////////////////+Pj4/f39/////////f39////////////+/v7/Pz8+vr6/Pz8////////
////7OzsAwMDCQkJ8fHx+vr6+vr6kZGRAAAAVFRU////////////oqKiAAAAXFxc9/f3+fn5////
////////9PT0/////v7+////////+/v7+Pj4////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////f398/Pz/v7+/v7+////np6eEBAQAAAAOzs7enp6np6elJSUbGxs
FhYWAAAAHR0dwMDA////+/v7////////+vr6+/v7/////////////v7+/v7+/f39////////////
+vr6/////////Pz88/Pz////////5ubm/v7+9/f3+vr6////+Pj48vLyoKCgCgoKOTk5/f39/v7+
9vb2/////v7+8fHx/Pz86+vrGBgYCAgIsrKy////////9/f3/Pz8////////////////////////
////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7AwfyBgntOj7/8ff//v3////1///3
/f///f7///v///v/+//8+//8/f/8///89/X0///++Pjj/Pzn9vr78PT1/f/t///t///w///1//r/
9Pz/7v7q7f3p//3///3////y///y//3///3/+//x+//x/f///f3///7///z/5PT/V1/bBQH/AwD+
AAD5BAP9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////bm5uAAAARkZG////////+/v7+vr6
/////Pz8+/v79/f3XFxcAwMDVFRU/Pz8/////Pz8/Pz8/////////////v7++vr6/Pz8/Pz8+/v7
////+vr6////9fX1+vr6+/v7////////+vr6/v7+/////////////Pz8+Pj4/v7+6enpDAwMDAwM
7e3t////+/v74uLibW1tdXV18vLy////9vb2k5OTCwsLSkpK9fX1/////////////v7+9/f3////
////////////+fn5+/v7////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////8/Pz////7e3ti4uLHx8fAQEBAQEBBQUFAAAAAAAAAAAAOzs7oaGh+/v7
////7+/v/v7+/Pz8/v7+/////////Pz8/v7++/v7////////+vr6////////////7u7u8/Pz////
////+fn5/f39////+vr6+/v7////9/f3////////8vLylpaWampq+/v7////////9/f3////////
////+/v7h4eHAAAAGhoas7Oz////////////////////////////////////////////////////
////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7AwfyBgntOj7/8ff//v3////1///3/f///f7///v///v/
+//8+//8/f/8///8//38///+///q///q+v7/+v7//f/t+/7k///s///1//r/8fn/7//r7//r//j6
//3////y///y//3///3/+//x+//x/f///f3///7///z/5PT/V1/bBQH/AwD+AAD5BAP9AAL7AAL7
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////jo6OIiIiZmZm/////Pz8/////////f39/v7+////////
e3t7KCgob29v/////////Pz8/v7+/////////////////////////f39/v7++/v7/v7+////9PT0
/////f39/v7++/v7////////+vr69/f3////////+/v7////5ubmLi4uPT097u7u////////////
/f397e3t/////v7+////uLi4JSUlb29v/////////Pz8/f39/v7+////+/v7+fn5/f39+fn5+vr6
////////+vr6/f39////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////+/v7/v7+
/////////v7++vr6////2dnZgoKCJiYmAAAADg4OR0dHnJyc4uLi/////////Pz8+/v7////+/v7
////////9fX1////////9/f3/v7+////+Pj4////+vr6+Pj4////+vr69fX1////////9fX1////
+fn5////+/v7/f39////+/v7////////7u7u////6+vr////////////9vb2/v7+////5OTkbm5u
UFBQrq6u+Pj4/////v7+////////////////////////////////////////////////////////
////////////////////////AA==</image>
               </value>
               <?templateDesigner expand 1?></draw>
            <draw name="imgHCLogo_fr" y="6.35mm" x="6.35mm" w="47.625mm" h="6.35mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image href=".\FIP logos\print-fip-sig-fra0.gif" contentType="image/gif"/>
               </value>
            </draw>
            <field presence="hidden" access="protected" h="6.35mm" name="txtFormName" w="17.4625mm" x="26.515mm" y="264.092mm">
               <assist>
                  <speak disable="1"/>
               </assist>
               <border>
                  <corner presence="hidden" thickness="0.1753mm"/>
                  <edge presence="hidden"/>
               </border>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border>
                        <edge/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <value>
                  <text xliff:rid="A6DD5DC7-2E0B-4B19-B665-4262122108E7">CRF Ext</text>
               </value>
               <?templateDesigner expand 1?></field>
            <field access="protected" h="6.35mm" name="txtTrackingNumber1" w="19.05mm" x="173.04mm" y="6.61mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para hAlign="right"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field access="protected" h="6.35mm" name="txtTrackingNumber2" w="14.6876mm" x="195.26mm" y="6.35mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <draw h="11.1125mm" name="imgCanada" w="38.1mm" y="267.993mm">
               <ui>
                  <imageEdit/>
               </ui>
               <desc>
                  <text name="embeddedHref">G:\dev\images\Canada_wordmark_bw.gif</text>
               </desc>
               <value>
                  <image contentType="image/gif">R0lGODlh4AA9APcAAP///wAAAPz8/P7+/vr6+ri4uPv7+2VlZfT09NPT0/39/ff399vb2+vr6wMD
AxgYGBkZGWBgYJqamjQ0NNbW1vLy8gYGBqCgoBwcHAQEBG5ubgUFBQEBAXp6euLi4h8fH6amptXV
1QgICA0NDfn5+QICAufn5+jo6CMjIxUVFfb29hoaGr29vW9vbxISEg8PDy0tLfPz893d3erq6ioq
KgkJCfX19Q4ODubm5h0dHd/f319fX21tbXJyctDQ0NTU1CAgIKOjowwMDE1NTS4uLh4eHjs7OwsL
CzAwMBQUFO/v76enp3FxcVJSUlZWVhAQEMnJyeXl5a2trT4+PlVVVfj4+M7OzvHx8VtbW8/Pz9nZ
2TU1NZOTk+Pj4+7u7unp6UlJSXV1dVBQUBYWFvDw8AcHB+Tk5BsbG0BAQGlpaezs7LCwsLa2tru7
u2dnZ4GBgYWFhbW1tX9/f4uLiygoKKKioiYmJsLCwoeHhywsLNfX156enpWVlUhISHR0dOHh4UdH
R4aGhqysrJeXlzo6OmhoaAoKCtjY2Hh4eJKSkkNDQ8DAwISEhKmpqV1dXcjIyDg4OEFBQbKysr+/
vzExMSsrKykpKSEhIc3NzZ+fn3l5eV5eXi8vLxcXF4qKisfHx3Nzc8zMzGpqajIyMktLSyIiInd3
d8XFxVhYWJaWljY2NkVFRWZmZldXV76+vlpaWoCAgNzc3NHR0T8/PzMzM8vLy7e3t7OzsxMTE5SU
lH5+foiIiDc3N0xMTE9PT52dnUpKSlxcXMPDwxEREYKCgiQkJO3t7aurq2RkZMbGxpmZmWxsbERE
RKqqqllZWTw8PLS0tMTExHZ2dkJCQqioqN7e3pGRkbq6uq6uricnJ9LS0j09Pa+vr2FhYWtra6Sk
pGJiYsHBwX19fXBwcJiYmI2Njdra2nx8fLm5uZycnFNTU7GxsWNjY1FRUaWlpYmJiY+Pj+Dg4Jub
m4ODg05OTkZGRjk5OVRUVCUlJcrKyqGhoQAAAAAAAAAAAAAAAAAAACwAAAAA4AA9AAAI/wABCBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bN
mzhz6tzJs6fPn0ALGlhAlCiJoEiTQpwBZQ0cUBqi8pBzK5wOAgP/hDiqtOvPAZi4oOrEIcCNCbQI
EXERoMY2Rmx8dNmBpYHXiSR8pPI0SIJfCXsELkj0l8udhbX6SiAHosvdgXoY2SkbYAKsNmSUkDjB
IgydAAGOjHoWoImxxxEXtClEYwPo1wIbvAZ9oOCSEwR5zD4j5TECZZZeu0BEYcDBEFgszMbiBfXE
CuJGzI49O0BtgSEk3PCTQIDADrM/FP+4i0ODkNe0BGFNeKVHhteqcDinaGQ6ANmzrxNYAwT0JBvf
hTdeVz/08R5oSJxi3EIxePMaBPHMN9EbR8B2X3WFALCEL6jkAFoLbrQAAHividdVLJHMdsSADSkB
Bmg5/CGhREEkYSF+r7kBwAEBlOFAABsoN8KIAiplDCvVpbKgQ7UEV4wHM0b0Q3+gUTdbhjtUBxok
RJbIIlAG/FJdEyZIJApoh0QJURfF3FgdKwDgUMiBoCkSQpegmYiUFSLMNoYtE6mhSgB3qumQByi4
mZ9ACeSRggvKJRCgl0h58Up1jpw2UQ8B/GDooYlWeeGiACgwgwBO3BGFd3gGoCdQWWj/GURFWYjw
yacNIaroa9cN5ISkA5GY55c9IYBMdUakWRESg3CFa0K6ioojbQVpEwNBpsxWRBxBmfDjbBpcJIks
rA40wAACpJuuAhEtKRC66q7rLkIDKBBvuvMyVG+8S0YbwEL2CmCvAvkmJYAUWs7REQkNJLNHIaCY
wgQTXEChxgIFV4FABZkdIkksAAywAA7XdNACDxq0wAQfhyzA7kEGIJBAECqb4ocGmkxiAgIvJ6RA
BSZwA4soPKQhBxtmLACAvweJ/MUncCwDih88BALCCRUY4JUNWc42zDEcqVHOE6CN8Yo4pKQAYxoJ
zEuCBGnMAoRrAeyAACbdGJKBEXa4/9AnaBuA8chBAjRCRAltKQKLG6E6MEsbBQsUAwuEgFaCEC64
YAiQrWihQ6j/FjRACDt8W8kQVMBwoBHNXNFVBVtUh0QWG+nRJmhGrAeAD7y8JoIU5QJAAs3VzRJM
GQ8MosJAPjSBOGgYcEsQAuo8b0GhANiAx2xMaG3QCV0HgAEe8gHwxS79vXAOBhYOREAmL4DmwBtV
DLSHjQFwQMsXSpFB5WswCIVGBoCP14xhcASRxBle4wCQFYQAXNASKWQkFGfMBg3LG4gbZpOLni1t
ArPhgkFkgITXAGEdBoFCCatTEBYspzkEcY/lhqAUNWgpgBo5xYE4gAaDIEAMs7mFB/8F8ojqXAIK
CMHBbHIAKMlN4TUjgOFADGCN2SBDaQMhQR8o8wRsIEQCZLOPQFTAiNlIwCBWqMFriuC9oEwLNDjM
iAcWGIAHoNAgPHpNOnQ3kBDgDzTESEgFQCi/QBDEEa+hn0GuMZsdXGsgiFBOABwAJ4Qo4IliBIAA
6vAaRTDgIOcBzQP0kBQvSPI1RMDERqTgBGfUASEamM0F+CgQPazgNS+4RUJUkEfQjIMgFDCFI96A
gIO48DURKKZAzHBL0LzAdQlhwrdENZAThKEPEagFQqQDGgh8EilX4ER1snGKk5zpNbM0CAUe8JoJ
aCMhCwgDqRwSh9kkcyA9+FsAXrH/kCWorX0EEUAbDRLKAHgzKRWARHVSsAaTkGEIsqQlANb5mi14
CiEEkMA8GUIAeNhTmQCAwWwWsRAflCKTDfmBGrv5zaDYABVa4oNJLsBN0KSzIBQFzQSABbNGbHQh
1QBdAO4JgCw0EzQDPcgXaIBShrximgdFCgk8oSVNlKQNTI2oOtmpU54axAAg+Cm9tOCL6hCVGmwB
zRkY0oCsUpMhCphDhR7U0qD8QEubyGBHDHCCPwiCChughFsDcFNgcrUyXhVKWHmlkBmcwBUHGMML
APFRgehipQGYQkMGBVCE2CAE5CCNGOgUVaSowQ7VoYQPLlIAWbwsGucAxjaIgIIb/6DhFyrYIDol
mlPEJgSsYo0FH5wwC07k4QZ0SIQW1lBZAIzjlJFoSOU6KxAyCKIFvTDCBFIwhiGwQQUFLW1QFjAP
Lb3SIpWgxgBw4IQiYHYF8miAd2K52622M7EEAS5jpygHGryAMg6Qhg68c0zQELUFp1SEdFGqAHRs
IQl0ikQbGsCumoo3KD7QEjjIUJFFPEEGtTjpayywiVUNhL425e1hd/rbxVJLIBVoRXVSCSCBFHio
ysTDXANAB4YoIQ+ZVEEi6DTJOXhhSRaua1AqoJvZrGASFaHCKhYwCsoEQAQ9MAiKCavi+7Z4npqo
zjNm0MLm1mEYDGSICYIDUCtYuf+OYCtIkr1ihfjNRhMSbcgiLBAHSezYAWI4yJYLO5Deshgh+n1x
CGJXIjMY5MZEPcEHZoPfgsgAte1DAChmY4F0HGTOXRkAJ6vTUIkAYhQ26AHdAtCJCghaqzhdcaUF
kmjrCMQdfwzAHfIFaZAyYzawWEgcICBGE4gYNOzYJl3vUgU5VKcSFIiIg1wBgAgcyAFYQEiTU2zf
rn55v8ooaDbUcJA2NBcAd/hnAFYQOYF4YscBkIFATHCJ1yQhzgRd9l2UkIbqiEHeDklFCXShtFz8
zQKDOIgMMAmaTEg0BOrewqwBYIBvkCofIgXNJh5JkCts2ZEE2cSBNrALhfSiOkv/EIgSmvAaGiCw
IAXQ5wPMgRoC4OGUAVDFD9otGDgEgAmuXhr+HBCMg1hj1QEIBBYBsJ5FzIYIVtjlOUEDjoHIGDQr
wE1BZGFn0DBDBwSpACUoA4FZC+PYoAm08BJhwN4YBAzPC0AKhGGuIQYFGkig0xMak9RSVQAKlA0D
xwHgh+fhQlkDWUQeSqDPFITAOCo4owmoUJ0O5HkA0agOJLQgkGYcVQLOGgADKH+DEQdGIFIwgR62
UBYOjMLRBYkBZbXEAoF4wB7I5OMAGCGCtALJEQORxa28MgNGEOEJz4NBKqzAgBOYwAM/4IYYynCJ
IOQLGH+jQQLMEIUElKMIKJBA/zCmyYtTJIAYIvDBMrQUgDAwoH7vagAbPFSdIVwFAHsgdgAskAkZ
REELjUAIN9ABnoBZuJAJfxBWh1EBTfBPECAFOmACUSADtkAJAVAEm7MbycA/RvUaaaADJxAFDNAC
hgAIglBvoHEDcFANwsALaYAaHvALQwADH+AaHAAEYAAMVGAHI8AJ76AECYEIlVB6ZWAEqEALOdAD
jjEDPUAHQkAZdNAJgRAB4oMBVmiFK1AGkRAOrNIFc7ACuJADV4gBZ2AIaCBAABAEU9AJiGMJTrAK
OeAESEQAQZAHw/A8RfAExFBjGoIGH1AGAeAC9TAFQJABL8AJn8Bw8lMDb/BJFOWgCCngGkVACq0A
A0ggAfUDBdPwAHQzAhiABkpGHq7AB4GABWDADEOgC7lAOwwRBXyADL3gC4jQDPxDEFrABQfQBKww
BzpgDkuADgUQjMIYjI0wCViUAEsADcM4jI3gCsqkAtggB/fQBzygDLA3EDOgD2HgDI6ACAkwRAYQ
DXAQAWCwCtPQDbsADa4WBKsACaTQBMuAB4kgCMkAY2wgDVTQB+3gB2ywdKWyBh1AD+rgBt9AZs9y
kBhxBQ3AcwjZkA75kBAZkRI5kRRZkRZ5kRiZkRq5kRzZkR75kSAZkiI5kiTZFQEBADs=</image>
               </value>
            </draw>
            <field access="protected" h="6.35mm" name="txtFinalizeDate" w="44.45mm" x="79.375mm" y="273.05mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="txtAccessDate" y="273.05mm" x="168.275mm" w="41.275mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <bind match="none"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

if (this.rawValue == null) {
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
	var accessDate = "";
	accessDate = new Date();
	accessDate = util.printd("yyyy-mm-dd", accessDate);
	
	if (language == "en") {
		this.rawValue = "Access date: " + accessDate;
	} else {
		this.rawValue = "Date d'accès: " + accessDate
	}
}
</script>
               </event>
               <para vAlign="middle"/>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="lblVersion" y="273.05mm" x="123.825mm" w="44.45mm" h="6.35mm" access="protected" presence="hidden">
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
if (language == "en") {
    this.rawValue = "Version 2.8 - Final";
} else {
    this.rawValue = "Version 2.8 - Ébauche";
}

</script>
               </event>
               <bind match="none"/>
               <para vAlign="middle"/>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="txtTitle" y="266.7mm" x="123.825mm" w="85.725mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <bind match="none"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
if (language == "en") {
    this.rawValue = "Drug Master File (DMF) Application Fee Form";
} else {
    this.rawValue = "Formulaire sur les frais pour Fiche maîtresse du médicament (FMM)";
}
</script>
               </event>
            </field>
            <draw name="Pages" x="9.523mm" y="269.24mm">
               <font typeface="Myriad Pro"/>
               <margin bottomInset="0mm" leftInset="0mm" rightInset="0mm" topInset="0mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <exData contentType="text/html" maxLength="0" xliff:rid="AF645C2A-867D-4C6A-B4F4-64572B8B79D8">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p>Page<span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField007816"/> of<span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField032425"/></p></body>
                  </exData>
               </value>
            </draw>
            <field presence="hidden" access="readOnly" h="7.5mm" id="floatingField007816" name="CurrentPage" w="55mm" x="69.622mm" y="327.333mm">
               <calculate override="error"/>
               <caption reserve="20mm">
                  <para vAlign="middle"/>
                  <value>
                     <text xliff:rid="F9E480AC-8176-4907-8EB1-15BE062E9BBE">Text Field</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </numericEdit>
               </ui>
               <bind match="none"/>
               <event ref="$layout" activity="ready" name="event__layout_ready">
                  <script contentType="application/x-javascript">this.rawValue = xfa.layout.page(this);

</script>
               </event>
               <?templateDesigner floatingFieldPlaceholder #?></field>
            <field presence="hidden" access="readOnly" h="7.5mm" id="floatingField032425" name="PageCount" w="55mm" x="69.622mm" y="327.333mm">
               <calculate override="error"/>
               <caption reserve="20mm">
                  <para vAlign="middle"/>
                  <value>
                     <text xliff:rid="3D4E1BC9-0E1B-480C-B9D7-0F2F10E16D9A">Text Field</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </numericEdit>
               </ui>
               <bind match="none"/>
               <event ref="$layout" activity="ready" name="event__layout_ready">
                  <script contentType="application/x-javascript">this.rawValue = xfa.layout.pageCount();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();

Pages.presence = "hidden";
imgCanada.presence = "hidden";
imgHCLogo.presence = "invisible";
imgHCLogo_fr.presence = "invisible";


if (language == "en") {
    Pages.value.exData.loadXML(Pages.value.exData.resolveNode("##xHTML").saveXML().replace("sur", "of"));
    imgHCLogo.presence = "visible";
} else {
    Pages.value.exData.loadXML(Pages.value.exData.resolveNode("##xHTML").saveXML().replace("of", "sur"));
    imgHCLogo_fr.presence = "visible";
}

if (xfa.layout.page(this) === 1) {
    imgCanada.presence = "visible";  
} else {
    Pages.presence = "visible";
}
</script>
               </event>
               <?templateDesigner floatingFieldPlaceholder ##?></field>
            <draw name="Revision" x="92.075mm" y="269.875mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="tab-interval:0.5in;tab-stops:left 0.333in left 0.667in left 1in left 1.333in left 1.667in left 2in left 2.333in left 2.667in left 3in left 3.333in left 3.667in left 4in left 4.333in left 4.667in left 5in left 5.333in left 5.667in left 6in left 6.333in left 6.667in left 7in left 7.333in left 7.667in left 8in left 8.333in left 8.667in left 9in left 9.333in left 9.667in left 10in left 10.333in;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField025515"/></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <?templateDesigner expand 1?></draw>
            <field name="RevisionNo" w="62mm" h="9mm" id="floatingField025515" presence="hidden" access="readOnly" x="12.702mm" y="32.396mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <para vAlign="middle"/>
               <calculate>
                  <script contentType="application/x-javascript">
this.rawValue = DrugAppl.desc.version.value.replace(/\$/g, "");

</script>
               </calculate>
               <bind match="none"/>
            </field>
            <?templateDesigner expand 1?></pageArea>
         <?templateDesigner expand 1?></pageSet>
      <subform w="576pt" name="sfPage1" layout="lr-tb">
         <subform w="203.2mm" name="sfMainHeader" layout="lr-tb">
            <field name="Button1" w="28.575mm" h="6mm" presence="hidden">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text xliff:rid="1A9F7ECF-686C-4D6C-8A1C-01BCFCCD6A65">Button</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

//afsdalfj;
</script>
               </event>
            </field>
            <draw name="lblFormTitle" w="203.2mm" h="10.723mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text xliff:rid="2953893C-E8C5-4CAA-8B6F-5D7BC0DA6839">Drug Master File (DMF) Application Fee Form</text>
               </value>
               <font size="16pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H1">
                  <speak disable="1"/>
               </assist>
               <?renderCache.bounds 573166 27562 0 0 1417 1417 0 0?>
               <?renderCache.textRun 43 Drug Master File (DMF) Application Fee Form 0 128394 13417 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?></draw>
            <exclGroup name="pageLanguage" layout="lr-tb" relevant="-print">
               <field h="6.35mm" name="chkEnglish" w="42.333mm" locale="en_CA" relevant="-print">
                  <caption placement="right" reserve="35.865mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text xliff:rid="90FE2BFE-26DE-4D4D-BC89-87529A8C2136">English</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xliff:rid="F38C96D9-01AC-44C1-B8A5-3917978F6D66">en</text>
                  </value>
                  <items>
                     <text xliff:rid="B0D3974B-EACE-4BEA-99C3-8E0E276A3364">en</text>
                  </items>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">

var enPresence = this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence;
var frPresence = this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence;
	
if ( enPresence == "hidden" &amp;&amp; frPresence == "hidden" ) {
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "hidden";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "hidden";
} else {
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "hidden";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "visible";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_en").presence = "visible";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_fr").presence = "hidden";
}
</script>
                  </event>
               </field>
               <field h="6.35mm" name="chkFrancais" w="42.333mm" locale="fr_CA" relevant="-print">
                  <caption placement="right" reserve="35.867mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text xliff:rid="114698C3-904A-4862-A0BA-CB6C4CF930F0">Français</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <items>
                     <text xliff:rid="6F251085-8DDD-4D6C-9A1C-80FC8629C4DD">fr</text>
                  </items>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">



var enPresence = this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence;
var frPresence = this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence;
	
if ( enPresence == "hidden" &amp;&amp; frPresence == "hidden" ) {
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "hidden";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "hidden";
} else {
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "visible";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "hidden";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_fr").presence = "visible";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_en").presence = "hidden";
}
</script>
                  </event>
               </field>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cMainHandler = script.DrugAppl.control.FormHandler;

try
{
	// set up event object
	var actionName = cMainHandler.LANGUAGE_CHANGE;
	var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
	DrugAppl.Page1.txtAccessDate.execEvent("initialize");
	//DrugAppl.Page1.lblMandatory.execEvent("initialize");
	// deploy event to controller
	cMainHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with pageLanguage::change", exception);
}
</script>
               </event>
               <validate scriptTest="warning"/>
               <?templateDesigner itemValuesSpecified 1?>
               <margin leftInset="71.12mm"/>
               <?templateDesigner expand 1?></exclGroup>
            <draw name="lblMandatory" w="203.2mm" h="12.7mm" colSpan="2">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text xliff:rid="0FEC6C1E-4918-4091-BBD0-BFD8859C403B">Text</text>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para vAlign="middle"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <?renderCache.bounds 573166 33166 0 0 1417 1417 0 0?>
               <?renderCache.textRun 4 Text 0 1417 20000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
            <margin topInset="5.08mm"/>
            <event activity="ready" ref="$layout" name="event__layout_ready">
               <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var lblMan = this.resolveNode("lblMandatory");

if (language == "en") {
    lblMan.rawValue = "* denotes a mandatory field\n+ denotes a field with validation error or missing data";
} else {
    lblMan.rawValue = "* démontre un champ obligatoire\n+ démontre un chap avec un erreur de validation ou des données manquantes";
}

var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("DrugAppl.script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);

</script>
            </event>
            <?templateDesigner expand 1?></subform>
         <subform w="203.2mm" name="sfInstructions" layout="lr-tb">
            <field name="btnViewInstructions" w="28.575mm" h="5.08mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text xliff:rid="027319FC-AD5E-45C1-AD5A-1887681575C6">View Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
sfPage1.sfInstructions.sfInstructionsContent.presence="visible";
if (language == "en") {
	//cLog.trace("start clicking in English +++++++");
	//cLog.trace(this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence + " is what you want ");
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "visible";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "hidden";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_en").presence = "visible";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_fr").presence = "hidden";
	
} else {
	cLog.trace("start clicking in French +++++++");
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "hidden";
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "visible";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_en").presence = "hidden";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_fr").presence = "visible";
}
this.access="readOnly";
this.fillColor = "230,230,230";
</script>
               </event>
            </field>
            <draw name="lblDummy" w="3.175mm" h="5.2331mm">
               <ui>
                  <textEdit/>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <?renderCache.bounds 6166 12000 0 0 1417 1417 0 0?></draw>
            <field name="btnHideInstructions" w="28.575mm" h="5.08mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text xliff:rid="40E76DB4-A049-4856-B7C8-29EC384B351F">Hide Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "hidden";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "hidden";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_en").presence = "hidden";
	this.resolveNode("sfPage1.sfPart3.lblPaymInstructions_fr").presence = "hidden";
	btnViewInstructions.access = "open";
btnViewInstructions.fillColor = "212,208,200";
</script>
               </event>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">

if(btnViewInstructions.access == "open"){
this.access = "readOnly";
this.fillColor = "230,230,230";
}

if(btnViewInstructions.access == "readOnly"){
this.access = "open";
this.fillColor = "212,208,200";
}
//app.alert(this.parent.parent.sfAuthSignOfficial.sfFinalizeButton.access);

if (DrugAppl.sfPage1.sfFinalizeButton.btnFinalizeBottom.access=="readOnly"){
//app.alert("hh");
this.access="readOnly"
this.fillColor = "230,230,230";
//this.resolveNode("sfHCInstruction").presence = "hidden";
}
</script>
               </event>
            </field>
            <subform name="sfInstructionsContent" w="203.2mm" layout="tb">
               <field name="lblInstructions_en" w="8in">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <caption reserve="7.960639in">
                     <value>
                        <exData contentType="text/html" xliff:rid="D5ADB6EC-6096-412C-8683-9E2F5BD8F04E">
                           <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="text-align:center;font-size:12pt;font-weight:bold;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="margin-top:6pt;margin-bottom:6pt;font-size:8pt;letter-spacing:0in">This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the "Finalize" button at the bottom of the form before<br/>printing and signing.<br/><br/>Once finalized, the fields in the form becomes "locked" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the "Modify" button at the<br/>bottom of the form. Following modifications to the desired fields and before printing and signing, please press the "Finalize" button again to re-validate entries.</p><p style="margin-top:6pt;margin-bottom:6pt;font-size:8pt;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p></body>
                        </exData>
                     </value>
                  </caption>
               </field>
               <field name="lblInstructions_fr" w="203.2mm" minH="1mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <caption reserve="202.2mm">
                     <value>
                        <exData contentType="text/html" xliff:rid="4CC43695-FED5-4419-AB7A-D2F03FF99407">
                           <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="font-family:'Myriad Pro';font-weight:bold;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="font-family:'Myriad Pro';letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="font-family:'Myriad Pro';letter-spacing:0in">Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton "Finalisation" au bas du formulaire avant de l'imprimer et de le signer.<br/><br/>Une fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton "Modification" au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton "Finalisation" à nouveau afin de valider les entrées.<br/><br/></p><p style="font-family:'Myriad Pro';letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p></body>
                        </exData>
                     </value>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <font typeface="MyriadPro-Regular" baselineShift="0pt" size="8pt"/>
                  </caption>
               </field>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge presence="hidden"/>
               <corner presence="hidden" thickness="0.175mm"/>
            </border>
            <margin bottomInset="5.08mm"/>
            <event activity="initialize" name="event__initialize">
               <script contentType="application/x-javascript">
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_en").presence = "hidden";
	this.resolveNode("sfPage1.sfInstructions.sfInstructionsContent.lblInstructions_fr").presence = "hidden";
	
</script>
            </event>
            <?templateDesigner expand 1?></subform>
         <subform w="203.2mm" name="sfPart1" layout="lr-tb">
            <draw h="6.35mm" name="lblDMFOwner" w="203.2mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text xliff:rid="5A4F54D4-4A52-411B-9AE3-B19C49309E39"> DMF OWNER/AGENT</text>
               </value>
               <assist role="H2"/>
               <?renderCache.bounds 573166 15166 0 0 1417 1417 0 0?>
               <?renderCache.textRun 16  DMF OWNER/AGENT 0 1417 12000 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <field h="11.43mm" name="txtDMFName" w="203.2mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="3.175mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="07C9C8C1-4C0F-4FF0-8E2D-B69950BEDDE5">Drug Master File Name</text>
                  </value>
               </caption>
               <validate nullTest="error"/>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">


sfPart3.sfCreditCard.txtDMFNameCC.rawValue = this.rawValue; 
		
		
		
</script>
               </event>
            </field>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <field name="txtCompanyName" h="11.43mm" w="8in">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="2.91mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="B3D41CCE-9616-46E3-84CA-42A0663481B1">Company Name</text>
                  </value>
               </caption>
               <validate nullTest="error"/>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">

//sfPart3.sfCreditCard.txtCompanyName.rawValue = this.rawValue; 
//sfPart3.sfExistingCredit.txtDMFCompanyName = this.rawValue;
</script>
               </event>
            </field>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" name="sfPart2" layout="lr-tb">
            <draw h="6.35mm" name="lblCalcPayment" w="203.2mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text xliff:rid="C9A23AA4-2A33-44FC-A118-0743EC850295"> CALCULATION OF PAYMENT</text>
               </value>
               <assist role="H2">
                  <speak disable="1"/>
               </assist>
               <?renderCache.bounds 573166 15166 0 0 1417 1417 0 0?>
               <?renderCache.textRun 23  CALCULATION OF PAYMENT 0 1417 12000 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <field name="txtEnterValuePls" w="203.2mm" h="5.08mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="201.2mm">
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text xliff:rid="11EB9CA4-C38F-4C28-AC24-44ED610207B4">Please enter the number of documents in one or more of the boxes below:</text>
                  </value>
               </caption>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="txtDMFRegistration" w="101.6mm" h="11.43mm" y="3mm">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="3.175mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="EED30553-3F4F-4688-BE62-E4DF61877E1D">DMF's for New Registration</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <value>
                  <integer/>
               </value>
               <format>
                  <picture>num{zzzzzzzzzzzz9}</picture>
               </format>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript"> 
var cActionEvent = script.core.event.ActionEvent;
var cFormHandler = script.DrugAppl.control.FormHandler;
var cSystem = script.core.System;
var cCommon = script.DrugAppl.model.Common;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cLog = script.core.util.Log;


//cLog.trace("what is wrong with ZERO value *****000000  " + this.rawValue);

if ( this.rawValue != null &amp;&amp; this.rawValue.toString() != "" ) {
	
	//cLog.trace("what is wrong with ZERO value +++++000001  " + this.rawValue);
	
	cCommon.validateField(this, cCommon.POSITIVE_NUMBER);
	
	//cLog.trace("what is wrong with ZERO value +++++000002  " + this.rawValue);
	
if (this.rawValue &gt; 99){
	//cLog.trace("what is wrong with ZERO value 000000" + this.rawValue);
	if (language == "en") {
			var errApp = "The maximum number for this field is 99";
			}
		else {
			var errApp = "Le nombre maximum de ce champ est de 99";
			}
		app.alert(errApp);
		xfa.host.setFocus(this);
	  } else {
	  
	  //cLog.trace("what is wrong with ZERO value 000001" + this.rawValue);
		
	 			try
				{	
					//cLog.trace("what is wrong with ZERO value 000002" + this.rawValue);
					// set up event object
					var actionName = cFormHandler.NEW_REGISTRATION_CHANGE;
					var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
					cFormHandler.actionPerformed(anActionEvent);
				}
				catch(exception)
				{
					cSystem.processUnhandledException(exception);
				}
		
				
  		    
    }
} else {
 	// this field is empty or null, set the result as empty
 	this.parent.txtDMFRegCalc.rawValue = "";
	if (this.parent.txtDMFRegCalc.rawValue == "" &amp;&amp; this.parent.txtDMFNumLetCalc.rawValue == "" &amp;&amp; this.parent.txtDMFNumLetCalc.rawValue == ""){
		this.parent.txtDMFTotalFees.rawValue = "";
	}
 }
 
 

if ( (sfPage1.sfPart2.txtDMFRegistration.rawValue == 0 || sfPage1.sfPart2.txtDMFRegistration.rawValue == null)
		&amp;&amp; (sfPage1.sfPart2.txtDMFUpdate.rawValue == 0 || sfPage1.sfPart2.txtDMFUpdate.rawValue == null)
		&amp;&amp; sfPage1.sfPart2.txtDMFNumLet.rawValue != null &amp;&amp; sfPage1.sfPart2.txtDMFNumLet.rawValue != 0 ) {
		
		sfPage1.sfPart3.ddlReason.presence = "hidden";
			sfPage1.sfPart3.ddlReasonFullList.presence = "visible";
			
			if ( ! sfPage1.sfFinalizeButton.btnFinalizeBottom.access == "readOnly" ) {
				sfPage1.sfPart3.ddlReasonFullList.rawValue = "";
			}
		} else {
			sfPage1.sfPart3.ddlReason.presence = "visible";
			
			if ( ! sfPage1.sfFinalizeButton.btnFinalizeBottom.access == "readOnly" ) {
				sfPage1.sfPart3.ddlReason.rawValue = "";
			}
			sfPage1.sfPart3.txtSpecify.presence = "hidden";
			sfPage1.sfPart3.ddlReasonFullList.presence = "hidden";
			}
</script>
               </event>
            </field>
            <field name="txtDMFRegCalc" w="101.6mm" h="11.43mm" access="protected">
               <ui>
                  <numericEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="24.5mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="A138C392-73B5-4529-9924-FB417A710CBD">x $424 Cdn =</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <format>
                  <picture>num{$zzzz9.99}</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

cCommon.switchLocale(this);
</script>
               </event>
            </field>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <field name="txtDMFUpdate" w="101.6mm" h="11.43mm">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="3.175mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="31E56549-69BC-45B8-A0EC-7A0D7BF16168">DMF Biannual Update</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">//
//imports
var cActionEvent = script.core.event.ActionEvent;
var cFormHandler = script.DrugAppl.control.FormHandler;
var cSystem = script.core.System;
var cCommon = script.DrugAppl.model.Common;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cLog = script.core.util.Log;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue.toString() != "")) {
	cCommon.validateField(this, cCommon.POSITIVE_NUMBER);
		if (this.rawValue &gt; 99){
			if (language == "en") {
				var errApp = "The maximum number for this field is 99";
				}
			else {
				var errApp = "Le nombre maximum de ce champ est de 99";
				}
			app.alert(errApp);
			xfa.host.setFocus(this);
		  } else {
		   	// here is the value must be =&lt; 99 and &gt;= 0 
			 
				try
				{
					// set up event object
					var actionName = cFormHandler.BIANNUAL_UPDATE_CHANGE;
					var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
				
					cFormHandler.actionPerformed(anActionEvent);
				}
				catch(exception)
				{
					cSystem.processUnhandledException(exception);
				}
				
		 
	}	
	this.resolveNode("sfPage1.sfPart2.txtDMFNumber").mandatory = "error"; //disabled
	this.resolveNode("sfPage1.sfPart2.txtDMFNumber").presence = "visible";
} else {
	this.parent.txtDMFUpdateCalc.rawValue = "";
	if (this.parent.txtDMFRegCalc.rawValue == "" &amp;&amp; this.parent.txtDMFNumLetCalc.rawValue == "" &amp;&amp; this.parent.txtDMFNumLetCalc.rawValue == ""){
		this.parent.txtDMFTotalFees.rawValue = "";
	}
	
	if ( this.resolveNode("sfPage1.sfPart2.txtDMFNumLet").rawValue != null &amp;&amp; this.resolveNode("sfPage1.sfPart2.txtDMFNumLet").rawValue.toString() != "" ) {
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").presence = "visible";
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").mandatory = "error";
	} else {
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").mandatory = "disabled";
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").presence = "hidden";
		//this.resolveNode("sfPage1.sfPart2.txtDMFNumber").fillColor = "255,255,255";
	}
}


 

if ( (sfPage1.sfPart2.txtDMFRegistration.rawValue == 0 || sfPage1.sfPart2.txtDMFRegistration.rawValue == null)
		&amp;&amp; (sfPage1.sfPart2.txtDMFUpdate.rawValue == 0 || sfPage1.sfPart2.txtDMFUpdate.rawValue == null)
		&amp;&amp; sfPage1.sfPart2.txtDMFNumLet.rawValue != null &amp;&amp; sfPage1.sfPart2.txtDMFNumLet.rawValue != 0 ) {
		
			sfPage1.sfPart3.ddlReason.presence = "hidden";
			sfPage1.sfPart3.ddlReasonFullList.presence = "visible";
			if ( ! sfPage1.sfFinalizeButton.btnFinalizeBottom.access == "readOnly" ) {
				sfPage1.sfPart3.ddlReasonFullList.rawValue = "";
			}
		} else {
			sfPage1.sfPart3.ddlReason.presence = "visible";
			if ( ! sfPage1.sfFinalizeButton.btnFinalizeBottom.access == "readOnly" ) {
				sfPage1.sfPart3.ddlReason.rawValue = "";
			}
			sfPage1.sfPart3.txtSpecify.presence = "hidden";
			sfPage1.sfPart3.ddlReasonFullList.presence = "hidden";
			}
</script>
               </event>
               <value>
                  <integer/>
               </value>
               <format>
                  <picture>num{zzzzzzzzzzzz9}</picture>
               </format>
            </field>
            <field name="txtDMFUpdateCalc" w="101.6mm" h="11.43mm" access="protected">
               <ui>
                  <numericEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="24.448mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="71AB41F1-2D6A-45C7-AC34-0B1EA10E0BBC">x $191 Cdn =</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <format>
                  <picture>num{$zzzz9.99}</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

cCommon.switchLocale(this);
</script>
               </event>
            </field>
            <field name="txtDMFNumLet" w="101.6mm" h="11.43mm">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="3.175mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="82D51834-0830-44CB-8816-5F2D55E01247">Number of Letters of Access Enclosed</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">//
//imports
var cActionEvent = script.core.event.ActionEvent;
var cFormHandler = script.DrugAppl.control.FormHandler;
var cSystem = script.core.System;
var cCommon = script.DrugAppl.model.Common;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cLog = script.core.util.Log;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue.toString() != "")) {
	cCommon.validateField(this, cCommon.POSITIVE_NUMBER);
	
	if (this.rawValue &gt; 99){
		if (language == "en") {
				var errApp = "The maximum number for this field is 99";
				}
			else {
				var errApp = "Le nombre maximum de ce champ est de 99";
				}
			app.alert(errApp);
			xfa.host.setFocus(this);
		  } else {
			 if (this.rawValue &gt;= 0){
				try
			{
				var actionName = cFormHandler.NUMBER_LETTERS_CHANGE;
				var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
			
					cFormHandler.actionPerformed(anActionEvent);
			}
			catch(exception)
			{
				cSystem.processUnhandledException(exception);
			}

     }
   }
   this.resolveNode("sfPage1.sfPart2.txtDMFNumber").presence = "visible";
   this.resolveNode("sfPage1.sfPart2.txtDMFNumber").mandatory = "error";
} else {
	this.parent.txtDMFNumLetCalc.rawValue = "";
	if (this.parent.txtDMFRegCalc.rawValue == "" 
	    &amp;&amp; this.parent.txtDMFNumLetCalc.rawValue == "" 
	    &amp;&amp; this.parent.txtDMFNumLetCalc.rawValue == ""){
		this.parent.txtDMFTotalFees.rawValue = "";
	}
	
	if ( this.resolveNode("sfPage1.sfPart2.txtDMFUpdate").rawValue != null &amp;&amp; this.resolveNode("sfPage1.sfPart2.txtDMFUpdate").rawValue.toString() != "" ) {
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").presence = "visible";
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").mandatory = "error";
		
	} else {
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").mandatory = "disabled";
		this.resolveNode("sfPage1.sfPart2.txtDMFNumber").presence = "hidden";
	}
}



if ( (sfPage1.sfPart2.txtDMFRegistration.rawValue == 0 || sfPage1.sfPart2.txtDMFRegistration.rawValue == null)
		&amp;&amp; (sfPage1.sfPart2.txtDMFUpdate.rawValue == 0 || sfPage1.sfPart2.txtDMFUpdate.rawValue == null)
		&amp;&amp; sfPage1.sfPart2.txtDMFNumLet.rawValue != null &amp;&amp; sfPage1.sfPart2.txtDMFNumLet.rawValue != 0 ) {
			
			sfPage1.sfPart3.ddlReason.presence = "hidden";
			sfPage1.sfPart3.ddlReasonFullList.presence = "visible";
			if ( ! sfPage1.sfFinalizeButton.btnFinalizeBottom.access == "readOnly" ) {			
				sfPage1.sfPart3.ddlReasonFullList.rawValue = "";
			}
		} else {
			sfPage1.sfPart3.ddlReason.presence = "visible";
			if ( ! sfPage1.sfFinalizeButton.btnFinalizeBottom.access == "readOnly" ) {			
				sfPage1.sfPart3.ddlReason.rawValue = "";
			}
			sfPage1.sfPart3.txtSpecify.presence = "hidden";
			sfPage1.sfPart3.ddlReasonFullList.presence = "hidden";
			}
</script>
               </event>
               <value>
                  <integer/>
               </value>
               <format>
                  <picture>num{zzzzzzzzzzzz9}</picture>
               </format>
            </field>
            <field name="txtDMFNumLetCalc" w="101.6mm" h="11.43mm" access="protected">
               <ui>
                  <numericEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="24.4538mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="43B5B213-CBDB-4C8A-A3DD-0F9F43194EFC">x $191 Cdn =</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <format>
                  <picture>num{$zzzz9.99}</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

cCommon.switchLocale(this);
</script>
               </event>
            </field>
            <draw name="rectangle" w="101.6mm" h="10.109mm">
               <value>
                  <rectangle>
                     <edge/>
                     <corner radius="5.08mm"/>
                  </rectangle>
               </value>
               <ui>
                  <defaultUi/>
               </ui>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin bottomInset="0mm" leftInset="0mm" rightInset="0mm" topInset="0mm"/>
               <para vAlign="middle"/>
            </draw>
            <field name="txtDMFTotalFees" w="101.6mm" h="10.16mm" access="protected">
               <ui>
                  <numericEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="24.4538mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="6E66D182-5CF7-4F7F-845B-AC0257811E24">TOTAL FEE</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <format>
                  <picture>num{$zzzz9.99}</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
var cCommon = script.DrugAppl.model.Common;

cCommon.switchLocale(this);

var regCalc = this.resolveNode("DrugAppl.sfPage1.sfPart2.txtDMFRegCalc").rawValue; 
var updateCalc = this.resolveNode("DrugAppl.sfPage1.sfPart2.txtDMFUpdateCalc").rawValue; 
var numLetCalc = this.resolveNode("DrugAppl.sfPage1.sfPart2.txtDMFNumLetCalc").rawValue; 

this.rawValue = regCalc + updateCalc + numLetCalc;
</script>
               </event>
            </field>
            <field name="txtDMFNumber" w="101.6mm" h="7.62mm" presence="hidden">
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border hand="right">
                        <?templateDesigner StyleID aped2?>
                        <edge/>
                     </border>
                     <margin/>
                     <comb numberOfCells="8"/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="50.8mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="385E8D39-0687-41D0-9D97-7C5E049A61E7">DMF Number (if issued)</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">


var dmfNumberString = xfa.event.newText.toString(); 

var prevString = xfa.event.prevText;
var newString = xfa.event.newText;

var cLog = script.core.util.Log;

cLog.trace("the dmfNumberString: " + dmfNumberString );
cLog.trace("the newString : " + newString );
cLog.trace("the prevString : " + prevString );
cLog.trace("the xfa.event.change: " + xfa.event.change );

if (dmfNumberString.length % 4 == 1 &amp;&amp; dmfNumberString.length &gt; 3) {
	if( newString.toString().length &gt; prevString.toString().length ) {
		if( xfa.event.change != "-" )
			xfa.event.change = "-" + xfa.event.change;
	}
		
}

//cLog.trace("the altered xfa.event.newText: " + xfa.event.newText);
//cLog.trace("the text.value: " + this.value.text.value );
</script>
               </event>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var cCommon = script.DrugAppl.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
//this.rawValue = this.rawValue.substring(0,4) + "-" + this.rawValue.substring(4);
cLog.trace("what is the value " + this.rawValue);
cCommon.validateField(this, cCommon.DMF_NUMBER);
}
</script>
               </event>
            </field>
            <field name="txtAccountNumber" w="101.6mm" h="7.62mm">
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border hand="right">
                        <?templateDesigner StyleID aped2?>
                        <edge/>
                     </border>
                     <margin/>
                     <comb numberOfCells="5"/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="63.3719mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="48A9D6BD-B64C-48AC-8034-9D33148D4A28">Customer/Client Account Number (if issued)</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
cCommon.validateField(this, cCommon.CUSTOMER_ACCOUNT);
//sfPart3.sfExistingCredit.txtECAccountNumber.rawValue = this.rawValue;
}


</script>
               </event>
               <keep intact="contentArea"/>
            </field>
            <?templateDesigner expand 1?></subform>
         <subform w="203.2mm" name="sfPart4" layout="lr-tb">
            <draw h="6.35mm" name="lblCertification" w="203.2mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text xliff:rid="3770A97D-D239-4FD3-858A-DD7BCF598F2F"> CERTIFICATION </text>
               </value>
               <assist role="H2"/>
               <?renderCache.bounds 573166 15166 0 0 1417 1417 0 0?>
               <?renderCache.textRun 15  CERTIFICATION  0 1417 12000 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <field name="txtDMFUndersign" w="203.2mm" h="15.24mm" access="protected">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="6.35mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <exData contentType="text/html">
                        <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="font-weight:bold;text-decoration:none;letter-spacing:0in">The undersigned certifies that payment (in Canadian currency) is enclosed for the Total Fee indicated above.</p><p style="font-family:'Times New Roman';font-size:10pt;font-weight:bold;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p></body>
                     </exData>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <format>
                  <picture>num{$zzzz9.99}</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">var cCommon = script.DrugAppl.model.Common;

cCommon.switchLocale(this);

var regCalc = this.resolveNode("DrugAppl.sfPage1.sfPart2.txtDMFRegCalc").rawValue; 
var updateCalc = this.resolveNode("DrugAppl.sfPage1.sfPart2.txtDMFUpdateCalc").rawValue; 
var numLetCalc = this.resolveNode("DrugAppl.sfPage1.sfPart2.txtDMFNumLetCalc").rawValue; 

this.rawValue = regCalc + updateCalc + numLetCalc;

</script>
               </event>
            </field>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <field h="11.43mm" name="txtDMFName4" w="203.2mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="3.175mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="41837748-1EDB-4078-83F4-D540302E7A02">Name of Authorized Signing Official</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <validate nullTest="error"/>
            </field>
            <breakBefore/>
            <exclGroup name="signatureOption" layout="lr-tb" presence="hidden">
               <?templateDesigner itemValuesSpecified 1?>
               <field w="28mm" h="6mm" name="chkDigitalID">
                  <ui>
                     <checkButton shape="round">
                        <border>
                           <?templateDesigner StyleID apcb4?>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="right" reserve="22mm">
                     <para vAlign="middle"/>
                     <value>
                        <text xliff:rid="4C8C85D7-F4B2-4AE0-B2ED-41207D996837">Digital ID</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <items>
                     <integer>1</integer>
                  </items>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                  </value>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">

//sfSignature.sigSignatureAttestation.presence = "visible";
//sfSignature.sfImgSignature.presence = "hidden";
this.parent.parent.digSignature.presence="visible";
this.parent.parent.Rectangle2.presence="hidden"
this.parent.parent.imgSignature.presence="hidden"
</script>
                  </event>
               </field>
               <field w="35.56mm" h="6mm" name="chkDigitalImage">
                  <ui>
                     <checkButton shape="round">
                        <border>
                           <?templateDesigner StyleID apcb4?>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="right" reserve="29.56mm">
                     <para vAlign="middle"/>
                     <value>
                        <text xliff:rid="D1B725AE-DF2E-4D03-A07F-52F2C3BB6BE9">Image Signature</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <items>
                     <integer>2</integer>
                  </items>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">

//sfSignature.sigSignatureAttestation.presence = "hidden";
//sfSignature.sfImgSignature.presence = "visible";
this.parent.parent.digSignature.presence="hidden";
this.parent.parent.Rectangle2.presence="hidden"
this.parent.parent.imgSignature.presence="visible"
</script>
                  </event>
               </field>
               <?templateDesigner expand 1?></exclGroup>
            <draw name="Rectangle1" w="119.247mm" h="5.598mm">
               <value>
                  <rectangle>
                     <edge presence="hidden"/>
                     <corner radius="5.08mm" presence="hidden"/>
                  </rectangle>
               </value>
            </draw>
            <field name="digSignature" w="115.08mm" h="10.811mm" presence="hidden">
               <ui>
                  <signature type="PDF1.6">
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                     <manifest action="all"/>
                  </signature>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="31.2792mm">
                  <para vAlign="middle"/>
                  <value>
                     <text xliff:rid="A1355D28-B73A-44C5-8B41-60294723E6EC">Senior Medical/Scientific Officer Signature*</text>
                  </value>
               </caption>
               <bind match="none"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">



//script.validation.#variables.
</script>
               </event>
               <event activity="preSign" name="event__preSign">
                  <script contentType="application/x-javascript">

var accessDate = "";

    accessDate = new Date();
    accessDate = util.printd("yyyy-mm-dd", accessDate);
this.parent.ddtDate.rawValue=accessDate;
DrugAppl.sfPage1.sfFinalizeButton.btnModifyBottom.fillColor = "230,230,230";

</script>
               </event>
               <event activity="postSign" name="event__postSign">
                  <script contentType="application/x-javascript">

//This example examines the validity of all signed objects on a form. For
//each signed object, the integer return value of the verify() method
// displays in a message box.
//app.alert("hello");
//app.alert(event.target.getField("HCeForm[0].sfPage1[0].sfAuthSignOfficial[0].sfHeader[0].digSignature[0]").signatureValidate());
if(DrugAppl.sfPage1.sfFinalizeButton.btnModifyBottom.access=="open"){
this.parent.ddtDate.rawValue=null;
DrugAppl.sfPage1.sfFinalizeButton.btnModifyBottom.fillColor = "212,208,200";
}


xfa.layout.ready;
xfa.layout.ready;

</script>
               </event>
            </field>
            <field name="imgSignature" w="115.08mm" h="10.81mm" presence="hidden">
               <ui>
                  <imageEdit data="embed">
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  </imageEdit>
               </ui>
               <caption reserve="32.2801mm">
                  <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text xliff:rid="C21F205B-CF70-4A95-A597-78BD8BCC5EE5">Senior Medical/Scientific Officer Signature*</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <desc>
                  <text name="embeddedHref">Unknown Embedded URI</text>
               </desc>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
if(this.rawValue!=null){

var cCommon = script.DrugAppl.model.Common;
//this.resolveNode("script.HCeForm.model.#variables.formValidation").makeReadonly();
cCommon.makeReadonly();
//this.resolveNode("script.validation.#variables.formValidation").makeReadonly();
var accessDate = "";

    accessDate = new Date();
    accessDate = util.printd("yyyy-mm-dd", accessDate);
this.parent.ddtDate.rawValue=accessDate;
DrugAppl.sfPage1.sfFinalizeButton.btnModifyBottom.fillColor = "230,230,230";
app.execMenuItem("SaveAs");

}
//script.validation.#variables.
//this.resolveNode("script.validation.#variables.formValidation").makeReadonly();



//script.validation.#variables.
</script>
               </event>
               <margin leftInset="0.381mm" topInset="0.381mm" bottomInset="0.381mm" rightInset="0.381mm"/>
            </field>
            <draw name="Rectangle2" w="115.08mm" h="5.598mm" presence="hidden">
               <value>
                  <rectangle>
                     <edge presence="hidden"/>
                     <corner radius="5.08mm" presence="hidden"/>
                  </rectangle>
               </value>
            </draw>
            <field name="ddtDate" w="85.289mm" h="10.81mm" access="protected" presence="hidden">
               <ui>
                  <dateTimeEdit hScrollPolicy="off">
                     <border hand="right">
                        <?templateDesigner StyleID aped2?>
                        <edge/>
                     </border>
                     <margin/>
                     <comb numberOfCells="10"/>
                  </dateTimeEdit>
                  <picture>date{YYYY-MM-DD}</picture>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1.0008mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <value>
                  <date/>
               </value>
               <caption reserve="30.2626mm">
                  <para vAlign="middle"/>
                  <value>
                     <text xliff:rid="DF363022-24F5-4CB1-A849-1FD5080FEE7F">Date (YYYY-MM-DD)</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <format>
                  <picture>date{YYYY-MM-DD}</picture>
               </format>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <validate>
                  <picture>date{YYYY-MM-DD}</picture>
               </validate>
               <bind>
                  <picture>date{YYYY-MM-DD}</picture>
               </bind>
            </field>
            <?templateDesigner expand 0?>
         </subform>
         <subform w="203.2mm" name="sfPart3" layout="lr-tb">
            <draw h="6.35mm" name="lblMethodPayment" w="203.2mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text xliff:rid="E6942506-AE09-40EC-B330-61A1249C0917"> METHOD OF PAYMENT</text>
               </value>
               <assist role="H2"/>
               <?renderCache.bounds 573166 15166 0 0 1417 1417 0 0?>
               <?renderCache.textRun 18  METHOD OF PAYMENT 0 1417 12000 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <draw w="8in" name="lblPaymInstructions_en">
               <font typeface="Myriad Pro"/>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="margin-top:6pt;margin-bottom:6pt;font-size:8pt;font-weight:bold;letter-spacing:0in">Cheques, money orders, international bank drafts or wires<span style="font-weight:normal"> should be made payable to:<br/>The “Receiver<span style="xfa-spacerun:yes">  </span>General<span style="xfa-spacerun:yes">  </span>for<span style="xfa-spacerun:yes">  </span>Canada”.<span style="xfa-spacerun:yes">  </span>Cheques drawn on non-Canadian banks MUST be issued in coordination with a referenced Canadian bank (that is, referenced on cheque), otherwise they are<span style="xfa-spacerun:yes"> </span></span>NOT ACCEPTED<span style="font-weight:normal">.</span></p><p style="margin-top:6pt;margin-bottom:6pt;font-size:8pt;font-weight:bold;letter-spacing:0in">Wire payments<span style="font-weight:normal"> of fees paid in advance of the service will be accepted only when wired in<span style="xfa-spacerun:yes"> </span></span>CANADIAN FUNDS<span style="font-weight:normal"> to:</span><br/>Bank Name<span style="font-weight:normal">:<br/>Scotiabank<br/>Toronto Business Service Centre<br/>40 King St., West,<br/>Toronto, Ontario, Canada,<br/>M5H 1H1<span style="xfa-spacerun:yes"> </span></span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;letter-spacing:0in">SWIFT<span style="font-weight:normal">: NOSCCATT</span><br/>Bank Number<span style="font-weight:normal">: 002</span><br/>Transit Number<span style="font-weight:normal">: 47696</span><br/>Beneficiary Name<span style="font-weight:normal">:<span style="xfa-spacerun:yes">  </span>HEALTH CANADA - CFOB</span><br/>Beneficiary Account No<span style="font-weight:normal">: 476961242210</span><br/>Description Field<span style="font-weight:normal">: 022-22879 * Also include your company name and product name, as well as your invoice number and customer number if applicable.</span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in">Please ensure all service charges, including fees charged by your bank or any intermediary banks, are covered by your payment.<span style="xfa-spacerun:yes"> </span><span style="font-weight:bold">Health Canada is not responsible for any fees charged during the transfer process</span>. Failure to pay the full amount outstanding will result in a balance owing on your account.<span style="xfa-spacerun:yes"> </span><span style="font-weight:bold">Any payments sent in non-Canadian funds will be rejected</span>.</p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in">For further information on wire payment, contact Accounts Receivable at 1-800-815-0506, (613) 957-1052 or via email at<span style="xfa-spacerun:yes"> </span><a href="mailto:AR-CR@HC-SC.GC.CA?subject=AR-CR%40HC-SC.GC.CA">AR-CR@HC-SC.GC.CA</a>. If problems occur with the transaction, please contact the Scotiabank at (416) 866-6430.</p></body>
                  </exData>
               </value>
               <ui>
                  <textEdit/>
               </ui>
               <margin leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm" bottomInset="0.5mm"/>
            </draw>
            <draw w="8in" name="lblPaymInstructions_fr" presence="hidden">
               <font typeface="Myriad Pro"/>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Les chèques, mandats-poste, traites bancaires international ou virements télégraphiques<span style="font-weight:normal"> doivent être libellés à l'ordre du :</span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">"Receveur général du Canada". Les chèques tirés sur des banques non canadiennes DOIVENT être émis en coordination avec une banque canadienne de référence (c'est-àdire, une banque canadienne dont le nom figure sur le chèque), à défaut de quoi le chèque NE PEUT ÊTRE ACCEPTÉ.</p><p style="font-size:8pt;text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Les virements télégraphiques<span style="font-weight:normal"> des frais payés avant la réception du service seront acceptés seulement lorsqu'ils seront versés en</span> DEVISES CANADIENNES<span style="font-weight:normal"> à :</span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Nom de la banque :</p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Banque Scotia</p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Centre de services aux entreprises de Toronto</p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">40 rue King ouest</p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Toronto, Ontario, Canada,</p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">M5H 1H1</p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">SWIFT<span style="font-weight:normal"> : NOSCCATT</span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Numéro de banque<span style="font-weight:normal"> : 002</span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Numéro de domiciliation<span style="font-weight:normal"> : 47696</span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Nom du bénéficiaire<span style="xfa-spacerun:yes"> </span><span style="font-weight:normal">: Santé Canada - DGCM</span></p><p style="font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Numéro de compte<span style="font-weight:normal"> : 476961242210</span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Description<span style="font-weight:normal"> : 022-22879 * Joignez le nom de votre compagnie, le nom du produit et votre numéro de client ou facture si applicable.</span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;text-decoration:none;letter-spacing:0in">Veuillez vous assurer que tous les frais de gestion, y compris les frais chargés par votre banque ou une banque intermédiaire sont couverts par votre paiement.<span style="xfa-spacerun:yes"> </span><span style="font-weight:bold">Santé</span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Canada n'est pas responsable des frais facturés pendant le processus de transfert.<span style="xfa-spacerun:yes"> </span><span style="font-weight:normal">Si vous ne versez pas le montant total, vous aurez un solde à payer sur votre compte.</span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in">Tous les paiements versés en devises autres que canadiennes seront rejetés.</p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;text-decoration:none;letter-spacing:0in">Pour de plus amples renseignements sur cette méthode de paiement, veuillez communiquer avec le Service des comptes recevables au 1-800-815-0506, 613-957-1052 ou</p><p style="tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;text-decoration:none;letter-spacing:0in">par courriel à<span style="xfa-spacerun:yes"> </span><a href="mailto:AR-CR@HC-SC.GC.CA">AR-CR@HC-SC.GC.CA</a>. En cas de difficulté au niveau de l'opération bancaire, veuillez communiquer avec la Banque Scotia au 416-866-6430</p></body>
                  </exData>
               </value>
               <ui>
                  <textEdit/>
               </ui>
               <margin leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm" bottomInset="0.5mm"/>
            </draw>
            <subform layout="lr-tb" name="sfPayment" w="203.2mm">
               <field name="txtCkBoxPls" w="203.2mm" h="5.08mm" access="protected">
                  <ui>
                     <textEdit>
                        <border presence="hidden">
                           <?templateDesigner StyleID aped0?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="201.2mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text xliff:rid="E574A2ED-FF49-4C7C-A76B-A96B39506FE1">Please check one or more of the boxes below:</text>
                     </value>
                  </caption>
                  <assist>
                     <speak disable="1"/>
                  </assist>
               </field>
               <field h="6.35mm" name="chkBoxCHQ" w="50.8mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb1?>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                           <edge/>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="41.91mm">
                     <font baselineShift="0pt" size="7pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="45ED2418-C49C-45D8-A3DC-C13B0D5FF3E3">  Cheque</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
 

//imports
var cActionEvent     = script.core.event.ActionEvent;
var cLog             = script.core.util.Log;
var cInstructHandler = script.DrugAppl.control.MethodOfPaymentHandler;
var cSystem          = script.core.System;
var common = script.DrugAppl.model.Common;

try
{
	if (this.rawValue==1) { // clicked
		this.resolveNode("DrugAppl.sfPage1.sfPart3.sfCheque").presence = "visible";
	} else {
		var subform = this.resolveNode("DrugAppl.sfPage1.sfPart3.sfCheque");
		//common.clearSubform(subform );
		common.setNullValueAllNode(subform );
		
		subform .presence = "hidden";
	}
}
catch(exception)
{
	cLog.warn("Problem with View instructions button::click", exception);
}

</script>
                  </event>
               </field>
               <field h="6.35mm" name="chkBoxIntBD" w="50.8mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb1?>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                           <edge/>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="41.91mm">
                     <font baselineShift="0pt" size="7pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="ABA5CCA2-0E9B-4978-A21F-2A0F6FAA7BB4">  International Bank DrafIt</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
//imports
var cActionEvent     = script.core.event.ActionEvent;
var cLog             = script.core.util.Log;
var cInstructHandler = script.DrugAppl.control.MethodOfPaymentHandler;
var cSystem          = script.core.System;
var common = script.DrugAppl.model.Common;

try
{
	if (this.rawValue==1) { // clicked
		this.resolveNode("DrugAppl.sfPage1.sfPart3.sfBankDraft").presence = "visible";
	} else {
		var subform = this.resolveNode("DrugAppl.sfPage1.sfPart3.sfBankDraft");
		common.setNullValueAllNode(subform );
		
		subform .presence = "hidden";
	}
}
catch(exception)
{
	cLog.warn("Problem with View instructions button::click", exception);
}

</script>
                  </event>
               </field>
               <field h="6.35mm" name="chkBoxBW" w="50.8mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb1?>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                           <edge/>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="41.91mm">
                     <font baselineShift="0pt" size="7pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="1998F68D-014C-4AAA-9711-813432C1B8A1">  Bank Wire</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">


//imports
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cInstructHandler = script.DrugAppl.control.MethodOfPaymentHandler;
var cSystem = script.core.System;
var common = script.DrugAppl.model.Common;

try
{
	if (this.rawValue==1) { // clicked
		this.resolveNode("DrugAppl.sfPage1.sfPart3.sfBankWire").presence = "visible";
	} else {
		var subform = this.resolveNode("DrugAppl.sfPage1.sfPart3.sfBankWire");
		common.setNullValueAllNode(subform );
		
		subform .presence = "hidden";
	}	
}
catch(exception)
{
	cLog.warn("Problem with View instructions button::click", exception);
}


</script>
                  </event>
               </field>
               <field h="6.35mm" name="chkBoxMO" w="50.8mm" y="12mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb1?>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                           <edge/>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="41.91mm">
                     <font baselineShift="0pt" size="7pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="C4CC29AD-E909-4785-B246-B519A23FA96C">  Money Order</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
               </field>
               <field h="6.405mm" name="chkBoxCC" w="50.8mm" y="9mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb1?>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                           <edge/>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="41.91mm">
                     <font baselineShift="0pt" size="7pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="8EE560C3-716A-4E81-B5D6-E8DB4D5E4B1A">  MasterCard/Visa/Amex</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
//imports
var cActionEvent     = script.core.event.ActionEvent;
var cLog             = script.core.util.Log;
var cInstructHandler = script.DrugAppl.control.MethodOfPaymentHandler;
var cSystem          = script.core.System;
var common = script.DrugAppl.model.Common;

try
{
	if (this.rawValue==1) { // clicked
		this.resolveNode("DrugAppl.sfPage1.sfPart3.sfCreditCard").presence = "visible";
	} else {
		var subform = this.resolveNode("DrugAppl.sfPage1.sfPart3.sfCreditCard");
		common.setNullValueAllNode(subform );
		
		subform .presence = "hidden";
	}		
}
catch(exception)
{
	cLog.warn("Problem with View instructions button::click", exception);
}

</script>
                  </event>
               </field>
               <field h="6.35mm" name="chkBoxEC" w="50.8mm" x="62.2339mm" y="6mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb1?>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                           <edge/>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="41.91mm">
                     <font baselineShift="0pt" size="7pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="14115BD2-8108-4112-BFA5-B958B9F3C5B9">  Payment using existing credit</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
//imports
var cActionEvent     = script.core.event.ActionEvent;
var cLog             = script.core.util.Log;
var cInstructHandler = script.DrugAppl.control.MethodOfPaymentHandler;
var cSystem          = script.core.System;
var common = script.DrugAppl.model.Common;

try
{
	if (this.rawValue==1) { // clicked
		this.resolveNode("DrugAppl.sfPage1.sfPart3.sfExistingCredit").presence = "visible";
	} else {
		var subform = this.resolveNode("DrugAppl.sfPage1.sfPart3.sfExistingCredit");
		common.setNullValueAllNode(subform );
		
		subform .presence = "hidden";
	}
}
catch(exception)
{
	cLog.warn("Problem with View instructions button::click", exception);
}

</script>
                  </event>
               </field>
               <occur max="-1"/>
               <keep intact="contentArea"/>
               <?templateDesigner expand 1?></subform>
            <subform name="sfBankWire" w="203.2mm" layout="lr-tb" presence="hidden">
               <draw h="5.588mm" name="lblReference1" w="8in">
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text xliff:rid="A1DC6131-4329-46CC-90B4-888394C5BFBF">Bank Wire Details</text>
                  </value>
                  <font baselineShift="0pt" typeface="Myriad Pro" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                     <fill>
                        <color value="230,230,230"/>
                     </fill>
                  </border>
                  <assist role="H3"/>
               </draw>
               <field name="txtDateWired" w="76.2mm" h="11.43mm">
                  <ui>
                     <dateTimeEdit hScrollPolicy="off">
                        <border hand="right">
                           <?templateDesigner StyleID aped2?>
                           <edge/>
                        </border>
                        <margin/>
                        <comb numberOfCells="10"/>
                     </dateTimeEdit>
                     <picture>date{YYYY-MM-DD}</picture>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1.7628mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <date/>
                  </value>
                  <caption placement="top" reserve="3.2256mm">
                     <font baselineShift="0pt" size="9pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="7CDE7348-9A42-442D-A96B-B8F061A2E1CD">Date the funds were wired. (YYYY-MM-DD)</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <format>
                     <picture>date{YYYY-MM-DD}</picture>
                  </format>
                  <bind>
                     <picture>date{YYYY-MM-DD}</picture>
                  </bind>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;
cCommon.validateField(this, cCommon.DATE_FIELD);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtBankName" w="127mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1.0008mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.2256mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="55C75BC1-E543-49ED-9903-5462FD630A87">Name of the bank the funds were sent from.</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
               </field>
               <field name="txtTotalWired" w="76.2mm" h="11.43mm">
                  <ui>
                     <numericEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </numericEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.175mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="4AB78358-204A-4C46-B7DF-D49796A64D77">Amount of money wired. CDN$</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <format>
                     <picture>num{$z,zzz,zzz,zz9.99}</picture>
                  </format>
                  <event activity="ready" ref="$layout" name="event__layout_ready">
                     <script contentType="application/x-javascript">
var cCommon = script.DrugAppl.model.Common;

cCommon.mySwitchLocale(this);


</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
	cCommon.validateField(this, cCommon.POSITIVE_NUMBER);
}
</script>
                  </event>
               </field>
               <subform x="76.2mm" y="17.018mm" w="127mm" name="sfBoxCopyReceipt" h="11.43mm">
                  <field name="chkBoxCopyReceipt" w="82.55mm" h="5.105mm" y="2.439mm" x="2.54mm">
                     <ui>
                        <checkButton>
                           <border>
                              <?templateDesigner StyleID apcb1?>
                              <fill>
                                 <color value="255, 255, 255"/>
                              </fill>
                              <edge/>
                           </border>
                           <margin/>
                        </checkButton>
                     </ui>
                     <font size="8pt" typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1.27mm" rightInset="1.27mm" topInset="0.9906mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <validate nullTest="error"/>
                     <caption placement="right" reserve="76.2mm">
                        <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                        <para marginLeft="3.6pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle" hAlign="justify"/>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.1753mm" presence="hidden"/>
                     </border>
                  </field>
                  <draw name="txtBoxCopyReceipt" y="3.074mm" x="10.16mm" w="53.34mm" h="4.318mm" presence="inactive">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text xliff:rid="AF5C1884-80A5-4BBD-8FAC-4CA9DFC590CF"> copy of the transaction receipt is enclosed.</text>
                     </value>
                     <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                     <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para hAlign="justify" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  </draw>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <?templateDesigner expand 1?></subform>
               <keep intact="contentArea"/>
               <?templateDesigner expand 0?></subform>
            <subform name="sfCheque" w="203.2mm" h="18.343mm" presence="hidden">
               <draw h="6.858mm" name="lblReference2" w="8in" y="0mm">
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text xliff:rid="7F208E8B-E25F-4499-978A-34A1D9BC06C3">Cheque Details</text>
                  </value>
                  <font baselineShift="0pt" typeface="Myriad Pro" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                     <fill>
                        <color value="230,230,230"/>
                     </fill>
                  </border>
                  <assist role="H3"/>
               </draw>
               <field name="txtCHQNumber" y="6.913mm" w="203.2mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="E4B45E0C-30D7-4698-9B6C-042815DD1A0F">Cheque Number</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
cCommon.validateField(this, cCommon.CHECK_NUMBER);

}
</script>
                  </event>
               </field>
               <?templateDesigner expand 0?></subform>
            <subform name="sfBankDraft" w="203.2mm" layout="tb" presence="hidden">
               <draw h="6.35mm" name="lblReferenceBD" w="8in">
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text xliff:rid="C45F5902-0096-4DA3-941B-9EA77BB8C46A">Bank Draft Details</text>
                  </value>
                  <font baselineShift="0pt" typeface="Myriad Pro" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                     <fill>
                        <color value="230,230,230"/>
                     </fill>
                  </border>
                  <assist role="H3"/>
               </draw>
               <field name="txtBDNumber" w="203.2mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="57D4BB69-3C24-4B14-8121-64DBF3B1EC16">Bank Draft Number</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
cCommon.validateField(this, cCommon.BANK_DRAFT_NUMBER);

}
</script>
                  </event>
               </field>
               <?templateDesigner expand 0?></subform>
            <subform name="sfCreditCard" w="203.216mm" layout="lr-tb" presence="hidden">
               <draw h="6.35mm" name="lblReference3" w="8in">
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text xliff:rid="4FB2E2DF-41B9-426C-BA9F-678F09D0EBEE">Credit Card Details</text>
                  </value>
                  <font baselineShift="0pt" typeface="Myriad Pro" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                     <fill>
                        <color value="230,230,230"/>
                     </fill>
                  </border>
                  <assist role="H3"/>
               </draw>
               <field h="11.43mm" name="txtCompanyName" w="203.2mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="0341ECD6-8E14-4852-A1F5-5339BB525DD0">Company Name</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
               </field>
               <field h="11.43mm" name="txtDMFNameCC" w="203.2mm" access="readOnly">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="047E420C-5256-4C87-98F5-E15E521DBCFB">Drug Master File Name</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <calculate override="error"/>
               </field>
               <field name="ddlCreditCardCC" w="93.554mm" h="9mm">
                  <ui>
                     <choiceList>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="43.392mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text xliff:rid="C04035AA-D898-4ED9-A1BB-04DDA1A6407F">Credit Card Type: </text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <items>
                     <text xliff:rid="51787F57-3E5D-423A-8506-8F0FE756EF1A">Visa</text>
                     <text xliff:rid="67625133-B1D2-48F3-8127-8E0A07B6461A">Master Card</text>
                     <text xliff:rid="B091B498-3C4E-45FE-93E3-F28774D2A98C">AMEX</text>
                  </items>
                  <items save="1" presence="hidden">
                     <text xliff:rid="072486D9-CDD1-4998-AB19-0C9F17882B25">1</text>
                     <text xliff:rid="D42CAB03-369B-442D-A84D-0E7AF02C90D0">2</text>
                     <text xliff:rid="267EFB05-CFBA-4D7D-8B0C-A87F8361E534">3</text>
                  </items>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">this.resolveNode("txtCreditCardNumberCC").rawValue = "";
</script>
                  </event>
               </field>
               <field name="txtCreditCardNumberCC" w="109.382mm" h="9mm">
                  <ui>
                     <textEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="6.096mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="53.344mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text xliff:rid="F38CA7EE-BE4E-4EBF-AE85-069BDDEA3C69">Credit Card Number (full number):</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cCommon = script.DrugAppl.model.Common;

var validationResult = cCommon.validateCreditCard(this, this.resolveNode("ddlCreditCardCC").rawValue);


if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
	
	if( validationResult != null &amp;&amp;
		this.parent.ddlCreditCardCC.rawValue != null &amp;&amp;
		this.parent.ddlCreditCardCC.rawValue != "") {
		
		// credit type is chosen but card number is not right, correct number value. 
		app.alert(validationResult);
		xfa.host.setFocus(this);
	
	} else {
			// now validationResult == null || ddlCreditCardCC.rawValue == ""	
			if (validationResult != null){
				// ddlCreditCardCC.rawValue == """ means that credit type is not chose, start it over
				app.alert(validationResult);
				this.rawValue = "";
			} else {
				// do nothing
			}
			
	
		}  
 }

</script>
                  </event>
               </field>
               <field name="ddlMonth" w="63.382mm" h="9mm">
                  <ui>
                     <choiceList>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="43.3595mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text xliff:rid="0110F5BF-F94A-4E26-BA63-C9F896DE9626">Credit Card Expiry Date:       MM</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                  </caption>
                  <items>
                     <text xliff:rid="8256775E-8C5F-4A3F-8137-025792D90BFB">01</text>
                     <text xliff:rid="66B6DBA1-1E6C-4C54-8818-65AD846AD9FE">02</text>
                     <text xliff:rid="E9CF63A0-6F32-4CF3-8FA8-B28BED5A958F">03</text>
                     <text xliff:rid="5686231F-097E-40E1-A14E-7A6A32C871C4">04</text>
                     <text xliff:rid="C2D8E0B8-2AD4-4DE7-8E29-57E0F7D412E3">05</text>
                     <text xliff:rid="D5AFFF12-7D25-4CF9-AFB6-33F1371AFF5F">06</text>
                     <text xliff:rid="C8DA25AD-162B-4AAD-841F-3CDD0A8D0A60">07</text>
                     <text xliff:rid="F02F545E-7AF4-408D-8755-FB189699AB64">08</text>
                     <text xliff:rid="1FA14EAD-0D6D-4696-B83A-E8E0A3215A0B">09</text>
                     <text xliff:rid="C58461A1-A539-4020-B10D-25C0FBACFD7D">10</text>
                     <text xliff:rid="120A3C2A-846F-4642-87C1-60ABF1043FEF">11</text>
                     <text xliff:rid="3293943F-E1BF-4D25-B7CF-CBDB08ABF7B8">12</text>
                  </items>
                  <items save="1" presence="hidden">
                     <text xliff:rid="3E76741F-8E62-406A-976F-8EA1F6B56285">01</text>
                     <text xliff:rid="C371141C-9F7C-4EFE-BE5A-1B455903A6C6">02</text>
                     <text xliff:rid="AC779E5A-78AE-46B4-AB7B-0914F31C9048">03</text>
                     <text xliff:rid="078C4E6A-700C-4FB4-B2D9-20B594513D25">04</text>
                     <text xliff:rid="F979DDC1-F44B-4D92-BEA8-2FEE9A090EA1">05</text>
                     <text xliff:rid="E7C69B66-78B6-4A9B-B124-3BBB38CE250E">06</text>
                     <text xliff:rid="384289E7-DEB1-403A-AD0A-E9D980D09F8C">07</text>
                     <text xliff:rid="25B4DDE2-A73A-47F8-B1CD-278214DEB60E">08</text>
                     <text xliff:rid="6A7F3E11-6233-4645-A2F0-3AAA23DDCBEA">09</text>
                     <text xliff:rid="AEEB8D3E-2A13-4BA8-9D40-76C14E906A71">10</text>
                     <text xliff:rid="E4F5D3CC-0AB5-45BE-89A2-9052E949D95A">11</text>
                     <text xliff:rid="53302D25-182F-4554-AE2F-EA21681BAF9C">12</text>
                  </items>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">



this.resolveNode("script.DrugAppl.model.#variables.Common").isCreditCardExpiryValid(this, ddlYear);
</script>
                  </event>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
               </field>
               <field name="ddlYear" w="139.243mm" h="9mm">
                  <ui>
                     <choiceList>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="109.728mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="10.0606mm">
                     <para vAlign="middle"/>
                     <value>
                        <text xliff:rid="11FECF01-898C-44BD-A515-731EF8BD3819">YY</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <items/>
                  <items save="1" presence="hidden"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("script.DrugAppl.model.#variables.Common").isCreditCardExpiryValid(ddlMonth, this);




</script>
                  </event>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="initialize" name="event__initialize">
                     <script contentType="application/x-javascript">
if(this.items.nodes.length==0){
var d = new Date();
var n = d.getFullYear();

n = n % 100;


for (var i =n; i&lt;n+10; i++){
//app.alert(i);
this.addItem(i.toString(),i.toString());
}
}

//app.alert(n);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCCHolderName" w="101.6mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="6B8AB857-A6A9-4B26-B597-A664967D9BC3">Card Holder's Name</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
               </field>
               <field h="11.43mm" name="txtCCHPhoneNumber" w="101.6mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="12787416-8DDA-4A65-AF27-3B3544CF1CA5">Credit Card Holder's Telephone Number</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cGlobalRequirement = script.core.validation.GlobalRequirement;
cGlobalRequirement .isPhoneValid(this, "AU");
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCCHolderAddress" w="203.2mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="7D0210C1-52E0-46BA-AAE5-9D5E9CEB2DF2">Credit Card Holder's Address</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
               </field>
               <field name="txtCCSignature" w="101.6mm" h="11.43mm">
                  <ui>
                     <imageEdit data="embed">
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                     </imageEdit>
                  </ui>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="11E52D63-F0E3-4A0A-B98D-CBB08D45D95F">Authorized Signature</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin bottomInset="0.762mm" leftInset="0.762mm" rightInset="0.762mm" topInset="0.762mm"/>
                  <para vAlign="middle"/>
                  <desc>
                     <text name="embeddedHref">Unknown Embedded URI</text>
                  </desc>
               </field>
               <?templateDesigner expand 1?></subform>
            <subform name="sfExistingCredit" w="203.2mm" layout="lr-tb" presence="hidden">
               <draw h="6.35mm" name="lblReference4" w="8in">
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text xliff:rid="8D6B5775-B8C1-4238-A351-D9DEEDBF770C">Existing Credit - Please Apply the Following Credit Towards the Drug Master File Fee</text>
                  </value>
                  <font baselineShift="0pt" typeface="Myriad Pro" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                     <fill>
                        <color value="230,230,230"/>
                     </fill>
                  </border>
                  <assist role="H3"/>
               </draw>
               <field h="11.43mm" name="txtDMFCompanyName" w="152.4mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="958CACF9-310E-46C4-8D51-BA1E10E742CE">Drug Master File Company Name</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
               </field>
               <field name="txtECAccountNumber" w="50.8mm" h="11.43mm">
                  <ui>
                     <numericEdit hScrollPolicy="off">
                        <border hand="right">
                           <?templateDesigner StyleID aped2?>
                           <edge/>
                        </border>
                        <margin/>
                        <comb numberOfCells="5"/>
                     </numericEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="21B7432A-A332-4671-BC1C-4C02D92B2F44">Customer/Client Account Number</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <format>
                     <picture>num{zzzzzzzzzzzz9}</picture>
                  </format>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
	cCommon.validateField(this, cCommon.CUSTOMER_ACCOUNT);
}


</script>
                  </event>
               </field>
               <field name="txtECAmount" w="101.6mm" h="11.43mm">
                  <ui>
                     <numericEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </numericEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="2905BB89-05E7-47B8-8662-B19BAE0E0EF8">Existing Credit Amount ($)</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <format>
                     <picture>num{$z,zzz,zzz,zz9.99}</picture>
                  </format>
                  <event activity="ready" ref="$layout" name="event__layout_ready">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;


cCommon.switchLocale(this);


</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
	cCommon.validateField(this, cCommon.POSITIVE_NUMBER);
}



if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
  if (this.parent.txtECApplied.rawValue != null &amp;&amp; this.parent.txtECApplied.rawValue != "") {
	if (this.rawValue &lt; this.parent.txtECApplied.rawValue){
		if (language == "en") {
				var errApp = "This value must be less than or equal to existing credit amount.";
			}
			else {
				var errApp = "Cette valeur doit être inférieure ou égale au montant de crédit existantes.";
			}
			
	app.alert(errApp);
	xfa.host.setFocus(this);
	}
  }
	
}
</script>
                  </event>
               </field>
               <field name="txtECApplied" w="101.6mm" h="11.43mm">
                  <ui>
                     <numericEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </numericEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="2.999mm">
                     <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text xliff:rid="352295D5-58FB-4473-91CF-F3CDCFBD0737">Existing Credit Amount to be Applied ($)</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.1753mm"/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();


if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
	cCommon.validateField(this, cCommon.POSITIVE_NUMBER);
}


if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
  if (this.parent.txtECAmount.rawValue != null &amp;&amp; this.parent.txtECAmount.rawValue != "") {
	if (this.rawValue &gt; this.parent.txtECAmount.rawValue){
		if (language == "en") {
				var errApp = "This value must be less than or equal to existing credit amount.";
			}
			else {
				var errApp = "Cette valeur doit être inférieure ou égale au montant de crédit existantes.";
			}
			
	app.alert(errApp);
	xfa.host.setFocus(this);
	}
  }
}
</script>
                  </event>
                  <validate nullTest="error"/>
                  <format>
                     <picture>num{$z,zzz,zzz,zz9.99}</picture>
                  </format>
                  <event activity="ready" ref="$layout" name="event__layout_ready">
                     <script contentType="application/x-javascript">

var cCommon = script.DrugAppl.model.Common;


cCommon.switchLocale(this);
</script>
                  </event>
               </field>
               <?templateDesigner expand 0?></subform>
            <field h="11.43mm" name="ddlReason" w="101.6mm">
               <ui>
                  <choiceList>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </choiceList>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="2.8266mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="9BB12FC1-50FA-496A-BA22-FDDDF1E0DB1D">Fees Paid by</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <validate nullTest="error"/>
               <items/>
               <items save="1" presence="hidden"/>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">

if( this.presence == "hidden" ) {
	this.rawValue=null;
}
</script>
               </event>
            </field>
            <field h="11.43mm" name="ddlReasonFullList" w="101.6mm" y="3mm" presence="hidden">
               <ui>
                  <choiceList>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </choiceList>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="2.8266mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="DBE04182-73A6-4788-8C61-B78FB1D60DDB">Fees Paid by</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <validate nullTest="error"/>
               <items/>
               <items save="1" presence="hidden"/>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">

	if (this.rawValue == "OTHER") {
		this.parent.txtSpecify.presence = "visible";
	} else {
		this.parent.txtSpecify.presence = "hidden";
	}
	
</script>
               </event>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
if( this.presence == "hidden" ) {
	this.rawValue=null;
}
</script>
               </event>
            </field>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <field name="txtSpecify" w="101.6mm" h="11.43mm" presence="hidden">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption placement="top" reserve="2.8266mm">
                  <font baselineShift="0pt" size="8pt" typeface="Myriad Pro"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text xliff:rid="47B69F9F-E237-40F0-99E1-659564726957">Please specify</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.1753mm"/>
               </border>
               <validate nullTest="error"/>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
if( this.presence == "hidden" ) {
	this.rawValue=null;
}
</script>
               </event>
            </field>
            <breakBefore targetType="contentArea" startNew="1"/>
            <draw name="txtEmpty" w="4in" h="11.43mm">
               <ui>
                  <textEdit/>
               </ui>
               <font typeface="Myriad Pro" size="8pt" posture="italic" baselineShift="0pt"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <?renderCache.bounds 285166 29566 0 0 1417 1417 0 0?></draw>
            <draw name="txtWarning" w="203.2mm" minH="11.43mm">
               <ui>
                  <textEdit/>
               </ui>
               <font typeface="Myriad Pro" size="8pt" posture="italic" baselineShift="0pt"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <value>
                  <text>Please do not include Part 4 of this form which contains credit card, wire, or cheque payment information within an electronic submission as the information cannot be deleted.  It will remain as part of the record.  Please mail Part 4 to the Office of Submissions &amp; Intellectual Property, ATTN: Cost Recovery.  Office of Submissions &amp; Intellectual Property, Therapeutic Products Directorate, Health Canada, 101 Tunney's Pasture Driveway, Finance Building, Address Locator 0201A, Ottawa, Ontario K1A 0K9. </text>
               </value>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
            </draw>
            <?templateDesigner expand 1?></subform>
         <subform w="203.2mm" name="sfFinalizeButton" h="11.557mm">
            <field name="btnFinalizeBottom" w="28.575mm" h="6.35mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text xliff:rid="0631454F-929A-46F4-9C64-4FC6E48B11CB">Finalize</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var cCommon = script.DrugAppl.model.Common;
var language = cDrugApplModel.getLanguage();
var cDateUtil = script.core.util.DateUtil;
var date = new Date();
var cLog = script.core.util.Log;

cCommon.formValidationAndLock(this);

if(this.access == "readOnly"){
this.parent.parent.sfPart4.signatureOption.presence="visible";
this.parent.parent.sfPart4.ddtDate.presence="visible";
this.parent.parent.sfPart4.Rectangle1.presence="visible";
this.parent.parent.sfPart4.Rectangle2.presence="visible";
cLog.trace("Finalized button start readOnly 11111");
//DrugAppl.sfPage1.sfFormButtons.btnModifyBottom.access = "open";

DrugAppl.sfPage1.sfFinalizeButton.btnModifyBottom.access = "open";

if (language == "en") {
		this.resolveNode("DrugAppl.#pageSet[0].Page1.txtFinalizeDate").rawValue = "Date Finalized " + cDateUtil.toDateString(date);
		//DrugAppl.#pageSet[0].Page1.txtFinalizeDate
	} else {
		this.resolveNode("#pageSet.Page1.txtFinalizeDate").rawValue = "Date finalisée " + cDateUtil.toDateString(date);
	}
}

</script>
               </event>
            </field>
            <draw name="txtEmpty" w="3.175mm" h="6.35mm" x="28.575mm">
               <ui>
                  <textEdit/>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <?renderCache.bounds 6166 15166 0 0 1417 1417 0 0?></draw>
            <field name="btnModifyBottom" w="28.575mm" h="6.35mm" relevant="-print" x="31.75mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text xliff:rid="549F6927-DD79-4280-8958-5BCA82EB30D4">Modify</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cCommon = script.DrugAppl.model.Common;
var cLog = script.core.util.Log;


cCommon.makeEditable();

this.resolveNode("#pageSet.Page1.txtFinalizeDate").rawValue = "";

this.parent.parent.sfPart4.signatureOption.presence="hidden";
this.parent.parent.sfPart4.signatureOption.rawValue="";
this.parent.parent.sfPart4.digSignature.presence="hidden";
this.parent.parent.sfPart4.Rectangle1.presence="hidden";
this.parent.parent.sfPart4.Rectangle2.presence="hidden";
this.parent.parent.sfPart4.ddtDate.presence="hidden";
this.parent.parent.sfPart4.imgSignature.presence="hidden";
</script>
               </event>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
if(DrugAppl.sfPage1.sfPart4.ddtDate.rawValue==null){

if(btnFinalizeBottom.access == "open"){
this.access = "readOnly";
this.fillColor = "230,230,230";
}

if(btnFinalizeBottom.access == "readOnly"){
this.access = "open";
this.fillColor = "212,208,200";
}
}
</script>
               </event>
            </field>
            <margin topInset="5.08mm"/>
            <?templateDesigner expand 1?></subform>
         <variables>
            <script contentType="application/x-javascript" name="countryScript">
// This script object controls the interaction between the country and state/province Drop-down lists.

// The array contains the country and the corresponding states/provinces.

var myCountries = new Array(new Array(2), new Array(14), new Array(52)); // Create a two-dimensional array.
														   				 // For each country, add a 'new Array(number of state/province +1)'.

// Define the country and the corresponding states/provinces.
// The array syntax is arrayName[index][index].
// The first index number represents the country,
// the second index number is the actual data value.

myCountries[0][0] = " ";		// The first items in the Drop-dowm Lists should be blank.
myCountries[0][1] = " ";
myCountries[1][0] = "Canada";	// The first data value is the country name,
myCountries[1][1] = "Alberta";	// the rest are states/provinces.
myCountries[1][2] = "British Columbia";
myCountries[1][3] = "Manitoba";
myCountries[1][4] = "New Brunswick";
myCountries[1][5] = "Newfoundland and Labrador";
myCountries[1][6] = "Northwest Territories";
myCountries[1][7] = "Nova Scotia";
myCountries[1][8] = "Nunavut";
myCountries[1][9] = "Ontario";
myCountries[1][10] = "Prince Edward Island";
myCountries[1][11] = "Quebec";
myCountries[1][12] = "Saskatchewan";
myCountries[1][13] = "Yukon";
myCountries[2][0] = "United States";	// This is a new country, see how the first number is now [1].
myCountries[2][1] = "Alabama";
myCountries[2][2] = "Alaska";
myCountries[2][3] = "Arizona";
myCountries[2][4] = "Arkansas";
myCountries[2][5] = "California";
myCountries[2][6] = "Colorado";
myCountries[2][7] = "Connecticut";
myCountries[2][8] = "Delaware";
myCountries[2][9] = "District of Columbia";
myCountries[2][10] = "Florida";
myCountries[2][11] = "Georgia";
myCountries[2][12] = "Hawaii";
myCountries[2][13] = "Idaho";
myCountries[2][14] = "Illinois";
myCountries[2][15] = "Indiana";
myCountries[2][16] = "Iowa";
myCountries[2][17] = "Kansas";
myCountries[2][18] = "Kentucky";
myCountries[2][19] = "Louisiana";
myCountries[2][20] = "Maine";
myCountries[2][21] = "Maryland";
myCountries[2][22] = "Massachusetts";
myCountries[2][23] = "Michigan";
myCountries[2][24] = "Minnesota";
myCountries[2][25] = "Mississippi";
myCountries[2][26] = "Missouri";
myCountries[2][27] = "Montana";
myCountries[2][28] = "Nebraska";
myCountries[2][29] = "Nevada";
myCountries[2][30] = "New Hampshire";
myCountries[2][31] = "New Jersey";
myCountries[2][32] = "New Mexico";
myCountries[2][33] = "New York";
myCountries[2][34] = "North Carolina";
myCountries[2][35] = "North Dakota";
myCountries[2][36] = "Ohio";
myCountries[2][37] = "Oklahoma";
myCountries[2][38] = "Oregon";
myCountries[2][39] = "Pennsylvania";
myCountries[2][40] = "Rhode Island";
myCountries[2][41] = "South Carolina";
myCountries[2][42] = "South Dakota";
myCountries[2][43] = "Tennessee";
myCountries[2][44] = "Texas";
myCountries[2][45] = "Utah";
myCountries[2][46] = "Vermont";
myCountries[2][47] = "Virginia";
myCountries[2][48] = "Washington";
myCountries[2][49] = "West Virginia";
myCountries[2][50] = "Wisconsin";
myCountries[2][51] = "Wyoming";


// This function will populate the country Drop-down List.
// This function is called from the initialize event of the country Drop-down List.

function getCountries(dropdownField)
{
   dropdownField.clearItems();
   for (var i=0; i &lt; myCountries.length; i++)
      dropdownField.addItem(myCountries[i][0]);
}

// This function will populate the state/province Drop-down List for any event EXCEPT the change event. 
// This function is called by the initialize event of the state/province Drop-down List.

function getStates(countryField, dropdownField)
{                                              
   dropdownField.clearItems(); 							// Clear the items of the Drop-down List.
   for (var i=0; i &lt; myCountries.length; i++) 			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == countryField.rawValue) 	// Check to see if they match.
      {
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
	  	 }
	  }
}

// This function will populate the state/province Drop-down List for the change event. 
// This function is called by the change event of the country Drop-down List.
// The first parameter is simply a pointer to the xfa object model.

function getStatesOther(myXfa, dropdownField) 
{                                              
   dropdownField.clearItems();							// Clear the items of the Drop-down list.
   for (var i=0; i &lt; myCountries.length; i++)			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == myXfa.event.newText)		// Check to see if they match. Note: we have to use the event.newText in this case because
	  {                                            		// the change hasn't been committed yet.
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
 		 }
	  }
}
</script>
            <?templateDesigner expand 1?></variables>
         <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
         <?templateDesigner expand 0?>
      </subform>
      <subform w="100mm" name="script" layout="tb" presence="hidden">
         <bind match="none"/>
         <subform usehref=".\Fragments\CoreJavaScript.xdp#som($template.form1.core)">
            <bind/>
            <?templateDesigner expand 0?>
         </subform>
         <subform h="50mm" name="RegulatoryAddresses" w="100mm">
            <subform h="50mm" name="control" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="RegulatoryAddressHandler">
//imports
var cLog = script.core.util.Log;


var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cException = script.core.util.Exception;


//Globals
var YES="Yes";
var NO="No";
var COUNTRY_CANADA="CA";


//Handler name
var SCRIPT_OBJECT_NAME=					"RegulatoryAddressHandler";

//Action Globals
var PART1A_COUNTRY_CHANGED_ACTION=		"parta_country_changed";
var PART1B_COUNTRY_CHANGED_ACTION=		"partb_country_changed";
var PART1C_COUNTRY_CHANGED_ACTION=		"partc_country_changed";
var SAME_AS_ACTION=						"same_as_above";
var ADDRESS_NA_ACTION=					"address_na";
var REGULATORY_CONTACT_SAMEAS_ACTION=	"same_as_reg_contact";
var COMPANYNAME_SAMEAS_ACTION=			"company_name_sameas";
var COMPANYCONTACT_SAMEAS_ACTION=		"company_contact_sameas";
var IMPORTER_ADDRESS_SAMEAS_ACTION=		"importer_sameas";




//FORM NODES (FN)

//Part A Form Nodes
var PART1A_MANUFACT_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("manufactCountry");
var PART1A_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("manufactProvince");
var PART1A_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("manufactPostalCode");

//PartB FormNoes
var PART1B_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("companyProvince");
var PART1B_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("companyPostalCode");

var PART1C_NOTAPPLICABLE_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var PART1C_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("provinceRegMail");
var PART1C_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("postalCodeRegMail");

//Company nodes
var COMPANY_CONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyContactSameAsManufact");
//var COMPANY_ADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyAddressSameAsManufact");
var COMPANYADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BCompanyDetail");
var COMPANYCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BContactDetail");

//regulatory address nodes (1C)
var REG_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1CCompanyDetail");
var REGMAIL_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("countryRegMail");
var REGADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regAddressSameAsManufacturer");
//reg mailing address contact
var NOTAPPL_CHK_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var REGCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("part1CContactDetail");
var REGCONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regContactSameAs");
//Importer address nodes
var PART1D_IMPORTER_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1D");
var IMPORTER_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1DCompanyDetail");
var IMPORTER_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("importerSameRegulatory");   




_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
		case PART1A_COUNTRY_CHANGED_ACTION:
				_manufacturerCountryChanged(PART1A_PROVINCE_FN,PART1A_POSTAL_CODE_FN);					
			break;
		case PART1B_COUNTRY_CHANGED_ACTION:
				_applicantCountryChanged(PART1B_PROVINCE_FN,PART1B_POSTAL_CODE_FN);		
			break;
			
		case PART1C_COUNTRY_CHANGED_ACTION:
				_regulatoryAddressCountryChanged(PART1C_PROVINCE_FN,PART1C_POSTAL_CODE_FN);
			break;			
		case SAME_AS_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),NOTAPPL_CHK_FN);
			break;
		case ADDRESS_NA_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),REGADDRESS_SAMEAS_CHK_FN);
			break;
		case REGULATORY_CONTACT_SAMEAS_ACTION:		
				_contactStatusChanged(anEvent.getValue(),REGCONTACT_SF_FN);		
			break;
		case COMPANYNAME_SAMEAS_ACTION:
			 	_contactStatusChanged(anEvent.getValue(),COMPANYADDRESS_SF_FN);
			 break;	
			 
		case COMPANYCONTACT_SAMEAS_ACTION:
				
				_contactStatusChanged(anEvent.getValue(),COMPANYCONTACT_SF_FN);
			 break;	
			 
		case IMPORTER_ADDRESS_SAMEAS_ACTION:
		
				_contactStatusChanged(anEvent.getValue(),IMPORTER_ADDRESS_SF_FN);
			break;	 	 
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


/*
* updates the UI based on the submission type that has been selected
*
*
*
*
*/



function initialize(){
	
	cLog.trace("Starting initialize of adddress");
	//Company Address
	//_contactStatusChanged(COMPANY_ADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue, COMPANYADDRESS_SF_FN);
	//company Address contact
	//_contactStatusChanged(COMPANY_CONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue,COMPANYCONTACT_SF_FN);
	
	
	//initialize the regulatory contact
	//_contactStatusChanged(REGCONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue, REGCONTACT_SF_FN);
	
	//initialize the regulatory Mailing address, need to check for NA or same as values

	//var sameAsValue=REGADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue;
	//if( sameAsValue===YES){
		//clear out
	//	_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);	
	//}else{
	//	_contactStatusChanged(NOTAPPL_CHK_FN.getNodeInstance().rawValue,REG_ADDRESS_SF_FN);
	//}
	
}

//process the rules for importer address
function updateImporterAddressState(){

	//check Manufacturer address
	var manufact_country_node=PART1A_MANUFACT_COUNTRY_DDL_FN.getNodeInstance();
	var instManager=PART1D_IMPORTER_SF_FN.getInstanceManager();
	if(manufact_country_node.rawValue!=COUNTRY_CANADA){		
		if(instManager.count&lt;instManager.max || instManager.max&lt;0){
			cInstanceManagerUtil.addInstance(instManager);	
			cLog.trace("add an instance");
			_updateImporterSameAsState();
		}
	}else{
		
		cInstanceManagerUtil.clearInstances(instManager);		
	}
	if(instManager.count&gt;0){
		//check if the regulatory country has changed
		var regCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
			if(regCountry_node.rawValue===COUNTRY_CANADA){
			_updateImporterSameAsState();	
		}else{
			//force the form to show by forcing the status to NO
			cLog.trace("beforeContactStatusChanged");
			_contactStatusChanged(NO,IMPORTER_ADDRESS_SF_FN);	
			cLog.trace("after ContactStatusChanged")
		}
	}


}


/************ Private functions ***************************************/

function _initialize(){

	try{
	
		//cControllerUtil.checkFormNode(COMPANY_ADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_ADDRESS_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(PART1A_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1A_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1A_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1A_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(PART1A_MANUFACT_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"PART1A_MANUFACT_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PART1C_NOTAPPLICABLE_FN, SCRIPT_OBJECT_NAME ,"PART1C_NOTAPPLICABLE_FN");
		cControllerUtil.checkFormNode(PART1C_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1C_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1C_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1C_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(REG_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"REG_ADDRESS_SF_FN");	
		cControllerUtil.checkFormNode(REGADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGADDRESS_SAMEAS_CHK_FN");	
		cControllerUtil.checkFormNode(NOTAPPL_CHK_FN, SCRIPT_OBJECT_NAME ,"NOTAPPL_CHK_FN");	
		cControllerUtil.checkFormNode(REGCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANYADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYADDRESS_SF_FN");
		cControllerUtil.checkFormNode(REGCONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(COMPANYCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANY_CONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_CONTACT_SAMEAS_CHK_FN");  
		cControllerUtil.checkFormNode(IMPORTER_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_ADDRESS_SF_FN"); 
		cControllerUtil.checkFormNode(PART1D_IMPORTER_SF_FN, SCRIPT_OBJECT_NAME ,"PART1D_IMPORTER_SF_FN");
		cControllerUtil.checkFormNode(IMPORTER_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(REGMAIL_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"REGMAIL_COUNTRY_DDL_FN");
		
				
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}


/*
*	relies on core delegate for updating address and state based on County
*	@param province_formNode- the province droplist to update
*	@param postal_formNode- the postal code textbox to update
*	@returns null
*
*
*
**/
function _applicantCountryChanged(province_formNode,postal_formNode){
	// Update correct labels to province/state and postal/state code and
	// clear the value entered in the postal/state code field
	province_formNode.updateUI();
	postal_formNode.updateUI();
	postal_formNode.getNodeInstance().rawValue = null;	
	
}//end fun



function _manufacturerCountryChanged(province_formNode,postal_formNode){

	//update the province, postal code labels
	_applicantCountryChanged(province_formNode,postal_formNode);
	//todelete
	updateImporterAddressState();		
}//end fn




/*
*	updates the regulatory mailing address 
*	@param sameAs- if yes (Y) the mailing address is deleted, if No the mailing address is added
					Any other values are ignored
*
*
**/

function _regulatoryAddressStatusChanged(sameAsValue,checkbox_formNode){

	checkbox_formNode.getNodeInstance().rawValue=NO;
	_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);
	
	
}//end fn

/*
*	Updates the regulatory addres country
*
*
*/
function _regulatoryAddressCountryChanged(province_formNode,postal_formNode){


	_applicantCountryChanged(province_formNode,postal_formNode);
	_updateImporterSameAsState();
	updateImporterAddressState();
	
}

/*
* For the Importer same As 1D checkbox make it hidden if iC country is not canada
*
*
*
**/

function _updateImporterSameAsState(){

	var regMailCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
	var importerSameAs_node=IMPORTER_SAMEAS_CHK_FN.getNodeInstance();
	
	//if node does not exist do not proceed
	if(!cTypeChecker.isNode(importerSameAs_node)){
		return;
	}
	
	if(regMailCountry_node.rawValue!==COUNTRY_CANADA){
		importerSameAs_node.rawValue=NO; //reset the value
		cUiUtil.hide(importerSameAs_node);
	}else{
		cUiUtil.show(importerSameAs_node);
	}
}



/*
* Updates the passed node, if sameAsValue is yes, removes the subform, otherwise addit
*
*
*
*
**/
function _contactStatusChanged(sameAsValue,src_FormNode){

	cLog.trace("starting ContactStatusChanged "+src_FormNode.getSomExpression());
	var sfInstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(src_FormNode.getFullSomExpression());
	cLog.trace("Same as value is: "+sameAsValue);
	if(sameAsValue===YES){
		
		if(sfInstanceManager.count&gt;sfInstanceManager.min){
			cInstanceManagerUtil.clearInstances(sfInstanceManager);
		}
	}
	else if(sameAsValue===NO){
	
		cLog.trace("count: "+sfInstanceManager.count+"max: "+sfInstanceManager.max)
		if(sfInstanceManager.count&lt;sfInstanceManager.max || sfInstanceManager.max&lt;0){
			var temp=cInstanceManagerUtil.addInstance(sfInstanceManager);
			cLog.trace(temp);
		}
	}	
	//TO DO add a log message?
}//end fn

</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="nodeDefinitions" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="Addresses">
var content={

		sfAddresses: {
			somExpression: "sfAddresses",
			parentNodeKey: "sfPage1"},
		
		sfPart1A: {
			somExpression: "sfPart1A",
			parentNodeKey: "sfAddresses"},
		
		lblPart1: {
			somExpression:	"lblPart1",
			parentNodeKey:	"sfPart1A",
			labelKey:		"part1DrugInfo"},
		
		sfPart1ACompanyHeader: {
			somExpression: "sfPart1ACompanyHeader",
			parentNodeKey: "sfPart1A"},
		
		part1ASubHeading: {
			somExpression: "lblContactAddress",
			parentNodeKey: "sfPart1ACompanyHeader",
			labelKey:		"manufactMailingHeading"},
		
		sfPart1ACompanyDetail: {
			somExpression: "sfPart1ACompanyDetail",
			parentNodeKey: "sfPart1A"},
		
		companyNamePart1A: {
			somExpression:	"txtCompanyName",
			parentNodeKey:	"sfPart1ACompanyDetail",
			fieldNumber:	"11",
			labelKey:		"lbCompanyName"},
		
		manufactAddress: {
			somExpression: "txtAddress",
			parentNodeKey: "sfPart1ACompanyDetail",
			fieldNumber:	"12",
			labelKey:		"streetAddress"},
		
		manufactCity: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1ACompanyDetail",
			fieldNumber:	"13",
			labelKey:		"cityTown"},
		
		manufactCountry: {
			somExpression:	"ddlCountry",
			parentNodeKey:	"sfPart1ACompanyDetail",
			fieldNumber:	"15",
			labelKey:		"country",
			pickListKey:	"countryList"
			},
		
		manufactProvince: {
			somExpression: "ddlProvince",
			parentNodeKey: "sfPart1ACompanyDetail",
			fieldNumber:	"14",
			delegate:		"script.core.model.delegate.ProvinceStateDelegate"},
		
		manufactPostalCode: {
			somExpression: "txtPostalCode",
			parentNodeKey: "sfPart1ACompanyDetail",
			fieldNumber:	"16",
			delegate:		"script.core.model.delegate.PostalZipDelegate"},
		
		part1AContactHeader: {
			somExpression:	"sfPart1AContactHeader",
			parentNodeKey:	"sfPart1A"},
		
		manufactSponserHeading: {
			somExpression:	"lblContactPersonMS",
			parentNodeKey:	"part1AContactHeader",
			labelKey:		"manufactSponser"},
		
		sfPart1AContactDetail: {
			somExpression: "sfPart1AContactDetail",
			parentNodeKey: "sfPart1A"},
		
		contactPart1ASalutation: {
			somExpression: "ddlSalutation",
			parentNodeKey: "sfPart1AContactDetail",
			labelKey:		"salutation",
			pickListKey:	"salutationList"},
		
		givenNamePart1A: {
			somExpression:	"txtGivenName",
			parentNodeKey:	"sfPart1AContactDetail",
			labelKey:		"givenName"},
		
		initialsPart1A: {
			somExpression:	"txtInitials",
			parentNodeKey:	"sfPart1AContactDetail",
			labelKey:		"nameInitials"},
		
		surnamePart1A: {
			somExpression:	"txtSurname",
			parentNodeKey:	"sfPart1AContactDetail",
			fieldNumber:	"17",
			labelKey:		"surname"},
		
		txtTitle: {
			somExpression: "txtTitle",
			parentNodeKey: "sfPart1AContactDetail",
			fieldNumber:	"21",
			labelKey:		"title"},
		
		ddlLangPref: {
			somExpression:	"ddlLangPref",
			parentNodeKey:	"sfPart1AContactDetail",
			fieldNumber:	"20",
			labelKey:		"language",
			pickListKey:	"languageList"},
		
		telephonePart1AContact: {
			somExpression: "txtTelephone",
			parentNodeKey: "sfPart1AContactDetail",
			fieldNumber:	"18",
			labelKey:		"telephone"},
		
		extensionPart1A: {
			somExpression: "txtExtension",
			parentNodeKey: "sfPart1AContactDetail",
			labelKey:		"extension",
			toolTipKey:		"phoneExtension_tip"},
		
		faxPart1A: {
			somExpression: 	"txtFax",
			parentNodeKey: 	"sfPart1AContactDetail",
			fieldNumber:	"19",
			labelKey:		"faxNumber"},
		
		emailPart1A: {
			somExpression: "txtEmail",
			parentNodeKey: "sfPart1AContactDetail",
			fieldNumber:	"22",
			labelKey:		"email",
			delegate:		"script.core.model.delegate.EmailDelegate"},
		
		sfPart1B: {
			somExpression: "sfPart1B",
			parentNodeKey: "sfAddresses"},
		
		sfPart1BCompanyHeader: {
			somExpression: "sfPart1BCompanyHeader",
			parentNodeKey: "sfPart1B"},
		
		part1BSubHeading: {
			somExpression: "lblContactAddress",
			parentNodeKey: "sfPart1BCompanyHeader",
			labelKey:		"companyNameHeading"},
			
		companyAddressSameAsManufact: {
			somExpression: "chkSameManufacturer",
			parentNodeKey: "sfPart1BCompanyHeader",
			labelKey:		"manufactAddressSameAs"},
		
		sfPart1BCompanyDetail: {
			somExpression: "sfPart1BCompanyDetail",
			parentNodeKey: "sfPart1B"},
		
		companyNamePart1B: {
			somExpression:	"txtCompanyName",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:	"23",
			labelKey:		"lbCompanyName"},
		
		companyAddress: {
			somExpression: "txtAddress",
			parentNodeKey: "sfPart1BCompanyDetail",
			fieldNumber:	"24",
			labelKey:		"streetAddress"},
		
		companyCity: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1BCompanyDetail",
			fieldNumber:	"25",
			labelKey:		"cityTown"},
		
		companyCountry: {
			somExpression:	"ddlCountry",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:		"27",
			pickListKey:	"countryList"
			},
		
		companyProvince: {
			somExpression:	"ddlProvince",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:		"26",
			delegate:		"script.core.model.delegate.ProvinceStateDelegate"
			},
		
		companyPostalCode: {
			somExpression:	"txtPostalCode",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:		"28",
			delegate:		"script.core.model.delegate.PostalZipDelegate"},
		
		sfPart1BContactHeader: {
			somExpression: "sfPart1BContactHeader",
			parentNodeKey: "sfPart1B"},
		
		companyContactPerson: {
			somExpression:	"lblContactPersonMS",
			parentNodeKey:	"sfPart1BContactHeader",
			labelKey:		"contact1BHeading"},
		
		companyContactSameAsManufact: {
			somExpression: "chkSameManufacturer",
			parentNodeKey: "sfPart1BContactHeader",
			labelKey:		"manufactContactSameAs"},
		
		sfPart1BContactDetail: {
			somExpression: "sfPart1BContactDetail",
			parentNodeKey: "sfPart1B"},
		
		salutationPart1BContact: {
			somExpression: "ddlSalutation",
			parentNodeKey: "sfPart1BContactDetail",
			labelKey:		"salutation",
			pickListKey:	"salutationList"},
		
		givenNamePart1BContact: {
			somExpression:	"txtGivenName",
			parentNodeKey:	"sfPart1BContactDetail",
			labelKey:		"givenName"},
		
		initialsPart1BContact: {
			somExpression: "txtInitials",
			parentNodeKey: "sfPart1BContactDetail",
			labelKey:		"nameInitials"},
		
		surnamePart1BContact: {
			somExpression: "txtSurname",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"29",
			labelKey:		"surname"},
		
		titlePart1BContact: {
			somExpression: "txtTitle",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"33",
			labelKey:		"title"},
		
		langPrefPart1BContact: {
			somExpression: "ddlLangPref",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"32",
			labelKey:		"language",
			pickListKey:	"languageList"},
		
		telephonePart1BContact: {
			somExpression: "txtTelephone",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"30",
			labelKey:		"telephone"},
		
		extensionPart1B: {
			somExpression:	"txtExtension",
			parentNodeKey:	"sfPart1BContactDetail",
			labelKey:		"extension"},
		
		faxPart1BContact: {
			somExpression: "txtFax",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"31",
			labelKey:		"faxNumber"},
		
		mailPart1BContact: {
			somExpression: "txtEmail",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"34",
			labelKey:		"email"},
		
		sfPart1C: {
			somExpression: "sfPart1C",
			parentNodeKey: "sfAddresses"},
		
		sfPart1CCompanyHeader: {
			somExpression: "sfPart1CCompanyHeader",
			parentNodeKey: "sfPart1C"},
		
		part1CContactHeading: {
			somExpression: "lblContactAddress",
			parentNodeKey: "sfPart1CCompanyHeader",
			labelKey:		"regMailHeading"},
		
		regAddressSameAsManufacturer: {
			somExpression:	"chkRegAddrSameManufactr",
			parentNodeKey:	"sfPart1CCompanyHeader",
			labelKey:		"manufactAddressSameAs"},
		
		part1CNotApplicable: {
			somExpression:	"chkNotApplicable",
			parentNodeKey:	"sfPart1CCompanyHeader",
			labelKey:		"notApplicable"},
		
		sfPart1CCompanyDetail: {
			somExpression: "sfPart1CCompanyDetail",
			parentNodeKey: "sfPart1C"},
		
		companyNameRegMail: {
			somExpression:	"txtCompanyName",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:	"35",
			labelKey:		"lbCompanyName"},
		
		addressRegMail: {
			somExpression:	"txtAddress",
			parentNodeKey:	"sfPart1CCompanyDetail",
			labelKey:		"streetAddress"},
		
		cityRegMail: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1CCompanyDetail",
			fieldNumber:	"37"},
		
		countryRegMail: {
			somExpression:	"ddlCountry",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:		"39",
			pickListKey:		"countryList"
			},
		
		provinceRegMail: {
			somExpression:	"ddlProvince",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:		"38",
			delegate:		"script.core.model.delegate.ProvinceStateDelegate"
			},
		
		postalCodeRegMail: {
			somExpression:	"txtPostalCode",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:		"40",
			delegate:		"script.core.model.delegate.PostalZipDelegate"
			},
		
		//Part 1C Regulatory Contact
		sfPart1CContactHeader: {
			somExpression: "sfPart1CContactHeader",
			parentNodeKey: "sfPart1C"},
		
		contactPersonRegMail: {
			somExpression: "lblContactPersonMS",
			parentNodeKey: "sfPart1CContactHeader",
			labelKey:		"regContactHeading"},
		
		regContactSameAs: {
			somExpression: "chkRegContactSameAs",
			parentNodeKey: "sfPart1CContactHeader",
			labelKey:		"manufactContactSameAs"},
			
		part1CContactDetail: {
			somExpression: "sfPart1CContactDetail",
			parentNodeKey: "sfPart1C"},
		
		salutationRegMail: {
			somExpression: "ddlSalutation",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"salutation",
			pickListKey:	"salutationList"},
		
		givenNameRegMail: {
			somExpression: "txtGivenName",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"givenName"},
		
		initialsRegMail: {
			somExpression: "txtInitials",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"nameInitials"},
		
		surnameRegMail: {
			somExpression: "txtSurname",
			parentNodeKey: "part1CContactDetail",
			fieldNumber:	"41",
			labelKey:		"surname"},
		
		titleRegMail: {
			somExpression: "txtTitle",
			parentNodeKey: "part1CContactDetail",
			fieldNumber:	"45",
			labelKey:		"title"},
		
		langPrefRegMail: {
			somExpression: "ddlLangPref",
			parentNodeKey: "part1CContactDetail",
			fieldNumber:	"44",
			labelKey:		"language",
			pickListKey:	"languageList"},
		
		telephoneRegMail: {
			somExpression: 	"txtTelephone",
			parentNodeKey:	"part1CContactDetail",
			fieldNumber:	"42",
			labelKey:		"telephone"},
		
		extensionRegMail: {
			somExpression: "txtExtension",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"extension",
			toolTipKey:		"phoneExtension_tip"},
		
		faxRegMail: {
			somExpression:	"txtFax",
			parentNodeKey:	"part1CContactDetail",
			fieldNumber:	"43",
			labelKey:		"faxNumber"},
		
		emailRegMail: {
			somExpression:	"txtEmail",
			parentNodeKey:	"part1CContactDetail",
			fieldNumber:	"46",
			labelKey:		"email"},
		
		sfPart1D: {
			somExpression: "sfPart1D",
			parentNodeKey: "sfAddresses"},
		
		sfPart1DCompanyHeader: {
			somExpression: "sfPart1DCompanyHeader",
			parentNodeKey: "sfPart1D"},
		
		part1DSubHeading: {
			somExpression:	"lblContactAddress",
			parentNodeKey:	"sfPart1DCompanyHeader",
			labelKey:		"importerHeading"},
		
		importerSameRegulatory: {
			somExpression: "chkSameRegulatory",
			parentNodeKey: "sfPart1DCompanyHeader",
			labelKey:		"regMailSameAs"},
		
		sfPart1DCompanyDetail: {
			somExpression:	"sfPart1DCompanyDetail",
			parentNodeKey:	"sfPart1D"},
		
		companyNameImporter: {
			somExpression: "txtCompanyName",
			parentNodeKey: "sfPart1DCompanyDetail",
			fieldNumber:	"47",
			labelKey:		"lbCompanyName"},
		
		addressImporter: {
			somExpression: "txtAddress",
			parentNodeKey: "sfPart1DCompanyDetail",
			fieldNumber:	"48",
			labelKey:		"streetAddress"},
		
		cityImporter: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1DCompanyDetail",
			fieldNumber:	"49",
			labelKey:		"cityTown"},
		
		countryImporter: {
			somExpression:	"txtCountry",
			parentNodeKey:	"sfPart1DCompanyDetail",
			fieldNumber:	"51",
			labelKey:		"country"},
		
		provinceImporter: {
			somExpression: "ddlProvince",
			parentNodeKey: "sfPart1DCompanyDetail",
			labelKey:		"province",
			pickListKey:	"provinceList"},
		
		postalCodeImporter: {
			somExpression: "txtPostalCode",
			parentNodeKey: "sfPart1DCompanyDetail",
			labelKey:		"postalCode"}

}//end var content
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="addressLabels_en">
var content={


	
	part1DrugInfo:			"Part 1 - Manufacturer/Sponsor and Drug Product Information",
	manufactMailingHeading:	"A)  MANUFACTURER/SPONSOR MAILING ADDRESS",
	manufactSponser:		"MANUFACTURER/SPONSOR CONTACT",
	regMailHeading:			"C) REGULATORY MAILING ADDRESS",
	companyNameHeading:		"B)  COMPANY NAME &amp; ADDRESS  (For THIS Drug Submission)",
	importerHeading:		"D)  CANADIAN IMPORTER MAILING ADDRESS",
	manufactAddressSameAs:	"Same as A Above (i.e. Manufacturer/Sponsor Mailing Address)",
	manufactContactSameAs:	"Same as A Above (i.e. Manufacturer/Sponsor Contact)",
	regMailSameAs:			"Same as C Above (i.e. Regulatory Mailing Address)",
	contact1BHeading:		"Contact (for THIS Drug Submission)",
	regContactHeading:		"Regulatory Contact",
	notApplicable:			"Not Applicable",
	lbCompanyName:			"Company Name",	
	streetAddress:			"Street/Suite/PO Box",
	cityTown:				"City - Town",
	country:				"Country",
	salutation:				"Salutation",
	givenName:				"Given Name",
	nameInitials:			"Intials",
	surname:				"Surname",
	title:					"Title",
	language:				"Language",
	telephone:				"Telephone No.",
	extension:				"Ext.",
	faxNumber:				"Fax No.",
	email:					"Email",
	title:					"Title",
	
	//add comma if adding more

}

</script>
                  <script contentType="application/x-javascript" name="addressLabels_fr">
var content={


	
	part1DrugInfo:			"fr_Part 1 - Manufacturer/Sponsor and Drug Product Information",
	manufactMailingHeading:	"fr_A)  MANUFACTURER/SPONSOR MAILING ADDRESS",
	manufactSponser:		"fr_MANUFACTURER/SPONSOR CONTACT",
	regMailHeading:			"fr_C) REGULATORY MAILING ADDRESS",
	companyNameHeading:		"fr_B)  COMPANY NAME &amp; ADDRESS  (For THIS Drug Submission)",
	importerHeading:		"fr_D)  CANADIAN IMPORTER MAILING ADDRESS",
	manufactAddressSameAs:	"fr_Same as A Above (i.e. Manufacturer/Sponsor Mailing Address)",
	manufactContactSameAs:	"fr_Same as A Above (i.e. Manufacturer/Sponsor Contact)",
	regMailSameAs:			"fr_Same as C Above (i.e. Regulatory Mailing Address)",
	contact1BHeading:		"fr_Contact (for THIS Drug Submission)",
	regContactHeading:		"fr_Regulatory Contact",
	notApplicable:			"fr_Not Applicable",
	lbCompanyName:			"fr_Nom du fabricant/promoteur ",	
	streetAddress:			"fr_Street/Suite/PO Box",
	cityTown:				"fr_City - Town",
	country:				"fr_Country",
	salutation:				"fr_Salutation",
	givenName:				"fr_Given Name",
	nameInitials:			"fr_Intials",
	surname:				"fr_Surname",
	title:					"fr_Title",
	language:				"fr_Language",
	telephone:				"fr_Telephone No.",
	extension:				"fr_Ext.",
	faxNumber:				"fr_Fax No.",
	email:					"fr_Email",
	title:					"fr_Title",
	
	//add comma if adding more

}
</script>
                  <script contentType="application/x-javascript" name="addressTooltips_en">
var content={


	phoneExtension_tip:		"Provide the telephone extension number, if it exists",



}

</script>
                  <script contentType="application/x-javascript" name="addressTooltips_fr">var content={


	phoneExtension_tip:		"fr_Provide the telephone extension number, if it exists",



}

</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?></subform>
         <subform h="50mm" name="DrugAppl" w="100mm">
            <subform layout="tb" name="config" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="general">
var cLog = script.core.util.Log;


var content = { 

formType: "DrugAppl",
formVersion: "1.1",

//Overrides
//NodeValidator_formatValidator: "",
accessErrorIndicator: "+",
Log_logLevel: cLog.LEVEL_WARN,
Log_showExceptionDetail: true,
Log_writeToFile: false,


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform layout="tb" name="control" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="FormHandler">/** Global Variables / Classes **/

//Imports
// These are all classes within core.
var cFormNodeManager         = script.core.model.FormNodeManager;
var cResourceManager         = script.core.lang.ResourceManager;
var cDrugApplModel           = script.DrugAppl.model.DrugApplMain;
var cAddressHandler          = script.RegulatoryAddresses.control.RegulatoryAddressHandler;
var cDrugFormulationHandler  = script.DrugAppl.control.part2.DrugFormulationHandler;
var cFailureReporter         = script.core.validation.FailureReporter;
var cInstructHandler         = script.DrugAppl.control.InstructionsHandler;
var cMethodOfPaymentHandler  = script.DrugAppl.control.MethodOfPaymentHandler;
var cDrugNotificationHandler = script.DrugAppl.control.part1.DrugNotificationHandler;
var cPart2GeneralHandler     = script.DrugAppl.control.part2.GeneralHandler;
var cLog                     = script.core.util.Log;
var cException               = script.core.util.Exception;
var cAccessibility           = script.DrugAppl.util.Accessibility;

//var PAGE1_SF_FN = DrugAppl.sfPage1;

//action Global
var LANGUAGE_CHANGE = "language_change";
var LOCK_FORM       = "lock_form";
var UNLOCK_FORM     = "unlock_form";

var YES="Y";
var NO="N";
var SCRIPT_OBJECT_NAME="FormHandler";

//event names:
var NEW_REGISTRATION_CHANGE = "newRegistrationChange";
var BIANNUAL_UPDATE_CHANGE  = "biannualUpdateChange";
var NUMBER_LETTERS_CHANGE   = "numberLettersChange";

//For Part 3 Method of Payment
var BANK_WIRE_CHANGE = "bankWireChange";

//formNodes:
var DMF_REG_CALC_FORM_NODE     = cFormNodeManager.getFormNodeForKey("txtDMFRegCalc");
var DMF_UPDATE_CALC_FORM_NODE  = cFormNodeManager.getFormNodeForKey("txtDMFUpdateCalc");
var DMF_NUM_LET_CALC_FORM_NODE = cFormNodeManager.getFormNodeForKey("txtDMFNumLetCalc");

var DMF_PAYMENT_ENCLOSED_CALC_FORM_NODE = cFormNodeManager.getFormNodeForKey("txtDMFUndersign");

//var FINALIZED_FORM_NODE = cFormNodeManager.getFormNodeForKey("chkIsFinalized");

/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case LANGUAGE_CHANGE:
			
			cDrugApplModel.setLanguage(anEvent.getSource().rawValue);
			_updateFormLanguage();
			break;

		case LOCK_FORM:		//validates and finalizes form if passes validation
				_finalizeForm();
			break;
		
		case UNLOCK_FORM:	//unlocks form for edit
				_makeFormEditable();
			break;				

		case NEW_REGISTRATION_CHANGE:
		
			_newRegistrationChange(anEvent.getSource(), anEvent.getValue());
			break;

		case BANK_WIRE_CHANGE:
			_bankWireChange(anEvent.getSource(), anEvent.getValue());
			break;
			
		case BIANNUAL_UPDATE_CHANGE:
			_biannualUpdateChange(anEvent.getSource(), anEvent.getValue());
			break;
			
		case NUMBER_LETTERS_CHANGE:
			_numberLettersChange(anEvent.getSource(), anEvent.getValue());
			break;
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}



/*
* Initializes the form to it's default state
*
*
*
*/
function initialize(){
	
	
	cInstructHandler.initialize();
	cAddressHandler.initialize();
	cDrugFormulationHandler.initialize();
	cDrugNotificationHandler.initialize();
	//cPart2GeneralHandler.initialize();
	cMethodOfPaymentHandler.initialize();
	_updateFormLanguage();
		
}







/********* Private functions *****/
function _updateFormLanguage()
{
	cResourceManager.setCurrentLanguage(cDrugApplModel.getLanguage());
	cFormNodeManager.getBaseNode().updateUI();
}

function _newRegistrationChange(newRegistrationNode, numberNewRegistration)
{
	//cLog.info("@@@ txtDMFRegCalc = " + DMF_REG_CALC_FORM_NODE);
	//cLog.info("@@@ newRegSom: " + newRegistrationNode.parent.somExpression);
	
	var dmfCalcNode = DMF_REG_CALC_FORM_NODE.getNodeInstance();
	dmfCalcNode.rawValue = numberNewRegistration * 424; //create variable for 400 for future maintainace.	//cLog.info("@@@ dmfCalcNode!" + dmfCalcNode);
	_totalFeesChange();
}

function _biannualUpdateChange(newRegistrationNode, numberNewRegistration)
{

	//cLog.info("@@@ DMF_UPDATE_CALC_FORM_NODE = " + DMF_UPDATE_CALC_FORM_NODE);
	//cLog.info("@@@ newSom: " + newRegistrationNode.parent.somExpression);

	var dmfCalcNode = DMF_UPDATE_CALC_FORM_NODE.getNodeInstance();
	dmfCalcNode.rawValue = numberNewRegistration * 191; //create variable for 180 for future maintainace.
	//cLog.info("@@@ dmfCalcNode!" + dmfCalcNode);
	_totalFeesChange();
}
function _numberLettersChange(newRegistrationNode, numberNewRegistration)
{

	//cLog.info("@@@ DMF_NUM_LET_CALC_FORM_NODE = " + DMF_NUM_LET_CALC_FORM_NODE);
	//cLog.info("@@@ newSom: " + newRegistrationNode.parent.somExpression);

	var dmfCalcNode = DMF_NUM_LET_CALC_FORM_NODE.getNodeInstance();
	dmfCalcNode.rawValue = numberNewRegistration * 191; //create variable for 180 for future maintainace.
	//cLog.info("@@@ dmfCalcNode!" + dmfCalcNode);
	_totalFeesChange();
}

function _totalFeesChange()
{
	var DMF_TOTAL_FEE_FORM_NODE=cFormNodeManager.getFormNodeForKey("txtDMFTotalFees");

	var dmfNumLettersNode     = DMF_NUM_LET_CALC_FORM_NODE.getNodeInstance();
	var dmfBiannualUpdateNode = DMF_UPDATE_CALC_FORM_NODE.getNodeInstance();
	var dmfNewRegNode         = DMF_REG_CALC_FORM_NODE.getNodeInstance();
	var dmfTotalFee           = DMF_TOTAL_FEE_FORM_NODE.getNodeInstance();
	var dmfPaymentEnclosed    = DMF_PAYMENT_ENCLOSED_CALC_FORM_NODE.getNodeInstance();

	dmfTotalFee.rawValue  = dmfNumLettersNode.rawValue + dmfBiannualUpdateNode.rawValue + dmfNewRegNode.rawValue;
	//Part 4 Derived from [TOTAL FEE] as per FFV
	dmfPaymentEnclosed.rawValue = dmfNumLettersNode.rawValue + dmfBiannualUpdateNode.rawValue + dmfNewRegNode.rawValue;    
}

/*
* Manages finalizing the form (locking). If no validation errors, sets form to readonly 
* If there are errors, they are highlighted in the form
*
*@returns -null
*/
function _finalizeForm(){

	var baseNode=cFormNodeManager.getBaseNode();
	var validationFailures=baseNode.validateNode(null,true);
	 cAccessibility.updateColorErrorsForAccessibility(xfa.form.DrugAppl.sfPage1);
	if(validationFailures===null){
		 _lockForm();
		//xfa.host.messageBox(cResourceManager.get("finalizeSuccess"),"",3); 
	}else{
	
		xfa.host.messageBox(cFailureReporter.getFailureSummary(validationFailures)); 
	
	}	

}


/*
* Makes the form editable and informs the user that it has been unlocked
* 
*
*@returns -null
*/
function _makeFormEditable(){
	 _unlockForm();	
	 //xfa.host.messageBox(cResourceManager.get("unlockSuccess"),"",3);
}


/*
* Manages unlocking the form, without deleting any sections 
* Specifically used for preprint, so the printed copy is not all greyed
* Useful if the information is to be faxed.
* @returns -null
*/

function _unlockAllForPrint(){

	if(cDrugApplModel.isFinalized()){
		var baseNode=cFormNodeManager.getBaseNode();
		baseNode.unLock();
	}

}

function _lockForm(){
		
		//var instanceManager=HCONLY_SF_FORM_NODE.getInstanceManager();
		var FINALIZED_FORM_NODE = cFormNodeManager.getFormNodeForKey("chkIsFinalized");
		FINALIZED_FORM_NODE.getNodeInstance().rawValue=YES;
		
		var baseNode=cFormNodeManager.getBaseNode();
		baseNode.lock();
		

		//cInstructHandler.toggleInstructionsVisiblity(cInstructHandler.HIDE_INSTRUCTIONS);
			
		//cFormUtil.addSubformInstance(instanceManager);		
		//HCONLY_SF_FORM_NODE.unLock();  //unlock HC only fields, needed when reopening the form
		var MODIFY_BTN_FN = cFormNodeManager.getFormNodeForKey("btnModify");
		MODIFY_BTN_FN.unLock(); //unlock modify button

}

/*
* Manages unlocking the form, making editable. 
* Manages restoring the state of the readonly fields
*
*@returns -null
*/
function _unlockForm(){

	if(cDrugApplModel.isFinalized()){
		var baseNode=cFormNodeManager.getBaseNode();
		baseNode.unLock();
		//remove HC only subform
		//var instanceManager=HCONLY_SF_FORM_NODE.getInstanceManager();
		//cFormUtil.clearInstances(instanceManager);

		var FINALIZED_FORM_NODE = cFormNodeManager.getFormNodeForKey("chkIsFinalized");
		FINALIZED_FORM_NODE.getNodeInstance().rawValue=NO;
		
		//need to make readonly fields read only again
		//cAppendix4Handler.updateAllAppendix4Instances();
		 //cRelatedSubmissionsHandler.restoreReadOnlyFields();
		 //cDrugFormulationHandler.restoreReadOnlyFields();
		 //cAppendix1Handler.restoreReadOnlyFields(); 
	 }
}
</script>
                  <script contentType="application/x-javascript" name="InstructionsHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cException = script.core.util.Exception;


var SCRIPT_OBJECT_NAME="InstructionsHandler";


//action Global variables
var HIDE_INSTRUCTIONS="instruct_hide";
var SHOW_INSTRUCTIONS="instruct_show";


//FORM NODES

//var INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent");

_initialize();



/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SHOW_INSTRUCTIONS:
		case HIDE_INSTRUCTIONS:	
				
			//toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;
					
		default:
			throw cException.createInstance("InstructionsHandler"
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/*
* Called during form initialization. By Default instructions are hidden
*
*
*
*/
function initialize(){
	//always hide instructions on open
	//toggleInstructionsVisiblity(HIDE_INSTRUCTIONS);

}



/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	//instructionsContainerNode=INSTRUCTIONS_SF_FN.getNodeInstance();
	
	cLog.trace("I am going to " + command + " this instructions ");
	if(command===HIDE_INSTRUCTIONS){
		cUiUtil.hide(instructionsContainerNode);
		
	}else if(command===SHOW_INSTRUCTIONS){
		cUiUtil.show(instructionsContainerNode);
		
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

/***Private functionality ***/
function _initialize(){

	try{
	
		//cControllerUtil.checkFormNode(INSTRUCTIONS_SF_FN, SCRIPT_OBJECT_NAME ,"INSTRUCTIONS_SF_FN");
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                  <script contentType="application/x-javascript" name="SubmissionTypeHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cException = script.core.util.Exception;

//Handlers
var cRegulatoryAddressHandler=script.DrugAppl.control.part1.RegulatoryAddressHandler;
var cPart2GeneralHandler= script.DrugAppl.control.part2.GeneralHandler; 
var cAppendix3Handler=script.DrugAppl.control.appendix3.Appendix3Handler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cDrugNotificationHandler=script.DrugAppl.control.part1.DrugNotificationHandler;

var SCRIPT_OBJECT_NAME="SubmissionTypeHandler";


//action Global variables

var SUBMISSION_TYPE_ACTION="sub_type_selection";

//submission Type Global Variables
var CTA_TYPE="CTA";
var CTAA_TYPE="CTAA";
var NDS_TYPE="NDS";
var SNDS_TYPE="SNDS";
var ANDS_TYPE="ANDS";
var SANDS_TYPE="SANDS";
var NC_TYPE="NC";
var DIN_TYPE="DIN";
var PDC_TYPE="PDC";
var ADMIN_TYPE="ADMIN";
var VIND_TYPE="VIND";
var VINDAM_TYPE="VINDAM";
var VNDS_TYPE="VNDS";
var VSNDS_TYPE="VSNDS";
var VANDS_TYPE="VANDS";
var VSANDS_TYPE="VSANDS";
var VNC_TYPE="VNC";
var VDIN_TYPE="VDIN";
var VPDC_TYPE="VPDC";


//FORM NODES (FN)






/*
* actionPerformed- central event handler for the Header functionality in the form (Pre Part 1)
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SUBMISSION_TYPE_ACTION:
				updateSubmissionType(anEvent.getValue());
		break;	
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}




function updateSubmissionType(subTypeID){

	 
	 cApplicationModel.setSubType(subTypeID);
	 cRegulatoryAddressHandler.updateSubmissionType();
	 cPart2GeneralHandler.updateSubmissionType();
	 cAppendix3Handler.updateSubmissionType();
	 cDrugNotificationHandler.updateSubmissionType();
	
}//end function

/**
Rules
-----------------------------------------------------------------------
if CTA or CTAA or VIND or VINDAM

Visible:
	sPart1CCompanyHeader.chkNotApplicable
	sPart2Body.sCountriesManufacture.chkManufSponsor

hidden:
	sPart2Body.sCountriesManufacture.sCountries

else

hidden:
	sPart1C.sPart1CCompanyHeader.chkNotApplicable
	sPart2.sPart2Body.sCountriesManufacture.chkManufSponsor
	
 Dec 2 Done!!	

-----------------------------------------------------------------------
Q70 is only visible when the following is true

if (SNDS or SANDS or VSNDS or VSANDS) or DIN and sDrugProduct.sOptions.chkBiologic == "1" ///

visible:
	sPart2.sPart2Body.sRationale

else hidden
	sPart2.sPart2Body.sRationale

------------------------------------------------------------------------------------------
 Q71 visibility

if NC or VNC

visbile:
	sPart2.sPart2Body.sTypeOfNC

else hidden:
	sPart2.sPart2Body.sTypeOfNC

--------------------------------------------------------------------------------------------------------
// Q72 and Q73 only visible for vet submissions
if VIND or VINDAM or VNDS or VANDS or VSANDS or VNC or VDIN or VPDC

Visible
sPart2.sPart2Body.sSpeciesSubtype
sPart2.sPart2Body.ddlFoodProducing

else hidden
sPart2.sPart2Body.sSpeciesSubtype
sPart2.sPart2Body.ddlFoodProducing


-----------------------------------------------------------------------------------------------------------------
 Appendix 1 is only visible when CTA or CTA-A

if (CTAA or CTAA) AND sPart1A.sPart1ACompanyDetail.ddlCountry.rawValue == "2"

Visbile: Appendix 1

else Appendix 1 hidden

-------------------------------------------------------------
Appendix 3

if (CTAA or CTAA)

Appendix 3 visible

else
appendix3 hidden

**/

/*
*	updates the UI states for clinical trials 
*	@param isClinicalTrial- a boolean, true if setting to clinical trial state	
*
*
**/
/*function clinicalTrialUIUpdate(isClinicalTrial){


		
				
	if(isClinicalTrial){
		cUiUtil.show(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		//cUiUtil.show(PART2_MANUFACT_SPONSER_FN.getNodeInstance());
		cUiUtil.hide(MANUFACT_COUNTRIES_SF_FN.getInstance());
		xfa.host.resetData(MANUFACT_COUNTRIES_SF_FN.getFullSomExpression());
	}else{
		
		cUiUtil.hide(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		//cUiUtil.hide(PART2_MANUFACT_SPONSER_FN.getNodeInstance());
		cUiUtil.show(MANUFACT_COUNTRIES_SF_FN.getInstance());
		//could just null it
		xfa.host.resetData(PART1C_NOTAPPLICABLE_FN.getFullSomExpression());
		//xfa.host.resetData(PART2_MANUFACT_SPONSER_FN.getFullSomExpression());
	}
		
}*/
/*
* Updates the UI for vet specific submission Q72,73 only visible for these submissions
*
*
*
*
*/



/***PRIVATE**/

</script>
                  <script contentType="application/x-javascript" name="MethodOfPaymentHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cException = script.core.util.Exception;


var SCRIPT_OBJECT_NAME="MethodOfPaymentHandler";


//action Global variables
var HIDE_BANK_WIRE_SF="hide_bank_wire";
var SHOW_BANK_WIRE_SF="show_bank_wire";

var SHOW_CHEQUE_SF="show_cheque";
var HIDE_CHEQUE_SF="hide_cheque";

var SHOW_BANKDRAFT_SF="show_bankdraft";
var HIDE_BANKDRAFT_SF="hide_bankdraft";

var SHOW_CREDITCARD_SF="show_creditcard";
var HIDE_CREDITCARD_SF="hide_creditcard";

var SHOW_EXCREDIT_SF="show_excredit";
var HIDE_EXCREDIT_SF="hide_excredit";

//FORM NODES

var BANK_WIRE_SF_FN=cFormNodeManager.getFormNodeForKey("sfBankWire");
var CHEQUE_SF_FN=cFormNodeManager.getFormNodeForKey("sfCheque");
var BANK_DRAFT_SF_FN=cFormNodeManager.getFormNodeForKey("sfBankDraft");
var CREDITCARD_SF_FN=cFormNodeManager.getFormNodeForKey("sfCreditCard");
var EXCREDIT_SF_FN=cFormNodeManager.getFormNodeForKey("sfExistingCredit");



_initialize();


/* Action Handler
*
*
*
*/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case HIDE_BANK_WIRE_SF:
		case SHOW_BANK_WIRE_SF:
				
			toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;
					
		case SHOW_CHEQUE_SF:
		case HIDE_CHEQUE_SF:
				
			toggleChequeVisiblity(anEvent.getActionCommand());
			break;

		case SHOW_BANKDRAFT_SF:
		case HIDE_BANKDRAFT_SF:
				
			toggleBankDraftVisiblity(anEvent.getActionCommand());
			break;
	
		case SHOW_CREDITCARD_SF:
		case HIDE_CREDITCARD_SF:
				
			toggleCreditCardVisiblity(anEvent.getActionCommand());
			break;

		case SHOW_EXCREDIT_SF:
		case HIDE_EXCREDIT_SF:
				
			toggleExCreditVisiblity(anEvent.getActionCommand());
			break;					
		default:
			throw cException.createInstance("InstructionsHandler"
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/*
* Called during form initialization. By Default instructions are hidden
*
*
*
*/
function initialize(){
	//always hide instructions on open
	//toggleInstructionsVisiblity(HIDE_BANK_WIRE_SF);
	//toggleChequeVisiblity(HIDE_CHEQUE_SF);
	//toggleBankDraftVisiblity(HIDE_BANKDRAFT_SF);
	//toggleCreditCardVisiblity(HIDE_CREDITCARD_SF);
	//toggleExCreditVisiblity(HIDE_EXCREDIT_SF);
}




/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=BANK_WIRE_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_BANK_WIRE_SF){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_BANK_WIRE_SF){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity


/**
*	Toggles if the Cheque are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleChequeVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=CHEQUE_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_CHEQUE_SF){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_CHEQUE_SF){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

/**
*	Toggles if the bank draft subform is visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleBankDraftVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=BANK_DRAFT_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_BANKDRAFT_SF){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_BANKDRAFT_SF){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleBankDraftVisiblity


/**
*	Toggles if the bank draft subform is visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleCreditCardVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=CREDITCARD_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_CREDITCARD_SF){
		cUiUtil.hide(instructionsContainerNode);
		sfPage1.sfPart3.sfCreditCard.txtCompanyName.rawValue = "";
		sfPage1.sfPart3.sfCreditCard.txtDMFNameCC.rawValue = "";
	}else if(command===SHOW_CREDITCARD_SF){
		cUiUtil.show(instructionsContainerNode);
		sfPage1.sfPart3.sfCreditCard.txtCompanyName.rawValue = sfPage1.sfPart1.txtCompanyName.rawValue;
		sfPage1.sfPart3.sfCreditCard.txtDMFNameCC.rawValue = sfPage1.sfPart1.txtDMFName.rawValue;

	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleExCreditVisiblity

/**
*	Toggles if the bank draft subform is visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleExCreditVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=EXCREDIT_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_EXCREDIT_SF){
		cUiUtil.hide(instructionsContainerNode);
		sfPage1.sfPart3.sfExistingCredit.txtDMFCompanyName.rawValue = "";
		sfPage1.sfPart3.sfExistingCredit.txtECAccountNumber.rawValue  = "";
	}else if(command===SHOW_EXCREDIT_SF){
		cUiUtil.show(instructionsContainerNode);
		sfPage1.sfPart3.sfExistingCredit.txtDMFCompanyName.rawValue = sfPage1.sfPart1.txtCompanyName.rawValue;
		sfPage1.sfPart3.sfExistingCredit.txtECAccountNumber.rawValue  = sfPage1.sfPart1.txtAccountNumber.rawValue;
		
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleExCreditVisiblity
/***Private functionality ***/
function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(BANK_WIRE_SF_FN, SCRIPT_OBJECT_NAME ,"BANK_WIRE_SF_FN");
		cControllerUtil.checkFormNode(CHEQUE_SF_FN, SCRIPT_OBJECT_NAME ,"CHEQUE_SF_FN");
		cControllerUtil.checkFormNode(BANK_DRAFT_SF_FN, SCRIPT_OBJECT_NAME ,"BANK_DRAFT_SF_FN");
		cControllerUtil.checkFormNode(CREDITCARD_SF_FN, SCRIPT_OBJECT_NAME ,"CREDITCARD_SF_FN");
		cControllerUtil.checkFormNode(EXCREDIT_SF_FN, SCRIPT_OBJECT_NAME ,"EXCREDIT_SF_FN");
		}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}

</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <subform layout="tb" name="part1" w="100mm">
                  <keep intact="contentArea"/>
                  <variables>
                     <script contentType="application/x-javascript" name="DrugNotificationHandler">//imports
var cLog = script.core.util.Log;
var cAppendix2Handler=script.DrugAppl.control.appendix2.Appendix2Handler;
var cException = script.core.util.Exception;
var cFormNodeManager = script.core.model.FormNodeManager;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cUiUtil=script.core.util.UiUtil;
var cControllerUtil = script.core.util.ControllerUtil;


var SCRIPT_OBJECT_NAME="DrugNotificationHandler";


var THIRD_PARTY_ACTION="1e_third_party";


var ADDRESS_TO_SEND_SF_FN= cFormNodeManager.getFormNodeForKey("sfPart1E");



 _initialize();


function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case  THIRD_PARTY_ACTION:
				_thirdPartyChanged(anEvent.getValue());		
			break;
			
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


function initialize(){

	//Barry updateSubmissionType();


}



function updateSubmissionType(){
	var subType=cApplicationModel.getSubType();
	switch(subType){
	
		case cSubmissionTypeHandler.NC_TYPE:
		case cSubmissionTypeHandler.VNC_TYPE:
			cUiUtil.show(ADDRESS_TO_SEND_SF_FN.getNodeInstance());	
			break;
		default:
			cUiUtil.hide(ADDRESS_TO_SEND_SF_FN.getNodeInstance());
		
	}//swtich

}//updateSubmissionType


/******* Private functions ****/


function _initialize(){

	try{
		cControllerUtil.checkFormNode(ADDRESS_TO_SEND_SF_FN, SCRIPT_OBJECT_NAME ,"ADDRESS_TO_SEND_SF_FN");			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}





//simple wrapper to appendix 2 code
function _thirdPartyChanged(thirdPartyValue){

		
		cAppendix2Handler.updateAppendix2State(thirdPartyValue);
		
		
}//end fn
</script>
                     <script contentType="application/x-javascript" name="RegulatoryAddressHandler">
//imports
var cLog = script.core.util.Log;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cException = script.core.util.Exception;
var cFormUtil=script.DrugAppl.util.General;

var cApplicationModel=script.DrugAppl.model.DrugApplMain;

//Globals
var YES="Yes";
var NO="No";
var COUNTRY_CANADA="CA";


//Handler name
var SCRIPT_OBJECT_NAME="RegulatoryAddressHandler";

//Action Globals
var PART1A_COUNTRY_CHANGED_ACTION="parta_country_changed";
var PART1B_COUNTRY_CHANGED_ACTION="partb_country_changed";
var PART1C_COUNTRY_CHANGED_ACTION="partc_country_changed";
var SAME_AS_ACTION="same_as_above";
var ADDRESS_NA_ACTION="address_na";
var REGULATORY_CONTACT_SAMEAS_ACTION="same_as_reg_contact";
var COMPANYNAME_SAMEAS_ACTION="company_name_sameas";
var COMPANYCONTACT_SAMEAS_ACTION="company_contact_sameas";
var IMPORTER_ADDRESS_SAMEAS_ACTION="importer_sameas";




//FORM NODES (FN)

//Part A Form Nodes
var PART1A_MANUFACT_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("manufactCountry");
var PART1A_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("manufactProvince");
var PART1A_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("manufactPostalCode");

//PartB FormNoes
var PART1B_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("companyProvince");
var PART1B_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("companyPostalCode");

var PART1C_NOTAPPLICABLE_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var PART1C_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("provinceRegMail");
var PART1C_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("postalCodeRegMail");

//Company nodes
var COMPANY_CONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyContactSameAsManufact");
//var COMPANY_ADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyAddressSameAsManufact");
var COMPANYADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BCompanyDetail");
var COMPANYCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BContactDetail");

//regulatory address nodes (1C)
var REG_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1CCompanyDetail");
var REGMAIL_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("countryRegMail");
var REGADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regAddressSameAsManufacturer");
//reg mailing address contact
var NOTAPPL_CHK_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var REGCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("part1CContactDetail");
var REGCONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regContactSameAs");
//Importer address nodes
var PART1D_IMPORTER_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1D");
var IMPORTER_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1DCompanyDetail");
var IMPORTER_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("importerSameRegulatory");   




_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
		case PART1A_COUNTRY_CHANGED_ACTION:
				_manufacturerCountryChanged(PART1A_PROVINCE_FN,PART1A_POSTAL_CODE_FN);					
			break;
		case PART1B_COUNTRY_CHANGED_ACTION:
				_applicantCountryChanged(PART1B_PROVINCE_FN,PART1B_POSTAL_CODE_FN);		
			break;
			
		case PART1C_COUNTRY_CHANGED_ACTION:
				_regulatoryAddressCountryChanged(PART1C_PROVINCE_FN,PART1C_POSTAL_CODE_FN);
			break;			
		case SAME_AS_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),NOTAPPL_CHK_FN);
			break;
		case ADDRESS_NA_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),REGADDRESS_SAMEAS_CHK_FN);
			break;
		case REGULATORY_CONTACT_SAMEAS_ACTION:		
				_contactStatusChanged(anEvent.getValue(),REGCONTACT_SF_FN);		
			break;
		case COMPANYNAME_SAMEAS_ACTION:
			 	_contactStatusChanged(anEvent.getValue(),COMPANYADDRESS_SF_FN);
			 break;	
			 
		case COMPANYCONTACT_SAMEAS_ACTION:
				
				_contactStatusChanged(anEvent.getValue(),COMPANYCONTACT_SF_FN);
			 break;	
			 
		case IMPORTER_ADDRESS_SAMEAS_ACTION:
		
				_contactStatusChanged(anEvent.getValue(),IMPORTER_ADDRESS_SF_FN);
			break;	 	 
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


/*
* updates the UI based on the submission type that has been selected
*
*
*
*
*/

function updateSubmissionType(){
	var subType=cApplicationModel.getSubType();
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
			cUiUtil.show(PART1C_NOTAPPLICABLE_FN.getNodeInstance());	
			break;
		default:
			cUiUtil.hide(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		
	}//swtich

}//updateSubmissionType






/************ Private functions ***************************************/

function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(PART1A_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1A_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1A_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1A_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(PART1A_MANUFACT_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"PART1A_MANUFACT_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PART1C_NOTAPPLICABLE_FN, SCRIPT_OBJECT_NAME ,"PART1C_NOTAPPLICABLE_FN");
		cControllerUtil.checkFormNode(PART1C_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1C_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1C_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1C_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(REG_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"REG_ADDRESS_SF_FN");	
		cControllerUtil.checkFormNode(REGADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGADDRESS_SAMEAS_CHK_FN");	
		cControllerUtil.checkFormNode(NOTAPPL_CHK_FN, SCRIPT_OBJECT_NAME ,"NOTAPPL_CHK_FN");	
		cControllerUtil.checkFormNode(REGCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANYADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYADDRESS_SF_FN");
		cControllerUtil.checkFormNode(REGCONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(COMPANYCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANY_CONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_CONTACT_SAMEAS_CHK_FN");  
		cControllerUtil.checkFormNode(IMPORTER_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_ADDRESS_SF_FN"); 
		cControllerUtil.checkFormNode(PART1D_IMPORTER_SF_FN, SCRIPT_OBJECT_NAME ,"PART1D_IMPORTER_SF_FN");
		cControllerUtil.checkFormNode(IMPORTER_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(REGMAIL_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"REGMAIL_COUNTRY_DDL_FN");
		
					
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}








</script>
                     <script contentType="application/x-javascript" name="RelatedSubmissionsHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cStringUtil=script.core.util.StringUtil;
var cException = script.core.util.Exception;

var SCRIPT_OBJECT_NAME="RelatedSubmissionsHandler";


//action globals

var ADD_RELATED_SUBMISSION_ACTION=		"add_related_Sub";
var REMOVE_RELATED_SUBMISSION_ACTION=	"remove_related_Sub";
var ADD_DIN_ACTION=						"add_din";
var REMOVE_DIN_ACTION=					"remove_din";


//form nodes (FN)
RELATED_SUBMISSION_SF_FN=	cFormNodeManager.getFormNodeForKey("relatedSubmissionsBody");
DIN_SF_FN=					cFormNodeManager.getFormNodeForKey("sfDIN");


_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_RELATED_SUBMISSION_ACTION:
				_addRelatedSubmission();		
			break;
			
		case REMOVE_RELATED_SUBMISSION_ACTION:
			_removeRelatedSubmission(anEvent.getValue());		
			break;	
			
		case	 ADD_DIN_ACTION:
			_addDIN();
		break;
		case REMOVE_DIN_ACTION:
			_removeDIN(anEvent.getValue());			
		break;
				 						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn





/****** PRIVATE FUNCTIONS *****/



/*
*  adds the related submission subform
*
**/

function _addRelatedSubmission(){
				
	var instManager=RELATED_SUBMISSION_SF_FN.getInstanceManager();
	var anInstance=cInstanceManagerUtil.addInstance(instManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeRelatedSubmission(currentInstance){

	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(instManager.count&gt;instManager.min){	
		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}
	
}//end fn


function _addDIN(){
	cLog.trace("in the add din");			
	var instManager=DIN_SF_FN.getInstanceManager();
	var anInstance=cInstanceManagerUtil.addInstance(instManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeDIN(currentInstance){

	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(instManager.count&gt;instManager.min){	
		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}
	
}//end fn


function _relatedSubmissionsIncrementer(){

	var count = _sfRelatedSubmissionsBody.count;
	var indexNum = sfRelatedSubmissionsBody.index + 1;

	if (indexNum &lt; 10) {
		this.rawValue = "53.0" + indexNum;
	} else { 
		this.rawValue = "53." + indexNum;
	}



}



/*** private functions ****/

function _initialize(){

	try{
		cControllerUtil.checkFormNode(RELATED_SUBMISSION_SF_FN, SCRIPT_OBJECT_NAME ,"RELATED_SUBMISSION_SF_FN");
		cControllerUtil.checkFormNode(DIN_SF_FN, SCRIPT_OBJECT_NAME ,"DIN_SF_FN");
			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}






</script>
                     <?templateDesigner expand 1?></variables>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform h="50mm" name="part2" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="GeneralHandler">

//imports
var cDrugFormulationHandler = script.DrugAppl.control.part2.DrugFormulationHandler;
var cSubmissionTypeHandler  = script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel       = script.DrugAppl.model.DrugApplMain;
var cFormNodeManager        = script.core.model.FormNodeManager;
var cInstanceManagerUtil    = script.core.util.InstanceManagerUtil;
var cSharedAppendix4Model   = script.DrugAppl.model.SharedAppendix4;
var cException              = script.core.util.Exception;
var cControllerUtil         = script.core.util.ControllerUtil;

//Handler name
var SCRIPT_OBJECT_NAME="Part2GeneralHandler";



//Action Globals
var ADD_SPECIES_ACTION="add_species";
var REMOVE_SPECIES_ACTION="remove_species";



//Form Nodes (FN)
//var SPECIES_QUESTION_SF_FN=cFormNodeManager.getFormNodeForKey("sfSpeciesSubtype"); //Question 72
//var SPECIES_SUBTYPE_SF_FN=cFormNodeManager.getFormNodeForKey("sfSpeciesBody");	//subform for multiple question 2
//var APPENDIX4SAVE= cFormNodeManager.getFormNodeForKey("appendix4Save");

_initialize();

/**** Public Functions ****/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_SPECIES_ACTION:
				
				_addSpecies();
				break;
		case REMOVE_SPECIES_ACTION:
				 _removeSpecies(anEvent.getValue());
				break;
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


function getAppendixModelField(){

	return(APPENDIX4SAVE.getNodeInstance());

}

function serializeModels(){

	cSharedAppendix4Model.serialize();
	
}//end fn


function initialize(){
	
	cSharedAppendix4Model.deserialize();

}//end fn




/*
* updateSubmissionType overall controller for part 2 for form visiblity based on sub type input
*
*
*
*
*/
function updateSubmissionType(){

	cDrugFormulationHandler.updateSubmissionType();
	//_updateSpeciesSubType();	
	
}//end fn


//working on Dec 5

function _updateSpeciesSubType(){
	var subType=cApplicationModel.getSubType();

	switch(subType){
		case cSubmissionTypeHandler.VIND_TYPE:
		case cSubmissionTypeHandler.VINDAM_TYPE:
		case cSubmissionTypeHandler.VNDS_TYPE:
		case cSubmissionTypeHandler.VSNDS_TYPE:
		case cSubmissionTypeHandler.VANDS_TYPE:
		case cSubmissionTypeHandler.VSANDS_TYPE:
		case cSubmissionTypeHandler.VDIN_TYPE:
		case cSubmissionTypeHandler.VPDC_TYPE:
			_addSpeciesSubTypeQuestion();
		
		break;
		//create a subform
		default:
		////clear instances
		_removeSpeciesSubTypeQuestion();
	
	}//end switch

}//end fn


/** Private Functions**/



function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(SPECIES_SUBTYPE_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_SUBTYPE_SF_FN");
		cControllerUtil.checkFormNode(SPECIES_QUESTION_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_QUESTION_SF_FN");
		cControllerUtil.checkFormNode(APPENDIX4SAVE, SCRIPT_OBJECT_NAME ,"APPENDIX4SAVE");
		
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}

/* Makes Q72 and Q73 visible on the form
*
*
*
*/
function _addSpeciesSubTypeQuestion(){

	
	var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_QUESTION_SF_FN.getFullSomExpression());
	if(speciesInstManager.count&lt;speciesInstManager.max){
		cInstanceManagerUtil.addInstance(speciesInstManager);	
	}
}
/*
*	removes all instances of the speciesSubTypeQuestion
*	@returns -null
*
*
*
*
*/

function _removeSpeciesSubTypeQuestion(){
	//should only be one instance of this subform
	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_QUESTION_SF_FN.getFullSomExpression())
	if(instManager.count&gt;instManager.min){
		cInstanceManagerUtil.clearInstances(instManager);
	}

}//end _removeSpeciesSubTypeQuestion



function _addSpecies(){

	//TO DO handle exception?
	var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_SUBTYPE_SF_FN.getFullSomExpression());
	var anInstance=cInstanceManagerUtil.addInstance(speciesInstManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function  _removeSpecies(currentInstance){

	var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(speciesInstManager.count&gt;speciesInstManager.min){	
			cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}else{
	
		//to do throw exception/warning?
	}
}//end fn







</script>
                     <script contentType="application/x-javascript" name="DrugFormulationHandler">	//imports
var cLog= script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cSharedAppendix4Model=script.DrugAppl.model.SharedAppendix4;
var cAppendix4Handler=script.DrugAppl.control.appendix4.Appendix4Handler;
var cException = script.core.util.Exception;

var cNodeUtil=script.core.util.NodeUtil;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cFormUtil=script.DrugAppl.util.General;


///script object name
var SCRIPT_OBJECT_NAME="DrugFormulationHandler";

//Globals
var YES="Yes";
var NO="No";




//action events
var ADD_FORMULATION_ACTION=					"add_formulation";
var REMOVE_FORMULATION_ACTION=				"remove_formulation";
var ADD_MANUFACT_COUNTRY_ACTION=				"add_country_manufact";
var REMOVE_MANUFACT_COUNTRY_ACTION=			"remove_country_manufact";
var ADD_ACTIVE_INGREDIENT_ACTION=			"add_active";
var REMOVE_ACTIVE_INGREDIENT_ACTION=			"remove_active";
var ADD_FORMULATION_VARIANT_ACTION=			"add_formulation_variant";
var REMOVE_FORMULATION_VARIANT_ACTION=		"remove_formulation_variant";
var ADD_NONMEDICINAL_INGREDIENT_ACTION=		"add_nonmedicinal_ingred";
var REMOVE_NONMEDICINAL_INGREDIENT_ACTION=	"remove_nonmedicinal_ingred";
var ADD_SPECIES_ACTION=						"add_species";
var REMOVE_SPECIES_ACTION=					"remove_species";
var ADD_SOURCED_MATERIAL_ACTION=				"add_sourced_material";
var REMOVE_SOURCED_MATERIAL_ACTION=			"remove_sourced_material";
var ACTIVE_ANIMAL_HUMAN_SRC_CHANGED_ACTION=	"active_animal_human_source_change";
var NONMED_ANIMAL_HUMAN_SRC_CHANGED_ACTION= "nonmed_animal_human_source_change";
var ACTIVENAME_CHANGED_ACTION=				"active_name_change";
var NONMEDNAME_CHANGED_ACTION=				"nonmed_name_change";
var MATERIALNAME_CHANGED_ACTION=				"material_name_change";


//Form Nodes (FN)
var FORMULATION_CONTAINER_FN=		cFormNodeManager.getFormNodeForKey("sfPart2");
var MANUFACT_SPONSER_CHK_FN=			cFormNodeManager.getFormNodeForKey("chkManufSponsor");
var MANUFACT_COUNTRIES_SF_FN=		cFormNodeManager.getFormNodeForKey("formulationCountriesManufacture");
var A_MANUFACT_COUNTRY_SF_FN=		cFormNodeManager.getFormNodeForKey("countryManSF");
var ACTIVE_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("sfActiveIngredientsTbl");
var VARIANT_SF_FN=					cFormNodeManager.getFormNodeForKey("sfVariant");
var NONMED_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("sfNonMedIngredientsTbl");
var SPECIES_SUBTYPE_SF_FN=			cFormNodeManager.getFormNodeForKey("sfSpeciesBody");	//subform for multiple question 2
//var MANUFACTURE_MATERIAL_SF_FN=		cFormNodeManager.getFormNodeForKey("sfAnimalHumanTbl");
var SOURCED_MATERIAL_HEADER_SF_FN=	cFormNodeManager.getFormNodeForKey("materialSourceTblTitlesSF");
var ACTIVE_INGREDIENT_NAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("activeIngredientName");
var NONMED_INGREDIENT_NAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("nonMedIngName");	
var MATERIAL_INGREDIENT_NAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("materialSrcName");	


var ACTIVEANIMALSOURCED_DDL_FN=		cFormNodeManager.getFormNodeForKey("activeAnimalHuman");
var NONMEDANIMALSOURCED_DDL_FN=		cFormNodeManager.getFormNodeForKey("nonMedAnimalHuman");
						

_initialize();


/*
* function to handle all the actions for formulations
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_FORMULATION_ACTION:
				
			_addDrugFormulation(anEvent.getValue());
				break;
		case REMOVE_FORMULATION_ACTION:
					_removeDrugFormulation(anEvent.getValue());
				break;
		case ADD_MANUFACT_COUNTRY_ACTION:		
					_addManufactCountry(anEvent.getValue());	
				break;
				
		case REMOVE_MANUFACT_COUNTRY_ACTION:		
					_removeManufactCountry(anEvent.getValue());	
				break;
		case ADD_ACTIVE_INGREDIENT_ACTION:
			_addMedicinalIngredient();
			break;
		
		case REMOVE_ACTIVE_INGREDIENT_ACTION:
			_removeMedicinalIngredient(anEvent.getValue());
			break;		
					
		case ADD_FORMULATION_VARIANT_ACTION:
			_addFormulationVariant();
			break;			
		
		case REMOVE_FORMULATION_VARIANT_ACTION:
			_removeFormulationVariant(anEvent.getValue());
			break;
								
		case ADD_NONMEDICINAL_INGREDIENT_ACTION:
			 _addNonMedicinalIngredient();	
			break;
		
		case REMOVE_NONMEDICINAL_INGREDIENT_ACTION:
			 _removeNonMedicinalIngredient(anEvent.getValue());	
			break;
			
		case ADD_SPECIES_ACTION:
				_addSpecies();
				break;
		case REMOVE_SPECIES_ACTION:
				 _removeSpecies(anEvent.getValue());
				break;			
		case ADD_SOURCED_MATERIAL_ACTION:
				_addSourcedMaterial(anEvent.getValue());
				break;
		case REMOVE_SOURCED_MATERIAL_ACTION:
				_removeSourcedMaterial(anEvent.getValue());
				break;
				
		case ACTIVE_ANIMAL_HUMAN_SRC_CHANGED_ACTION:
			 _activeIngredientSourceChanged(anEvent.getSource(),anEvent.getValue());
			break ;	
		case NONMED_ANIMAL_HUMAN_SRC_CHANGED_ACTION:
			_nonmedIngredientSourceChanged(anEvent.getSource(),anEvent.getValue());
			break ;	
			
		case ACTIVENAME_CHANGED_ACTION:
			_activeNameChanged(anEvent.getSource(),anEvent.getValue());
			break;	
			
		case NONMEDNAME_CHANGED_ACTION:
			_nonmedNameChanged(anEvent.getSource(),anEvent.getValue());
			break;
			
		case MATERIALNAME_CHANGED_ACTION:
			_materialNameChanged(anEvent.getSource(),anEvent.getValue());
			break;			
			
				
															
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


function initialize(){

	_initializeSourcedMaterialHeader();

}//end fn


/* updates all drug formulations based on the submissionType
* right now just calls the private functions,being used as a wrapper
*
*
*
*/

function updateSubmissionType(){

	_updateAllFormulationInstances();	
	
}



/*****************************************Private Functions sorted alphabetically****/




/*
*	Handler for processing a change in the source of active material, ie whether animal/human sourced or not
*	@param animalSourced_adobeNode- the adobe node for the animal/human source question
*	@param ingredientSrcSubform_adobeNode - the parent subform for the animal sourced node
*	@returns- null
*
*/

function _activeIngredientSourceChanged(animalSourced_adobeNode,ingredientSrcSubform_adobeNode){

	var ingredient_adobeNode=ACTIVE_INGREDIENT_NAME_TXT_FN.getNodeInstance(ingredientSrcSubform_adobeNode);
	_ingredientSourceChanged(animalSourced_adobeNode.rawValue,ingredientSrcSubform_adobeNode,ingredient_adobeNode);

}


/*
*	handler for processing a change in the active ingredient name, related to appendix 4
*	@param activeSubform_adobeNode- the parent subform where the active name ingredient field has changed
*	@param prevNameValue- the previous name of the ingredient. Null if there was no previous name
*	@returns- null
*
*/

function _activeNameChanged(activeSubform_adobeNode,prevNameValue){
	var activeName_adobeNode=ACTIVE_INGREDIENT_NAME_TXT_FN.getNodeInstance(activeSubform_adobeNode);
	var animalSourced_adobeNode=ACTIVEANIMALSOURCED_DDL_FN.getNodeInstance(activeSubform_adobeNode);
	_ingredientNameChanged(activeSubform_adobeNode,prevNameValue,animalSourced_adobeNode.rawValue,activeName_adobeNode);
}


/*
*	Add a Drug formulation instance in the form
*	@param currentInstance- the current (calling) instance of a formulation object
*	@returns- null
*
*/
function _addDrugFormulation(currentInstance){

	//TO DO add code to check instance
	var formulationInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	var anInstance=cInstanceManagerUtil.addInstance(formulationInstManager);
	_updateFormulationInstance(anInstance);		
	

}//end fn


/*
*	Add a formulation Variant instance in the form
*	@returns- null
*
*/

function _addFormulationVariant(){
	//TO DO add error checking for parameter
	var instanceManager=VARIANT_SF_FN.getInstanceManager();
	cFormUtil.addSubformInstance(instanceManager);
}


/*
*	Add a Manufacturing Country instance in the form
*	@param currentInstance- the current (calling) instance of a formulation object
*	@returns- null
*
*/

function _addManufactCountry(manufactCountryInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(manufactCountryInstance.somExpression);
	cFormUtil.addSubformInstance(instanceManager);
}


/*
*	Add a Medicinal (active) ingredient instance in the form
*	@param currentInstance- the current (calling) instance of an object
*	@returns- null
*
*/
function _addMedicinalIngredient(){
	
	var instanceManager=ACTIVE_INGRED_SF_FN.getInstanceManager();
	cFormUtil.addSubformInstance(instanceManager);
}



/*
*	Add a NonMedicinal (formulant) ingredient instance in the form
*	
*	@returns- null
*
*/
function _addNonMedicinalIngredient(){
	
	var instanceManager=NONMED_INGRED_SF_FN.getInstanceManager();
	cFormUtil.addSubformInstance(instanceManager);
}


/*
*	Adds the specides 
*	@param-subformInstance_adobeNode the calling subform instance 
*	@returns- null
*
*/

function _addSpecies(){

	//TO DO handle exception?
	var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_SUBTYPE_SF_FN.getFullSomExpression());
	cFormUtil.addSubformInstance(speciesInstManager);

}//end fn




/*
*	Adds the subspecies questions Q72 in the form
*	@param-subformInstance_adobeNode the calling subform instance 
*	@returns- null
*
*/
function _addSpeciesSubTypeQuestion(subformInstance_adobeNode){
	
	//TO DO replace instance manager directAccess
	var part2Body_AN=cNodeUtil.getChildNode(subformInstance_adobeNode,"sfPart2Body");
	
	var PART2_FN=cFormNodeManager.getFormNodeForSom(part2Body_AN.somExpression);
	
	var species_AN=cNodeUtil.getChildNode(part2Body_AN,"sfSpeciesSubtype");
	
	cLog.trace("part2 body "+part2Body_AN.somExpression);
	//TO DO type checking
	if(!species_AN){
		//TODO fix this if possible, should not have to hard code instance manager 
		cFormUtil.addSubformInstance(part2Body_AN._sfSpeciesSubtype);			
	}
	
}
/*
*	Adds the sourced material formulation row
*	@param-parentAdobeNode the calling subform instance 
*	@returns- null
*
*/
function _addSourcedMaterial(parentAdobeNode){

	//var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACTURE_MATERIAL_SF_FN.getFullSomExpression());
	//cFormUtil.addSubformInstance(instanceManager);
	//_initializeSourcedMaterialHeader();
}//end fn



function _decrementExistingEntry(ingredName){
	
	if(ingredName){
		
			var itemIndex=cSharedAppendix4Model.entryExists(ingredName);
			if(itemIndex&lt;0) return;
			var entryMatch=cSharedAppendix4Model.getEntryByIndex(itemIndex);
			
			//decrement the entry
			 var instances=cSharedAppendix4Model.decrementWithEntry(entryMatch[cSharedAppendix4Model.ITEM_NAME]);
			 cLog.trace("In decrementExistingEntry, number of instances "+instances);
			 if(instances==0){
			 		cAppendix4Handler.removeAppendix4(ingredName);
			 }
	}//TO DO error handling

}

function _decrementAllVariantIngredients(variant_sf_adobeNode){
	
	//to do error checking
	ingred_SF_AdobeNodeList=NONMED_INGRED_SF_FN.getNodeInstances(variant_sf_adobeNode,false);
	for (var i=0;i&lt;ingred_SF_AdobeNodeList.length;i++){
		var ingredientRow_sf_adobeNode=ingred_SF_AdobeNodeList.item(i);
		var animalSrc_AdobeNode=NONMEDANIMALSOURCED_DDL_FN.getNodeInstance(ingredientRow_sf_adobeNode);
		if(animalSrc_AdobeNode.rawValue===YES){
			var ingredientName_adobeNode=NONMED_INGREDIENT_NAME_TXT_FN.getNodeInstance(ingredientRow_sf_adobeNode);
			_decrementExistingEntry(ingredientName_adobeNode.rawValue);
		}
	}//end for
}//end fn


function _incrementAppendixEntry(ingredientName){

	//animal sourced, check if there is an existing ingredient
		if(cSharedAppendix4Model.entryExists(ingredientName)&gt;-1){
			cSharedAppendix4Model.incrementWithEntry(ingredientName);
						
		}else{
			//create appendix4. Update the entries
			var entry=new Array(2);
			var uniqueAppendix4ID=cAppendix4Handler.createAppendix4(ingredientName);
			entry[cSharedAppendix4Model.ITEM_NAME]=ingredientName;
			entry[cSharedAppendix4Model.NUMBER_INSTANCES]=1;
			cSharedAppendix4Model.addEntry(entry);
		}
}//end fn


/*
* Checks that all the global form nodes are not null
*
*
*
*/

function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(FORMULATION_CONTAINER_FN, SCRIPT_OBJECT_NAME ,"FORMULATION_CONTAINER_FN");
		cControllerUtil.checkFormNode(MANUFACT_SPONSER_CHK_FN, SCRIPT_OBJECT_NAME ,"MANUFACT_SPONSER_CHK_FN");
		cControllerUtil.checkFormNode(MANUFACT_COUNTRIES_SF_FN, SCRIPT_OBJECT_NAME ,"MANUFACT_COUNTRIES_SF_FN");
		cControllerUtil.checkFormNode(A_MANUFACT_COUNTRY_SF_FN, SCRIPT_OBJECT_NAME ,"A_MANUFACT_COUNTRY_SF_FN");
		cControllerUtil.checkFormNode(ACTIVE_INGRED_SF_FN, SCRIPT_OBJECT_NAME ,"ACTIVE_INGRED_SF_FN");
		cControllerUtil.checkFormNode(VARIANT_SF_FN, SCRIPT_OBJECT_NAME ,"VARIANT_SF_FN");
		cControllerUtil.checkFormNode(NONMED_INGRED_SF_FN, SCRIPT_OBJECT_NAME ,"NONMED_INGRED_SF_FN");
		cControllerUtil.checkFormNode(SPECIES_SUBTYPE_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_SUBTYPE_SF_FN");
		//cControllerUtil.checkFormNode(MANUFACTURE_MATERIAL_SF_FN, SCRIPT_OBJECT_NAME ,"MANUFACTURE_MATERIAL_SF_FN");
		cControllerUtil.checkFormNode(SOURCED_MATERIAL_HEADER_SF_FN, SCRIPT_OBJECT_NAME ,"SOURCED_MATERIAL_HEADER_SF_FN");
		cControllerUtil.checkFormNode(ACTIVE_INGREDIENT_NAME_TXT_FN, SCRIPT_OBJECT_NAME ,"ACTIVE_INGREDIENT_NAME_TXT_FN");
		cControllerUtil.checkFormNode(ACTIVEANIMALSOURCED_DDL_FN, SCRIPT_OBJECT_NAME ,"ACTIVEANIMALSOURCED_DDL_FN");
		cControllerUtil.checkFormNode(NONMEDANIMALSOURCED_DDL_FN, SCRIPT_OBJECT_NAME ,"NONMEDANIMALSOURCED_DDL_FN");
		cControllerUtil.checkFormNode(NONMED_INGREDIENT_NAME_TXT_FN, SCRIPT_OBJECT_NAME ,"NONMED_INGREDIENT_NAME_TXT_FN");
		cControllerUtil.checkFormNode(MATERIAL_INGREDIENT_NAME_TXT_FN, SCRIPT_OBJECT_NAME ,"MATERIAL_INGREDIENT_NAME_TXT_FN")
		
				
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}

/*
* Initializes the Source Material Header visibility
* 
*
*
*/

function _initializeSourcedMaterialHeader(){
	
	//var instanceList=MANUFACTURE_MATERIAL_SF_FN.getNodeInstances();
	//var header_adobeNode=SOURCED_MATERIAL_HEADER_SF_FN.getNodeInstance();	cLog.trace("Number of instances "+instanceList.length);
	//if(instanceList.length&gt;0){
		
	//	cUiUtil.show(header_adobeNode);
	//}else{	
	
	//	cUiUtil.hide(header_adobeNode);
	//}	
}


/*
* 
* Processes if the name of an ingredient changes, how to update Appendix 4 
* @param - ingredSubform_adobeNode the parent subform that ingredient applies to
* @param - oldIngredName- the previous name of the ingredient, null if there was no previous name
* @param - animalSourced - the YES/NO value of the animal sourced question
* @ingredName_adobeNode- the adobe node of the ingredient that has the (current) ingredient name value	 
*/
function _ingredientNameChanged(ingredSubform_adobeNode,oldIngredName,animalSourced,ingredName_adobeNode){

	var newIngredName=ingredName_adobeNode.rawValue;
	 var oldEntryIndex=cSharedAppendix4Model.entryExists(oldIngredName);
	 var newEntryIndex=cSharedAppendix4Model.entryExists(newIngredName);
		
	//to do check for nulls
	
	//ignore if not animal sourced or the current value is null
	if(animalSourced!==YES ){
		return;
	}
	//if prevName is empty or null just add the value
	if(!oldIngredName &amp;&amp; newIngredName){
	
		//just need to update the new entry
		 _incrementAppendixEntry(newIngredName);
		return;
				
	}
	//If new name has been nulled, need to delete appendix using old name if last instance
	if(oldIngredName &amp;&amp; !newIngredName){ 
	
		 _decrementExistingEntry(oldIngredName);
		return;
	}
		 	
	//if last instance and newName does not exist do not want to delete the appendix, just rename it	
	if(oldEntryIndex&gt;-1 &amp;&amp; cSharedAppendix4Model.isLastInstance(oldEntryIndex)===true
				&amp;&amp; newEntryIndex&lt;0){
			cLog.trace("change ending");
			cSharedAppendix4Model.changeEntryName(oldIngredName, newIngredName);	
			//update the appropriate appendix
			cAppendix4Handler.updateExistingAppendix4(newIngredName,oldIngredName);
												
	}else{
			cLog.trace("decrementing and incrementing");
			_decrementExistingEntry(oldIngredName); 
			_incrementAppendixEntry(newIngredName);
			
	}
}

/*
*	Updates the ingredient appendix 4 association. If animal/human sourced looks for an existing Appendix 4
*	If no appendix 4 is found it creates one. If changing to not human sourced, decrements or deletes appendix4 association 
*
*	@param- valueSrce_adobeNode- the source node that contains the new user selected value
*	@param- ingredientSrcSubform_adobeNode- the subform (ie ingredient record) for which this applies
*
**/
function _ingredientSourceChanged(humanAnimalSrcValue,ingredientSrcSubform_adobeNode,ingredient_adobeNode){

	cLog.trace("Ingredient is in _ingredientSourceChanged "+ingredient_adobeNode);	
	var ingredientName=ingredient_adobeNode.rawValue;
	cLog.trace("Ingredient name is "+ingredientName);
	//if the value is null do nothing TO DO
	if(!humanAnimalSrcValue) return;
	 
	//1) Check if this ingredient is not animal sourced		
	if(humanAnimalSrcValue===NO){
		_decrementExistingEntry(ingredientName);
		
	}else{
		_incrementAppendixEntry(ingredientName);
	}
}


function _materialNameChanged(materialSubform_adobeNode,prevNameValue){
	
	
	var ingredientName_adobeNode=MATERIAL_INGREDIENT_NAME_TXT_FN.getNodeInstance(materialSubform_adobeNode);
	var animalSourcedValue=YES; //always yes
	cLog.trace("***********IngredientName "+ingredientName_adobeNode);
	_ingredientNameChanged(materialSubform_adobeNode,prevNameValue,animalSourcedValue,ingredientName_adobeNode);
	

}


/*
*	Updates the nonmedicinal ingredient based on a name change. Processes appendix4 changes
*	@param animalSourced_adobeNode- the node for the animal source question
	@param ingredientSrcSubform_adobeNode - the parent calling subform for 
*	@returns- null
*
*/

function _nonmedIngredientSourceChanged(animalSourced_adobeNode,ingredientSrcSubform_adobeNode){

	var ingredient_adobeNode=NONMED_INGREDIENT_NAME_TXT_FN.getNodeInstance(ingredientSrcSubform_adobeNode);
	
	_ingredientSourceChanged(animalSourced_adobeNode.rawValue,ingredientSrcSubform_adobeNode,ingredient_adobeNode);

}



function _nonmedNameChanged(nonmedSubform_adobeNode,prevNameValue){

	var ingredientName_adobeNode=NONMED_INGREDIENT_NAME_TXT_FN.getNodeInstance(nonmedSubform_adobeNode);
	var animalSourced_adobeNode=NONMEDANIMALSOURCED_DDL_FN.getNodeInstance(nonmedSubform_adobeNode);
	
	_ingredientNameChanged(nonmedSubform_adobeNode,prevNameValue,animalSourced_adobeNode.rawValue,ingredientName_adobeNode);
}



/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeDrugFormulation(currentInstance){

	var formulationInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	
	cFormUtil.removeSpecificSubformInstance(formulationInstManager,currentInstance);

}//end fn


/*
*	Remove a manufacturing country  instance in the formulation
*	@param manufactCountryInstance- the  instance of a country object to be deleted
*	@returns- null
*
*/

function _removeFormulationVariant(variantInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(variantInstance.somExpression);
	 _decrementAllVariantIngredients(variantInstance);
	cFormUtil.removeSpecificSubformInstance(instanceManager,variantInstance);
}



/*
*	Remove a manufacturing country  instance in the formulation
*	@param manufactCountryInstance- the  instance of a country object to be deleted
*	@returns- null
*
*/
function _removeManufactCountry(manufactCountryInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(manufactCountryInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,manufactCountryInstance);

}

/*
*	Remove a single medicinal ingredient (active) from a formulation
*	@param ingredientInstance- the  instance of the active ingredient row object to be deleted
*	@returns- null
*
*/
function _removeMedicinalIngredient(ingredientInstance){
	
	var instanceManager=ACTIVE_INGRED_SF_FN.getInstanceManager();
	var ingredientName_adobeNode=ACTIVE_INGREDIENT_NAME_TXT_FN.getNodeInstance(ingredientInstance);
	 //update any appendix 4 dependencies
	 _decrementExistingEntry(ingredientName_adobeNode.rawValue);	
	cFormUtil.removeSpecificSubformInstance(instanceManager,ingredientInstance);

}

/*
*	Remove a single nonmedicinal ingredient from a formulation
*	@param nonMedInstance- the  instance of the nonmedicinal ingredient row object to be deleted
*	@returns- null
*
*/

function _removeNonMedicinalIngredient(nonMedInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(nonMedInstance.somExpression);
	var ingredientName_adobeNode=NONMED_INGREDIENT_NAME_TXT_FN.getNodeInstance(nonMedInstance);
	 _decrementExistingEntry(ingredientName_adobeNode.rawValue);
	cFormUtil.removeSpecificSubformInstance(instanceManager,nonMedInstance);
}



/*
*	Remove a specieseformulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function  _removeSpecies(currentInstance){

	var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);	
	cFormUtil.removeSpecificSubformInstance(speciesInstManager,currentInstance);
}//end fn



/*
*	Remove a Species SubType Question instance in the form
*	@param subformInstance_adobeNode- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeSpeciesSubTypeQuestion(subformInstance_adobeNode){
	//TO DO -do not directly access the instanceManager	
	
	var part2Body_AN=cNodeUtil.getChildNode(subformInstance_adobeNode,"sfPart2Body");
		
	cInstanceManagerUtil.clearInstances(part2Body_AN._sfSpeciesSubtype);
		
}//end _removeSpeciesSubTypeQuestion



/*
*	removes the animal human source material question for drug manufacture
*	@param currentInstance- current instance of the source material subform
*	@returns- null
*
*/
function  _removeSourcedMaterial(currentInstance){
	
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	//order of actions is important
	var ingredientName_adobeNode=MATERIAL_INGREDIENT_NAME_TXT_FN.getNodeInstance(currentInstance);
	_decrementExistingEntry(ingredientName_adobeNode.rawValue);
	cFormUtil.removeSpecificSubformInstance(instanceManager,currentInstance); 
	_initializeSourcedMaterialHeader();
}//end fn



/* Updates all the formulation instances based the subType that was selected
*
*
*
*
*/

function _updateAllFormulationInstances() {

	var formulationList=FORMULATION_CONTAINER_FN.getNodeInstances();

	for(var i=0;i&lt;formulationList.length;i++){
		var oneFormulation=formulationList.item(i);
		_updateFormulationInstance(oneFormulation);					
	}

}

/* Updates the state of a single formulation instance
*	
*	@formulationInstance- a single instance of the formulation subform
*
*/

function _updateFormulationInstance(formulationInstance){
	//TO DO check subform is being passed in
	var subType= cApplicationModel.getSubType();
	var sfCountry_an= MANUFACT_COUNTRIES_SF_FN.getNodeInstance(formulationInstance);
	var chkSponser_an=MANUFACT_SPONSER_CHK_FN.getNodeInstance(formulationInstance);
	var manufactCountry_InstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACT_COUNTRIES_SF_FN.getFullSomExpression());
	
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
			cUiUtil.show(chkSponser_an);
			cInstanceManagerUtil.clearInstances(manufactCountry_InstanceManager);	
			break;
		default:
			var chkSponser_an=MANUFACT_SPONSER_CHK_FN.getNodeInstance(formulationInstance);
			cUiUtil.hide(chkSponser_an);
			chkSponser_an.rawValue=null;
			cFormUtil.addSubformInstance(manufactCountry_InstanceManager);			
	}
	_updateSpeciesSubType(formulationInstance);
}//end fn




function _updateSpeciesSubType(formulationInstance_adobeNode){
	
	var subType=cApplicationModel.getSubType();

	switch(subType){
		case cSubmissionTypeHandler.VIND_TYPE:
		case cSubmissionTypeHandler.VINDAM_TYPE:
		case cSubmissionTypeHandler.VNDS_TYPE:
		case cSubmissionTypeHandler.VSNDS_TYPE:
		case cSubmissionTypeHandler.VANDS_TYPE:
		case cSubmissionTypeHandler.VSANDS_TYPE:
		case cSubmissionTypeHandler.VDIN_TYPE:
		case cSubmissionTypeHandler.VPDC_TYPE:
			cLog.trace("going to add an species instance");
			_addSpeciesSubTypeQuestion(formulationInstance_adobeNode);
			
		break;
		//create a subform
		default:
		////clear instances
		_removeSpeciesSubTypeQuestion(formulationInstance_adobeNode);
	
	}//end switch

}//end fn


















</script>
                     <script contentType="application/x-javascript" name="IDGenerator"/>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="model" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="DrugApplMain">

var cFormNodeManager = script.core.model.FormNodeManager;
var cResourceManager = script.core.lang.ResourceManager;
var cConfigManager=script.core.util.ConfigurationManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cControllerUtil = script.core.util.ControllerUtil;

var initialized = false;


var LANGUAGE_NODE;
var FINALIZED_FORM_NODE;
var SUBMISSION_TYPE_NODE;
var YES="Y";


var SCRIPT_OBJECT_NAME="InstructionsHandler";



function getLanguage()
{
	if (!initialized)
	{
		_initialize();
	}
	return LANGUAGE_NODE.rawValue;
}

function setLanguage(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
	LANGUAGE_NODE.rawValue=langValue;
}

function getSubType()
{
	if (!initialized)
	{
		_initialize();
	}
	return  SUBMISSION_TYPE_NODE.rawValue;
}

function setSubType(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
		//TO DO Check for valid submission type values?
	 SUBMISSION_TYPE_NODE.rawValue=langValue;
}



/*Function to determine if the form has been finalized or not
*
*	@returns- boolean, true if the form has been finalized
*
*/
function isFinalized(){
	if (!initialized)
	{
		_initialize();
	}
	 if(FINALIZED_FORM_NODE.getNodeInstance().rawValue===YES){
	 
	 	return true;
	 }
	 return false;
}



/**
 * Describes this object. This is implemented in all objects since their
 * toString() cannot be overridden!
 * @return the description of this object.
 */
function asString()
{		
	var bufferArray = []; // Array used to simplify comma delimiting.

	bufferArray[bufferArray.length] = "language = " + getLanguage();
	bufferArray[bufferArray.length] = "finalized = " + isFinalized();
	bufferArray[bufferArray.length] = "submission Type = " +  getSubType();
			
	return "DrugAppl[" + bufferArray.join(", ") + "]";		
}





/********PRIVATE METHODS START HERE*****/

/*
* Private function to initalize model values for the form
*
*/

function _initialize(){

	
	 var languageFormNode=cFormNodeManager.getFormNodeForKey("pageLanguage");
	 FINALIZED_FORM_NODE = cFormNodeManager.getFormNodeForKey("chkIsFinalized");
	 

	 cControllerUtil.checkFormNode(languageFormNode,"form",
									  "languageFormNode");
	
	 cControllerUtil.checkFormNode(FINALIZED_FORM_NODE,"form","FINALIZED_FORM_NODE");								  
									  
	 
	 LANGUAGE_NODE=languageFormNode.getNodeInstance();
	 cTypeEnforcer.checkNode(LANGUAGE_NODE, SCRIPT_OBJECT_NAME,
								"_initialize", "LANGUAGE_NODE");
								
								
	initialized=true;
}//end _initialize
</script>
                  <script contentType="application/x-javascript" name="AddressType"/>
                  <script contentType="application/x-javascript" name="SharedAppendix4">
var cLog = script.core.util.Log;
var cTypeChecker=script.core.util.TypeChecker;
var cAppendix4Handler=script.DrugAppl.control.appendix4.Appendix4Handler;
var cPart2GeneralHandler= script.DrugAppl.control.part2.GeneralHandler 

var ITEM_NAME=0;
var NUMBER_INSTANCES=1;
var ENTRY_ARRAY_LENGTH=2;

var ENTRY_DELIMITER="\n";
var FIELD_DELIMITER=",";

var _currentAppendixNumber=0;


var _appendix4Mapping=new Array();



function initialize(){

  deserialize();

}



/*
*  looks for an entry in the array of entries based on the ingredient Name
*	Using the ingredient name as the key to look for
*	@param itemToFind - the ingredient name string to search for
*	@returns- number -1, if value is not found, index in the array otherwise
*/

function entryExists(itemToFind){

	return (_findAppendixItem(itemToFind,ITEM_NAME));
}


function getNumberInstances(index){

	if(index&lt;_appendix4Mapping.length){
	
		return (_appendix4Mapping[index][NUMBER_INSTANCES]);
	}

	return -1;
}

/*
* Checks if there is only one instance of the mapping
*
*
*
*/
function isLastInstance(index){
	if(index&lt;_appendix4Mapping.length){
	
		var numInstance= _appendix4Mapping[index][NUMBER_INSTANCES];
		if(numInstance===1){
			return true;
		}
	}
	return false;
}



function changeEntryName(oldIngredientName, newIngredientName){
	var index=entryExists(oldIngredientName);
	if(index&gt;-1){
		_appendix4Mapping[index][ITEM_NAME]=newIngredientName;
		return (index);	
	}
	return -1;	
}


function decrementWithEntry(itemToUpdate){

	var numberInstances=-1;
	var index=entryExists(itemToUpdate);
	if(index&gt;-1){
	
			
		if(getNumberInstances(index)===1){
				_appendix4Mapping.splice(index,1);
				numberInstances=0;					
		}
		else{
				numberInstances=_appendix4Mapping[index][NUMBER_INSTANCES]--;
		}
	
	}	
	return(numberInstances);
}


function incrementWithEntry(itemToUpdate){
	var numberInstances=-1;
	var index=entryExists(itemToUpdate);
			
	if(index&gt;-1){
			numberInstances=_appendix4Mapping[index][NUMBER_INSTANCES]++;	
	}
	
	return(numberInstances);
}

function addEntry(entry_to_add){

	
	if(cTypeChecker.isArray(entry_to_add) &amp;&amp; entry_to_add.length==ENTRY_ARRAY_LENGTH ){
		 _appendix4Mapping.push(entry_to_add);
	}else{
		cLog.warn("Entry not addded")
		//to do throw exception		
	}

}//end fn

function getEntryByIndex(entryIndex){

	if(entryIndex&lt; _appendix4Mapping.length){
	
		return( _appendix4Mapping[entryIndex]);
	}
	return (null);
}

function serialize(){
 
 	var saveField_adobeNode=cPart2GeneralHandler.getAppendixModelField();
 	var saveValues="";
 	cLog.trace("Starting serialize");
 	for(var i=0;i&lt;_appendix4Mapping.length;i++){
 	
 		var oneEntry=_appendix4Mapping[i];
 		saveValues+=oneEntry[ITEM_NAME]+FIELD_DELIMITER;
 		saveValues+=oneEntry[NUMBER_INSTANCES];
 		saveValues+=ENTRY_DELIMITER;
 	}
 	saveValues=saveValues.substr(0,saveValues.length-1);//lop off last delimiter
 	saveField_adobeNode.rawValue=saveValues;
 		cLog.trace("Ending serialize "+saveValues);
}//end fn


function deserialize(){
	//to do error handling	
	var saveField_adobeNode=cPart2GeneralHandler.getAppendixModelField();
 	var savedValues=saveField_adobeNode.rawValue;
 	var entriesList;
 	
 	if(!savedValues) return;
 	
 	entriesList=savedValues.split(ENTRY_DELIMITER);
 	
 	 	for(var i=0;i&lt;entriesList.length;i++){
 			var newEntry=entriesList[i].split(FIELD_DELIMITER);
 		 	addEntry(newEntry);
 		 }
}//end fn



/****** Private functionality *****/



function _findAppendixItem(itemToFind,itemType){

	for(var index=0;index&lt;_appendix4Mapping.length;index++){
		var oneEntry=_appendix4Mapping[index];
		if(oneEntry[itemType]===itemToFind){
			return(index);
		}	
	}
	return(-1);

}

function _getAppendixItem(itemToFind,itemType){

	for(var index=0;index&lt;_appendix4Mapping.length;index++){
		var oneEntry=_appendix4Mapping[index];
		if(oneEntry[itemType]===itemToFind){
			return(oneEntry);
		}	
	}
	return(null);

}

 


</script>
                  <script contentType="application/x-javascript" name="Common">


var cFormatValidator = script.core.validation.BasicFormatValidator;
var cResourceManager = script.core.lang.ResourceManager;
var cLog = script.core.util.Log;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var cFormNodeManager = script.core.model.FormNodeManager;
var cGlobalRequirement = script.core.validation.GlobalRequirement;

var CREDIT_CARD = "creditcardnumber";
var MONETARY = "monetary";
var DMF_NUMBER= "dmfNumber";
var CUSTOMER_ACCOUNT = "customerAcctNum"; 
var DATE_FIELD = "dateValue";
var LICENSE_NUMBER = "licenseNumber";
var DATE_CREDIT_CARD = "date_credit_card";
var CHECK_NUMBER = "check_num";
var BANK_DRAFT_NUMBER = "bank_draft_num";
var POSITIVE_NUMBER= "positive_num"; 

//Paul: for message bundle
function fieldErrorPopup(targetField, msgBundle) {
  	app.alert( cResourceManager.get(msgBundle));
  	
  	if (targetField != null) {
		xfa.host.setFocus(targetField);
	}
}

//Paul: for clear the fields in the subform tree
function setNullValueAllNode(oNode) {
     for (var i = 0; i &lt; oNode.nodes.length; i++) {
         var oChildNode = oNode.nodes.item(i);
         
         if(oChildNode.className == "subform"){
         	setNullValueAllNode(oChildNode);
         }
          
         if(oChildNode.className == "field"){
            if (oChildNode.access != "readOnly") {
               temp = oChildNode.name;
               if ((temp.substring(0,3) != "btn")){
       				oChildNode.rawValue = "";
          			oChildNode.fillColor = "255,255,255";
               }
            }
	     }

         if (oChildNode.className === "draw") {
             continue;
         }
     }
 }

function mySwitchLocale(field) {
	var lange = cDrugApplModel.getLanguage();

	if ( lange == "en" ) {
		field.locale = "en_CA";
		field.format.picture="num{$z,zzz,zzz,zzz,zz9.99}";
	} else {
		field.locale = "fr_CA";
		field.format.picture="num{(z,zzz,zzz,zzz,zz9.99$)}";
	}
}


function isCreditCardExpiryValid(fieldMonth, fieldYear) {
  
     var month = fieldMonth.rawValue;
     var year = fieldYear.rawValue;
     if(month !=null &amp;&amp; year !=null){
 	 var today = new Date();
     var expiry = new Date("20"+year, month);
     
      
     if (today.getTime() &gt; expiry.getTime()) {
         //app.alert("Date is already expired");
         
		//Paul:
		fieldErrorPopup(null, "error_ccExpiredDate");
        
         
         fieldMonth.fillColor = "250,128,114";
         fieldYear.fillColor = "250,128,114";
     } else {
         fieldMonth.fillColor = "255,255,255";
         fieldYear.fillColor = "255,255,255";
     }
   }
     
}


function validateField(field, fieldType) {
//cLog.trace("fieldType is " + fieldType + "field is " + field);

	try
	{
		// set up event object
		var validationResult = null;
		if( field.rawValue != null ) {
			switch(fieldType) {
			
			
			case MONETARY :
				validationResult = _validateMonetary(field);
				break;	
            case DMF_NUMBER :
				//cLog.trace("DMF_NUMBER validation +++++++++ 0");
				validationResult = _validateDMFNumber(field);
				break;
            case CUSTOMER_ACCOUNT :
				//cLog.trace("CUSTOMER_ACCOUNT validation +++++++++ 1");
				validationResult = _validateCustomerAccount(field);
				//cLog.trace("CUSTOMER_ACCOUNT  +++++++++ 2" + validationResult); 
				break;
			 case DATE_FIELD :
				//cLog.trace("DATE_FIELD validation +++++++++ 1");
				validationResult = _validateDateField(field);
				//cLog.trace("DATE_FIELD  +++++++++ 2" + validationResult); 
				break;
			
			 case DATE_CREDIT_CARD:
				validationResult = _validateCreditCardDate(field);
				break;
								
			 case LICENSE_NUMBER :
				//cLog.trace("LICENSE_NUMBER validation +++++++++ 0");
				validationResult = _validateLicenseNumber(field);
				break;							
			
			case CHECK_NUMBER :
				//cLog.trace("LICENSE_NUMBER validation +++++++++ 0");
				validationResult = _validateCheckNumber(field);
				break;							
			case BANK_DRAFT_NUMBER:
				validationResult = _validateBankDraftNumber(field);
				break;
			case POSITIVE_NUMBER :
				//cLog.trace("LICENSE_NUMBER validation +++++++++ 0");
				validationResult = _validatePositiveNumber(field);
				break;	
									
			default: // From Core for email/phone/postcode
				validationResult = cFormatValidator.createInstance().validateFieldFormat(field,fieldType);
			}
			
			if( validationResult != null ) {
				app.alert( validationResult );
				xfa.host.setFocus(field);
			}
		}
		return validationResult; 
	}
	catch(exception)
	{
		cLog.warn("Problem with txtBillingEmail::exit", exception);
	}

}


function fieldErrorPopup(targetField, msgBundle) {
  	app.alert( cResourceManager.get(msgBundle));
  	
  	if (targetField != null) {
		xfa.host.setFocus(targetField);
	}
	
}

function switchLocale(field) {
	var lange = cDrugApplModel.getLanguage();

	if ( lange == "en" ) {
		field.locale = "en_CA";
		field.format.picture="num{$z,zzz,zzz,zzz,zz9.99}";
	} else {
		field.locale = "fr_CA";
		field.format.picture="num{(z,zzz,zzz,zzz,zz9.99$)}";
	}
}


/**
 * Pattern: /^\d{6}$/;
 * Validates the passed DMF Number.
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateDateField(field)
{
cLog.trace("where is the date value for this field 0001 ");
	var reg = /(?:19|20\d{2})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
	 if (field.rawValue != null &amp;&amp; field.rawValue != "") {
                
        if (reg.test(field.rawValue) == false) {
        	field.fillColor = "250,128,114";
        	field.rawValue = "";
            return cResourceManager.get("error_badDateValue");
            
        } else {
            var year = field.rawValue.split("-")[0];
            var month = field.rawValue.split("-")[1];
            var day = field.rawValue.split("-")[2];

            var daysInMonth = _readDaysInMonth(month - 1, year);
            if (day &gt; _readDaysInMonth(month - 1, year)) {
                field.fillColor = "250,128,114";
                field.rawValue = "";
                return cResourceManager.get("error_badDateValue");
            } else {
                field.fillColor = "255,255,255";
            }
        }
    }
}

function _readDaysInMonth(month, year) {
    if (month == 1 &amp;&amp; _isLeapYear(year) == true) return 29;
    else return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
}

function _isLeapYear(year) {
    return ((year % 4 == 0) &amp;&amp; (year % 100 != 0 || year % 400 == 0));
}

/**
 * Pattern: /^\d{6}$/;
 * Validates the passed Company ID Number.
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateCustomerAccount(field)
{

	var regExp = /^\d{5}$/;
	    
	if (regExp.test(field.rawValue))
	{
		//cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	return cResourceManager.get("error_badCustomerAcctNum");
}




/**
 * Pattern: /^\d{4}-\d{3}$/;
 * Validates the passed DMF Number.
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateDMFNumber(field)
{

	var regExp = /^\d{4}-\d{3}$/;
	    
	if (regExp.test(field.rawValue))
	{
		//cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	field.rawValue = "";
	return cResourceManager.get("error_badDMFNumberFormat");
}

/*Validation of Credit Card Date*/
function _validateCreditCardDate(field) {
	if ( field.rawValue==null || field.rawValue=="" )
		return null;
		
	//var regExpA = /^\d+\-\d+$/; 
	//var regExpB = /^\d+\/\d+$/; 

	//var regExp1 = /^(0?[1-9]|1[012])[\/\-]\d{2}$/; // MM/YY(MM-YY)
	var regExp2 = /^(0?[1-9]|1[012])\/\d{2}$/; // MM/YY(MM-YY)
	
	cLog.trace("field value is 00000 " + field.rawValue);
	
	if (! regExp2.test(field.rawValue)) {
		field.rawValue = "";
		return cResourceManager.get("invalidDateFormat2");
	} else {
		return _validateYYMM(field);
	}
	
	return cResourceManager.get("invalidDateFormat2");
}

function _validateYYMM(field) {
	var seperator = "\/";
	var dateArr = field.rawValue.split(seperator);

	var year = dateArr [1];
	var month = dateArr [0];
	
	var date = new Date (year ,month-1 );

	var tMonth=date.getMonth()+1;
	var tYear = date.getFullYear().toString().substring(2);
	
	if ((tMonth != month) || (tYear  != year)) {
		field.rawValue = "";	
		return cResourceManager.get("invalidDateFormat3"); 			
	} else { 
	 	cLog.trace("Correct date");
	 	return null;
	} 
}


/**
 * Pattern: /^\d{1,4}$/;
 * Validates the passed License Number not more than 4 .
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateLicenseNumber(field)
{

	var regExp = /^\d{1,4}$/; // /^\d{1,9}$/
	    
	if (regExp.test(field.rawValue))
	{
		//cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	return cResourceManager.get("error_badLicenseNumberFormat");
}

function _validateCheckNumber(field)
{

	var regExp = /^([0-9a-zA-Z]){2,20}$/; // /^\d{1,15}$/
	    
	if (regExp.test(field.rawValue))
	{
		//cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	return cResourceManager.get("error_badCheckNumberFormat");
}

function _validateBankDraftNumber(field) {
	var regExp = /^([0-9a-zA-Z]){2,20}$/; // /^\d{1,15}$/
	    
	if (regExp.test(field.rawValue))
	{
		return null; 
	}
	return cResourceManager.get("error_badBankDraftNumberFormat");
}

function _validatePositiveNumber(field)
{
	if (field.rawValue &gt;= 0)
	{
		cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	return cResourceManager.get("error_badPositiveNumberFormat");
}


/**
 * Pattern: ((4\d{3})|(5[1-5]\d{2})|(6011))( |)?\d{4}(\5\d{4}){2}
 * Validates the passed Credit Card Number.
 * @param aString a String that contains the Credit Card Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function validateCreditCard(field, ccTypeValue)
{
	//var regExp = /((4\d{3})|(5[1-5]\d{2})|(6011))( |)?\d{4}(\5\d{4}){2}/i;
	// var regExp = /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$/;
	var regExp4Visa = /^4[0-9]{12}(?:[0-9]{3})?$/;
	var regExp4Master = /^5[1-5][0-9]{14}$/;
	var regExp4Amex = /^3[47][0-9]{13}$/; 
	
	// try to make this a string instead of number
	var fieldValue = field.rawValue + ""; 
	
	fieldValue = fieldValue.replace(/[\(\)\.\-\ ]/g, '');    
	
	
	switch(ccTypeValue)
	{
	case "1":    
		if (regExp4Visa.test(fieldValue))
		{
			cLog.trace("I am tesing visa 1 right now 00000");
			return null; 
		} else {
			//cLog.trace("I am tesing visa 1 right now 3333");
			return cResourceManager.get("visaNumError");
			//cLog.trace("I am tesing visa 1 right now 3333" + validationResult );
		}
		
	case "2":
		if (regExp4Master.test(fieldValue))
		{
			return null; 
		} else {
			return cResourceManager.get("masterNumError");
		}
		
	case "3":
		if (regExp4Amex.test(fieldValue))
		{
			return null; 
		} else {
			return cResourceManager.get("amexNumError");
		}
		
		
	default: 
		return cResourceManager.get("otherCreditCardNumError");
	}
	
	//cLog.trace("I am tesing visa 1 right now 3333" + validationResult );
	
	
	
}

function _validateMonetaryValue(field) {
	// var regExp = ^\$?[0-9]+(,[0-9]{3})*(\.[0-9]{2})?$;
	var regExp = /^\$?(?:\d+|\d{1,3}(?:,\d{3})*)(?:\.\d{1,2}){0,1}$/;

	if (regExp.test(field.rawValue))
	{
		return null; 
	}
	return "Error format with Money Amount.";
}

// usage: someVar.formatMoney(decimalPlaces, symbol, thousandsSeparator, decimalSeparator)
// defaults: (2, "$", ",", ".")
function _validateMonetary(field, places, symbol, thousand, decimal) {
	if (field == null) return null;

	var validationResult = _validateMonetaryValue(field);
	if( validationResult != null ) {
		return validationResult;
	}
	
	var number = new Number(field.rawValue || 0);
	field.rawValue = number.formatMoney();

	return validationResult;
}

/*
Remove non-numeric chars (except decimal point/minus sign):
var price = formatMoney(12345.99); // "$12,345.99"
priceVal = parseFloat(price.replace(/[^0-9-.]/g, '')); // 12345.99
*/
function revertMoneyVaule(value) {
	if (value == null ) return value;
	return parseFloat(value.replace(/[^0-9-.]/g, ''));
}

// Extend the default Number object with a formatMoney() method:
// usage: someVar.formatMoney(decimalPlaces, symbol, thousandsSeparator, decimalSeparator)
// defaults: (2, "$", ",", ".")
Number.prototype.formatMoney = function(places, symbol, thousand, decimal) {
	places = !isNaN(places = Math.abs(places)) ? places : 2;
	symbol = symbol !== undefined ? symbol : "$";
	thousand = thousand || ",";
	decimal = decimal || ".";
	var number = this,
	    negative = number &lt; 0 ? "-" : "",
	    i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
	    j = (j = i.length) &gt; 3 ? j % 3 : 0;
	return symbol + negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
};

// Array Remove - By John Resig (MIT Licensed)
/*Array.prototype.remove = function(from, to) {
  var rest = this.slice((to || from) + 1 || this.length);
  this.length = from &lt; 0 ? this.length + from : from;
  return this.push.apply(this, rest);
};*/
arrayRemove = function(array, from, to) {
  var rest = array.slice((to || from) + 1 || array.length);
  array.length = from &lt; 0 ? array.length + from : from;
  return array.push.apply(array, rest);
};

var displayObjProperties = function(obj){
   var keys = [];
   for(var key in obj){
      // cLog.trace("..#.. Obj Key: &lt;"+key+"&gt;.");
      keys.push(key);
   }
   return keys;
};

/******************** Paul Hu ***************************/
//Control the relationship between Device table and Biological Materal table

var deviceTable = [
//	[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}],
//	[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}],
//	[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}]
];

var _tblDeviceRowInstances = null;
var _tblBioRowInstances = null;

function getTblDeviceRowInstances()
{
	return _tblDeviceRowInstances;
}

function getTblBioRowInstances()
{
	return _tblBioRowInstances;
}

function setTblDeviceRowInstances(value)
{
	_tblDeviceRowInstances = value;
}
function setTblBioRowInstances(value)
{
	_tblBioRowInstances = value;
}


function populateSameField(rowID) {
	for (var i=0; i&lt;deviceTable.length; i++ ) {
		var tmpDevice = deviceTable[i];
		
		if ( tmpDevice.deviceID == rowID.rawValue ) {
			if (tmpDevice.bioMaterialTable != null) {
				tmpDevice.bioMaterialTable.txBioAttributetDeviceName.rawValue = 
					tmpDevice.deviceRow.txtDeviceName.rawValue;
			}
			return tmpDevice;
		}
	}
	
	return null;
}

// Return the device which the Bio Material is added to.
function addMaterialInstanceToArray(materialRowInstance) {
	cLog.trace("*** in addMaterialInstanceToArray 00001, deviceTable.length= "+deviceTable.length);
	
	for (var j=0; j&lt;deviceTable.length; j++ ) {
		var tmpDevice = deviceTable[j];
		cLog.trace("*** in addMaterialInstanceToArray 00002");
		if (tmpDevice.bioMaterialTable == null ) {
			cLog.trace("*** in addMaterialInstanceToArray 00003: j=&lt;"+j+"&gt;.");
			//materialRowInstance.resolveNode("rowID").rawValue = tmpDevice.deviceRow.resolveNode("rowID").rawValue; //Also good !
			materialRowInstance.rowID.rawValue = tmpDevice.deviceRow.rowID.rawValue;
			tmpDevice.bioMaterialTable = materialRowInstance;
			
			cLog.trace("*** in addMaterialInstanceToArray 1: &lt;"+tmpDevice.deviceID+"&gt;.");
			//cLog.trace("*** in addMaterialInstanceToArray 2: &lt;"+tmpDevice.deviceRow.rowID.rawValue+"&gt;.");
			//cLog.trace("*** in addMaterialInstanceToArray 3: &lt;"+tmpDevice.bioMaterialTable.rowID.rawValue+"&gt;.");
			
			return tmpDevice;
		}
	}
	cLog.trace("*** in addMaterialInstanceToArray 00004");
	return null;
}



function setDropDownList(ddl, ddlList) { // ddlList = "script.DrugAppl.resources.pickList_fr.content.licAppTypeList"
	reset(ddl);
cLog.trace("ddlList is what " + ddlList);
    for(var i=0; i&lt;ddlList.length; i++) {
		ddl.addItem(ddlList[i][1], ddlList[i][0]);
    }
}

function reset(ddl){
	ddl.clearItems();
	ddl.rawValue = ""; 
}

function setAsRequiredField(txtField){

	var companyNameCaption = txtField.caption.value.text.value;
	//cLog.trace("111111" + txtCompanyName.caption.value.text.value);
	txtField.validate.nullTest = "error"; 
	txtField.caption.value.text.value = companyNameCaption + " *";	
}

function setAsOptionField(txtField){
	var companyNameCaption = txtField.caption.value.text.value;
	var lengthStr = txtField.caption.value.text.value.length; 
	txtField.validate.nullTest = ""; 
	//cLog.trace("2222222" + txtCompanyName.caption.value.text.value);
	if (txtField.caption.value.text.value.indexOf(" *") &gt; 0){
	  txtField.caption.value.text.value = txtField.caption.value.text.value.substr(0,lengthStr - 2);
	 //cLog.trace("33333" + txtCompanyName.caption.value.text.value);
	}

}


function showRowIds() {
	cLog.trace("1  in showRowIds");
	for (var j=0; j&lt;deviceTable.length; j++) {
		var tmpDevice = deviceTable[j];
		
		if ( tmpDevice.deviceRow != null ) {
			cLog.trace("1  Device.rowID="+tmpDevice.deviceRow.txtDeviceName.rawValue+"; Device.rowID="+tmpDevice.deviceRow.txtDeviceName+".");
		}
		if ( tmpDevice.bioMaterialTable != null ) {
			cLog.trace("2  bioMaterial.rowID="+tmpDevice.bioMaterialTable.rowID.rawValue+".");
		}
	}

	cLog.trace("3  showRowIds finished !!");
}

/**
  Row ID name must be "rowID" for all tables !!!
 */
function addOneRow(parentSubform, tblSubFormName, tblRowInstances, isMainTable) {
	try {
		//parentSubform: this.parent.parent, tblRowInstances: _sfIdetifierTbl, tblSubFormName: "sfIdetifierTbl"
		//var tblRowInstances = this.parent.parent.resolveNode('sfDevicesId._sfIdetifierTbl');  // Also good !!
		//var tblRowInstances = this.parent.parent.resolveNode('_sfIdetifierTbl');	// Also good !!
		//var tblRowInstances = _sfIdetifierTbl;	
		var addedDevice = tblRowInstances.addInstance(1);
		if (xfa.host.version &lt; 8) {
			xfa.form.recalculate(1);
		}
			
		if ( isMainTable == true ) {
			var lastIndex = tblRowInstances.count-2;
			var lastDevice = parentSubform.resolveNode(tblSubFormName+"["+lastIndex +"]");
			
			cLog.trace("...1 addOneRow lastIndex: &lt;"+lastIndex+"&gt;, lastDevice=&lt;"+lastDevice+"&gt;.");
			
			//var lastDevice = _sfIdetifierTbl[lastIndex]; // Error
			addedDevice.resolveNode("rowID").rawValue = genID(lastDevice);
		
			cLog.trace("...2 addOneRow resolveNode(rowID).rawValue: &lt;"+addedDevice.resolveNode("rowID").rawValue+"&gt;.");
		
			addDevice(addedDevice );
		}
		
		cLog.trace("..... addOneRow is finished !!!");
		
		return addedDevice;
	} catch(exception)
	{
		cLog.warn("Problem with Add an Idetifier button::click", exception);
	}
}

function genID(field) {
	if (field== null) return 0;

	var currIdSerialNo = parseInt(field.rowID.rawValue);
	if (isNaN(currIdSerialNo) || currIdSerialNo&lt;0) return 0;
	return ++currIdSerialNo;
}

function addDevice(device) {
	var currDevice = new Object(); //[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}];
	
	var rawValue = device.rowID.rawValue;
	// var rawValue = device.resolveNode("rowID").rawValue; //also good !!
	
	currDevice.deviceID = rawValue; 	
	currDevice.deviceRow = device; 
	currDevice.bioMaterialTable = null; 

	cLog.trace("*** addDevice::"+currDevice.deviceRow.rowID.rawValue+",, "+" deviceTable.length="+deviceTable.length+".");
	
	deviceTable.push(currDevice);
	
	cLog.trace("*** after deviceTable.length="+deviceTable.length+".");
	return currDevice;
}



////whole form validation


function formValidationAndLock(thisNode) {
    var successValidation = true;
    var lange = cDrugApplModel.getLanguage();
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {

            if (oFields.item(nNodeCount).presence == "hidden" ||
                oFields.item(nNodeCount).presence == "invisible")
                continue;

            // check if there is any checkbox is missing
            if (oFields.item(nNodeCount).name == "txtCkBoxPls") {
                oFields.item(nNodeCount).fillColor = "255,255,255";
                if (!isCheckvalidPaymentMethod()) {
                    oFields.item(nNodeCount).fillColor = "230,125,125";
                    successValidation = false;
                }
            }

            // check if there is any value bigger than 0
            if (oFields.item(nNodeCount).name == "txtEnterValuePls") {
                oFields.item(nNodeCount).fillColor = "255,255,255";
                if (!isValueBiggerZeroMethod()) {
                    oFields.item(nNodeCount).fillColor = "230,125,125";
                    successValidation = false;
                }
            }

            if (oFields.item(nNodeCount).name == "chkBoxCopyReceipt") {
                oFields.item(nNodeCount).fillColor = "255,255,255";

                if (oFields.item(nNodeCount).rawValue == 0) {
                    oFields.item(nNodeCount).fillColor = "230,125,125";
                    successValidation = false;
                }
            }

            if (oFields.item(nNodeCount).mandatory != "disabled") {
                cLog.trace("-- Field Name: " + oFields.item(nNodeCount).name);
                if (oFields.item(nNodeCount).rawValue == null
                    || oFields.item(nNodeCount).rawValue.toString().replace(/\s/g, "").length == 0) {

                    oFields.item(nNodeCount).fillColor = "230,125,125";
                    successValidation = false;
                } else {
                if (oFields.item(nNodeCount).name != "chkBoxCopyReceipt")
                    oFields.item(nNodeCount).fillColor = "255,255,255";
                }
                continue;
            }
            cLog.trace("&amp;&amp; Field Name: " + oFields.item(nNodeCount).name);
        }
    }
    
    var cFormNodeManager = script.core.model.FormNodeManager;
	var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
	var cAccessibility = this.resolveNode("script.Accessibility");
	cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);
    
    if (successValidation == true) {
        cFormNodeManager.getFormNodeForKey("sfInstructionsContent").getNodeInstance().presence = "hidden";
        for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
            var oFields = xfa.layout.pageContent(nPageCount, "field");
            var nNodesLength = oFields.length;
            for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
                if (oFields.item(nNodeCount).access == "protected") {
                    continue;
                }
                if ((oFields.item(nNodeCount).name.toLowerCase().indexOf("chkD") == -1) &amp;&amp; (oFields.item(nNodeCount).name.toLowerCase().indexOf("signature") == -1))
                    oFields.item(nNodeCount).access = "readOnly";
                if (oFields.item(nNodeCount).name.indexOf("btn") &gt;= 0) {
                    if (oFields.item(nNodeCount).name == "btnModifyBottom") continue;
                    oFields.item(nNodeCount).fillColor = "230,230,230";
                    //cLog.info("&amp;&amp; Field Name: "+oFields.item(nNodeCount).name);
                }
                //oFields.item(nNodeCount).fillColor = "255,255,255";
            }
        }
        
        cGlobalRequirement.finalizedSuccessMessage();
        if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
            //app.alert("The form has been validated and locked for editing. It can now be printed and sent to Health Canada. In order to modify the form, press the \"Modify\" button.");
            app.alert("We strongly encourage you to save the form at this point. Once the form is digitally signed, you will not be able to correct it and you will need to re-input all the information again. Please proceed to signing the form after saving it");
        } else {
            //app.alert("Le formulaire a été validé et verrouiller contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton \"Modifier\".");
            app.alert("Nous vous encourageons fortement à sauvegarder le formulaire à ce point-ci. Une fois que le formulaire est signé électroniquement, vous serez incapable de le corriger et vous aurez à entrer à nouveau toute l'information. Veuillez procéder à la signature du formulaire une fois que vous l'avez sauvegarder.");
        }
    } else {
        cGlobalRequirement.finalizedFailMessage();
    }
}



function makeReadonly() {
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
            //if(oFields.item(nNodeCount).value == "sfFinalizeButton"){
            //app.alert("The Company ID must contain 6 digits");
            //}
            oFields.item(nNodeCount).access = "readOnly";
        }
    }
}

function makeEditable() {
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
        	//cLog.trace("&amp;&amp; Field Name: "+oFields.item(nNodeCount).name);
	        if (oFields.item(nNodeCount).access == "readOnly") {
	        	oFields.item(nNodeCount).access = "open";
	        }
	        if(oFields.item(nNodeCount).name.indexOf("btn")&gt;=0){
				oFields.item(nNodeCount).fillColor = "212,208,200";
				 }	        
        }
    }
}




function isCheckvalidPaymentMethod() {
    var chk = new Array(6);
    chk[0] = cFormNodeManager.getFormNodeForKey("chkBoxBW").getNodeInstance().rawValue;
    chk[1] = cFormNodeManager.getFormNodeForKey("chkBoxCHQ").getNodeInstance().rawValue;
    chk[2] = cFormNodeManager.getFormNodeForKey("chkBoxMO").getNodeInstance().rawValue;
    chk[3] = cFormNodeManager.getFormNodeForKey("chkBoxCC").getNodeInstance().rawValue;
    chk[4] = cFormNodeManager.getFormNodeForKey("chkBoxEC").getNodeInstance().rawValue;
    chk[5] = cFormNodeManager.getFormNodeForKey("chkBoxIntBD").getNodeInstance().rawValue;
    var chkValid = false;
    for (var i = 0; i &lt;= 5; i++) {
        if (chk[i] == "1") chkValid = true;
    }
    return chkValid;
}




function isValueBiggerZeroMethod() {
    var chk = new Array(3);
    chk[0] = cFormNodeManager.getFormNodeForKey("txtDMFRegistration").getNodeInstance();
    chk[1] = cFormNodeManager.getFormNodeForKey("txtDMFUpdate").getNodeInstance();
    chk[2] = cFormNodeManager.getFormNodeForKey("txtDMFNumLet").getNodeInstance();
    var chkValid = false;
    for (var i = 0; i &lt;= 2; i++) {
        if (isValidNumber(chk[i])) chkValid = true;
    }
    return chkValid;
}


function isValidNumber(field) {
    
    var validNumber = false;
    if (field.rawValue != null &amp;&amp; field.rawValue.toString() != "" &amp;&amp; field.rawValue &gt; 0) {
     validNumber = true; 
	}
    return validNumber;
}

function setAsRequiredField(txtField){

	var companyNameCaption = txtField.caption.value.text.value;
	//cLog.trace("111111" + txtCompanyName.caption.value.text.value);
	txtField.validate.nullTest = "error"; 
	txtField.caption.value.text.value = companyNameCaption + " *";	
}

function setAsOptionField(txtField){
	var companyNameCaption = txtField.caption.value.text.value;
	var lengthStr = txtField.caption.value.text.value.length; 
	txtField.validate.nullTest = ""; 
	//cLog.trace("2222222" + txtCompanyName.caption.value.text.value);
	if (txtField.caption.value.text.value.indexOf(" *") &gt; 0 || txtField.caption.value.text.value.indexOf("*") &gt; 0){
	  txtField.caption.value.text.value = txtField.caption.value.text.value.substr(0,lengthStr - 2);
	 //cLog.trace("33333" + txtCompanyName.caption.value.text.value);
	}

}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="nodeDefinitions" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="DMFapplication">	
var content={
		form: {
			somExpression: "xfa.form.DrugAppl"},
				
		sfPage1: {
			somExpression: "sfPage1",
			parentNodeKey: "form"},
		
		sfMainHeader: {
			somExpression: "sfMainHeader",
			parentNodeKey: "sfPage1"},	
		
		lblFormTitle: {
			somExpression: "lblFormTitle",
			parentNodeKey: "sfMainHeader",
			labelKey:		"lbApplTitle"},
			
		pageLanguage: {
			somExpression: "pageLanguage",
			parentNodeKey: "sfMainHeader"},
			
		chkEnglish: {
			somExpression: "chkEnglish",
			parentNodeKey: "pageLanguage"},
			
		chkFrancais: {
			somExpression: "chkFrancais",
			parentNodeKey: "pageLanguage"},			
		
		sfInstructions: {
			somExpression: "sfInstructions",
			parentNodeKey: "sfPage1"},
		
		btnViewInstructions: {
			somExpression: "btnViewInstructions",
			parentNodeKey: "sfInstructions",
			labelKey:		"viewInstructions"},
		
		btnHideInstructions: {
			somExpression: "btnHideInstructions",
			parentNodeKey: "sfInstructions",
			labelKey:		"hideInstructions"},
		
		/*Button1: {
			somExpression: "Button1",
			parentNodeKey: "sfInstructions"},
		
		Button2: {
			somExpression: "Button2",
			parentNodeKey: "sfInstructions"},
			*/
		
		sfInstructionsContent: {
			somExpression: "sfInstructionsContent",
			parentNodeKey: "sfInstructions"},
		
		lblInstructions_en: {
			somExpression: "lblInstructions_en",
			parentNodeKey: "sfInstructionsContent",
			},
		
		lblInstructions_fr: {
			somExpression: "lblInstructions_fr",
			parentNodeKey: "sfInstructionsContent",
			},
			
		sfPart1: {
			somExpression: "sfPart1",
			parentNodeKey: "sfPage1"},
					
		lblDMFOwner: {
			somExpression:	"lblDMFOwner",
			parentNodeKey:	"sfPart1",
			labelKey:		"dmfOwner"},
		
		txtDMFName: {
			somExpression: "txtDMFName",
			parentNodeKey: "sfPart1",
			labelKey:	   "dmfName"},
			
		ownerCompanyName: {
			somExpression: "txtCompanyName",
			parentNodeKey: "sfPart1",
			labelKey:	   "companyName"},
		
		
			
		sfPart2: {
			somExpression: "sfPart2",
			parentNodeKey: "sfPage1"},

		lblCalcPayment: {
			somExpression: "lblCalcPayment",
			parentNodeKey: "sfPart2",
			labelKey:	   "calcPayment"},
			
		
		
		txtEnterValuePls: {
			somExpression: "txtEnterValuePls",
			parentNodeKey: "sfPart2",
			labelKey:	   "labelEnterValuePls"},
			
							
		txtDMFRegistration: {
			somExpression: "txtDMFRegistration",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfRegistration"},
												
		txtDMFRegCalc: {
			somExpression: "txtDMFRegCalc",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfRegCalc"},

		txtDMFUpdate: {
			somExpression: "txtDMFUpdate",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfUpdate"},
       
		txtDMFUpdateCalc: {
			somExpression: "txtDMFUpdateCalc",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfUpdateCalc"},
			
		txtDMFNumLet: {
			somExpression: "txtDMFNumLet",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfNumLet"},

		txtDMFNumLetCalc: {
			somExpression: "txtDMFNumLetCalc",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfNumLetCalc"},

		retangle: {
			somExpression: "rectangle",
			parentNodeKey: "sfPart2"},

		txtDMFTotalFees: {
			somExpression: "txtDMFTotalFees",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfTotalFees"},			
			
		txtDMFNumber: {
			somExpression: "txtDMFNumber",
			parentNodeKey: "sfPart2",
			labelKey:	   "dmfNumber"},
			
		txtAccountNumber: {
			somExpression: "txtAccountNumber",
			parentNodeKey: "sfPart2",
			labelKey:	   "accountNumber"},									

		sfPart3: {
			somExpression: "sfPart3",
			parentNodeKey: "sfPage1"},

		lblMethodPayment: {
			somExpression: "lblMethodPayment",
			parentNodeKey: "sfPart3",
			labelKey:	   "methodPayment"},

		sfPayment: {
			somExpression: "sfPayment",
			parentNodeKey: "sfPart3"},

		txtCkBoxPls: {
			somExpression: "txtCkBoxPls",
			parentNodeKey: "sfPayment",
			labelKey:	   "labelTxtCkBoxPls"},
			
		chkBoxBW: {
			somExpression: "chkBoxBW",
			parentNodeKey: "sfPayment",
			labelKey:	   "chkBW"},
			
		chkBoxIntBD: {
			somExpression: "chkBoxIntBD",
			parentNodeKey: "sfPayment",
			labelKey:	   "chkIntBD"},
			
		chkBoxCHQ: {
			somExpression: "chkBoxCHQ",
			parentNodeKey: "sfPayment",
			labelKey:	   "chkCHQ"},

		chkBoxMO: {
			somExpression: "chkBoxMO",
			parentNodeKey: "sfPayment",
			labelKey:	   "chkMO"},

		chkBoxCC: {
			somExpression: "chkBoxCC",
			parentNodeKey: "sfPayment",
			labelKey:	   "chkCC"},

		chkBoxEC: {
			somExpression: "chkBoxEC",
			parentNodeKey: "sfPayment",
			labelKey:	   "chkEC"},

		chkBlank: {
			somExpression: "chkBlank",
			parentNodeKey: "sfPayment"},

		sfBankWire: {
			somExpression: "sfBankWire",
			parentNodeKey: "sfPart3"},
			
		lblReference1: {
			somExpression: "lblReference1",
			parentNodeKey: "sfBankWire",
			labelKey:	   "bankWire"},

		txtDateWired: {
			somExpression: "txtDateWired",
			parentNodeKey: "sfBankWire",
			labelKey:	   "dateWired"},
		
		txtTotalWired: {
			somExpression: "txtTotalWired",
			parentNodeKey: "sfBankWire",
			labelKey:	   "totalWired"},

		txtBankName: {
			somExpression: "txtBankName",
			parentNodeKey: "sfBankWire",
			labelKey:	   "bankName"},

		sfBoxCopyReceipt: {
			somExpression: "sfBoxCopyReceipt",
			parentNodeKey: "sfBankWire"},
		
		chkBoxCopyReceipt: {
			somExpression: "chkBoxCopyReceipt",
			parentNodeKey: "sfBoxCopyReceipt",
			labelKey:	   "copyReceipt",
			toolTipKey: "copyReceipt"},
		
		txtBoxCopyReceipt: {
			somExpression: "txtBoxCopyReceipt",
			parentNodeKey: "sfBoxCopyReceipt",
			labelKey:	   "copyReceipt"},

		sfCheque: {
			somExpression: "sfCheque",
			parentNodeKey: "sfPart3"},
			
		lblReference2: {
			somExpression: "lblReference2",
			parentNodeKey: "sfCheque",
			labelKey:	   "chequeDetails"},

		txtCHQNumber: {
			somExpression: "txtCHQNumber",
			parentNodeKey: "sfCheque",
			labelKey:	   "chequeNumber"},
			
		sfBankDraft: {
			somExpression: "sfBankDraft",
			parentNodeKey: "sfPart3"},
			
		lblReferenceBD: {
			somExpression: "lblReferenceBD",
			parentNodeKey: "sfBankDraft",
			labelKey:	   "bankDraftDetails"},

		txtBDNumber: {
			somExpression: "txtBDNumber",
			parentNodeKey: "sfBankDraft",
			labelKey:	   "bankDraftNumber"},			

		sfCreditCard: {
			somExpression: "sfCreditCard",
			parentNodeKey: "sfPart3"},

		lblReference3: {
			somExpression: "lblReference3",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "creditCard"},

		txtCompanyName: {
			somExpression: "txtCompanyName",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "creditCompanyName"},				

		txtDMFNameCC: {
			somExpression: "txtDMFNameCC",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "dmfNameCC"},

		
ddlCreditCardCC: {
	somExpression: "ddlCreditCardCC",
	parentNodeKey: "sfCreditCard",
	labelKey: "cardType",
	pickListKey: "listCardType"},

txtCreditCardNumberCC: {
	somExpression: "txtCreditCardNumberCC",
	parentNodeKey: "sfCreditCard",
	labelKey: "txtCreditCardNumberCC"},

ddlMonth: {
	somExpression: "ddlMonth",
	parentNodeKey: "sfCreditCard",
	labelKey: "ddlMonth"},

ddlYear: {
	somExpression: "ddlYear",
	parentNodeKey: "sfCreditCard",
	labelKey: "ddlYear"},

		txtCCHolderName: {
			somExpression: "txtCCHolderName",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "cardHolderName"},						

			
		txtCCHPhoneNumber: {
			somExpression: "txtCCHPhoneNumber",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "cardPhoneNumber"},			


		txtCCSignature: {
			somExpression: "txtCCSignature",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "ccSignature"},

		rectangle: {
			somExpression: "rectangle",
			parentNodeKey: "sfCreditCard"},

		sfExistingCredit: {
			somExpression: "sfExistingCredit",
			parentNodeKey: "sfPart3"},
			
		lblReference4: {
			somExpression: "lblReference4",
			parentNodeKey: "sfExistingCredit",
			labelKey:	   "existingCredit"},

		txtDMFCompanyName: {
			somExpression: "txtDMFCompanyName",
			parentNodeKey: "sfExistingCredit",
			labelKey:	   "dmfCompanyName"},

		txtECAccountNumber: {
			somExpression: "txtECAccountNumber",
			parentNodeKey: "sfExistingCredit",
			labelKey:	   "ecAccountNumber"},

		txtCCHolderAddress: {
			somExpression: "txtCCHolderAddress",
			parentNodeKey: "sfCreditCard",
			labelKey:	   "ccHolderAddress"},

		txtECAmount: {
			somExpression: "txtECAmount",
			parentNodeKey: "sfExistingCredit",
			labelKey:	   "ecAmount"},
			
		txtECApplied: {
			somExpression: "txtECApplied",
			parentNodeKey: "sfExistingCredit",
			labelKey:	   "ecApplied"},
																																		
		ddlReason: {
			somExpression:	"ddlReason",
			parentNodeKey:	"sfPart3",
			labelKey:		"lbReason",
			pickListKey:	"listReason"},
		
		ddlReasonFullList: {
			somExpression:	"ddlReasonFullList",
			parentNodeKey:	"sfPart3",
			labelKey:		"lbReason",
			pickListKey:	"listReasonFullList"},
			
		txtSpecify: {
			somExpression: "txtSpecify",
			parentNodeKey: "sfPart3",
			labelKey:	   "specify"},
			
		txtWarning: {
			somExpression: "txtWarning",
			parentNodeKey: "sfPart3",
			labelKey:	   "Warning"},
			
		sfPart4: {
			somExpression: "sfPart4",
			parentNodeKey: "sfPage1"},

		lblCertification: {
			somExpression: "lblCertification",
			parentNodeKey: "sfPart4",
			labelKey:	   "certification"},

		txtDMFUndersign: {
			somExpression: "txtDMFUndersign",
			parentNodeKey: "sfPart4",
			labelKey:	   "dmfUndersign"},

		txtDMFName4: {
			somExpression: "txtDMFName4",
			parentNodeKey: "sfPart4",
			labelKey:	   "dmfName4"},
			
		signatureOption: {
	somExpression: "signatureOption",
	parentNodeKey: "sfPart4",
	labelKey: "signatureOption"},

chkDigitalID: {
	somExpression: "chkDigitalID",
	parentNodeKey: "signatureOption",
	labelKey: "chkDigitalID"},

chkDigitalImage: {
	somExpression: "chkDigitalImage",
	parentNodeKey: "signatureOption",
	labelKey: "chkDigitalImage"},

digSignature: {
	somExpression: "digSignature",
	parentNodeKey: "sfPart4",
	labelKey: "digSignature"},
imgSignature: {
	somExpression: "imgSignature",
	parentNodeKey: "sfPart4",
	labelKey: "imgSignature"},	
ddtDate: {
	somExpression: "ddtDate",
	parentNodeKey: "sfPart4",
	labelKey:	"ddtDate"},
			
		sfFinalizeButton: {
			somExpression: "sfFinalizeButton",
			parentNodeKey: "sfPage1"},			

		btnFinalizeBottom: {
			somExpression: "btnFinalizeBottom",
			parentNodeKey: "sfFinalizeButton",
			labelKey:	   "finalize"},
			
		btnModifyBottom: {
			somExpression: "btnModifyBottom",
			parentNodeKey: "sfFinalizeButton",
			labelKey:	   "modify"},
					
		chkIsFinalized: {
			somExpression: "chkIsFinalized",
			parentNodeKey: "sfFinalizeButton"},
}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="general_en">

var content={

	lbApplTitle: 		"Drug Master File (DMF) Application Fee Form",
	hideInstructions:	"Hide Instructions",
	viewInstructions:	"Show Instructions",
	instructions:		"&lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"text-align:center;font-size:12pt;font-weight:bold;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"margin-top:6pt;margin-bottom:6pt;font-size:8pt;font-weight:bold;letter-spacing:0in\"&gt;Cheques, money orders, international bank drafts or wires&lt;span style=\"font-weight:normal\"&gt; should be made payable to:&lt;br/&gt;The “Receiver&lt;span style=\"xfa-spacerun:yes\"&gt;  &lt;/span&gt;General&lt;span style=\"xfa-spacerun:yes\"&gt;  &lt;/span&gt;for&lt;span style=\"xfa-spacerun:yes\"&gt;  &lt;/span&gt;Canada”.&lt;span style=\"xfa-spacerun:yes\"&gt;  &lt;/span&gt;Cheques drawn on non-Canadian banks MUST be issued in coordination with a referenced Canadian bank (that is, referenced on cheque), otherwise they are&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/span&gt;NOT ACCEPTED&lt;span style=\"font-weight:normal\"&gt;.&lt;/span&gt;&lt;/p&gt;&lt;p style=\"margin-top:6pt;margin-bottom:6pt;font-size:8pt;font-weight:bold;letter-spacing:0in\"&gt;Wire payments&lt;span style=\"font-weight:normal\"&gt; of fees paid in advance of the service will be accepted only when wired in&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/span&gt;CANADIAN FUNDS&lt;span style=\"font-weight:normal\"&gt; to:&lt;/span&gt;&lt;br/&gt;Bank Name&lt;span style=\"font-weight:normal\"&gt;:&lt;br/&gt;Scotiabank&lt;br/&gt;Toronto Business Service Centre&lt;br/&gt;40 King St., West,&lt;br/&gt;Toronto, Ontario, Canada,&lt;br/&gt;M5H 1H1&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;letter-spacing:0in\"&gt;SWIFT&lt;span style=\"font-weight:normal\"&gt;: NOSCCATT&lt;/span&gt;&lt;br/&gt;Bank Number&lt;span style=\"font-weight:normal\"&gt;: 002&lt;/span&gt;&lt;br/&gt;Transit Number&lt;span style=\"font-weight:normal\"&gt;: 47696&lt;/span&gt;&lt;br/&gt;Beneficiary Name&lt;span style=\"font-weight:normal\"&gt;:&lt;span style=\"xfa-spacerun:yes\"&gt;  &lt;/span&gt;HEALTH CANADA - CFOB&lt;/span&gt;&lt;br/&gt;Beneficiary Account No&lt;span style=\"font-weight:normal\"&gt;: 476961242210&lt;/span&gt;&lt;br/&gt;Description Field&lt;span style=\"font-weight:normal\"&gt;: 022-22879 * Also include your company name and product name, as well as your invoice number and customer number if applicable.&lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;Please ensure all service charges, including fees charged by your bank or any intermediary banks, are covered by your payment.&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-weight:bold\"&gt;Health Canada is not responsible for any fees charged during the transfer process&lt;/span&gt;. Failure to pay the full amount outstanding will result in a balance owing on your account.&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-weight:bold\"&gt;Any payments sent in non-Canadian funds will be rejected&lt;/span&gt;.&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;For further information on wire payment, contact Accounts Receivable at 1-800-815-0506, (613) 957-1052 or via email at&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;a href=\"mailto:AR-CR@HC-SC.GC.CA?subject=AR-CR%40HC-SC.GC.CA\" style=\"margin-top:0pt;margin-bottom:0pt;font-family:'Myriad Pro'\"&gt;AR-CR@HC-SC.GC.CA&lt;/a&gt;. If problems occur with the transaction, please contact the Scotiabank at (416) 866-6430.&lt;/p&gt;&lt;/body&gt;", 

	chkEnglish:			"English",
	chkFrench:			"French",
	dmfOwner:			" DMF OWNER/AGENT",
	dmfName:			"Drug Master File Name",
	companyName:		"Company Name",
	dmfNumber:			"DMF Number (if issued)",
	accountNumber:		"Customer/Client Account Number (if issued)",

	calcPayment:		" CALCULATION OF PAYMENT",
	dmfRegistration: 	"DMFs for New Registration",
	dmfRegCalc:			"x $424 Cdn =",
	dmfUpdate:			"DMF Biannual Update",
	dmfUpdateCalc:		"x $191 Cdn =",
	dmfNumLet:			"Number of Letters of Access Enclosed",
	dmfNumLetCalc:		"x $191 Cdn =",
	dmfTotalFees:		"TOTAL FEE",
	
	
	methodPayment:		" METHOD OF PAYMENT",
	chkIntBD:		 		"International Bank Draft",
	chkBW:		 		"Bank Wire",
	chkCHQ:		 		"Cheque",
	chkMO:		 		"Money Order",
	chkCC:		 		"MasterCard / Visa/ Amex",
	chkEC:		 		"Payment Using Existing Credit",
	chkBlank:	 		" ",
	lbReason:		 	"Fees Paid By",
	specify:			"Please Specify",
	Warning:			"Please do not include Part 4 of this form which contains credit card, wire, or cheque payment information within an electronic submission as the information cannot be deleted.  It will remain as part of the record.  Please mail Part 4 to the Office of Submissions &amp; Intellectual Property, ATTN: Cost Recovery.  Office of Submissions &amp; Intellectual Property, Therapeutic Products Directorate, Health Canada, 101 Tunney's Pasture Driveway, Finance Building, Address Locator 0201A, Ottawa, Ontario K1A 0K9. ",

	bankWire: 			"BANK WIRE DETAILS",
	dateWired: 			"Date the funds were wired (YYYY-MM-DD)",
	totalWired:  		"Amount of money wired CDN$",
	bankName:  			"Name of the bank the funds were sent from",
	copyReceipt:		"A copy of the transaction receipt is enclosed",
	chequeDetails:		"CHEQUE DETAILS",
	chequeNumber:		"Cheque Number",
	bankDraftDetails:	"BANK DRAFT DETAILS",
	bankDraftNumber:	"Bank Draft Number",	
	creditCard:			"CREDIT CARD DETAILS",
	creditCompanyName:	"Company Name",
	dmfNameCC:			"Drug Master File Name",
	cardType:			"Credit Card Type",
	cardHolderName:		"Card Holder's Name",
	cardNumber:			"Credit Card Number (Full Number)",
	cardPhoneNumber:	"Credit Card Holder's Telephone Number",
	expiryDate:			"Expiry Date (MM/YY)",	
	ccSignature:		"Authorized Signature",
	existingCredit:		"EXISTING CREDIT - PLEASE APPLY THE FOLLOWING CREDIT TOWARDS THE DRUG MASTER FILE FEE",
	dmfCompanyName:		"Drug Master File Company Name",
	ecAccountNumber:	"Customer/Client Account Number",
	ccHolderAddress:	"Credit Card Holder's Address",
	ecAmount:			"Existing Credit Amount $",
	ecApplied:			"Existing Credit Amount to be Applied $",

	certification:	 	" CERTIFICATION",	
	dmfUndersign:	 	"The undersigned certifies that payment (in Canadian currency) is enclosed for",
	dmfName4:	 		"Name of Authorized Signing Official",
	chkDigitalID:	"Digital ID",
chkDigitalImage:	"Image Signature",
digSignature:	"Signature",
imgSignature:	"Signature",
	ddtDate:	"Date (YYYY-MM-DD)",
	finalize:	 		"Finalize",
	modify:	 		    "Modify", 
	
	
	ddlMonth:	"Credit Card Expiry Date:  MM",				
	ddlYear:	"YY",
	txtCreditCardNumberCC: "Credit Card Number (full number):",
	//add comma
}						
</script>
                  <script contentType="application/x-javascript" name="general_fr">var content={

	lbApplTitle: 		"Formulaire sur les frais pour Fiche maîtresse du médicament (FMM)",
	hideInstructions:	"Masquer les instructions",
	viewInstructions:	"Afficher les instructions",

	instructions:		"&lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"text-align:center;font-size:12pt;font-weight:bold;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"margin-top:6pt;margin-bottom:6pt;font-size:8pt;font-weight:bold;letter-spacing:0in\"&gt;Les chèques, mandats-poste, traites bancaires international ou virements télégraphiques&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-weight:normal\"&gt;doivent être libellés à l'ordre du :&lt;br/&gt;\"Receveur général du Canada\". Les chèques tirés sur des banques non canadiennes DOIVENT être émis en coordination avec une banque canadienne de référence (c'est-à-dire, une banque canadienne dont le nom figure sur le chèque), à défaut de quoi le chèque&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/span&gt;NE PEUT ÊTRE ACCEPTÉ.&lt;/p&gt;&lt;p style=\"margin-top:6pt;margin-bottom:6pt;font-size:8pt;font-weight:bold;letter-spacing:0in\"&gt;Les virements télégraphiques&lt;span style=\"font-weight:normal\"&gt; des frais payés avant la réception du service seront acceptés seulement lorsqu'ils seront versés en&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/span&gt;DEVISES CANADIENNES&lt;span style=\"font-weight:normal\"&gt; à :&lt;/span&gt;&lt;br/&gt;Nom de la banque :&lt;span style=\"font-weight:normal\"&gt;&lt;br/&gt;Banque Scotia&lt;br/&gt;Centre de services aux entreprises de Toronto&lt;br/&gt;40 rue King ouest&lt;br/&gt;Toronto, Ontario, Canada,&lt;br/&gt;M5H 1H1&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;font-weight:bold;letter-spacing:0in\"&gt;SWIFT&lt;span style=\"font-weight:normal\"&gt;: NOSCCATT&lt;/span&gt;&lt;br/&gt;Numéro de banque :&lt;span style=\"font-weight:normal\"&gt; 002&lt;/span&gt;&lt;br/&gt;Numéro de domiciliation :&lt;span style=\"font-weight:normal\"&gt; 47696&lt;/span&gt;&lt;br/&gt;Nom du bénéficiaire :&lt;span style=\"font-weight:normal\"&gt; Santé Canada - DGCM&lt;/span&gt;&lt;br/&gt;Numéro de compte :&lt;span style=\"font-weight:normal\"&gt; 476961242210&lt;/span&gt;&lt;br/&gt;Description :&lt;span style=\"font-weight:normal\"&gt; 022-22879 * Joignez le nom de votre compagnie, le nom du produit et votre numéro de client ou facture si applicable.&lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;br/&gt;Veuillez vous assurer que tous les frais de gestion, y compris les frais chargés par votre banque ou une banque intermédiaire sont couverts par votre paiement.&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-weight:bold\"&gt;Santé Canada n'est pas responsable des frais facturés pendant le processus de transfert&lt;/span&gt;.Si vous ne versez pas le montant total, vous aurez un solde à payer sur votre compte.&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-weight:bold\"&gt;Tous les paiements versés en devises autres que canadiennes seront rejetés.&lt;br/&gt;&lt;/span&gt;&lt;br/&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"tab-interval:0.5in;tab-stops:left 0.167in left 0.5in left 1in left 1.5in left 2in left 2.5in left 3.292in left 3.5in left 4in left 4.5in left 5in left 5.5in left 6in left 6.5in;font-size:8pt;letter-spacing:0in\"&gt;Pour de plus amples renseignements sur cette méthode de paiement, veuillez communiquer avec le Service des comptes recevables au 1-800-815-0506, 613-957-1052 ou par courriel à&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;a href=\"mailto:AR-CR@HC-SC.GC.CA?subject=AR-CR%40HC-SC.GC.CA\" style=\"margin-top:0pt;margin-bottom:0pt;font-family:'Myriad Pro'\"&gt;AR-CR@HC-SC.GC.CA&lt;/a&gt;. En cas de difficulté au niveau de l'opération bancaire, veuillez communiquer avec la Banque Scotia au 416-866-6430&lt;/p&gt;&lt;/body&gt;", 

	chkEnglish:			"Anglais",
	chkFrench:			"Français",
	
	dmfOwner:			" PROPRIÉTAIRE FMM/AGENT",
	dmfName:			"Fiche maîtresse du médicament",
	companyName:		"Nom de l'entreprise",
	dmfNumber:			"Numéro de la FMM (si disponible)",
	accountNumber:		"Numéro de client (si disponible)",

	calcPayment:		" CALCUL DU PAIEMENT",
	dmfRegistration: 	"Enregistrement d'une fiche maîtresse du médicament (FMM):",
	dmfRegCalc:			"x 424$ Cdn =",
	dmfUpdate:			"FMM mise à jour bi-annuelle:",
	dmfUpdateCalc:		"x 191$ Cdn =",
	dmfNumLet:			"Nombre de lettre d'accès jointes:",
	dmfNumLetCalc:		"x 191$ Cdn =",
	dmfTotalFees:		"FRAIS TOTAUX (Somme totale):",
	
	
	methodPayment:		" MODE DE PAIEMENT",
	lblPaymInstructions_fr: "",
	chkIntBD:		 	"Projet de la Banque internationale",
	chkBW:		 		"Virements télégraphiques:",
	chkCHQ:		 		"Chèque/Traites bancaires :",
	chkMO:		 		"Mandat-poste :",
	chkCC:		 		"MasterCard / Visa / Amex",
	chkEC:		 		"Paiement utilisant un crédit existant",
	chkBlank:	 		" ",
	lbReason:		 	"Frais payé par",
	specify:			"Veuillez spécifier",
	Warning:			"S’il vous plaît ne pas inclure partie 4 de ce formulaire qui contient la carte de crédit, virement, ou le paiement par chèque dans une soumission électronique car l'information ne peut pas être supprimé.  Elle restera dans le dossier.  S'il vous plaît envoyer partie 4 au Bureau des présentations et de la propriété intellectuelle, à l'attention: le recouvrement des coûts.   Bureau des présentations et de la propriété intellectuelle, Direction des produits thérapeutiques, Santé Canada, 101 promenade du Pré Tunney, Immeuble des Finances, de l'adresse 0201A1, Ottawa, Ontario K1A 0K9.",

	bankWire: 			"VIREMENTS TÉLÉGRAPHIQUES",
	dateWired: 			"La date à laquelle les fonds ont été câblés (AAAA/MM/JJ):",
	totalWired:  		"La valeur des fonds (en devises canadiennes) :",
	bankName:  			"Le nom de la banque d'où les fonds ont été envoyés :",
	copyReceipt:		"Une copie du reçu de transaction de votre banque est c-jointe :",
	chequeDetails:		"CHÈQUE/TRAITES BANCAIRES",
	chequeNumber:		"Chèque/numéro de traites bancaires: ",
	bankDraftDetails:	"MANDAT-POSTE :",
	bankDraftNumber:	"Numéro de la traite bancaire",	
	creditCard:			"DÉTAILS DE LA CARTE DE CRÉDIT",
	creditCompanyName:	"Nom de l'entreprise",
	dmfNameCC:			"Nom de la fiche maîtresse du médicament",
	cardType:			"Type de carte de crédit",
	cardHolderName:		"Nom du titulaire de la carte de crédit",
	cardNumber:			"Numéro de la carte de crédit (au complet)",
	cardPhoneNumber:	"Numéro de téléphone du titulaire de la carte de crédit",
	expiryDate:			"Date d'expiration (MM/AA)",	
	ccSignature:		"Signataire autorisé",
	existingCredit:		"CRÉDIT EXISTANT - VEUILLEZ APPLIQUER LE CRÉDIT SUIVANT AUX FRAIS DE FICHE MAÎTRESSE DU MÉDICAMENT",
	dmfCompanyName:		"Nom de l'entreprise de la fiche maîtresse du médicament",
	ecAccountNumber:	"Numéro de client",
	ccHolderAddress:	"Adresse du titulaire de la carte de crédit",
	ecAmount:			"Montant en $ du crédit existant",
	ecApplied:			"Montant du crédit existant à appliquer",

	certification:	 	" CERTIFICATION",	
	dmfUndersign:	 	"Le signataire ci-dessous certifie que le paiement (en dollars canadiens) est de",
	dmfName4:	 		"Nom du signatire autorisé",
	chkDigitalID:	"ID électronique",
chkDigitalImage:	"Image de signature",
digSignature:	"Signature",
imgSignature:	"Signature",
	ddtDate:	"Date (YYYY-MM-JJ)",
	finalize:	 		"Finaliser",
	modify:	 		    "Modifier", 
	
	
	ddlMonth:	"Date d'expiration de carte de crédit: MM",			
	ddlYear:	"AA",
	txtCreditCardNumberCC: "Numéro de la carte de crédit (en entier) :",
	
	
	//add comma
}						
</script>
                  <script contentType="application/x-javascript" name="pickList_en">//picklists for the form. Save value first, followed by display value
var content={

	listReason:	[
				["DMFO","DMF Owner"],
				["DMFA","DMF Agent"],
				],

	listReasonFullList:	[
				["DMFO","DMF Owner"],
				["DMFA","DMF Agent"],
				["OTHER","Other - For Letter of Access Only"]],
								
	listCardType:[ 
				["1","Visa"],
				["2","Mastercard"],
				["3","Amex"],
				
	
	],	




}//end content

</script>
                  <script contentType="application/x-javascript" name="pickList_fr">//picklists for the form. Save value first, followed by display value
var content={

	listReason:	[
				["DMFO","Propriétaire FMM"],
				["DMFA","Agent FMM"],
				],
	
	listReasonFullList:	[
				["DMFO","Propriétaire FMM"],
				["DMFA","Agent FMM"],
				["OTHER","Autre - pour lettre d'accès seulement"]],
								
	listCardType:[ 
				["1","Visa"],
				["2","Mastercard"],
				["3","Amex"],
				
				
			
	
	],	




}//end content
</script>
                  <script contentType="application/x-javascript" name="commonError_en">

var content={

		error_ccExpiredDate: "Date is already expired",
		error_badLicenseNumberFormat : "License Number must be digits and not more than 4 digits",		

		error_badBankDraftNumberFormat : "Bank Draft Number field must be alpha numeric and 2-20 characters",		
		error_badCheckNumberFormat : "Cheque Number field must be alpha numeric and 2-20 characters",		
		
		error_badPositiveNumberFormat : "The value you entered is not allowed to be less than 0",		
		
		error_badDMFNumberFormat : "Drug Master File (DMF) Number must be of the form 9999-999",
		error_badCustomerAcctNum : "Customer/Client Account Number must be 5 numbers",
		
		error_badDateValue: "Please enter Valid Date. Date must be in this format: YYYY-MM-DD", 
		valueLessThanZeroError:   "The value cannot be less than 0.",
		valueMoreThanElevenError:   "The value cannot be more than 100 billion",
		
		visaNumError:     "Error format with the number of Visa credit Card.",
		masterNumError:   "Error format with the number of Master credit card.",
		amexNumError:	"Error format with the number of Amex credit card.",
		otherCreditCardNumError: "Please select a credit card type first.",
	
		invalidDateFormat2:  "Invalid Date: Credit Card Valid/Expiry Date should be: MM/YY",
		invalidDateFormat3:  "Invalid Date: Invalid Date, Month, or Year range. Please correct.",
		
		error_badCheckDraftNumber: "Invalid Cheque or Bank Draft Number. Please correct",
		
		labelTxtCkBoxPls: "Please check one or more of the boxes below:",
		
		labelEnterValuePls : "Please enter the number of documents in one or more of the boxes below:",
}//content
</script>
                  <script contentType="application/x-javascript" name="commonError_fr">

var content={
	error_ccExpiredDate: "La date est déjà expiré",
		
	error_badLicenseNumberFormat : "Numéro de licence doit être des chiffres et pas plus de 4 chiffres",		
	
	error_badBankDraftNumberFormat : "Banque sur le terrain Numéro Projet doit être alphanumérique et 2-20 caractères",		
	error_badCheckNumberFormat : "Champ Numéro de chèque doit être alphanumérique et 2-20 caractères",		
	
	error_badPositiveNumberFormat : "La valeur que vous avez entré n'est pas autorisé à être inférieur à 0",		
	
	error_badDMFNumberFormat : "Le numéro de la fiche maîtresse de médicament (FMM) doit être saisi dans le format 9999-999.",
	error_badCustomerAcctNum : "Numéro de client doit être 5 numéros.",
	
	error_badDateValue: "S'il vous plaît entrez Date de validité. La date doit être au format suivant: AAAA-MM-JJ", 
	valueLessThanZeroError:   "La valeur ne peut pas être inférieur à 0.",
	valueMoreThanElevenError:   "La valeur ne peut pas être plus de 100 milliards",
	
	visaNumError:     "Format d'erreur avec le numéro de carte de crédit Visa.",
	masterNumError:   "Format d'erreur avec le numéro de carte de crédit principale.",
	amexNumError:	"Format d'erreur avec le numéro de carte de crédit Amex.",
	otherCreditCardNumError: "S'il vous plaît sélectionner un type de carte de crédit en premier.",
	
	invalidDateFormat2:  "Date non valide: carte de crédit valide / Date d'expiration doit être: MM / AA",
	invalidDateFormat3:  "Blancs Date: Date non valide, Mois, ou Année gamme. S'il vous plaît corriger.",
	
	error_badCheckDraftNumber: "Nombre non valide Projet Chèque ou virement bancaire. S'il vous plaît corriger.",
	
	labelTxtCkBoxPls: "S'il vous plaît cocher une ou plusieurs des cases ci-dessous :",
	
	labelEnterValuePls : "S'il vous plaît entrez le nombre de documents dans une ou plusieurs des cases ci-dessous :",
}//content
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="util" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="Accessibility">var cConfigManager=script.core.util.ConfigurationManager;

//get error indicator and error color
var colourError=cConfigManager.get("colourError");
var errorIndicator=cConfigManager.get("accessErrorIndicator");

/*
* Walk - traverses all the nodes. When a class field is encountered, calls the passed in function, with the specified parameter
*@param - oNode -the source node to start processio
*
*
**/
function walk(oNode, func, param1)
{	
	var count = 0;
	if ((oNode.className == "exclGroup" 
	|| oNode.className == "subform"  
	|| oNode.className == "subformSet" 
	|| oNode.className == "area")&amp;&amp; oNode.presence=="visible")
	{
		for (var i = 0; i &lt; oNode.nodes.length; i++)
		{
			var oChildNode = oNode.nodes.item(i);
			count += walk(oChildNode, func, param1);
		}
	}
	else if (oNode.className == "field")
	{
		if(func(oNode, param1))
		{
			count++;
		}
	}
	
	return count;
}


function updateErrorIndicator(oField){
	
	var toolTipString=oField.assist.toolTip.value;
	var captionString=oField.caption.value.text.value;
	if(oField.fillColor===colourError){
		
		//get tooltip
		if(toolTipString){
			//oField.assist.toolTip.value=oField.assist.toolTip.value.replace(errorIndicator,"");
			if(toolTipString.charAt(toolTipString.length-1)!==errorIndicator){
				oField.assist.toolTip.value=toolTipString+errorIndicator;
			}
			
		}
		
		if(captionString){
			//oField.caption.value.text.value=oField.caption.value.text.value.replace(errorIndicator,"");
			if(captionString.charAt(captionString.length-1)!==errorIndicator){
				oField.caption.value.text.value=captionString+errorIndicator;
			}
		}
		//if no tooltip get caption
		
		//check if indicator exists	
	}else{
	
		if(toolTipString){
			if(toolTipString.charAt(toolTipString.length-1)===errorIndicator){
				oField.assist.toolTip.value=toolTipString.substr(0,toolTipString.length-1);
			}
			
		}
		if(captionString){
			if(captionString.charAt(captionString.length-1)===errorIndicator){
				oField.caption.value.text.value=captionString.substr(0,captionString.length-1);
			}
		
		}
	}	

}



function updateColorErrorsForAccessibility(startNode){


	walk(startNode, updateErrorIndicator)


}

</script>
                  <script contentType="application/x-javascript" name="General">//imports
var cLog             = script.core.util.Log;
var cControllerUtil  = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer    = script.core.util.TypeEnforcer;
var cUiUtil          = script.core.util.UiUtil;
var cException       = script.core.util.Exception;

//globals
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;


var SCRIPT_OBJECT_NAME="General";


//action Global variables
var DMF_NUMBER_VALIDATION_CHANGE="dmf_number_validation_change";


//FORM NODES

var PART1_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1");


//_initialize();


function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case DMF_NUMBER_VALIDATION_CHANGE:
		     cLog.info("@@@ DMFNumber = inside case");
			dmf_number_validation(anEvent.getValue());
			 cLog.info("@@@ get value =" + anEvent.getValue());
		break;

	}
}

/* Checks an event value. If it is not a digit don't allow it to be typed
* Note, only checks single digits, will not test if a value is pasted into a field
*/

function dmf_number_validation(anEvent)
{

	cLog.info("@@@ DMFNumber = inside function length" + anEvent.change.length);
	cLog.info("@@@ DMFNumber = inside function raw" + anEvent);
	if (anEvent.change &amp;&amp; anEvent.change.length==1)
	{
		cLog.info("@@@ DMFNumber = inside first if");			
		if(checkIfDigit(anEvent)===false)
		{
		cLog.info("@@@ DMFNumber = inside second if");
				anEvent.change="";
		}			
	}//endif
cLog.info("@@@ DMFNumber = end of function");
}



/*
* Checks if a digit is a number
*	@param anEvent- an adobe event object
*	@returns true if a digit
*/
function checkIfDigit(anEvent){
	
	//var regExpress=/^\d{1,4}\-?\d{1,4}/;
	//var regExpress=/\d{1,4}\-?/;
	var regExpress=/^[0-9]/;
	//var regExpress=/^([0-9]{1,4})$/;
	
	//var regExpress = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
	                   
	//var regExpress = /^\s*(\+|-)?\d+\s*$/; ;
 
	return(regExpress.test(anEvent.change));
}


/*
// Check for valid credit card type/number
2	var creditCardList = [
3	   //type      prefix   length
4	   ["amex",    "34",    15],
5	   ["amex",    "37",    15],
6	   ["disc",    "6011",  16],
7	   ["mc",      "51",    16],
8	   ["mc",      "52",    16],
9	   ["mc",      "53",    16],
10	   ["mc",      "54",    16],
11	   ["mc",      "55",    16],
12	   ["visa",    "4",     13],
13	   ["visa",    "4",     16]
14	];
15	function isValidCC (cctype, ccnumber) {
16	   var cc = getdigits (ccnumber);
17	   if (luhn (cc)) {
18	      for (var i in creditCardList) {
19	         if (creditCardList [i][0] == (cctype.toLowerCase ())) {
20	            if (cc.indexOf (creditCardList [i][1]) == 0) {
21	               if (creditCardList [i][2] == cc.length) {
22	                  return true;
23	               }
24	            }
25	         }
26	      }
27	   }
28	   return false;
29	}

*/

/*
*	Generic Instance manager checker. Core does not check if it allowed to add an instance
*	This should really be part of core
*	@param instanceManager- the instanceManager to check
*
*/

function addSubformInstance(instanceManager){
	var createdInstance=null;
	//TO DO check if instance manager exists and is an instanceManager
	if((instanceManager.count&lt;instanceManager.max) || instanceManager.max&lt;0){
		 createdInstance=cInstanceManagerUtil.addInstance(instanceManager);

	}
	return(createdInstance);
}

//DMF_NUMBER_VALIDATION_CHANGE
function dmfNumberValidation(oNode){
//cUtil.dmfNumberValidation(this);NUMBER_VALIDATION_CHANGE
	var formatNumber = 0;
	
}
function removeSpecificSubformInstance(instanceManager,sfInstance){
	
	//TO DO check if instance manager exists and is an instanceManager
	if(instanceManager.count&gt;instanceManager.min){
				cInstanceManagerUtil.removeSpecificInstance(sfInstance);

	}

}


</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?></subform>
         <variables>
            <script usehref=".\Fragments\Accessibility.xdp#som($template.form1.script.#variables.Accessibility)"/>
            <?templateDesigner expand 1?></variables>
         <?templateDesigner expand 1?></subform>
      <proto/>
      <desc>
         <text name="version">$Revision: 2.9$</text>
         <text name="creator">$Author: Bianca Andreescu$</text>
         <text name="title">Drug Master File (DMF) Application Fee Form</text>
         <text name="department">Health Canada - Sante Canada</text>
         <text name="issued">$Date: 2015-07-17$</text>
      </desc>
      <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
      <event activity="initialize" name="event__initialize">
         <script contentType="application/x-javascript">


var cFormHandler=script.DrugAppl.control.FormHandler;

cFormHandler.initialize();
</script>
      </event>
      <event activity="preSave" ref="$host" name="event__preSave">
         <script contentType="application/x-javascript">//var cPart2GeneralHandler=script.DrugAppl.control.part2.GeneralHandler;

//cPart2GeneralHandler.serializeModels();
</script>
      </event>
      <event activity="docReady" ref="$host" name="event__docReady">
         <script contentType="application/x-javascript">
if (xfa.host.name != "XFAPresentationAgent") {
  event.target.zoomType = zoomtype.fitP;
}
</script>
      </event>
      <?templateDesigner Hyphenation excludeInitialCap:1, excludeAllCaps:1, wordCharCnt:7, remainCharCnt:3, pushCharCnt:3?>
      <?templateDesigner expand 1?>
      <?renderCache.subset "Myriad Pro" 0 0 ISO-8859-1 4 328 91 00010003000400050009000A000B000D000E000F0010001100120013001400150016001700180019001A001B001E002100220023002400250026002700280029002A002B002C002D002E002F00300031003300340035003600370038003A00420043004400450046004700480049004A004C004D004E004F0050005100520053005400550056005700580059005A005B005C005E00680069007700CB00CE00CF00D000D2 "#$()*,-./0123456789:=@ABCDEFGHIJKLMNOPRSTUVWYabcdefghiklmnopqrstuvwxyz{}'“”àçéêè?>
      <?renderCache.subset "Myriad Pro" 1 0 ISO-8859-1 4 232 62 00010009000A000D000E000F0010001B00220023002400250026002700280029002A002D002E002F00300031003300340035003600370038003A00420043004400450046004700480049004A004B004C004D004E004F005000510052005300540055005600570058005A006800B200B300CF00D2 (),-./:ABCDEFGHILMNOPRSTUVWYabcdefghijklmnopqrstuvwy'ÉÊéè?>
      <?renderCache.subset "Myriad Pro" 0 1 ISO-8859-1 4 192 48 00010007000D000F0011001200130015001A001B002200230024002500270029002A002C002D002F0030003100330034003500420043004400450046004700480049004A004D004E004F005000510052005300540055005600570058005A0068 &,.01249:ABCDFHIKLNOPRSTabcdefghilmnopqrstuvwy'?>
      <?renderCache.subset "Times New Roman" 1 0 ISO-8859-1 4 4 1 0003 ?>
   </subform>
   <?templateDesigner DefaultPreviewDynamic 1?>
   <?originalXFAVersion http://www.xfa.org/schema/xfa-template/2.8/?>
   <?templateDesigner Grid show:1, snap:1, units:0, color:ff8080, origin:(0,0), interval:(125000,125000), objsnap:0, guidesnap:0, pagecentersnap:-1623646365?>
   <?templateDesigner DefaultLanguage JavaScript?>
   <?templateDesigner DefaultRunAt client?>
   <?acrobat JavaScript strictScoping?>
   <?PDFPrintOptions embedViewerPrefs 0?>
   <?PDFPrintOptions embedPrintOnFormOpen 0?>
   <?PDFPrintOptions scalingPrefs 0?>
   <?PDFPrintOptions enforceScalingPrefs 0?>
   <?PDFPrintOptions paperSource 0?>
   <?PDFPrintOptions duplexMode 0?>
   <?templateDesigner DefaultPreviewType interactive?>
   <?templateDesigner DefaultPreviewPagination simplex?>
   <?templateDesigner XDPPreviewFormat 20?>
   <?templateDesigner DefaultCaptionFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner DefaultValueFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner ValidationMessaging noMessages?>
   <?templateDesigner FormTargetVersion 30?>
   <?templateDesigner Zoom 139?>
   <?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?>
   <?templateDesigner SaveTaggedPDF 0?>
   <?templateDesigner SavePDFWithEmbeddedFonts 0?>
   <?templateDesigner SavePDFWithLog 0?></template>
<config xmlns="http://www.xfa.org/schema/xci/3.0/">
   <agent name="designer">
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo/>
      </pdf>
   </agent>
   <present>
      <!--  [0..n]  -->
      <pdf>
         <!--  [0..n]  -->
         <fontInfo>
            <embed>0</embed>
         </fontInfo>
         <tagged>0</tagged>
         <version>1.7</version>
         <adobeExtensionLevel>5</adobeExtensionLevel>
      </pdf>
      <common/>
      <script>
         <runScripts>server</runScripts>
      </script>
      <cache>
         <macroCache/>
      </cache>
      <xdp>
         <packets>*</packets>
      </xdp>
   </present>
   <psMap>
      <font typeface="Calibri" psName="Calibri" weight="normal" posture="normal"/>
   </psMap>
   <acrobat>
      <common>
         <validationMessaging>noMessages</validationMessaging>
      </common>
   </acrobat>
</config>
<localeSet xmlns="http://www.xfa.org/schema/xfa-locale-set/2.7/">
   <locale name="en_CA" desc="English (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">D-MMM-YY</datePattern>
         <datePattern name="short">DD/MM/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="fr_CA" desc="French (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>janvier</month>
            <month>février</month>
            <month>mars</month>
            <month>avril</month>
            <month>mai</month>
            <month>juin</month>
            <month>juillet</month>
            <month>août</month>
            <month>septembre</month>
            <month>octobre</month>
            <month>novembre</month>
            <month>décembre</month>
         </monthNames>
         <monthNames abbr="1">
            <month>janv.</month>
            <month>févr.</month>
            <month>mars</month>
            <month>avr.</month>
            <month>mai</month>
            <month>juin</month>
            <month>juil.</month>
            <month>août</month>
            <month>sept.</month>
            <month>oct.</month>
            <month>nov.</month>
            <month>déc.</month>
         </monthNames>
         <dayNames>
            <day>dimanche</day>
            <day>lundi</day>
            <day>mardi</day>
            <day>mercredi</day>
            <day>jeudi</day>
            <day>vendredi</day>
            <day>samedi</day>
         </dayNames>
         <dayNames abbr="1">
            <day>dim.</day>
            <day>lun.</day>
            <day>mar.</day>
            <day>mer.</day>
            <day>jeu.</day>
            <day>ven.</day>
            <day>sam.</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>av. J.-C.</era>
            <era>ap. J.-C.</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE D MMMM YYYY</datePattern>
         <datePattern name="long">D MMMM YYYY</datePattern>
         <datePattern name="med">YY-MM-DD</datePattern>
         <datePattern name="short">YY-MM-DD</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">HH' h 'MM' min 'SS' s 'Z</timePattern>
         <timePattern name="long">HH:MM:SS Z</timePattern>
         <timePattern name="med">HH:MM:SS</timePattern>
         <timePattern name="short">HH:MM</timePattern>
      </timePatterns>
      <dateTimeSymbols>GaMjkHmsSEDFwWxhKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">z,zz9.99 $|(z,zz9.99$)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">,</numberSymbol>
         <numberSymbol name="grouping"> </numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">,</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
</localeSet>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
   <xfa:data xfa:dataNode="dataGroup"/>
</xfa:datasets>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2011/06/07-10:39:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about="">
         <xmp:MetadataDate>2015-07-28T19:56:17Z</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe LiveCycle Designer ES 10.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about="">
         <pdf:Producer>Adobe LiveCycle Designer ES 10.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" rdf:about="">
         <xmpMM:DocumentID>uuid:0e9e46f6-0a26-445e-b109-6502375b20f5</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:c742fca2-f8bf-4992-90ab-c1e2fae01360</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about="">
         <dc:format>application/pdf</dc:format>
         <dc:date>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Date: 2015-07-17$</rdf:value>
                  <dc:element-refinement>dc:issued</dc:element-refinement>
               </rdf:li>
            </rdf:Seq>
         </dc:date>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>$Author: Bianca Andreescu$</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Drug Master File (DMF) Application Fee Form</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description xmlns:desc="http://ns.adobe.com/xfa/promoted-desc/" rdf:about="">
         <desc:version rdf:parseType="Resource">
            <rdf:value>$Revision: 2.9$</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:version>
         <desc:department rdf:parseType="Resource">
            <rdf:value>Health Canada - Sante Canada</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:department>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
   <annots/>
</xfdf></xdp:xdp>
