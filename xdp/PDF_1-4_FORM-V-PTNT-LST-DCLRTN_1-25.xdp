<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="AdobeLiveCycleDesignerES_V10.0.2.20120224.1.869952" APIVersion="3.5.12002.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2015-08-17T15:01:57Z" uuid="6b0e23fd-4f8c-443a-90cb-39392bbf0e2b">
<template xmlns="http://www.xfa.org/schema/xfa-template/3.0/">
   <?formServer defaultPDFRenderFormat acrobat9.1dynamic?>
   <?formServer allowRenderCaching 0?>
   <?formServer formModel client?>
   <subform name="DrugAppl" layout="tb" locale="en_CA" restoreState="auto">
      <pageSet>
         <pageArea name="Page1" id="Page1">
            <contentArea w="203.2mm" h="240.701mm" x="6.35mm" id="contentArea_ID" y="13.384mm"/>
            <medium stock="default" short="612pt" long="792pt"/>
            <draw h="6.35mm" name="imgHCLogo" w="47.625mm" y="6.35mm" x="6.35mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/bmp">Qk1bkAAAAAAAAAAAAAAoAAAALAEAACkAAAABABgAAAAAACSQAAAAAAAAAAAAAAAAAAAAAAAAAgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/
+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+///8///8//j///j/+//3+P/38fj/
8fj/8//3+v/3///8//7///3///3/+v/8+v/8/f/////////+///++v/8+v/8//7///7////+///+
5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7+
+v3/+v3////3///3+v//+v/////+///+/f36///8//j//vb++//36vHp8fj/8fj/8//3+v/3+PXy
/v3++/n7//3/+v/8+v/8/f/////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7
AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
/////////////////////Pz8+vr6////////////////////////////////9/f32trapqameXl5
aGhodXV1mJiY3d3d+fn5////8/Pz////8/Pz/////v7+vLy8fX19Z2dni4uLurq69/f3////vLy8
xsbG0NDQ/f39/v7+tbW1uLi48vLy+fn5+vr6/Pz8////+Pj4o6Ojv7+/9vb2/f39////+fn5tra2
hISEZ2dnhISEwsLC7e3t////vb29w8PDzc3N/////f39+vr6////zs7OhISEY2NjlJSU2dnZ+/v7
t7e3vLy8////////+Pj4+vr6ubm5gYGBbm5uf39/z8/P+/v7////srKywsLC3d3d////////////
////////////////////////////////////////////////////////////////////////////
////////////////+/v7////+/v7/v7+////+vr65ubmlpaWYGBgREREQkJCW1tbj4+P3t7e/f39
+vr6/v7+/f398/Pz////ycnJdnZ2Q0NDS0tLaGhoqKio////8PDwc3Nzo6Oj8/Pz////3t7egICA
s7Oz////9vb2////////////sLCwhISEzs7O/f39////////ysrKa2trV1dXUVFRXFxctbW1////
4+Pjjo6OlJSU/v7+9vb2/Pz8////29vbgYGBUVFRRkZGhoaG6Ojo09PTe3t74ODg/////Pz8////
z8/PaGhoREREPT09d3d3uLi4////4ODgkZGRmpqaAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3
+v//+v/////+///+///8///8//j///f/+//3+P/38fj/2+L73vHi+v/3//z5//7///3///z/9v34
+P/6/f/////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
/////Pz8/Pz8/////////f39+/v7/v7+9vb2////39/fbGxsFBQUAAAAAAAAEBAQBQUFAQEBCAgI
h4eH2tra/////Pz8////+fn5ZWVlAAAACAgIAwMDAAAACwsLPj4+u7u7FhYWAAAAsLCw////2tra
BgYGAAAA0dHR+/v7////////+vr6rq6uCgoKCwsL8vLy////4+PjbGxsAAAAAgICBwcHAAAABgYG
Tk5OmpqaGxsbAAAAvLy8+/v7////////bW1tAAAAAAAAFxcXBQUFFhYWYGBgAAAAMzMz9vb2////
+fn5VFRUBwcHAgICAAAAAAAABAQEPj4+oaGhGhoaAAAAwsLC////////////////////////////
////////////////////////////////////////////////////////////////////+fn5////
////////////////6urqmJiYFhYWAAAAAAAABgYGBQUFAAAAAAAAFRUVg4OD////////+/v7////
sLCwGxsbAQEBBQUFBgYGAQEBAgICTExMYWFhIiIiLy8v/v7+9vb2mpqaCAgIUFBQ8fHx+fn5/v7+
/Pz88fHxUlJSCQkJgYGB+/v7/Pz8paWlCQkJAAAAAAAAAgICBwcHAAAAVlZWb29vAQEBTk5O4ODg
////////pqamMjIyBQUFAwMDAQEBAwMDLS0tOjo6EhISmpqa////////qampGBgYAAAAAAAAGxsb
AAAAAAAAaGhoaWlpBgYGOTk5AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+
//38//38+/v1+vr0+v/+6/b3xbX/ZVXFqKTs8u///fr9///8///3///3+v77+////f/////////+
///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4
AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////
/////////////////////////////////////////////////////////////v7+/f39/v7+////
////+/v7+fn5+/v7////zs7OVlZWAAAAAAAAQEBAc3NzkZGRYWFhREREAAAAAwMDW1tb4uLi////
+Pj4l5eXAgICAAAAeHh4urq6xsbGg4ODHx8fDQ0NAAAAHBwc7e3t+vr68/PzCAgIAAAAysrK////
////+/v7////srKyAwMDFxcX9vb2+vr6jo6OAAAAAAAAhoaGxsbGzs7OdHR0GRkZDAwMAAAAERER
/////v7+////fn5+AQEBCwsLenp6srKyh4eHMjIyAAAABAQEMjIy////9/f3lJSUAAAADAwMe3t7
y8vLwsLCenp6GBgYCgoKAAAAICAg////////////////////////////////////////////////
////////////////////////////////////////////////////9/f3////////9/f3////8/Pz
hYWFERERAAAAMzMzeXl5r6+vsLCwfX19OTk5AAAAAAAAl5eX4uLi////8vLyNjY2AAAAQkJCwMDA
39/f1tbWenp6Hx8fAAAACAgIYGBg/f39+vr6lZWVAAAAUVFR////////9fX1/////f39Tk5OAAAA
fHx8////6OjoMDAwAAAAV1dX0tLS2dnZ1dXVh4eHCgoKAAAAAAAAfX19////////zc3NKioqAAAA
S0tLxMTEzs7Oi4uLKioqAAAAAAAAmpqa////5+fnIyMjAAAAUVFR3Nzc4ODgzMzMgoKCAAAABQUF
AAAAkJCQAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+
AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+//r5//38///5///5
+v/+8/7/wbH/NCSUhoLK7uv///z////8///3///3+//8+////f/////////+///++v/8+v/8//7/
//7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/
AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////
/////////////////////////////////////////////v7+/v7+/////////v7+/f39/f39////
////WFhYAAAAHBwcm5ub9fX1////+vr6////6+vrlZWVAAAAAAAAenp6////9/f3UFBQAAAAVlZW
////////////////19fXEBAQAAAAJycn////8vLy7+/vDAwMAQEB0NDQ/////v7+9fX1////q6ur
AAAAFxcX////8PDwVlZWAAAAZmZm/v7+/v7++fn5////rq6uJSUlAAAAHBwc7e3t////1tbWAAAA
BAQEn5+f+fn5/Pz8////xsbGHx8fBAQEOjo6/////v7+QkJCAAAAbGxs////////+/v7/Pz8tra2
GhoaAAAATExM7e3t////////////////////////////////////////////////////////////
/////////////////////////////////////////////////Pz8/v7+rKysHx8fAAAAXFxc3Nzc
////+fn5+vr6////4uLiY2NjAgICBgYGwMDA////w8PDAAAAAAAAwsLC+/v7////////9fX1oaGh
ExMTAQEBgYGB/v7++fn5l5eXBQUFW1tb////////////////////U1NTCQkJgoKC////0tLSAAAA
CgoKs7Oz////////////7e3tnp6eDAwMAAAAioqK////8/Pzc3NzAAAAUFBQ8fHx////////////
lJSUDg4OBQUFrq6u/v7+19fXAgICBQUFzMzM////////////+vr6mZmZBAQEAAAAg4ODAgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v//
//3+//z8//7++v3/+v3////3///3+v//+v/////+///+//3///3////w///w9P/+7fP/zbb/Nh/B
e3bf7Oz/+P7////7///3/f3x9vf7/P3+///////////+///++v/8+v/8//7///7////+///+5O//
V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5
Dg/jhYr/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////f39/v7+////////////t7e3CgoKBwcHmpqa
+fn5/////v7+9/f3////+Pj4+vr6dnZ2AAAAGBgY2NjY////W1tbAAAAW1tb////+fn58PDw////
////h4eHAAAADw8P8vLy/f3929vbCQkJAAAAyMjI+fn5////////////srKyBgYGFhYW9/f38PDw
Xl5eAAAAaGho/Pz8/v7+/v7+/v7+////eXl5AQEBOTk57+/v////fHx8BgYGTExM9vb2////5eXl
////////gYGBAAAAMzMz/v7++/v7QkJCAQEBY2Nj/Pz8////////////////a2trAAAAODg4////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////Pz8////9fX1Xl5eAAAARERE9PT0////+/v7/////////Pz8
////9vb2OTk5AAAATExM9vb28fHxAQEBDAwMrKys/////v7+8vLy////9/f3PT09AAAAh4eH////
+fn5kJCQAAAATU1N8fHx+fn5////////+/v7RkZGAQEBgICA+/v70NDQAwMDDw8PqKio+Pj4////
9vb2/////Pz8ISEhAwMDenp6////39/fJSUlAAAApKSk////+/v77e3t////6urqQEBAAAAAm5ub
////v7+/AQEBAwMDwsLC+/v7+/v7/////////Pz8GRkZAQEBi4uLAgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/
+v3////3///3+v//+v/////+///+//3///3////w/f/u7fv35+3/w6z/LBW3gHvk7Oz/+P7//P74
///2/f3x+vv//f7////////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8
BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////
////////////////////////////////////////////////////////////////////////////
/////////////////////v7+/Pz8/////////////v7+ZGRkAAAAT09P6urq////+fn5/f39////
////+vr6////39/fDAwMAgICkZGR7OzsnZ2dBwcHAAAAjIyM09PT/f39////7OzsoKCgDw8PISEh
7+/v/Pz809PTFxcXCgoK1NTU9/f3/Pz8/v7++Pj4qKioBgYGFhYW8fHx/v7+mpqaCQkJAAAAi4uL
2tra8fHx+Pj4////mpqaAAAASUlJ////+Pj4S0tLAgICdnZ2/////////f39/f39+Pj4qqqqCgoK
MDAw////7OzskZGRAAAAGxsbjIyM0NDQ+vr6+vr6////oKCgBwcHKSkp/Pz8////////////////
////////////////////////////////////////////////////////////////////////////
/////////Pz89/f3////z8/PFxcXAAAAqqqq/v7+////////+vr6+fn5////////+/v7fHx8DAwM
ExMT0dHR////T09PDw8PBQUFiYmJxsbG4+Pj/v7++vr6VFRUAAAAf39//Pz8////nZ2dAAAAWVlZ
/////////Pz8/Pz8////V1dXBgYGhoaG////8PDwWFhYAAAAHBwclZWVy8vL09PT////+Pj4U1NT
DAwMe3t7////1NTUAAAACQkJ6Ojo/////////v7+////+vr6Xl5eAAAAmJiY////+fn5UFBQAAAA
HBwcnp6eu7u76urq+vr6/f39SUlJAQEBgICAAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//
+v/////+///++/f7//v////z///08///5fH/v7X/LCKygo7W5vn/7f71+vz4//7///r//fz//fz/
///////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+
AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////
////////////////////////////////////////////////////////////////////////////
/////f39+/v7/////////Pz87+/vJCQkAAAAhISE////////////////+Pj4+/v7+/v7+vr68vLy
e3t7fn5+zMzM////+vr6ZmZmAAAACQkJBQUFCgoKOjo6iIiIh4eHBQUFDg4O+Pj4////5OTkAAAA
AAAA1dXV/v7+////////////ra2tBAQEFxcX9vb2////5ubmbGxsAAAAAwMDDg4ODAwMPj4+fHx8
enp6AAAAMDAw////+vr6Ozs7AQEBlJSU/f399/f3/////////Pz8t7e3AAAANDQ0////////7u7u
V1dXAAAAAwMDCAgIERERQ0NDhoaGY2NjAAAAMzMz////////////////////////////////////
////////////////////////////////////////////////////////////////////////+/v7
/Pz8nJycAAAAFBQU3d3d////9vb2+vr6////////+fn59PT0////9fX1enp6wMDA9/f3////5OTk
REREBQUFAAAACAgIDQ0NIyMjYWFhOjo6DQ0Ng4OD+/v7////mpqaAAAAVVVV/////////f399fX1
////VVVVAAAAenp6////////0tLSTExMFBQUAAAAAwMDDQ0NIyMjbW1tLS0tAAAAh4eH////1NTU
AAAACQkJ8PDw+/v79vb2/////////f39aGhoDg4OoqKi9vb2////1dXVTU1NEhISAAAAERERCQkJ
LCwsZWVlKioqAAAAgYGBAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+//v/
//r/+frq///08///4Oz/vrT/NCq6kZ3l5vn/7v/2/f/7//7///j//fz/9/b////////////+///+
+v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+
AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////
/////////////////////////////////////////////////////////f39/v7+/Pz8/Pz8////
////9PT04eHhAAAABwcHnp6e////+fn5+/v7/////v7+/////Pz8////9/f3////8vLy////////
////////vLy8ZGRkLS0tHh4eAQEBAAAAAAAAAAAAJCQk+Pj47+/v6+vrAwMDAgICzMzM/Pz8/Pz8
////////rq6uAAAAHBwc8fHx9vb2////9/f3r6+vZ2dnJycnKCgoAgICAAAAAAAAAAAANjY2/Pz8
/Pz8LCwsAAAAlpaW/////f39////+Pj4////tLS0AAAAPz8/6Ojo////////////nJycX19fODg4
FhYWDAwMAAAABgYGAgICQkJC8vLy////////////////////////////////////////////////
/////////////////////////////////////////////////v7+////////9/f3gYGBAAAAQUFB
9PT0/////Pz8/////v7+/v7+/////Pz8////7e3t////9vb2/////////v7+9/f3vr6+e3t7TU1N
MDAwCgoKCwsLAAAAAAAAhoaG9/f3/v7+lpaWAAAAVlZW+/v7+vr6/////////Pz8T09PAAAAh4eH
+vr6////+/v7////pqamiIiIS0tLMTExHR0dAAAAAgICAAAAjo6O9fX1ycnJAAAADg4O5+fn/v7+
+/v7////9vb2////Xl5eAAAAqqqq////+/v7////9PT0p6enc3NzSUlJNDQ0Dw8PAAAABAQEBwcH
gICAAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/
DQT0TDj/5P/49f/3+/3+/f//8vf2+v/++/r7+fj5///8+fn24uL/3tj/6t//7eL/7fL/7fb/6fX/
7fn/0sT/NSeNl4zo7ej/7fv/6ff/7fH/7Oj/7eb/5d7/8PL9//z///7+//7+//n///v/+v/x+v/x
+//4+/z/7PL/XlzeEgD/BQD9AAfrAgvvAAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9
AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////
/////////////////////////////////////////Pz8////+/v7/////v7+////////vLy8AAAA
AAAAzs7O+/v7/v7++fn5////////////+fn5/v7+////8/Pz////////9/f3////+/v7////////
/v7+8vLy2traubm5XFxcAQEBGBgY7Ozs+vr64+PjCgoKAgICx8fH+Pj4////+fn5////sLCwAgIC
ICAg7e3t+/v7/////////////Pz88vLy+vr62dnZubm5VFRUAAAAQEBA+/v7+/v7TU1NAQEBcXFx
/////////Pz89PT0////n5+fAAAANTU1+fn5+fn5/////Pz8/f39/////Pz88vLy2NjYsrKyV1dX
AAAAPj4++/v7////////////////////////////////////////////////////////////////
/////////////////////////////////f39////////////UVFRBgYGOzs7+vr6/////Pz8/Pz8
////////+/v7+vr6////+vr6////////9/f3////////9/f3+fn5/Pz8////9/f36urqxcXFPDw8
AwMDenp6/////f39l5eXBwcHMDAw+/v7////+/v7////////V1dXEBAQgoKC6+vr////9/f38/Pz
+fn5/v7+/v7+////4+Pjurq6OTk5AAAAfn5+////19fXBAQEDg4O0NDQ+/v7////+fn5/v7+////
QkJCAAAAkZGR/////////Pz88PDw////+/v79PT0////7OzsyMjIKCgoBQUFkpKSAgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/DQT0TDj/5P/49f/3
+/3+/f//+v/+8vn2//7///7/8e7q///82dn/Ylyza2C9i4Ddp6zZx9Dx1OD45vL/x7n/Sz2jpJn1
39r/2Ob5xtTnuLztjIjPa2S1WlOk8PL9//r///z8//n5//j///v/+v/x9f/s+//4+/z/7PL/Xlze
EgD/BQD9AAfrAgvvAAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/j
hYr/////////////////////////////////////////////////////////////////////////
////////////////////////+/v7////+/v7/////v7+/////f39vb29AAAACQkJzs7O////////
////////+/v7+fn5/v7++Pj4/////v7+////////////xcXFT09Pbm5u7e3t////8PDw/f39////
srKyDw8PJCQk+Pj4+fn55OTkDg4OAAAAmJiY////////9/f3////lpaWAQEBGBgY////////vr6+
RUVFampq////////7e3t+vr6////mpqaCAgIPz8/8vLy////iYmJAAAAPz8/8vLy/////f39////
/Pz8XV1dAQEBPT09////////xcXFTExMY2Nj////////9fX1////////lZWVCQkJPz8/+Pj4////
////////////////////////////////////////////////////////////////////////////
////////////////////////////+vr6WVlZBQUFRkZG////+Pj4////////////////////////
+/v7////9vb2+/v7////9fX1e3t7KysrjY2N////////+fn5////7+/vTExMAgICgYGB/////Pz8
kJCQAAAAGhoa0NDQ////8/Pz////9PT0Ozs7AAAAhISE////+fn5enp6MDAwkJCQ////////7e3t
/////v7+RkZGBwcHjo6O+/v75eXlR0dHAAAAeXl5////9vb2////////wcHBCAgIAAAAq6ur+vr6
8vLyc3NzKCgonZ2d////////+vr6/v7+////Ojo6AAAAqqqqAgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAH/AAH/CwbxTj3/5v/3+v/2//T///b///f/9u76
/vT///7////y///y2uLoWmK2AADpCwP1DAj2FhP9HRr/MC3/OCz/AgD2HRP/KCH/GRb7DAztDwv/
BQD5DQXuNjXR7vfw+/vx///0///0//n///X//Pr6/Pz8//7///3/7/X/XmfJEAH8AwD9AAD8AAP/
AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////
////////////////////////////////////////////////////////////////////////////
////////+/v7/////Pz8/////v7+/////Pz8xsbGAAAACwsLwsLC+/v7/v7++/v7/v7+9vb2/v7+
+fn5////7e3t////9PT0/f39/Pz80NDQCAgIAAAAoaGh/Pz8////////7OzsZGRkAAAANzc39/f3
////7OzsEBAQAwMDLi4uvr6+8/Pz////6OjoVlZWAAAASUlJ+/v7////ycnJBwcHAAAArKys////
////////8/PzZ2dnAAAATk5O6+vr////0NDQGxsbAAAAkJCQ+Pj4////8vLynZ2dDAwMAAAAPj4+
+/v7////wsLCCgoKAAAAurq6/////v7+////6enpXFxcAAAAS0tL9/f3////////////////////
////////////////////////////////////////////////////////////////////////////
/////Pz8////8/Pzb29vAAAAMzMz/Pz8/////v7+9/f3/f39+/v79PT0////////+vr69/f3////
/Pz8////j4+PAAAAHx8f09PT9fX1////////t7e3ExMTAAAAmpqa////////np6eCgoKAQEBVFRU
x8fH////+vr6ra2tCwsLAgICoaGh////7u7uhISEAAAAMTEx0dHR////////7u7usbGxBwcHAAAA
ra2t////////lpaWAAAAEBAQurq6+vr6////wsLCUVFRAQEBAgICnZ2d////////fHx8AAAAMTEx
zMzM/////v7+////sLCwAAAACAgIrq6uAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AAH/AAH/CwbxTj3/5v/3+v/2//T///b///f/+/P/+vD9//3+///y///y
8fn/o6v/Egr+FQ3/BADuAwDqAwDmBQLoEwf/BwD7EAb/DQb3CwjtAADhBAD4CAD8Hhb/ZGP/9v/4
///1///z///0//n//fP//fv7//////7///3/7/X/XmfJEAH8AwD9AAD8AAP/AAL7AAL7AAH+AAH+
AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////
/////////////////////////////////////////////////////////////////////f39////
/Pz8/////f39////////2traEhISAQEBm5ub+Pj4////////////+/v7////+/v7/////////f39
/f39////+/v7////c3NzAwMDDAwMT09Pfn5+bm5uQEBAAAAADg4OiIiI9vb2/v7+3d3dAAAADAwM
EBAQCwsLTk5OZGRkMzMzAAAABQUFpKSk9/f3////////enp6BgYGERERREREgICAd3d3REREAAAA
CQkJnJyc+vr6/v7+////h4eHAQEBBAQEUVFRgYGBQUFBGRkZAAAAAAAAPz8/+fn5////+vr6a2tr
AAAACQkJaWlpcHBwcXFxNzc3AAAACwsLlpaW////////////////////////////////////////
////////////////////////////////////////////////////////////////+fn5////9PT0
mJiYAAAAFBQU5ubm8/Pz/////////////Pz8////////+vr6/v7+////////7u7u////7u7uUlJS
AAAADAwMOjo6VlZWODg4BgYGAAAAQkJC8fHx////////hISEAAAAHR0dFBQUEBAQOTk5Li4uAAAA
AAAAV1dX3Nzc////+vr66+vrRkZGAAAACQkJPj4+W1tbMTExCgoKAAAAOTk539/f////////7e3t
Y2NjAAAAAAAAR0dHREREERERBQUFERERAAAAlpaW/////f3919fXTk5OAAAAEhISRERET09POzs7
AAAABwcHPz8/6OjoAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AAL+AAL+CwXyUTj/7f////z///X///f//v70+vrw///1/f/16/Dw8/T/6dr/b2f/AALrAgT7
BQX4Cgr/CA3/AwP+AgL6AAD5AAD0AAD3DAz/Dg7/CQn/BAT/DAz1KTn/19P/8PL/9Pv/+//++f/2
///1///y///y//v//+7/8e3/YF3bEAD/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+
AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////
/////////////////////////////////////////////////////////////Pz8/v7+/v7+////
////8fHxNjY2AAAAcHBw////////7e3t+vr6/v7+/////////Pz8////gYGBwsLC8PDw////////
8fHxk5OTJycnAAAACAgIBQUFAAAAGhoagICA7u7u////////4ODgICAgNDQ0xsbGOTk5CwsLAAAA
AAAAJiYmhYWF/////////Pz8////6enphISEFxcXAAAABQUFAwMDAAAAGBgYhISE8/Pz////9PT0
////+fn5lpaWHR0dAAAAAAAABgYGW1tbcnJyBAQEOzs79/f3+vr6////5ubmfn5+IiIiAAAAAAAA
AwMDBAQEIiIii4uL7e3t////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////f39yMjIDw8PAAAAtbW1
////////9vb2/////v7+8PDw/Pz8////paWlc3NzpaWl8PDw////////29vbjIyMGBgYDAwMCgoK
AAAAFhYWYmJivb29/////f39/f39qampPj4+lZWVoKCgPDw8BgYGAQEBHx8fZWVlycnJ////////
////////5+fnfHx8KysrAAAABQUFAAAADAwMVVVVy8vL/////v7+8vLy////6urqfn5+JycnAQEB
AAAARkZGnZ2dU1NTAwMDoaGh6+vr////////0tLScXFxKSkpCQkJBAQEAAAAGBgYVlZW09PT////
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAL+CwXy
UTj/7f////z///X///f////1///1/P/w/f/1+v//3+D/koP2Jh7PAAfwAAL5AADzAAD5AAX/AAD7
AAD4AAD8AAT8AAD4AAD9AAD0AAD6AAD7AADpARHzc2/ZyMrz9Pv/+//+9//0///1///y///x//v/
/+7/8e3/YF3bEAD/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9
AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////////
/////////////////////////////////////////////f39/f39/v7+////////////f39/AAAA
Hh4ez8/P/////////f39/v7++/v79vb2////jY2NAAAAGRkZycnJ/Pz89/f3////////6enpubm5
pKSkr6+vu7u73d3d9/f3////9/f39vb2////xcXF5OTk////6urqurq6r6+vw8PD09PT/f399fX1
+fn5/Pz8+vr6////////2traxsbGqampoaGhtbW12tra/v7+////////+Pj49/f3////////2dnZ
vLy8r6+vv7+/+vr6pqamBAQEMzMz/f39+/v7/Pz8////////3NzczMzMra2tq6urx8fH5eXl////
/////Pz8////////////////////////////////////////////////////////////////////
////////////////////////////////////////////7OzsR0dHAAAAR0dH/////////v7+////
/////v7+/////f39NjY2AAAAXFxc////////8/Pz/////f39+fn5z8/Px8fHycnJ2dnZ////////
/Pz8+Pj4////////09PT8/Pz////7u7u1tbWw8PD3Nzc/Pz8/////v7+////////+/v7////+vr6
8PDwzs7Ow8PD09PT5ubm/////////////////v7++vr6////////7e3tz8/PyMjI8fHx////V1dX
AAAArKys/v7+/////v7+////////6urqxsbGxcXF0dHR5ubm////9vb2/v7+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAT7CwX0UTT/7f////39//z5
///1///r+//r5PDy6u7/3t//dm3/HQf/BgD3BQL4CAX7BAD5BAP5Cgr9CQb8BgL8CAX+BQL4BAH3
AgH0AwH1Dgn/Dg7/BQX6Cwr6CwDiWk3/sbH/3+n/5vf/6/nz9//j///n//3//+3/7+j/XlbpCwD/
AAD+AAT0AAj4AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/
////////////////////////////////////////////////////////////////////////////
/////////////////////v7+/////v7+/////////f39/v7+////5eXlPz8/AAAAVVVVzMzM////
////9/f3////7+/v4+PjMDAwAAAANTU19fX1////////9PT0/v7+/////////Pz8/////////f39
/v7+9/f3+/v7/////////v7+////8/Pz////////8vLy/v7++/v7////////+/v7////////+fn5
/////////////Pz8////////////+fn58fHx/Pz8/////////////v7++vr6////8/Pz/Pz8////
kpKSAAAANDQ0////////+vr69PT0////////////9PT08/Pz/////////Pz89fX1+vr6////////
////////////////////////////////////////////////////////////////////////////
////////////+fn5////////////+/v7paWlIiIiAAAAenp64eHh////8/Pz+Pj4////6enpe3t7
AwMDEhISm5ub/////////Pz8////////////+vr6/////////Pz8////////////////+Pj4////
////+vr6+/v79/f3+/v7////+/v7////+/v79fX1/v7+////////8/Pz/Pz8////////+fn5/v7+
/v7+////////9fX1/f39////+vr69PT0/Pz8+vr68fHx////////9/f3UlJSAQEBmZmZ////////
/Pz89/f3////////////////////////+fn5/////v7+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAT7CwX0UTT/7f////39//z5///1///o9//n8f3/
29//dXbRIhm2FgD8BgD3BAH3Cgf9CQX+AQD2AADzAwD2BAD6AwD5BAH3CAX7AQDzBAL2BwL/AAD3
AAD1Bwb2EwbqFwrKTk7Qsbv/5vf/8f/59v/i///n//3//+3/7+j/XlbpCwD/AAD+AAT0AAj4AAP6
AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////
////////////////////////////////////////////////////////////////////////////
////+/v7/f39////////////+vr69vb2+vr6////rKysFRUVAAAAKysrkJCQysrK5+fnysrKpaWl
JSUlAAAAExMT1dXV////8vLy/Pz8////////9vb2+vr6////////////+Pj4/////v7+////////
9fX1/////v7+////8PDw////9vb2////////+vr6////////+/v7////+vr6////////8PDw////
////+fn59/f3////////////+vr6/Pz8////9fX1/Pz8////////////+Pj4lZWVAAAAPT09+fn5
9vb2////////+vr6/f399/f3////////+/v7/f39/////v7+////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+fn5/v7+/v7+////f39/AQEBAAAAQ0NDhYWFycnJ0tLSmJiYUlJSAAAAAAAAc3Nz////+/v7
8/Pz////9fX1////9/f3/v7+////////////////+fn5/////v7+////7+/v////+/v7////////
/v7+/////Pz8////////+/v7////////////////////+/v7/f39////////+Pj4/////Pz8////
////+/v7/////////////////////v7+9/f3////RUVFAAAAnp6e////////////////9vb2/v7+
////+vr6/v7+/////////f39////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AQP8AQT5CwbxUTf/7f/3///2///1///38/X47O7/wbr/Ukf/DwneBgPzExP/
AADlBAT7EQ//Cwv7Cgj/AwP/BQX/AQH6AgD9DQ3/Bwf/Bgb5AgL+AAD3AAD5Cgj/BQX+ERH/AADr
ERL8ICHniY7/3eP/7f//+vr6//7+//7+7fP/XF3dBwL/AAH9AAD7AAT/AAL7AAL7AAH+AAH+AAT4
AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////u7u7Ojo6BQUFAAAABgYGFRUVAgICAAAAAAAAKSkpsbGx+fn5
/////f39/f39/////Pz8/f39////////+/v7/f39/////////Pz8////////+/v7////////+Pj4
////////+vr6/////////////v7+/////Pz8/////////////////f39/Pz8////+Pj49vb2////
/Pz8+Pj4////9/f3/////f39/////////Pz8////////hoaGAAAALS0t8vLy////+vr6/////Pz8
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////f39////////////
////6urqrKysJCQkAwMDAAAABQUFCAgIAAAAAAAADg4OfHx87+/v////////////+vr6////////
+vr6////////9vb2+/v7////+vr6/Pz8/////////////Pz8////////9vb2////////////////
+/v7////////9PT0/Pz8+fn5/////////////Pz8/////v7++fn5////+/v7/////////Pz8/f39
////////////+vr6////9/f3R0dHAAAAo6Oj////////////////////////////////////////
////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AQP8AQT5CwbxUTf/7f/3///2///1///3+vz/urz2XlfiGg/XEQvgBQLyAADyBxL/AAD3AgD+AADw
BgT/AAD8AAD7AAD5BAL/AAD2AAD7AADzAAD8BwX/AwH/BQP/AAD5AAD2AAP/DA33BgfNOj/ak5n4
4fX2//////7+//7+7fP/XF3dBwL/AAH9AAD7AAT/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+
AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+vr6////////0NDQnp6eVVVVJSUlAwMDFxcXQ0NDjY2N0NDQ/////////Pz89/f39/f3////
////////+fn59/f3+vr6////////////+vr6+/v7+vr6+vr6/////////////////f39/Pz8////
+/v7/v7+/////////v7++/v7/////////v7+////////////////////+/v7/v7+////////////
////+vr6+vr6+/v7/f39+/v7////yMjIV1dXe3t77e3t/////Pz8////////+/v7////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////+vr6+vr6/////f399/f3////////+Pj44uLi
o6OjXFxcNDQ0Li4uSEhIhYWFvr6+9/f3////////9vb2/f39+/v7/////v7+/v7+////+fn5+vr6
/////////////////Pz8+vr6/f39+Pj4/v7+////+Pj4/////Pz89fX1////////+fn5////////
/////////Pz89/f39vb2/v7++/v7/////////////////////////f39////////////////////
+vr6////qqqqd3d309PT/Pz8////////////////////////////////////////////////AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwT5AwX3CwX0SjP/
6v///vz///r///z/09f1QUOnCQDWCQT5Cgr+DAz/AAj2CQn/CQnyBw76AAL7Cgr/Bwf6AAD9AA3s
BA3sAArwCQ78BQX/Awb/Bwr7AQX2AAn6Cgr9AAL4Awr/AQH0AADrAADYMyrUoK7Y9fT5//7///7/
6vL/WFzgBAL/AAD+AAH5AAX9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////9fX1////
////////9fX18PDw5+fn5ubm7Ozs////////////8fHx/////////////////f399/f3+/v7////
/////Pz8+fn5/////v7+////////////////+vr67+/v/f39/////////v7+8vLy+fn5/Pz8/Pz8
////9/f3/f39/////f39/////Pz8/Pz8+/v7/////v7+/////////Pz8////////////////////
/////v7+////+/v79vb2/////////////f399/f3/////v7+////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////Pz8/v7+////////+fn59/f3+/v7+/v7/////////////////v7+
/Pz8/////////////v7+/Pz8////////9/f3/Pz8////////////9vb2/Pz8/////Pz8+fn5/Pz8
/////////////////////////Pz8////////+Pj4////////8vLy////////////////+Pj4+vr6
/f39////+Pj4////////+Pj4/////////f39/Pz8/////v7++vr6////////+Pj4////////7+/v
+vr6+/v7////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwT5AwX3CwX0SjP/6v///vz///r///z/
3eH/ZGbKHgzrDgn+AAD0AAD4ABH/AAD3AADpAAfzAAP8AAD6AADzAAH+AhHwAAnoAQ70AAXzAAD9
AAP/AAP0AAT1AAn6AADzAAn/AAf/AADzEw//EAztWlH7tsTu+/r///7///7/6vL/WFzgBAL/AAD+
AAH5AAX9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////+Pj4+/v7/////f39+fn5////
/f39+/v7/v7+////+fn5////////////9PT0+fn5/Pz8/////////////////////f39////////
////////////////////////////////+/v7////+/v7////////+vr69/f3////+vr6+/v7////
////////+Pj4////+fn5+Pj4/f397u7u/f39////9/f3+Pj4/////////////////////f39/f39
/////////////////////v7+////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////v7++fn5/f39/////////f39////9vb2/f39/////f39/Pz8/f39/Pz89/f3////
/f39/Pz8/////////////v7+////9vb2////////////+vr68/Pz////////+Pj4/v7+////+Pj4
+/v7/////v7++vr6/////////////////Pz8////////+vr69fX19vb2////////////+Pj4////
+/v7/////v7+9vb2+Pj4////////////+Pj49/f3////////+vr6/////////f39////////////
////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQT5AQX3CgX0SDP/5v//+vr///f///n/7fT/ydL/Niz/AADt
DQ34AAD3AAD4CAv/CQj/BQX4AgL2AQH2BwP0BwP/CQn+AAD7CAX/AADxAADyCAT/BwjwDhH5DQ3/
AAD0AAD4Cgr+AAD8Bwf5FhHup6L/7Pr//fv///v///v/6Ov/V1joAAL/AAD+AAPyAAf2AAP6AAH9
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////9/f3////////////+/v7////////+vr6+/v7////////
8/Pz////////////+fn5////+fn59vb2/f39/////////////////v7++Pj4+fn5/f39/f39+vr6
+fn5////9/f3////////////9/f3////+/v7/////f39/////////////////////f39////+fn5
/////v7+/////f39////////////////////////+vr69vb2////////////////9fX1+Pj4/v7+
/Pz8/Pz89fX1+vr6////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////v7+
/f39/////////v7+/Pz8/////f39/v7++/v7+fn5/f39////////////9PT0////////+fn5////
////9fX1////////////9/f3////////////////7+/v+Pj4/////////////Pz8////////+Pj4
8PDw/////////////////////f39/////Pz8/////////f398fHx8PDw////9fX1+/v7/f39////
/////f399vb2+/v7////+/v7////////9vb2+vr6////9/f3////////////////////////////
////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AQT5AQX3CgX0SDP/5v//+vr///f///n/7fT/rrf/IBbyAADuFBT/AAP/AAb/AAP+
CQj/AADzAAD0AAD1Eg7/BQH/AAD1BAD/AwD+AQD8Cwf/BgL/AAHpAAPrAAD7BQH/AAL8AAD0AAH+
AADyEw7rnpn/7Pr/9fP///v///v/6Ov/V1joAAL/AAD+AAPyAAf2AAP6AAH9AAH+AAH+AAT4AAP4
AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////Pz8+/v7////9fX1/v7+/////////////////////////Pz8+vr6////
/////v7+////////////////9/f39/f3/////////////////f39/Pz8////////////////+fn5
9PT0/////Pz8////6urq////8PDw////////8PDw+Pj4////+Pj4////+Pj4////9fX19/f39/f3
/////f399fX1/v7+////+Pj4/Pz8/f39/////f399PT0/////////f39/Pz8+Pj4////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////+Pj4////////////+fn5////
/////////////v7+/Pz8////////+vr6+Pj4+fn59vb2////+vr69PT0////////9fX19fX1+fn5
/Pz8+/v7////////6Ojo////////////+Pj47+/v////////////////////////9/f37Ozs/f39
////9vb2+/v7/v7+////////7u7u/////Pz8////////9PT0////+vr6/f39////////////////
9vb2////+vr6/v7+/Pz8/Pz8/////Pz8/f39////////////////////////////////////////
////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+
AQL+CAjuR0L85P/0+f/z//z8//T/7/D/X1jeDADxBwD4AADwAADyDxD/AADmAADZGhqjKjaaAQ3J
CAzgBQToAQD2DAT/AADyDQL3DAzxBQrbJzqXIjWVAADbBwH0CAz+AADsBwP9Fg//Ixvyd3H46vj9
///8///3///36PP/V13eAAL/AAD+AAD8AAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/
AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
ubm5fX19paWl////////////////+Pj4/Pz8+vr6/f39u7u7hYWFra2t/f39+vr66+vr////+Pj4
tbW1gYGBW1tbUVFRaGhovb295ubm/////////v7+////39/ftbW1XV1dU1NTZWVlnZ2d5ubm////
oKCggICA0dHR/v7+9/f3hoaGjo6O9/f3/v7+/Pz8////wMDAioqKb29viYmJ/Pz80NDQi4uLrq6u
////////////////////x8fHh4eHsrKy/////////////////////Pz88/Pz////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////+Pj4+Pj4/////Pz8zc3NfHx8VVVV
MTExKSkpODg4ZmZmtbW1+/v7////////////////8PDwmpqaVFRUHx8fKCgoX19ftra2/Pz8u7u7
YWFhm5ub9PT0/f39lZWVbGxswcHB////+/v7/v7+////8fHxampqampq3Nzc////////////w8PD
VVVVT09PWFhY6enp////////1dXVqampRUVFJCQkJiYmUlJSmJiY8fHx////+/v7/////v7+/f39
/////////////////v7+////////////////////////////////////////////////AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQL+CAjuR0L85P/0
+f/z//z8//T/4OH/QzzCGAH9DgP/AQD4DQn/AAHzAQjxDgv0dnb/j5v/IS3pBAjcCwruCgD/CAD9
CwD/FQr/AADlGyDxj6L/jJ//IBv/BwH0AQX3AQT5CQX/BwD3CgLZT0nQ7Pr////7///3///36PP/
V13eAAL/AAD+AAD8AAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5
Dg/jhYr/////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////a2trAAAAQEBA9PT0
////+fn5/////v7+////////+Pj4ZGRkAAAAUFBQ+Pj4////////7e3td3d3CQkJAAAABwcHAQEB
BQUFAAAAcXFx6enp////////4uLiZ2dnAAAAAAAAAAAAAAAAAAAAOTk5iIiIGxsbAAAAv7+/////
2dnZAgICCwsL3Nzc////+/v70NDQISEhAAAAAAAAJycn8/Pzo6OjAAAAQkJC8vLy/////f39////
8fHxeXl5AAAAW1tb+vr69/f3////////+fn5/////v7+////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////+/v7////////////7Ozsh4eHAwMDBgYGAAAAAAAABgYGAAAAAAAA
FhYWSEhI6enp+/v7////7+/vcnJyAAAAAAAAEBAQJCQkAAAACwsLV1dXODg4AQEBdXV1////////
SUlJAAAAjIyM////////9vb2////6+vrAAAAAgICxcXF////////0NDQHx8fBAQEAAAADAwM5eXl
+vr6z8/PQEBAAAAABgYGCAgIEBAQAAAAAgICa2tr5eXl/////Pz8/////////////v7++vr6/v7+
////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7Awb1BAjxNTr/7P//8v7/8vv/9Pz/oKLS
KiVyQzt1eGyTXmaKPT25FwDcLA/PkJGv6er7naf/CxLXBwf/Bwf/AwXwAALtAAH9AAX8BQr5FQvh
na/q7+z/vqzSQCGQIA3ULBnReHapamiKQD1qPjaAt6/L+/T////x///x5vD/WF7dBwjyAgT2AAP0
AAX6AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////bm5uBwcHPz8//////////v7++vr6////
/f39/////Pz8WVlZAQEBWFhY/v7++vr6////dnZ2AAAADAwMaGhoxMTEx8fHmZmZEBAQAAAAVVVV
+Pj4////e3t7EhISAwMDmJiY2tra1dXVp6enLy8vAAAACAgIGhoa9fX1/v7+39/fBwcHERER6+vr
////////lZWVAAAAEhISfHx8paWl6urqpaWlAQEBUFBQ/Pz8////////+vr6/Pz8cXFxAAAAX19f
/////f39/////////f39////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+/v7////7u7u////+/v7bGxsAAAACAgILy8vfX19ubm5ubm5qKioZGRkCwsLAAAASkpK////
////p6enEhISAAAAkpKS29vb9fX12dnZf39/AAAAAgICBAQEr6+v/Pz8/f39VFRUCAgIkJCQ////
/Pz8/v7+////5+fnDAwMAAAAxsbG////////nJycCQkJCwsLmpqara2t////5ubmLy8vAAAALCws
uLi43Nzc6urqjIyMDw8PAQEBdHR0////////////////////////////////////////////////
////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AwP7Awb1BAjxNTr/7P//8v7/8vv/9Pz/zc//t7L/zcX/5Nj/09v/
g4P/KA/tXD//4OH/7e7/doD/AAfMAAD8AAD4AALtCAz3AAH9AAj/Bgv6DwXbgJLN7+z/69n/r5D/
JRLZWkf/zsz/393/1dL/vbX/6+P/+vP////x///x5vD/WF7dBwjyAgT2AAP0AAX6AAP6AAH9AAH+
AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////b29vBQUFQUFB/////////////Pz8/v7+/v7+////////XFxc
AAAAU1NT////////xsbGHBwcBgYGmpqa8fHx////////9vb2qqqqAQEBCQkJwMDA9PT0UVFRAAAA
XV1d/f39////7u7u////zMzMQkJCAAAAFBQU9vb2/v7+39/fBgYGERER6urq////////e3t7BQUF
Wlpa6+vr/v7+////o6OjAAAAUVFR////////////////////dHR0AAAAYGBg/////v7+////////
/Pz8////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////Pz89/f3
////ubm5FhYWAAAAWlpa8vLy/////v7+/Pz8////////rq6uCAgIBQUFqamp+Pj4lZWVAAAAJycn
6urq////////////6+vrhYWFBAQECAgIwcHB/Pz8////U1NTAwMDlJSU////+/v7+/v7////6+vr
Dw8PAAAAxcXF/////Pz8lJSUAAAAOzs7////+/v7////lpaWAAAAJiYm3Nzc////+Pj4/f39+Pj4
kJCQAAAADw8P1NTU////////////////////////////////////////////////////////////
////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+CAD+CwH7CwbxQD3/9P///v/4///y///05+jx9vf/+/n/8/L/7f7/wtPZhoOq2dbp7///
7///SEb+BgjwDA7/BAT/AAjiBhLsAAL4AgX/Bwf/DAz7Y2H76OX/+P/88/r3g4mjqK7B7f//8f7/
8fn/6+/6+/v/9/f2///p///p6vD/WFvhBQP9AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+
AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////dHR0AQEBQUFB/v7+/Pz8/////////v7+////////////X19fAgICVVVV////////
k5OTAAAAMzMz8PDw////+Pj49fX1////////d3d3cXFx3Nzc+vr6YWFhAAAAUVFR8vLy/////f39
/////Pz8d3d3AAAAJiYm9/f3////4ODgBgYGEBAQ6urq////////gICABgYGaGho/////////v7+
m5ubBQUFUFBQ////////////////////dHR0AAAAYGBg/////f39/////////Pz8/f39/f39////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////f39/Pz8/////v7+aWlpAAAARERE
////8fHx////////////7Ozs////////UVFRAAAAdHR0/Pz8s7OzAAAAFxcX0NDQ/v7+////+/v7
////2traAAAAAAAAy8vL////////U1NTAAAAnJyc+/v7+/v7+Pj4////6urqDg4OAAAAxMTE/v7+
+vr6kJCQAAAAQ0ND/////////f39QUFBAAAAbGxs////8/Pz////////////6+vrqampnZ2d+/v7
////////////////////////////////////////////////////////////////////////////
////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CAD+CwH7
CwbxQD3/9P///v/4///y///09fb/9vf/+/n/8/L/7f7/6Pn/29j/7+z/7///1+nqJyXdAgTsAAL/
AAD7AAnjAg7oAAX7AAP9AAD6AADvOTfR1tP/+P/8+P/83+X/5uz/7f//4/D46/P/8PT/+/v////+
///p///p6vD/WFvhBQP9AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9
AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////e3t7
AAAAQkJC/v7+/v7++/v7+/v7/Pz8+Pj4////+vr6WlpaAgICV1dX////+/v7WFhYAQEBbGxs/v7+
/v7++/v7+Pj4////////////////+fn5+/v7np6eDw8PAAAAdXV1urq65ubm9vb2////q6urEhIS
JSUl+fn5////4ODgBQUFDw8P6enp////////i4uLBQUFYmJi/////////Pz8m5ubBQUFTk5O////
/f39/f39////////bm5uAAAAXl5e////+/v7/////////v7+/////f39////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////v7+////////5eXlY2NjDQ0Nb29v////////////8/Pz
////8vLy////////VlZWAAAAZGRk/v7+6enpOTk5AAAAMjIyenp6w8PDwMDA+fn58/PzGhoaAAAA
v7+/////////VVVVAAAAoqKi+fn5////+Pj4////5eXlCgoKAAAAxMTE/////f39lJSUAAAARkZG
8/Pz/////v7+GRkZERERlZWV5eXl5+fn8/Pz9/f36enp8PDw9vb28fHx////////////////////
////////////////////////////////////////////////////////////////AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+BgH+CgL7CwjtQET79v7///77
///1///3///+9PPy///z///u/f3l///n///t9vbs+vv/ycf/LRL8CQf4AAD8BQX/BAb+AADzAAT4
DQ35Cw//CAD1KBDqu6P/9f70+v/1+f7+/f7////q+/vm///5///8/fz8+fj4///u///u7O7/Wlrk
BwH/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/j
hYr/////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////enp6AAAATExM////////
/////////////Pz8/////v7+W1tbAAAAUlJS////9/f3SUlJBgYGHR0dPT09LS0tQEBAMTExMjIy
KysrOTk5Nzc3f39/////////fX19CAgIAwMDAAAAEBAQLS0tW1tbWlpaBwcHNjY2+vr6////4ODg
BQUFDg4O6Ojo/v7+////hoaGAQEBZGRk////////////np6eAAAATExM/////////Pz8/////f39
bGxsAgICXl5e/v7++fn5////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////+fn5/v7++fn5/v7+7Ozs0tLS5eXl////+/v7////////////////////sbGx
Hx8fAgICjY2N////////vLy8R0dHAAAADAwMDw8PAAAAJiYmRUVFDQ0NAAAAx8fH////////V1dX
AAAAnJyc/v7+////+/v7/v7+5ubmDAwMAAAAx8fH////////lZWVAAAAODg4////+fn56+vrFxcX
AAAAFhYWHh4eGhoaGBgYGRkZFxcXHh4eGxsbPDw8lZWV////////////////////////////////
////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+BgH+CgL7CwjtQET79v7///77///1///3///+//79
///x///u///n///n///t///1+vv/qaf5HgPtAgDxAAL/AAD6BAb+AAD1AAn9AADsBQn8CwP4IQnj
o4v/9v/19//y+v//+/z////o///q///5/v/7//7+//7+///u///u7O7/WlrkBwH/AAD+AAD8AAP/
AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////b29vAAAATExM7u7u/v7+/Pz8+fn5////+fn5
////9PT0X19fBQUFTExM/////v7+VlZWBwcHAAAAERERBgYGEhISCAgIDw8PDw8PAAAAAwMDeHh4
7e3t////6+vr0tLSf39/RUVFLy8vDw8PCQkJERERAAAAQUFB/Pz8////4ODgBAQEDQ0N5+fn/v7+
////hoaGAQEBYWFh+fn59PT0+Pj4oKCgBAQEQkJC/////////////////v7+bGxsBwcHY2Nj////
+fn5/v7+////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/f39////+Pj4+vr6////////////////////////9/f31dXVqqqqampqGRkZAAAAJSUlyMjI////
/Pz8////////r6+vhYWFWlpaODg4Hh4eCgoKAAAABwcHzMzM+vr6/f39WFhYAAAAhoaG////////
/////Pz86urqDw8PAwMDycnJ/////f39kpKSAAAARkZG/////v7++Pj4LS0tAAAAExMTHR0dICAg
KSkpISEhKSkpMDAwAAAABwcHrq6u////////////////////////////////////////////////
////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AAH/AAH/AwrtN0j17fz/+vr///n///v/9vj6+/3///j7/vz++///9/v8
/f39+/r69uv/fm/bLBmuPjR8SU58Chi+AAD4Cgb/Dw//AADbMEiOQEd+MB2yflvy9Pv/9/b7/fb9
+/H7+/r3///8//j/+fX5+/X7/vj+///4///46u//WFzgBwT6AAP4AAL2AAb6AAP6AAH9AAH+AAH+
AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////bW1tAQEBKCgoiIiIioqKkJCQj4+PlpaWlJSUj4+PkpKSOTk5BwcH
Tk5O////////cXFxDg4ORERE29vb8fHx4+Pj3t7e3t7e4uLiMDAwBgYGjIyM/Pz8/////v7+////
+fn5/v7+////6+vrwcHBdXV1AwMDMjIy/f39////4ODgBAQEDQ0N5+fn/v7+////iYmJAwMDampq
/////v7++vr6oaGhBQUFKSkp8/Pz/v7+////////+/v7Z2dnBAQEbGxs////+/v7/v7+////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////9/f3/////////Pz8
+/v7////////8PDwwcHBeHh4ODg4GhoaDg4OAAAAAAAAHh4ep6en////////9fX139/f39/f////
////////////8fHxs7OzERERAAAAwsLC/v7++/v7V1dXAAAAZmZm/////v7+////+/v75ubmDAwM
AAAAx8fH/////Pz8kZGRAAAASEhI/v7+/////f39Pj4+AQEBdnZ2////////7Ozs5eXl+vr6w8PD
EBAQAAAAzs7O////////////////////////////////////////////////////////////////
////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AAH/AAH/AwrtN0j17fz/+vr///n///v/+/3/+/3///b5//3/+///8/f4//////7+7OH/dWbS
cV7zwbf/zNH/PkzyAAD5BgL/AAD1Gh3/obn/wcj/dmP4cU7l7/b/+/r///j///X///77///8/vf+
//v///n///n////4///46u//WFzgBwT6AAP4AAL2AAb6AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+
AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////dHR0AQEBAAAAEhISAAAAAAAAAAAAAAAAAQEBAAAADAwMAAAAAAAAUVFR////////tLS0
AAAAHBwc6Ojo////9fX1////////7OzsAgICDAwMwsLC////srKyRkZGOjo6////+/v79/f3////
////paWlBAQEMzMz/v7+////4ODgAwMDDAwM5ubm/f39////i4uLAAAAYmJi////////+Pj4mpqa
AAAAERER4+Pj9vb2/f39////9fX1X19fAAAAc3Nz/////v7+/v7+/////v7+/////v7+////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////f39////+/v7/f39////+vr6srKyNzc3
AAAAAQEBAgICAAAAAAAAKSkpiIiI2NjY////////+/v76enpTU1NERERtra2/Pz8/////////v7+
8/PzCQkJAAAAxsbG/v7++vr6V1dXAAAAT09P/f39+fn5////+vr63NzcBAQEAAAAxMTE/////v7+
lJSUAAAANDQ0////9PT0////jIyMAAAAKysr+/v7////////////////mJiYBQUFKSkp+/v7////
////////////////////////////////////////////////////////////////////////////
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/Awnu
N0b67fr/+vr///r/////+P/7+P/7///8////9P//9P//+v/8+v/85e3x4+v1+Pj88vL47/n/qr/f
CwHNEAjyBgXRf4vh2Pfy8//79uv66d70+P/19f/y+v3//fz////////8+v/5+v/5//7///7////1
///15PT/V1/bBQT8AAL6AAH4AAX8AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9
AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////dHR0AAAA
CAgIbW1tS0tLVlZWYmJiXV1dXV1dVlZWcHBwGRkZAAAAXFxc////////6enpRUVFAAAAT09P3t7e
////9vb25ubmWVlZAAAAWFhY7e3t////x8fHDAwMAAAAmpqa9fX1////////6+vrVFRUAAAASUlJ
////////4eHhBwcHCQkJ5+fn////////kJCQAAAAYmJi////////////nJycCAgIBAQETU1N0tLS
/////Pz8xMTEDAwMAQEBqKio8vLy////9fX1////////+vr6////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////v7+////////8/Pz////oaGhFhYWAAAAAAAALCwsVVVVk5OT
0tLS6urq+/v7/////////v7+/////f39cHBwAAAANTU15+fn9/f3////3t7eeHh4AAAAFhYW3Nzc
/////f39WlpaAAAAFBQUYWFhzc3N////6enpW1tbAAAAEhIS6enp/Pz8+vr6fX19AQEBQkJC3Nzc
+Pj4////19fXNzc3AAAAYGBg4+Pj////////qKioEhISAgICl5eX////////////////////////
////////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/AwnuN0b67fr/+vr///r/
////+P/7+P/7///8////9P//9P//+v/8+v/88/v/7fX/+/v/+fn/7/n/yt//PTP/CADqJSTwnan/
4P/68//7+/D/9On/+P/19f/y+v3//fz////////8+v/5+v/5//7///7////1///15PT/V1/bBQT8
AAL6AAH4AAX8AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////cnJyAgICT09P/////////f39
+/v7+/v7////+Pj49PT0Y2NjDAwMUVFR8/Pz/Pz8////r6+vNzc3AAAAIyMjYGBgWVlZJycnAAAA
QEBAxcXF////////////eHh4CgoKAAAAQEBAV1dXSkpKKioqAAAAERERmZmZ////////39/fDAwM
DAwM+vr65eXlNTU1DQ0NAwMDJCQkKCgobm5u/f39qKioAAAADQ0NEBAQExMTPj4+Pj4+EhISAAAA
MjIy3Nzc////////9/f3////////+vr6////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////+Pj4////8vLyPDw8AAAAREREvr6+4+Pj////////+fn5////////9PT0
8vLy////+vr6////u7u7QkJCAAAAAQEBODg4MzMzExMTCAgIERERcnJy9vb2/Pz8////QUFBAAAA
ISEhFRUVEBAQHh4eAwMDAAAAAAAAj4+P////8/PzQkJCCwsLAAAAAAAAHBwcSUlJ5eXl////qKio
LS0tAAAAFxcXHx8fJCQkAAAAAAAAe3t7////9fX1////////////////////////////////////
////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CgD/DQD/DQfuQUP8+Pf///3///73///3/f/0/f/0///4
///7+v//+v//+//++//4+P/x9Pvt///x/v7t///78/j/jZTPICeccHvH2+v2+v/r+f7j//n///n/
///1+P/y9v//9v//+P//+P//9P/09P/0+P/++//+/f/5/f/54/X/VV7dBwH/AgD+AAD8AgL/AAL7
AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////dHR0AAAAR0dH////////////////////////////
////X19fAAAASkpK+/v7////////////x8fHWFhYBQUFAAAAAgICBgYGY2NjyMjI////////8PDw
////8vLyoqKiJiYmGRkZBgYGAAAABwcHKysrjIyM+Pj49/f3////1tbWBAQEAgIC9vb27u7uJiYm
CwsLAAAABwcHBwcHZ2dn/f39oKCgBgYGYmJikpKSLi4uCQkJAAAACQkJX19fxsbG/////////f39
+/v7////////+vr6////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////9/f3
////7u7u////19fXBgYGAQEBsLCw9/f3/f39////////8/Pz////3t7ebW1tdnZ28fHx+vr6////
////0dHReHh4NjY2BQUFEBAQDg4OODg4jo6O4eHh////////////a2trYWFhw8PDnp6eLi4uDQ0N
HBwcQkJCh4eH/v7+/////v7+UlJSJCQkAwMDDg4OPj4+Z2dn5+fn////////0tLSbGxsExMTDg4O
GRkZPz8/lpaW7+/v/////v7+////////////////////////////////////////////////////
////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+CgD/DQD/DQfuQUP8+Pf///3///73///3/f/0/f/0///4///7+v//+v//+//+
+//4+P/x+P/x///t///u//v28/j/vcT/U1rPqLP/5PT/+v/r+v/k//n///n////1+P/y9v//9v//
+P//+P//9P/09P/0+P/++//+/f/5/f/54/X/VV7dBwH/AgD+AAD8AgL/AAL7AAL7AAH+AAH+AAT4
AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////dHR0AAAARkZG8/Pz+Pj4/Pz8+/v79vb2/Pz8////////YGBgBAQEVVVV
/Pz8/v7++/v7+fn5////////4eHhvb29xcXF5ubm9vb2/f39/f39////9/f38/Pz////////////
1dXVt7e3vb290NDQ6Ojo/////////Pz8////3t7eCwsLExMT8PDw////19fXa2trAwMDY2Nj19fX
8fHx////mJiYAAAAR0dH////7e3ty8vLv7+/zc3N9PT0+Pj4////+/v79/f3/v7+////////+/v7
+fn5////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////Pz8////+vr6/f39y8vL
CAgICQkJy8vL////9/f37Ozs9PT0////////mpqaBgYGDQ0N29vb/////Pz8/////////v7+8PDw
2NjY6+vr7e3t7+/v////////+/v7+vr6/f399vb29/f3////////+vr64uLi2NjY4ODg////////
+/v7////9vb2jIyMERERRkZG7u7u/Pz8////9/f3+vr6////9fX19fX14eHh7+/v+/v7////////
9/f3+/v7////////////////////////////////////////////////////////////////////
////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
CgD+DQH7DwfuQz//+Pf///z////1///3///7///+//z///v//f3//f3///3///3///7///7///n8
//z///b/+/f/7/r/v8zP8fb2/f///vv///v/+vj/+/n///j//vf++/7/+/7//fr//fr/9v/49v/4
+v3//fz//f7//f7/4/T/VV7eBQH/AwD+AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+
AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////cnJyAAAASEhI+/v7////////////////////////+/v7W1tbBQUFWlpa/f39+fn5////9/f3
8/Pz////////////+/v7+fn5////+Pj4+vr6/////////////f39+vr6/v7++vr6/v7+////////
/////v7++vr6+/v7////29vbAgICExMT5OTk9PT0////jIyMAAAAc3Nz////7Ozs/v7+qampAAAA
R0dH////+/v7+Pj4/////////////v7++vr6+Pj4+/v7/v7+/f39////////+vr6////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////v7+////////6enpNzc3AAAAbm5u8/Pz
////////////////v7+/QUFBAAAARkZG9PT0/////f39////9fX1/////////Pz8/f39////+vr6
////////9vb2////////////9vb29vb2/////v7++vr6////////////6Ojo////9vb2////jY2N
AAAANzc3////////+/v7////+fn59vb2////u7u7Ozs7fn5++/v7+/v78/Pz////////////////
////////////////////////////////////////////////////////////////////////AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CgD+DQH7DwfuQz//
+Pf///z////1///3///7///+//z///v//f3//f3///3///3/+vn9//7///b5//z///b/8u7/7/r/
7/z/+v//+Pr6+/j///v/+Pb/+Pb///j///j/+/7/+/7//fr//fr/9v/49v/4+v3//fz//f7//f7/
4/T/VV7eBQH/AwD+AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////fX19AAAAQUFB
/Pz8////+Pj4+/v7////////////+/v7VlZWAAAAUlJS/v7+////+/v7/////////Pz89/f3+/v7
////////////////////+Pj4/f39/////////f39////////////+/v7/Pz8+vr6/Pz8////////
////7OzsAwMDCQkJ8fHx+vr6+vr6kZGRAAAAVFRU////////////oqKiAAAAXFxc9/f3+fn5////
////////9PT0/////v7+////////+/v7+Pj4////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////f398/Pz/v7+/v7+////np6eEBAQAAAAOzs7enp6np6elJSUbGxs
FhYWAAAAHR0dwMDA////+/v7////////+vr6+/v7/////////////v7+/v7+/f39////////////
+vr6/////////Pz88/Pz////////5ubm/v7+9/f3+vr6////+Pj48vLyoKCgCgoKOTk5/f39/v7+
9vb2/////v7+8fHx/Pz86+vrGBgYCAgIsrKy////////9/f3/Pz8////////////////////////
////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7AwfyBgntOj7/8ff//v3////1///3
/f///f7///v///v/+//8+//8/f/8///89/X0///++Pjj/Pzn9vr78PT1/f/t///t///w///1//r/
9Pz/7v7q7f3p//3///3////y///y//3///3/+//x+//x/f///f3///7///z/5PT/V1/bBQH/AwD+
AAD5BAP9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////bm5uAAAARkZG////////+/v7+vr6
/////Pz8+/v79/f3XFxcAwMDVFRU/Pz8/////Pz8/Pz8/////////////v7++vr6/Pz8/Pz8+/v7
////+vr6////9fX1+vr6+/v7////////+vr6/v7+/////////////Pz8+Pj4/v7+6enpDAwMDAwM
7e3t////+/v74uLibW1tdXV18vLy////9vb2k5OTCwsLSkpK9fX1/////////////v7+9/f3////
////////////+fn5+/v7////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////8/Pz////7e3ti4uLHx8fAQEBAQEBBQUFAAAAAAAAAAAAOzs7oaGh+/v7
////7+/v/v7+/Pz8/v7+/////////Pz8/v7++/v7////////+vr6////////////7u7u8/Pz////
////+fn5/f39////+vr6+/v7////9/f3////////8vLylpaWampq+/v7////////9/f3////////
////+/v7h4eHAAAAGhoas7Oz////////////////////////////////////////////////////
////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7AwfyBgntOj7/8ff//v3////1///3/f///f7///v///v/
+//8+//8/f/8///8//38///+///q///q+v7/+v7//f/t+/7k///s///1//r/8fn/7//r7//r//j6
//3////y///y//3///3/+//x+//x/f///f3///7///z/5PT/V1/bBQH/AwD+AAD5BAP9AAL7AAL7
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////jo6OIiIiZmZm/////Pz8/////////f39/v7+////////
e3t7KCgob29v/////////Pz8/v7+/////////////////////////f39/v7++/v7/v7+////9PT0
/////f39/v7++/v7////////+vr69/f3////////+/v7////5ubmLi4uPT097u7u////////////
/f397e3t/////v7+////uLi4JSUlb29v/////////Pz8/f39/v7+////+/v7+fn5/f39+fn5+vr6
////////+vr6/f39////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////+/v7/v7+
/////////v7++vr6////2dnZgoKCJiYmAAAADg4OR0dHnJyc4uLi/////////Pz8+/v7////+/v7
////////9fX1////////9/f3/v7+////+Pj4////+vr6+Pj4////+vr69fX1////////9fX1////
+fn5////+/v7/f39////+/v7////////7u7u////6+vr////////////9vb2/v7+////5OTkbm5u
UFBQrq6u+Pj4/////v7+////////////////////////////////////////////////////////
////////////////////////AA==</image>
               </value>
               <?templateDesigner expand 1?></draw>
            <field presence="hidden" access="protected" h="6.35mm" name="txtFormName" w="17.4625mm" x="26.515mm" y="264.092mm">
               <assist>
                  <speak priority="toolTip"/>
                  <toolTip>The number assigned to each applicant company by the NHPD. This number will be indicated in the acknowledgement letter sent by the NHPD to acknowledge the receipt of a submission. This information need only be provided if the company code is known. If not known, leave blank.</toolTip>
               </assist>
               <border>
                  <corner presence="hidden" thickness="0.1753mm"/>
                  <edge presence="hidden"/>
               </border>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border>
                        <edge/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <value>
                  <text>CRF Ext</text>
               </value>
               <?templateDesigner expand 1?></field>
            <field access="protected" h="6.35mm" name="txtTrackingNumber2" w="14.6876mm" x="153.057mm" y="5.763mm">
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
            </field>
            <draw name="Pages" x="6.489mm" y="271.565mm">
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <exData contentType="text/html" maxLength="0">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p>Page<span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField024979"/> of<span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField025889"/></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0mm" leftInset="0mm" rightInset="0mm" topInset="0mm"/>
               <para vAlign="middle"/>
            </draw>
            <field h="7.5mm" name="CurrentPage" presence="hidden" w="55mm" access="readOnly" id="floatingField024979" x="3.175mm">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="20mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Text Field</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <calculate override="error"/>
               <event name="event__layout_ready" activity="ready" ref="$layout">
                  <script contentType="application/x-javascript">//this.rawValue = xfa.layout.absPage(this); this is to start at Page 0


this.rawValue = xfa.layout.page(this); 
</script>
               </event>
               <?templateDesigner floatingFieldPlaceholder #?>
               <bind match="none"/>
            </field>
            <field h="7.5mm" name="PageCount" presence="hidden" w="55mm" access="readOnly" id="floatingField025889" x="3.175mm">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="20mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Text Field</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <calculate override="error"/>
               <?templateDesigner floatingFieldPlaceholder ##?>
               <bind match="none"/>
               <event name="event__layout_ready" activity="ready" ref="$layout">
                  <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();

this.rawValue = xfa.layout.pageCount();

if (xfa.layout.page(this) &gt; 1) {
	
	imgCanada.presence  = "invisible";
	Pages.presence = "visible";
}
else {
	Pages.presence = "hidden";
}	
	
if (language == "en") {
}
else {
	this.resolveNode("#pageSet.Page1.Pages").rawValue = "Page " + this.resolveNode("#pageSet.Page1.CurrentPage").rawValue + " sur " + this.rawValue;  	 	
	//		if (DrugAppl.sfPage1.sfInstructions.sButtons.txtPagination.rawValue == "TRUE") {
	//			cLog.trace ("CURRENT PAGE:*************************88 " + this.resolveNode("#pageSet.Page1.CurrentPage").rawValue);
	//			cLog.trace ("PAGE COUNT:********************** " + this.resolveNode("#pageSet.Page1.PageCount").rawValue);
				
	//			this.resolveNode("#pageSet.Page1.Pages").rawValue = this.resolveNode("#pageSet.Page1.Pages").rawValue.replace ("of", "sur");
	//			this.resolveNode("#pageSet.Page1.Pages").rawValue = this.resolveNode("#pageSet.Page1.Pages").rawValue.replace ("Page", "Page " + this.resolveNode("#pageSet.Page1.CurrentPage").rawValue);
	//			this.resolveNode("#pageSet.Page1.Pages").rawValue = this.resolveNode("#pageSet.Page1.Pages").rawValue.replace ("sur", "sur " + this.resolveNode("#pageSet.Page1.PageCount").rawValue);
					
	//			DrugAppl.sfPage1.sfInstructions.sButtons.txtPagination.rawValue = "FALSE";
	//			cLog.trace ("Setting txtPagination to FALSE");
	//			xfa.resolveNode ("DrugAppl.#variables[0].Globals").paginationRawValue  = this.resolveNode("#pageSet.Page1.Pages").rawValue;				
	//		}
	//		else {		
	//			this.resolveNode("#pageSet.Page1.Pages").rawValue = xfa.resolveNode ("DrugAppl.#variables[0].Globals").paginationRawValue;						
	//		}				
}


	

</script>
               </event>
            </field>
            <draw h="11.1125mm" name="imgCanada" w="38.1mm" y="268.287mm" x="3.175mm">
               <ui>
                  <imageEdit/>
               </ui>
               <desc>
                  <text name="embeddedHref">.\Images\wordmark-bw.gif</text>
               </desc>
               <value>
                  <image contentType="image/gif">R0lGODlhIAPIAMQAAMjHx1pXWJGPjzEtLvHx8ePj43ZzdNbV1ayrq0xJSj87PGhlZp6dnYSBgrq5
uSMfIP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAA
AAAALAAAAAAgA8gAAAX/ICSOZGmeaKqubOu+cCzPdG3feK7vfO//wKBwSCwaj8ikcslsOp/QqHRK
rVqv2Kx2y+16v+CweEwum8/otHrNbrvf8Lh8Tq/b7/i8fs/v+/+AgYKDhIWGh4iJijIAjY0CkAyO
AIuVlpeYmZooBQAMAgEBD6OkpaakCQEGAg4Hm6+wsbKzYgcIDaKnuru8DwkLAgAEtMTFxsfINAcM
CwO9z9C7CgsMrj6NBcna29zdaQQIBs7R5OW6AQLWNwLjDwvD3vHy8/RK4Avm+fqnAwsI2TMMnEpQ
r6BBMgQmTfoEqWFDSgfHIMC3r6JFVAwAugCwC0HEjyB5dHLo0ECokyfb/10cBXHFAYUwY8qclKXT
zJs34ZEp0EDlylGpVpEUgCuAgp9AEehUIWDXgpBQo8oogPSigBa5qo7K0lQrSzIOsq4cgA6AxhYj
m10cIGDpCYqnFEidSzcFR6/6AmDF+4Ar35ZfEBz9qaABYBsFmFlk63YEVV51I0uGgGswX2h6WYit
6hfvYS0E2P0c0EBdD3Cby5E2DYFAgl6TY0su4KDB68unMq9I/bOz189YGPjcl8BjkQLiKioQ2vNZ
Y9nQofIcjle3Ct4rdxR4XqPrby6CfwYAPiQ09e/R088NjXuU9RTYL+4wYICHd63kpQCIX05B/uMC
tfefegTWc8BtfL2HAv9/Fenw2Fnr/IUFAQGuxYB+lnlW4IYhuXaZgicwuI8OAdanw31VDcgEAueZ
8w4VBDRwmXEc1niQiHnthVcOj40CYXcSUlEAjs8M4AAWDrRY0VU2NlmPh16BaAKR5uRQ4QMm4oAi
UioiweJPCfxIxQEZ/sSkk2jGU4CSOWrGV0A69UiKRonRsOVPXRZBAFwXZQkagmamKag3DESpo1cz
BMCWCHyOUp95T81w50p5DkEmUjRyAeVPkQ7qaTJUYnaoVpKOUtguDQx2YakaPoEAUgNUKsWmF0n5
6a2w3IWUrSSESs4MDpgjKwmTXjSsD1cuxpoXtFbEK67QYgJoraNyNlX/lXYGuUSzFQ2w7BcEsClq
tOTC8uqu1SJFg7hAAdmqEpeO9i0YB/RW7r2ZEFDVsyL4Gg0NRPoZQ7EWHZvDAexC420a51qE78OX
NOpsuva2ABjBpawqQqYsYLyPwTckCeu8YySbD8QoK1KoeBRnZ/EDNAYbTUuviomCx/qAXEPDPx25
BgFlmsNdykT3US/Lbu5oAgMOLEURRPr+u7GjJBSAAMcj4JyPzjPwvJLGa+iac9FkC5JwL/xC4C80
b5lqAAIyP7AwBEHnJgLCoxjJgAGDNXCztkR43SccMn5c9uF+rG1K2orDZoLgpSgwjMSn+I03Lz6b
oLWwRkBeUQJDnxGu/+GIl55H4dQmjagJcuoCuscMcGtKCpuXw/ULl49msxqeP4O16cDDUfsujL95
wrQDiatA3aV0qjngQOT+0+9tIA/NmcFn/4bYE6tO6gmotzcK2CUMP3N5Z0PjfBzcR4O99vCr0X6b
uxlvwvyX7W4+NLevIHu3oWODr94XvwKWAX/mKJ7STiA+UsiFdtDrgckukjk6INApBszgGZBWvwVW
LXziE4DN9veM/qVgZVVZHx1ClTYNutAKHLyO/UaAwgaWooJZi6AOLqiPAewODjxc3AuH+IUYwmeG
ObQhKahHwl6Y0ASj0woB60ClFhLxik0w4oKQOAKRNXBuJ2giL55YAv/KWeSBeoib1LDIxipoMURc
dIz1tAI6pujwBjXEVB+Yp4s2+nEKb5xSHEdAIdwILIx3rMGaDNWH3p3ij5B8QiBL0DjIrCCPeuxY
IgH2rj1EERoBjKQofzDJXg2yBABIXy/AuAIx7oKMEMDkSqwYhwnqApajzKUKSjmCSu7CBQWYYwJD
mUT05OCTKQJE68aoy2YKgZf9OiUUbUmOQ7ZykzEwo0UIEggc4dKZ4IQANNUmTTjuQ4Wa7KQNgqgP
6unBkUsMpzx1ME5f9hEGirPmNdVZA2EqZxDI3MUU50nQF9SznCVYptAGhk0XwHMfA+UDNUkR0YJa
NAUH9WA6SRGABkj/wjULGIlJTOHOv/FzBny0CDHvcLReVPSiMCVBRlfnAvoE40cBUKFI/QYDV94S
Bw/Vhz79kFJ3xPSou5xly+Sjg1DYp6EsKCrpCCHLUtASqfKc6fdy4NQd+PQUtwtqPtBICIVaFato
lalSvWctrl51n8akgVT18dI+aPMBb02rLrXaVhx09URQTYFY8/FDP8BTr2nlq7qamlcInvQF/vyc
IpSEWLQqtmI4SMVTH/syvpCvEBOtLFYv67Ic4HWzcY3BRC1S2D+0VBetFW0zSctU0zbWpKl9QdTw
QlZECPObsjUgbR1Gz9sikrOXvAxPFdE74AY3fsNt0A5h+VVTgCyy/xVxLhsCSgrtPjd70R0RFqpb
CoO9VisDuIQtP/tdcIZXH77BzwxAmMJLmLWu7Y3ke0823sCWYK76YC8iKCfg/OZynEVBiYIXzOAF
ZwEBDY6whE9CshScVysVLoT05BZbA/txnAahL6w08aV4ejira60LdvdhXD4UoCEdPnEbQVwPswZK
xjjeA43pMdit5fjHeNjxPFarUiAbmQ5ClgeAx3rkJschyd6w8UrQKZuETGIoDkGAIzIch5cwRBjl
aYQDsOwQSTTCDi9xBALIDIlJxHgQaXbESg2aYitY2RFsZsWWz9Bjc+D3I7QRwAIURZicCkDLbQDA
mE1CnUXtwBOVqf8VMMB8BgCsOQArhkYqGnBTZQKAKKFgVygOrTMo/yDQg0aKAlSh5y+IGCk4jMoy
1GLDBBigGmEYCS7SN9QWEKA2mSZOA2K9hdrYkxwdbZodfo0LOhomBqbWwaxV+bm3vVkJwc4Hl+lx
gFQpcRcDeNuckWBpQWd7F8ReQWKOrZoGXDsJ9/j2LhJQGiDaRnzhTrcJom0DByRH3qZYjr6d0J6o
vHjJSjTAwImQEAZEmre6hTDAc+NdGgCAyABXgAjVcIB/f1sBsVsBv6fi7YnzItwVhwE799FbgyDH
5P0JeRFssWslqmg6MD/Hu4EQnpyrL+VBIAADEI4XxmC0zkK4uM//oaGAkh6hz+VosSxeXqtggPkl
l0bvn22Acbz0mupL18XWgQAAogf81gCwRiP2ZnZejCfXHl+6AtI9crTcNRqThgjW712Vpj+BvKZY
bkGEc0aZpyDeqtbuhZXYchHEKOzPCMC4tVPJt6tbAG3XhQEmzwSwr2TVD1E0JB6O98bUHa4sV4r/
JI6UBGwbCOw+xdiLQYBKzt7zF2kA510w6FCc+yLL8qJqGkztcrg+CcLXh39iEBZYLfwJ7BmLtX1d
G6kqgDWnR8GBFlNgTnT9ekz4PTmej4wNm4OVMCjA3ckRJoazXnyZ2lM0+tHpFXw69qRAvxBeXc3d
Q8ABmWcKs3cE/8nHYuSnfas1AJmSffdTfKbyeqxzbHWUBAJiIA4oNxCIAgW4D/pHduJXDmdifgFX
bzMgdAGoC5JTBN+neTfweD/Ra9uyfs9gADvHOqtFIwxIAlBXChNYA4S3Esd3BFK2EjX4CiJYDhl4
eB9YCh0IBPwHJlODNgfIAj/YekSwgnaTAyU2OFKwgQmUhCywfbxwFYuXD1J3P2sBhicghml4BCsn
XvIANBfRfTFQSGNRhDKwg+SwN2iDS/JXFYLnA3qYN/63hhdICjBoBE+oMHTIdb2wPDkIAYtkEU4H
A/9jDj04BGqkUd2AhabATTzgiQPhJSY3AI3og/J1aod4ijBwhP/mUIlCcInREIRBMIjI1gOVdxpL
yFFGAHg8OA9v+Eo/sIujEIhDUFW40X5CYIuRAwSi6EA/UIbnh4c2EC8VsXlFwIyRxwObqA9q6D/E
+ACsGCEfMg8y6HZAwF3eiATnyCmFCAPImA+wGANDCA3zmIeR6AKuGA2JiFqXwQO7SGU4sI/zR40t
0I5mGIcrcY+MkI8qoI5ehwTPGHA+EI9MJwQIKYxIQJC+owQZiS0HQylBYJH8SAT41zzyYIuNxwP2
BHTFhBtnaIknaGI7YHtCUI/jYgQc2QvjyANy+I86QJKPOAQz+QAG2UF8MYCvIEbG2APBuAv9uAMQ
qWrvSAPdSBz/PUCEQ/CRp/CNMrCTvBCVP/CU5bADXEkKPdk1P9GULIkbSrkJlXSUK1CUVclQuOGV
N3BsctkaqSMEV5kPbNkDYIlBTnCWz1CTF1GX/kMYQ3CILiUPjQOK+9czSICTENUEf5kPb3kCZFkK
DFkDjFkeu5iCTmCZ/MVVFiGQPGCYpICXLNAem5kJjfOZVvmCSRCO/KCYNVCUknkDnUmIRcCao+Ca
bLWOUDCRloSaFTGFNiCUzxCbr+mWkAlAegKFSOCLMPMEi0gOuilO19iL0yMErpSWQWCaZdlU/zRz
DjkCsCkPJCSWmYVZRfCbJwcF0mgOzClyFUGcG7GWQUCf7kEF/8L5SDpwltAJA6PxTLjhkn+gh3vJ
AgPKn7qFFweaA475AIEpA2sTk762nj9pERKqA5kpXTmwPwPQncUJX0FQgWqyD/CpJXiSBBdaCg9a
A/bEofvDoBDgmBxaRiuRoUxQlKWwA/c5hhIZo0DAovHgKz5EiiKJBLHXm02wnQqjHfqgmj9gT2M5
FiiqA1R6njpAdCd6nUhKSgs6D4OZneT2E+SZl1rRpj/wVd35pcAJpfJ5TDNZoT5QpKeZAyOqC/kJ
VGXqA0oaD2D5ojkAoKOgpy+AnKYQor7JJaFIDk0onncKo2vRpTswo1vBA1vYkUmgqA+gXYWqJkTG
qJZ4Y0dQXf/ppR+Syo1FdX1L4FM9MIkWgao9MKCk4ANDUiS0maiDmpXSWRDrxg80mEUrgasbhXRO
IKoPoKwQAAB8x4O/ClilRSI/oak7oI27emoMkBqFUaMvIKrahZtiBxI2YRZQoKrgiRTQanHuaimO
AAW0aqUrgagbuVXl6QjiSo/B2paX8a41wq5FUF3VuqUEKwf1iq0rAak/wKl58K+IGbDglaxJUF06
an/xagcLiwPmKQ1cwG54wKf8EwQnSVEVaxUXWxX9Cq+ccgcdS45zyAXVhQfkGgTYuajB87HnSqaL
5arreQUxawMX2rKe2lcWJLHWyhf4Ci2iKrC4da1Q4Kw9ugX/jtoXWmidW+CsWGsHN8tzMBk8T7uy
oQm0zBoHWqqcuecFSDsHzulE/xm2wONTUHtcZ9sEVHsHRckjr8oFM4oHPqVdPHuLwHO1dfs8QTsD
eVsHu1VbzfmzIQu5K6S09IQbwVOUh1s+6DIFi5u0lyoD4Vi1QnC1XVsHF+pd5kqgpTO4ske2d8sE
nTsHdOo4iLGxXfBVLNW3P6CrsGU63Jq5xLK5ZtuXcyCkOPC2cOsFuGsHs8tMOHumpYObwPuSFiG6
6yS8csC1OKCr2kp2kisHQupdf2oRgXorXDu9IvBV1lsDsYu2bSsDF9qqXuCsdsCto3qTw1o2H2qx
Pvu6S9C+/28wvmCqDNjLBfRLB1PpY0LAqYGHOKSrs/1LvFNbwG5gq5/7AsjLC0AKQxfMBrx7vxhZ
jmUDeOgLAepLBQC8XalbugFhu2zbwWrwwF9hqXyxkvgiwxC8qhTcrDusBsHEiTFwbOVLcDCMBjgM
wnELlCnzh15RwifMuT2MBl4otTKQTGDwvWvww8hVuf4lKJ8qRa4rwU+QwmegfparSFXhsCZZxGRQ
hbnlAx/smRDTcxQbwdWLwlE8Bi/GwKqruO+7BWnLBnTcxTSQweSwwWhycA3kxHmsBGQsBv5mQ9eL
xYDMxl6Ac+KTcqy7jdCyDCv8mHbcPcN7x2bgb0K6Rqxiyf9UEMhlcAAC8MnOS5R8Ib+Csgx8M3GM
nLgNqcs/kBCgYHI2ULNhwMpg4Am0Jm9A17zkoMb1YGnNxn6SQBszmsv+68iNPCuftgAAlm8H4Mp/
7ALCDAbErAWQRiXUkHZfnF3qyRcHOwjIEQrYGAQHMGYLcG6kASHOSs1izMO8bHEOR2iYiDWkG8zf
nAXjPAXzDApiunE6qLtCcMql0LSDsIlS6pt70zhGx0AJOwRPPMqi/ASoFoCW9ziUDM4FjQUHjbd7
s4RNxx0OHQTKfJGyMBy3w2zhmNFbxL863M/jes1CMGtFOdKcWdItEM5fkNJCGA437XQvDQSb3AtG
SwdX+Zb/0mquOH1EOt2u1RyqPn0aE8Gpy6exqmy3VBy5ZV0E1VcVV40CTQ177BwLE5SWF8fHx7pU
IBjGpOzRLHYEiKfW83jAtUnUKD3Wfhp3a7lSbf0D9hvRsUAdeWKC1ZGB9qTPeR0Fj8wDHcfHa60C
gO3Hgn0FSH0amIcXIYWglPuwRQcLf4kWouEVYY1PG03DW72murwfTHttnb3L2TrMhD0DyMHHvnAs
iR2nfMHMdDBBz4J7sAKnk43XHz3BQWvbke3ZZ+0CjWssvF3dPHLED+B3MzDcvMoXiFwI142WhxfT
11OIzR3Kew3FDindrj3E0frZ+nnaoN3b1s3dm01nT3oE/0dsw4ngOfOSzi9Ijeu907Pthl2tW3Gc
N3A6ArktA0L64EwQ2j4I3FhCjeAd3nhh3HFgPY1XewliQgeu1fuMtwveAlNsFXUZ4UHswl1g4VNx
sgHAnxuOLHgx3oJQhgSUptEwdxOrsuxNP5ad4iuA3r1Q2sCK3ySA5CgpzkyOAqnEW2R047Wa2phg
SxDi49AQz+iZ1QVr5ENw2TBwxEbCAy4Oj2L+BDL+AotNCjruAlYuQXgh33mgju/B5aAKsEKO4CcO
u2tuAkesjI9G35x90lbQ5i3w5nJj52xt305N2pcwKZliwfKSpbH9vDzdn3Xni5J3DYaeVD8R1T4Q
jgej2f/MPOc94OS9Wwl101srXKluCuZE0NFFPnJci4jeG+UjgJuOToG87ngQjYFJCunpyMdxzgee
gz2GvEoeXuJhvumdleApMOyZiOahngKkW8I3kO1Re+nF3t9K0Own171rUDdj6nh83M4pqpnO3d56
TeT4SEfmnuYwwK3rG+6O69tb3O3GHgQrzO1gsOwNrRXJrqGZDgS2Dt3UfgIQLes4YO8v8NT5d8XB
DngU3gKqvqdeke6HgO5LkboVjYsJT9zSzgJkfuhvOubejgJC6uFO2fL/pRVYalr/DtNNjAhVhT0U
/6hrTOscHei73vAlwOpnxfLBLgJGL47zK/MjQLKUau7/7Hnz6fjwUo8QjbYU5N6zQwDttS70CEv0
JHDKTYr02v0CAqw+Tc/rSz8K7C7nVB89OV8Ir/Y+vEuaXV/yPrDwYxzoPY+yRCDxMDCjV7+0+x4D
5prvJbDxCu8VpB4GZdhynPr2LuD1QX/yYi32UTgahT/fSS8CpPvr0X72D5mKRMD4bl1fgzBHOAT1
Ml0Eli/bf/6/gf7AwCv4aI8UEs2OTu/5m476vczAop8GVaUg9pvxsA30sl/ZDD/7KoCbHm/2h7+b
CWrWpO9Y4WkEwB/2nA8IIlj2wYsUnR9Nyq/pmp/E518Vux8DuP8CXzX8Cwz8ukrLpx/3x0jzgDBH
7HVs/zUPApA4kqV5Bo+6sq27Cqc806fw4vkT1L3/iwC6IYsHHB2Iyofj6DQJl7rnrCDVLaja7VUH
0Ka6r8aWKn59y+qT4YxrruPyZwNnNIXdK8Tcl9fH9PXc6K3cCWpFFe5QKRYOINI46vUtLKoURM5N
6qU9XarAaZqAeo4+JYA+DGSeupY54LDKqLa+ivy5Bd6KEC4e8kqCAv/EXmYFc571KYvtBh8hqIo6
qUJDlF77EKSCJhBoh5ccDLzNgCpc55493/oWEosHDVO9A0I3dwmui0HK99QB1Q4IPWjZ/skgUA6U
AYTauOEgc+5SvFP8ugx0Zc9NRXH5rnSksfGMqVcfpf8IOrmEj0MZF51pASUx2MGW4xZeymgzUjcX
CWoIVJfz2kgxIbWpVHJURtEuB/CBQvRSSrqdJVQ9QPZpqMFLJa2SU8XSqqY2LwaAoxG06yKdo5qC
tJqUyNITDKJCvYRo7pCxcrHWPbGWpleyN8UaRmTWxYCnNRRwJdyWaEGbfHUELnE5x7W7ehVfqkoW
rpiYl/y+IlAzMYSwoFCz3rLYBWwUkW9ZuX1rqpSfOzfbaYQ3WMBFkQrg1MPAcE9Qto5AnpxsNesD
0U/HVjO7Re0Txe8Fk6b7FW+UO0kvyXz1kmNe5ZVo8vworc3cWKkBsSSdl/xCXxNDNFh2RxCg3wvd
nSD/XiFa3bKdLtdctwh9DqG3hBbNufGfJqoNJ9UlM7XUn4BAVDiEW5EY6N+AIxDwnhINrfhDARiy
AKOMFEGTHHiSFWaTi0Q8B8R3biCIiILGaYJcjy3R+AsVSTjJC4dLxuigGwkEGSMUOrJwogxN6sPL
kYV4mRJWy9nEpRv4/QAlmcGAWdooY56hwITyuInVA3f+EGGdwZRIhIax0enGAGxq2YsORc4g4hnt
ueLnju5gxeA/eS4CInRRmoSVK1Z2YeM/oC7CqAxDnsFnJAohlqgIrh2j6oAFTGVqQmpegaYrjk76
Spz92MSrG6I5IewVsgryaxdZJovdP/bp+YCoQEBL/ySlqpQJ4I9DHOoqA7iuMqgPgeLg2ylKqmLp
udEiqo2yTlHBaiG2qkGuoK4EqEdjo0bLArI0kLqEuohgmqmrJdiLGaSsAfBrAgs/QYCky7qyLRHm
vpLwEANfU+2HWhQa1ykFL6LrKLAa+u8pwOUaL7hLqKxGvpUd/Oq7UhjAbEsFpPjCAjH7wHKNpwTs
BtBryKunzsEU3c/RJvQshrgyv3zGtJqgfMY34dysB7HR7BdJ03LWTILGORgA8bNNZ0viImrHMbYY
9FYxbr9ZPXt32yZIDM+GXV/hzxYEAJ21GFtDg2q/dJcgtyxLa3d3u0DADc0BgCvFuCYOlKdA5bIV
gv/xHI53wXEPBJg1QJHo9ju1RXc/ADkNhl+huQ8zwj55DQ5Eh/jsVV/89BohR4vWhQuKDfvVMoYx
gOuvfKvnAAbojnUDE7vQgPBHRH2FpjJ3j5XsJ8wsuG2w2xmOsZeIfgTtS+w7x/s0AzFmtjNr/bn8
wKerBf5dmAxpFuvC9iDAugd8TRwEUNwipoeA8akBANdbggKeN7jwrUQO1oGdIZzwvxmQTmvaIJme
ltcm/slCf27joAosiAQdmZBvIWRM9dYwv7vZTgT/q50cAIBCPcQwITTaCc/QZwAGuLAGBACAABbw
wwHsLXK9ihgDVTAA7IkhgDTAXQvMR4IZnuFnwbj/oSqCWAMy6iB+W2iYDjCXxqcVSos0WN8StKcJ
4rEwhxBo0bxkFrAB/LAvlJNU+xACgAF2QQEBEIAAAODIMzpSAA0IABZ1YIAClqGKSoEg3wTwsgAU
YIdnsFX0ssc3DPbrYbego54CgEkDurEFcgwaKh8QAzxewXdVCB8nkRDLFlRQEAVioYlApwcxRsyT
WCDA5VpVg6LM0pC1JGa0chYOBwSyiwLo5QEM8LIB6EqUYkAm3xCAPeORoJTU7NIrg4bIRwgAk8P0
Gt0IgADeBKA9PgSF6qpAqu/94GxFSCINEAAuBTRSkxQh6Ahwya14AgEAReuWDn85BlkRgAHYSx9r
/woAxnXirJfHeecKFvBAGRTAARMcwiVLgDqsGAABACjAAQDAACcuSocqzWY1HSDSGtjUovykXgHV
WacGOEBWB7gpEfp5GHQ0wJFLVKnD2nkAkhqihjPIaCWf8dHeNFKF4xCqCmKqswIgwACVVIEdSSDO
LjgQAEu0aS0Z+hCNghQrA2jAT0dhVD0EILCClUIABqVQDvLBAWS9mwL0KAKP5nUJCdAqCWiFDsEG
tmtQlBUXI/sAXWqBd6FBKuWYqrASGAOkCxCpQFkwAMwGVgqrBaFn9+AqifK0tglAQDuT9FV4uM6g
ke2WQ2u7AjPOAI3GfQBAd7fWu21Wib89gyvnYP9OVQTAAAJwgCO7iwBJBgB4hSVfbr3mBMvWdrw1
YGW0PFc2e07TuAjtq+XiW0YXdpaYYpzScu/1BPsul77XXSdCn/ZX2IEzEgAAMAfVK4PpJrIRWA2c
Ndu0WCm0tWw69WZ/V5AABoi1PhxGHwMwqcwGe+KAHcZBiEvA4Nq22AQIuDAWKFsC9CIYoqMogACe
26/pjc9jdwvAAgQQY81AuI28rQcx86nh5N60vFdCam//AV89JaABR5bh3RbwlQJ0N8xiHjOZy2zm
M4t5yyNAM5vb7GYy03ccK+WnSat8yB/r+BYHaACNiWDSI7TWJwFoQCPtSoOM9lkFH47zCCDbr7T/
PblNCJjk3RJQZLlG2qUOMIBFE2DWPhCgx95gAKMzbWoo47QfizT0DHB7ienZGBFoVWvx6kyFX75W
uzKtMoHS6uMXZDmpfeDxr4fwYV7XDMwMaGIAABfYIiNRzTVb4rIz28VnC0Cmr1jqAtzo6ZOeOtxJ
coAADBBYHSUgsISe6SvIHd4urNoqS2T2sBYAYpkpK7ACiPZOqC0Aa7s2sLpmdWkXUGxFxxTZ4iZB
TcOs8IUbBsw2ZSTFK/5IiGM845IAALkrXnGZlvoajlw2IxcA2yJnm+BMgYwiCc3dh2sckhP3OCP5
HfOb4zznOt85z3vu858DPehCHzrRi270oyM9KOlKXzrTm+70p0M96lKfOtWrbvWrYz3rWt8617vu
9a+DPexiH/uAQgAAOw==</image>
               </value>
            </draw>
            <field name="txtAccessDate" y="273.05mm" x="168.109mm" w="44.616mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <bind match="none"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

if (this.rawValue == null) {
var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cDateUtil = script.core.util.DateUtil;

if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {
		var accessDate = "";
		accessDate = new Date();
		accessDate = util.printd("yyyy-mm-dd", accessDate);
		
		if (language == "en") {
			this.rawValue = "Access date: " + accessDate;
		} else {
			this.rawValue = "Date d'accès: " + accessDate
		}
	}
}
</script>
               </event>
               <para vAlign="middle" hAlign="right"/>
            </field>
            <field name="lblVersion" y="273.05mm" x="123.057mm" w="44.754mm" h="6.35mm" access="protected" presence="hidden">
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();	
var cDateUtil = script.core.util.DateUtil;

if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {
	if (language == "en") {
	    this.rawValue = "VERSION 1.23 FINAL DRAFT ";
	} else {
	    this.rawValue = "Version 1.23 - Ébauche Finale";
	}
}
</script>
               </event>
               <bind match="none"/>
               <para vAlign="middle" hAlign="right"/>
            </field>
            <field access="protected" h="6.35mm" name="ddtFinalized" w="44.426mm" x="82.55mm" y="273.05mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var cDateUtil = script.core.util.DateUtil;

var language = cDrugApplModel.getLanguage();

var cLog = script.core.util.Log;

cLog.trace ("INITIALIZE IS CALLED !!!!!!!!!!!!!!!!!!!!!!!");

function noError(){return true;}
//window.onerror = noError;

if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {


	if (this.resolveNode ("DrugAppl.#variables[0].Globals").isFinalized  == true) {
	
	    cLog.trace ("FINALIZED IS TRUE !!!!!!!!!!!!!!!!!!!!!!!");
	    
	
	    if (language == "en" ) {
			this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue  = "Date Finalized: " + util.printd("yyyy-mm-dd", this.resolveNode ("DrugAppl.#variables[0].Globals").finalizedDate );
			
			
			
		}
		else {
			this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue  = "Date finalisée: " + util.printd("yyyy-mm-dd", this.resolveNode ("DrugAppl.#variables[0].Globals").finalizedDate );
			
		}
		
		
		
	}
	else {
		 cLog.trace ("FINALIZED IS FALSE !!!!!!!!!!!!!!!!!!!!!!!");
	}
}
</script>
               </event>
            </field>
            <field name="txtTitle" y="267.628mm" x="83.49mm" w="129.236mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle" hAlign="right"/>
               <bind match="none"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">


var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cDateUtil = script.core.util.DateUtil;

if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {
	if (language == "en") {
	    this.rawValue = "FORM V: DECLARATION RE: PATENT LIST";// (NOTICE OF COMPLIANCE) REGULATIONS\NCOMPLETE ONE FORM PER PATENT PER SUBMISSION",";
	} else {
	    this.rawValue = "FORMULAIRE V : DÉCLARATION RELATIVE À LA LISTE DES BREVETS";// SUR LES MÉDICAMENTS BREVETÉS (AVIS DE CONFORMITÉ)\NREMPLIR UN FORMULAIRE PAR BREVET PAR DIN";
	}
}
</script>
               </event>
            </field>
            <draw name="Revision" x="101.6mm" y="259.08mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="tab-interval:0.5in;tab-stops:left 0.333in left 0.667in left 1in left 1.333in left 1.667in left 2in left 2.333in left 2.667in left 3in left 3.333in left 3.667in left 4in left 4.333in left 4.667in left 5in left 5.333in left 5.667in left 6in left 6.333in left 6.667in left 7in left 7.333in left 7.667in left 8in left 8.333in left 8.667in left 9in left 9.333in left 9.667in left 10in left 10.333in;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField025515"/></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <?templateDesigner expand 1?></draw>
            <field name="RevisionNo" w="62mm" h="9mm" id="floatingField025515" presence="hidden" access="readOnly" x="101.6mm" y="259.08mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <para vAlign="middle"/>
               <calculate>
                  <script contentType="application/x-javascript">
this.rawValue = DrugAppl.desc.version.value.replace(/\$/g, "");

</script>
               </calculate>
               <bind match="none"/>
            </field>
            <?templateDesigner expand 0?></pageArea>
         <?templateDesigner expand 1?></pageSet>
      <subform w="576pt" name="sfPage1" layout="lr-tb">
         <subform w="203.2mm" h="38.376mm" name="sfMainHeader">
            <draw name="lblFormTitle" w="193.675mm" h="13.418mm" y="2.441mm" x="4.763mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>FORM V: DECLARATION RE: PATENT LIST Patented Medicines (Notice of Compliance) Regulations</text>
               </value>
               <font size="16pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H1"/>
               <?renderCache.bounds 546166 35201 0 0 1417 1417 0 0?>
               <?renderCache.textRun 36 FORM V: DECLARATION RE: PATENT LIST  0 131318 13417 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?>
               <?renderCache.textRun 53 Patented Medicines (Notice of Compliance) Regulations 0 77359 32617 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?></draw>
            <exclGroup name="pageLanguage" x="79.724mm" y="18.181mm">
               <bind match="dataRef" ref="$.SAR_REQUEST.LANGUAGE"/>
               <field h="7.004mm" name="chkEnglish" w="25.972mm" locale="en_CA" relevant="-print">
                  <caption placement="right" reserve="18.657mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>English</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>en</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</text>
                  </value>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
var dosage = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue ;
var dosage2 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue;
var route = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue ;
var route2 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue;
var emailValue = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value;



var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

cLog.trace ("english: otherDosageIsSelected : " + cDrugApplModel.getDosageIsSelected());
cLog.trace ("dosage in english: " + dosage );
if (language == "en") {

    
	DrugAppl.sfPage1.sfSubmission.part2Title.lblPart200.font.size = "12pt";
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "visible";

	if(this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence == "visible") {
		this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "hidden";
		
	}
	
	// keep track when the drop down list was changed. At startup, the drop down list should be empty	
    if (cDrugApplModel.getDosageValueChanged()== false) {
        if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue == null || 
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue == " ") {
            	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue  = " ";
            }
    	
    }
    
    // if the drop down list is changed, and 'Other' is selected, display the default string
    
    	if (cDrugApplModel.getDosageIsSelected()!= 0 ){
       		//DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue  = "Enter the specific dosage form in this box";
       
       }
   
   
    // keep track when the drop down list was changed. At startup, the drop down list should be empty	 
    if ( cDrugApplModel.getRouteValueChanged()== false) {
    	if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue == null ||
    	    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue == " ") {
    	    	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue = " ";
    	    }
       
      
    }
    
    // if the drop down list is changed, and 'Other' is selected, display the default string
    
      if (cDrugApplModel.getRouteIsSelected() != 0){
         // DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue = "Enter the specific route of administration in this box";  
      }
   
    
    // keep track when the drop down list was changed. At startup, the drop down list should be empty	
    if (cDrugApplModel.getDosageValueChanged2()== false) {
        
        if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue == null ||
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue == " ") {
            	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue  = " ";
            }
    	
    }
    
    // if the drop down list is changed, and 'Other' is selected, display the default string
   
    	if (cDrugApplModel.getDosageIsSelected2()!= 0 ){
       	//DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue  = "Enter the specific dosage form in this box";
       
       }
    
   
    // keep track when the drop down list was changed. At startup, the drop down list should be empty	 
    if ( cDrugApplModel.getRouteValueChanged2()== false) {
    
    	if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue == null ||
    		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue == " ") {
    			
    			 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue = " ";
    		}
      
       
    }
    
    // if the drop down list is changed, and 'Other' is selected, display the default string
    
      if (cDrugApplModel.getRouteIsSelected2() != 0){
         // DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue = "Enter the specific route of administration in this box";  
      }
    
    
		
}

if (emailValue  == "Courriel") {

	DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value = "Email";
}

else if (emailValue  == "Fournir une adresse de courriel valide, du style Dupont@société.com") {

	DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value = "Provide a valid email address: smith@company.com";
}

//copyAndSortDosage();

function copyAndSortDosage() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER1") {
					
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem(i, bigArray[i]);
				
				}
		}
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem("Autre", "Other");    
		
 }
</script>
                  </event>
               </field>
               <field h="7.004mm" name="chkFrancais" w="27.07mm" x="24.735mm" locale="fr_CA" y="0.001mm" relevant="-print">
                  <caption placement="right" reserve="20.3804mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Français</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>fr</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">var cLog = script.core.util.Log;
var emailValue = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value;
//var dosage = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue ;
//var dosage2 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue;
var route = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue ;
var route2 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue;


var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
cLog.trace ("french: otherDosageIsSelected : " + cDrugApplModel.getDosageIsSelected() );
cLog.trace ("otherRouteIsSelected : " + cDrugApplModel.getRouteIsSelected() );

//cLog.trace ("dosageValueChanged ************* : " + dosageValueChanged );
//cLog.trace ("routeValueChanged : ************* " + routeValueChanged );

//cLog.trace ("dosage: " + dosage );

if (language == "fr") {

    //DrugAppl.sfPage1.sfSubmission.part2Title.lblPart200.font.size = "9.75pt";

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "visible";

	if(this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence == "visible") {
		this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "hidden";
		
	}
	
	// keep track when the drop down list was changed. At startup, the drop down list should be empty	
	if (cDrugApplModel.getDosageValueChanged()  == false) {
		if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue == null ||
		    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue == " ") {
		    	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue = " ";
		    }
	    
    	
    }
    
    // if the drop down list is changed, display the defaul text
    
    
	  if (cDrugApplModel.getDosageIsSelected() != 0) {
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm = "Saisir la forme posologique précise dans cette case";  
      }
    
    
    // keep track when the drop down list was changed. At startup, the drop down list should be empty	
    if ( cDrugApplModel.getRouteValueChanged () ==  false) {
    
       cLog.trace ("first loop routeValueChanged == true");
       
       if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue  == null ||
           DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue  == " ") {
           	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue  = " ";
           }
       
       
    }
    
    // if the drop down list is changed, display the defaul text
    
    
    
        cLog.trace ("first loop flag == false");
    
       if (cDrugApplModel.getRouteIsSelected() != 0) {
           //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA = "Saisir la voie d'administration précise dans cette case";  
       }
    
    
   
   // keep track when the drop down list was changed. At startup, the drop down list should be empty	
	if (cDrugApplModel.getDosageValueChanged2()  == false) {
	
		if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue == null ||
		    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue == " ") {
		    	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue = " ";
		    }
	    
    	
    }
    
    // if the drop down list is changed, display the defaul text
    
    
	  if (cDrugApplModel.getDosageIsSelected2() != 0) {
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.rawValue = "Saisir la forme posologique précise dans cette case";  
      }
    
    
    // keep track when the drop down list was changed. At startup, the drop down list should be empty	
    if ( cDrugApplModel.getRouteValueChanged2 () ==  false) {
    
       cLog.trace ("first loop routeValueChanged == true");
       
       if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue  == null ||
           DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue  == " ") {
           
           	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue  = " ";
           }
       
       
    }
    
    // if the drop down list is changed, display the defaul text
    
    
    
        cLog.trace ("first loop flag == false");
    
       if (cDrugApplModel.getRouteIsSelected2() != 0) {
           //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.rawValue = "Saisir la voie d'administration précise dans cette case";  
       }
    
   
  
		var provinceList = xfa.resolveNodes("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlProvince.items[*]");
		var oItems = xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlProvince.#items");
		var provinceOrigDisplay = provinceList .item(0).nodes ;//Node Set containing the display text values
		var provinceOrigBound = provinceList .item(1).nodes; //Nodes Set containing the bound values. 
		for (var i = 0; i &lt; provinceOrigBound.length; i++){
			cLog.trace ("BOUND VALUE: " + provinceOrigBound.item(i).value );
				
				if (provinceOrigBound.item(i).value == "WA") {
					cLog.trace ("WASHINGTON@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
					oItems.nodes.item(i).value = "L'état de Washington";
				}
				else if (provinceOrigBound.item(i).value == "PEI" || provinceOrigBound.item(i).value == "PE") {
					oItems.nodes.item(i).value = "L’Île-du-Prince-Édouard";
				}
			
		}
	
    
    
    
}
if (emailValue  == "Email") {

	DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value = "Courriel";
}

else if (emailValue  == "Provide a valid email address: smith@company.com") {

	DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value = "Fournir une adresse de courriel valide, du style Dupont@société.com";
}

if (language == "fr") {
	copyAndSortDosage();
	copyAndSortDosage2();
	copyAndSortROA();
	copyAndSortROA2();
}
function copyAndSortDosage() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER1") {
					
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem(i, bigArray[i]);
				
				}
		}
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem("Autre", "OTHER1");    
		
 }
 
 function copyAndSortDosage2() {
			
		var dosageList = xfa.resolveNodes(" DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER1") {
					
					
						 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.addItem(i, bigArray[i]);
				
				}
		}
		 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.addItem("Autre", "OTHER1");    
		
 }

function copyAndSortROA() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER") {
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.addItem(i, bigArray[i]);
				
				}
		}
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.addItem("Autre", "OTHER");    
		
 }
 
 function copyAndSortROA2() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER") {
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.addItem(i, bigArray[i]);
				
				}
		}
		if (language == "en") {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.addItem("Other", "OTHER");
		}
		else {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.addItem("Autre", "OTHER"); 
		}   
		
 }
</script>
                  </event>
               </field>
               <?templateDesigner itemValuesSpecified 1?>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cMainHandler = script.DrugAppl.control.FormHandler;

try
{
	// set up event object
	var actionName = cMainHandler.LANGUAGE_CHANGE;
	var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
	
	// deploy event to controller
	cMainHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with pageLanguage::change", exception);
}
</script>
               </event>
               <validate scriptTest="warning"/>
               <?templateDesigner expand 1?></exclGroup>
            <draw name="lblMandatory" y="25.156mm" x="0.358mm" w="202.314mm" h="12.7mm" colSpan="2">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>Text</text>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para vAlign="middle"/>
               <?renderCache.bounds 570655 33166 0 0 1417 1417 0 0?>
               <?renderCache.textRun 4 Text 0 1417 20000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
            <event activity="ready" ref="$layout" name="event__layout_ready">
               <script contentType="application/x-javascript">

var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var lblMan = this.resolveNode("lblMandatory");

if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {
	if (language == "en") {
	    lblMan .rawValue = "* denotes a mandatory field\n+ denotes a field with validation error or missing data";
	} else {
	    lblMan .rawValue = "* démontre un champ obligatoire\n+ démontre un champ avec une erreur de validation ou des données manquantes";
	}
}

//lblMan.access = "readOnly";

var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("DrugAppl.script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);

</script>
            </event>
            <?templateDesigner expand 1?></subform>
         <subform minH="63.001mm" layout="lr-tb" name="sfHCOnly" w="160.08mm" presence="hidden">
            <draw name="lblHCOnly" w="143.67mm" h="9.1mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>HEALTH CANADA ONLY</text>
               </value>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin topInset="1.27mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <border>
                  <edge presence="hidden"/>
               </border>
               <assist role="H3">
                  <speak disable="1"/>
               </assist>
            </draw>
            <field name="txtSAPInvoice" w="55.83mm" h="6.985mm">
               <ui>
                  <textEdit>
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="23.55mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>1. Submission No.</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
            </field>
            <field name="txtFileNumber" w="76.47mm" h="6.985mm">
               <ui>
                  <textEdit>
                     <border>
                        <?templateDesigner StyleID aped2?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="5.08mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="27.25mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>2. Responsible Area</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
            </field>
            <field name="txtScreenedBy" w="55.57mm" h="6.985mm">
               <ui>
                  <textEdit>
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="23.55mm">
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>3. File Number</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
            </field>
            <field name="txtSAPOrder" w="76.46mm" h="6.985mm">
               <ui>
                  <dateTimeEdit>
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </dateTimeEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1.0008mm" bottomInset="1mm" leftInset="5.08mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <value>
                  <date/>
               </value>
               <caption reserve="27.52mm">
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>4. Date of Receipt</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <validate>
                  <picture>date{YYYY-MM-DD}</picture>
               </validate>
            </field>
            <margin bottomInset="2.54mm" topInset="2.54mm" leftInset="12.7mm"/>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
               <fill>
                  <color value="255,255,153"/>
               </fill>
            </border>
            <?templateDesigner expand 1?></subform>
         <subform w="203.241mm" name="sfInstructions" layout="tb">
            <subform w="184.825mm" minH="10.16mm" layout="lr-tb" name="sButtons">
               <field name="btnViewInstructions" w="38.75mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>View Instructions</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

this.resolveNode("sfInstructionsContent").presence = "visible";

if (language == "en") {

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "visible";
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "hidden";
}

else {

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "visible";
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "hidden";
}
DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.access = "open";
DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.fillColor = "211,211,211";

this.access = "readOnly";
this.fillColor = "245,245,245";
</script>
                  </event>
               </field>
               <draw name="Text1" w="6.176mm" h="5.2331mm" presence="invisible">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Text</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <assist>
                     <speak disable="1"/>
                  </assist>
               </draw>
               <field name="btnHideInstructions" w="41.601mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Hide Instructions</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

this.resolveNode("sfInstructionsContent").presence = "hidden";

//if (language == "en") {
//  this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "hidden";
//}
////else {
//  this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "hidden";
//}

this.access = "readOnly";
this.fillColor = "245,245,245";

DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.access = "open";
DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.fillColor = "211,211,211";
</script>
                  </event>
                  <event activity="initialize" name="event__initialize">
                     <script contentType="application/x-javascript">if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {
	if (DrugAppl.sfPage1.sfInstructions.sfInstructionsContent.presence == "hidden") {
		this.access = "readOnly";
		this.fillColor = "245,245,245";
	}	
}
</script>
                  </event>
               </field>
               <draw name="txtGuideDocEnglish" w="46.47mm" h="5.2331mm" relevant="-print">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <exData contentType="text/html">
                        <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="letter-spacing:0in"><a href="http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/guide-ld/patmedbrev/pmreg3_mbreg3-eng.php" style="font-size:8pt">Guidance Document</a></p></body>
                     </exData>
                  </value>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                  <assist>
                     <speak disable="1"/>
                  </assist>
               </draw>
               <field name="txtGuideDocFrench" w="48.475mm" h="5.2331mm" presence="hidden">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" baselineShift="0pt" underline="1">
                     <fill>
                        <color value="0,0,255"/>
                     </fill>
                  </font>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <caption reserve="47.475mm">
                     <value>
                        <exData contentType="text/html">
                           <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="text-align:center;color:#000000;text-decoration:none"><a href="http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/guide-ld/patmedbrev/pmreg3_mbreg3-fra.php" style="font-size:8pt">Document d’orientation </a></p></body>
                        </exData>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" underline="1" size="8pt">
                        <fill>
                           <color value="0,0,255"/>
                        </fill>
                     </font>
                  </caption>
                  <event activity="prePrint" ref="$host" name="event__prePrint">
                     <script contentType="application/x-javascript">


this.relevant = "-print";
</script>
                  </event>
               </field>
               <field name="txtLocked" w="21.918mm" h="5.2331mm" presence="hidden">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" baselineShift="0pt" underline="1">
                     <fill>
                        <color value="0,0,255"/>
                     </fill>
                  </font>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <caption>
                     <value>
                        <text>UNLOCKED</text>
                     </value>
                     <para vAlign="middle"/>
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt" underline="1">
                        <fill>
                           <color value="0,0,255"/>
                        </fill>
                     </font>
                  </caption>
               </field>
               <field access="protected" h="6.35mm" name="txtPagination" w="46.078mm" presence="inactive">
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
                  <para hAlign="right"/>
                  <ui>
                     <textEdit>
                        <border presence="hidden">
                           <?templateDesigner StyleID aped0?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <bind match="global"/>
                  <format>
                     <picture>9999999</picture>
                  </format>
                  <caption>
                     <para vAlign="middle"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <value>
                     <text>FALSE</text>
                  </value>
               </field>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge presence="hidden"/>
               <corner presence="hidden" thickness="0.175mm"/>
            </border>
            <margin bottomInset="5.08mm"/>
            <subform name="sfInstructionsContent" w="203.2mm" layout="tb" presence="hidden">
               <draw h="6.35mm" name="lblInstructTitle" w="202.53mm">
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" hAlign="center"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Where to send Drug Submission Application</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw name="lblInstructions" w="202.53mm" minH="35.646mm">
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Instructions guide</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw h="6.35mm" name="lblInstructHumanHeading" w="202.53mm">
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Human Drugs:</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw h="38.783mm" name="lblInstructHumanBody" w="202.53mm">
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Human Drugs: </text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw h="6.35mm" name="lblInstructVetHeading" w="202.53mm">
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Veterinary Drugs:</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <border/>
               <draw h="34.4mm" name="lblInstructVetBody" w="202.53mm">
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Veterinary Drugs: </text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 1?></subform>
         <subform w="203.103mm" name="sfSubmission" layout="lr-tb">
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <breakBefore/>
            <draw h="10.16mm" name="lblPart100" w="203.104mm">
               <assist role="H2">
                  <speak disable="1"/>
               </assist>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text>Part 1 - Complete one Form per Patent per DIN. Complete ALL mandatory fields.</text>
               </value>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <?renderCache.bounds 572894 25966 0 0 1417 1417 0 0?>
               <?renderCache.textRun 77 Part 1 - Complete one Form per Patent per DIN. Complete ALL mandatory fields. 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <field name="ddlSubmissionFilingStatus" w="203.103mm" h="8.89mm" locale="en_US">
               <ui>
                  <choiceList>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </choiceList>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="49.7698mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Drug Submission (Form IV) Filing Status *</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <validate nullTest="error"/>
               <items/>
               <items save="1" presence="hidden"/>
               <border break="open">
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <assist>
                  <toolTip>&#xD;</toolTip>
               </assist>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">var cLog = script.core.util.Log;
;

cLog.trace ("index: " + $.boundItem(xfa.event. newText));

if ($.boundItem(xfa.event. newText)== "CTAA") {
  this.resolveNode("lblSubNumber").presence = "visible";
  this.resolveNode("sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients").presence = "visible";
  this.resolveNode("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.sfAddIngredient.btnAddIngredient").presence = "visible";
  //this.resolveNode("ddlCDSA").presence = "visible";
 
}

else if($.boundItem(xfa.event. newText)== "CTA") {  
  this.resolveNode("lblSubNumber").presence = "hidden";
  this.resolveNode("lblSubNumber").rawValue = null;
  //this.resolveNode("ddlCDSA").presence = "hidden";
  //this.resolveNode("ddlCDSA").rawValue = "";
  this.resolveNode("sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients").presence = "visible";
  this.resolveNode("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.sfAddIngredient.btnAddIngredient").presence = "visible";
  
}
</script>
               </event>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
               </event>
            </field>
            <field name="lblSubNumber" w="83.727mm" h="6.985mm" presence="hidden">
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border hand="right">
                        <?templateDesigner StyleID aped2?>
                        <edge/>
                     </border>
                     <margin/>
                     <comb numberOfCells="6"/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
               <para vAlign="middle"/>
               <caption reserve="49.6009mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Submission Number *</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <event activity="exit" name="event__exit">
                  <script contentType="application/x-javascript">var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if(this.rawValue !=null){
if (this.rawValue.toString().length  &lt; 6) {
	if (language == "en") {
      	xfa.host.messageBox ("The Submission Number must contain 6 digits.");
	}
	else {
      	xfa.host.messageBox ("Numéro de la présentation doit avoir 6 chiffres.");
	}
		
	xfa.host.setFocus(this);
		
		
}else{

 var regExp = /\D/;

          if (regExp.test(this.rawValue.toString())) {
  			 if (language == "en") {
                 app.alert("The field must only contain numbers.");
             } else {
                 app.alert("Le champs ne peut contenir que des chiffres.");
             }
             xfa.host.setFocus(this);
          }

}
}

if (this.rawValue != null) {
	this.resolveNode("sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients").presence = "visible";
	//this.resolveNode("DrugAppl.sfPage1.sfSubmission.part2Title.btnAddIngredient").access = "open";
	//this.resolveNode("DrugAppl.sfPage1.sfSubmission.part2Title.btnAddIngredient").fillColor = "192,192,192";
	this.resolveNode("sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.sfAddIngredient.btnAddIngredient").presence = "visible";
}

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
               </event>
               <format>
                  <picture>zero{}|text{999999}</picture>
               </format>
               <validate nullTest="error">
                  <picture>num.integer{}</picture>
               </validate>
            </field>
            <subform w="203.046mm" name="part2Title" h="10.373mm">
               <border>
                  <edge/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
                  <corner thickness="0.175mm"/>
               </border>
               <draw name="lblPart200" w="202.886mm" h="10.16mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Part 2 - Second Person's Medicine - Complete ALL mandatory fields before moving to Part 3.</text>
                  </value>
                  <font typeface="Myriad Pro" weight="bold" size="12pt" baselineShift="0pt"/>
                  <margin topInset="1.27mm" bottomInset="1.27mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <assist role="H2">
                     <speak disable="1"/>
                  </assist>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                  <?renderCache.bounds 572276 21600 0 0 1417 3600 0 0?>
                  <?renderCache.textRun 90 Part 2 - Second Person's Medicine - Complete ALL mandatory fields before moving to Part 3. 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <margin topInset="0mm" bottomInset="0mm"/>
               <occur max="25"/>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?></subform>
         <variables>
            <script contentType="application/x-javascript" name="countryScript">
// This script object controls the interaction between the country and state/province Drop-down lists.

// The array contains the country and the corresponding states/provinces.

var myCountries = new Array(new Array(2), new Array(14), new Array(52)); // Create a two-dimensional array.
														   				 // For each country, add a 'new Array(number of state/province +1)'.

// Define the country and the corresponding states/provinces.
// The array syntax is arrayName[index][index].
// The first index number represents the country,
// the second index number is the actual data value.

myCountries[0][0] = " ";		// The first items in the Drop-dowm Lists should be blank.
myCountries[0][1] = " ";
myCountries[1][0] = "Canada";	// The first data value is the country name,
myCountries[1][1] = "Alberta";	// the rest are states/provinces.
myCountries[1][2] = "British Columbia";
myCountries[1][3] = "Manitoba";
myCountries[1][4] = "New Brunswick";
myCountries[1][5] = "Newfoundland and Labrador";
myCountries[1][6] = "Northwest Territories";
myCountries[1][7] = "Nova Scotia";
myCountries[1][8] = "Nunavut";
myCountries[1][9] = "Ontario";
myCountries[1][10] = "Prince Edward Island";
myCountries[1][11] = "Quebec";
myCountries[1][12] = "Saskatchewan";
myCountries[1][13] = "Yukon";
myCountries[2][0] = "United States";	// This is a new country, see how the first number is now [1].
myCountries[2][1] = "Alabama";
myCountries[2][2] = "Alaska";
myCountries[2][3] = "Arizona";
myCountries[2][4] = "Arkansas";
myCountries[2][5] = "California";
myCountries[2][6] = "Colorado";
myCountries[2][7] = "Connecticut";
myCountries[2][8] = "Delaware";
myCountries[2][9] = "District of Columbia";
myCountries[2][10] = "Florida";
myCountries[2][11] = "Georgia";
myCountries[2][12] = "Hawaii";
myCountries[2][13] = "Idaho";
myCountries[2][14] = "Illinois";
myCountries[2][15] = "Indiana";
myCountries[2][16] = "Iowa";
myCountries[2][17] = "Kansas";
myCountries[2][18] = "Kentucky";
myCountries[2][19] = "Louisiana";
myCountries[2][20] = "Maine";
myCountries[2][21] = "Maryland";
myCountries[2][22] = "Massachusetts";
myCountries[2][23] = "Michigan";
myCountries[2][24] = "Minnesota";
myCountries[2][25] = "Mississippi";
myCountries[2][26] = "Missouri";
myCountries[2][27] = "Montana";
myCountries[2][28] = "Nebraska";
myCountries[2][29] = "Nevada";
myCountries[2][30] = "New Hampshire";
myCountries[2][31] = "New Jersey";
myCountries[2][32] = "New Mexico";
myCountries[2][33] = "New York";
myCountries[2][34] = "North Carolina";
myCountries[2][35] = "North Dakota";
myCountries[2][36] = "Ohio";
myCountries[2][37] = "Oklahoma";
myCountries[2][38] = "Oregon";
myCountries[2][39] = "Pennsylvania";
myCountries[2][40] = "Rhode Island";
myCountries[2][41] = "South Carolina";
myCountries[2][42] = "South Dakota";
myCountries[2][43] = "Tennessee";
myCountries[2][44] = "Texas";
myCountries[2][45] = "Utah";
myCountries[2][46] = "Vermont";
myCountries[2][47] = "Virginia";
myCountries[2][48] = "Washington";
myCountries[2][49] = "West Virginia";
myCountries[2][50] = "Wisconsin";
myCountries[2][51] = "Wyoming";


// This function will populate the country Drop-down List.
// This function is called from the initialize event of the country Drop-down List.

function getCountries(dropdownField)
{
   dropdownField.clearItems();
   for (var i=0; i &lt; myCountries.length; i++)
      dropdownField.addItem(myCountries[i][0]);
}

// This function will populate the state/province Drop-down List for any event EXCEPT the change event. 
// This function is called by the initialize event of the state/province Drop-down List.

function getStates(countryField, dropdownField)
{                                              
   dropdownField.clearItems(); 							// Clear the items of the Drop-down List.
   for (var i=0; i &lt; myCountries.length; i++) 			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == countryField.rawValue) 	// Check to see if they match.
      {
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
	  	 }
	  }
}

// This function will populate the state/province Drop-down List for the change event. 
// This function is called by the change event of the country Drop-down List.
// The first parameter is simply a pointer to the xfa object model.

function getStatesOther(myXfa, dropdownField) 
{                                              
   dropdownField.clearItems();							// Clear the items of the Drop-down list.
   for (var i=0; i &lt; myCountries.length; i++)			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == myXfa.event.newText)		// Check to see if they match. Note: we have to use the event.newText in this case because
	  {                                            		// the change hasn't been committed yet.
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
 		 }
	  }
}
</script>
            <?templateDesigner expand 1?></variables>
         <subform y="573.979mm" w="203.2mm" minH="152.309mm" layout="lr-tb" name="sfFormulationList">
            <subform w="203.103mm" name="sfPart2" layout="tb">
               <subform w="203.103mm" minH="173.555mm" layout="tb" name="sfPart2Body">
                  <subform w="203.103mm" name="sfActiveIngredients" layout="tb">
                     <margin topInset="0mm" leftInset="0mm"/>
                     <subform w="200.059mm" layout="lr-tb" name="sfTitles">
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <margin leftInset="6.096mm"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 0?></subform>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <subform w="203.103mm" minH="8.363mm" layout="lr-tb" name="part2Header">
                        <margin topInset="1.27mm" bottomInset="1.27mm" leftInset="1.27mm" rightInset="1.27mm"/>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <draw h="6.35mm" name="lblAct" w="7.946181in">
                           <assist role="H2">
                              <speak disable="1"/>
                           </assist>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
                           <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="bottom"/>
                           <ui>
                              <textEdit>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <value>
                              <text>Medicinal (Active) Ingredients*</text>
                           </value>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <?renderCache.bounds 569291 15166 0 0 1417 1417 0 0?>
                           <?renderCache.textRun 31 Medicinal (Active) Ingredients* 0 1417 14083 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
                        <subform w="191.913mm" minH="6.985mm" layout="lr-tb" name="btnIngredHeader">
                           <margin topInset="2.54mm" bottomInset="1.27mm"/>
                           <?templateDesigner expand 0?>
                           <assist role="TH"/>
                        </subform>
                        <keep intact="contentArea"/>
                        <subform w="200.663mm" minH="6.35mm" layout="lr-tb" name="sfAddIngredient">
                           <field name="btnAddIngredient" w="39.452mm" h="8.89mm" presence="hidden">
                              <ui>
                                 <button highlight="inverted"/>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <caption>
                                 <value>
                                    <text>Add an Ingredient</text>
                                 </value>
                                 <para vAlign="middle" hAlign="center"/>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <border hand="right">
                                 <?templateDesigner StyleID apbx2?>
                                 <edge stroke="raised"/>
                                 <fill>
                                    <color value="212,208,200"/>
                                 </fill>
                              </border>
                              <bind match="none"/>
                              <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
                              <event activity="click" name="event__click">
                                 <script contentType="application/x-javascript">var cFormNodeManager = script.core.model.FormNodeManager;

this.resolveNode('sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header._ingredientSubForm').addInstance(1);
if (xfa.host.version &lt; 8) {
	xfa.form.recalculate(1);
}
this.resolveNode('sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header._part3IngredientSubForm').addInstance(1);
if (xfa.host.version &lt; 8) {
	xfa.form.recalculate(1);
}

cFormNodeManager.getBaseNode().updateUI();


/*var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cDrugFormHandler = script.DrugAppl.control.Part2.DrugFormulationHandler;

try
{
	// set up event object
	var actionName = cDrugFormHandler.ADD_ACTIVE_INGREDIENT_ACTION;
	//pass the parent subform in the action
	var anActionEvent = cActionEvent.createInstance(actionName, this);
	// deploy event to controller
	cDrugFormHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with Add an active ingredient button::click", exception);
}*/
</script>
                              </event>
                              <event activity="prePrint" ref="$host" name="event__prePrint">
                                 <script contentType="application/x-javascript">

this.relevant = "-print";

</script>
                              </event>
                           </field>
                           <subform w="191.913mm" minH="6.985mm" layout="lr-tb" name="btnIngredHeader2">
                              <margin topInset="2.54mm" bottomInset="1.27mm"/>
                              <?templateDesigner expand 0?></subform>
                           <?templateDesigner expand 1?></subform>
                        <subform y="19.685mm" w="91.325mm" name="ingredientSubForm" layout="lr-tb">
                           <field h="8.89mm" name="btnDelete" w="8.89mm" relevant="-print">
                              <border hand="right">
                                 <edge stroke="raised"/>
                                 <fill>
                                    <color value="212,208,200"/>
                                 </fill>
                                 <?templateDesigner StyleID apbx2?></border>
                              <caption>
                                 <para hAlign="center" vAlign="middle"/>
                                 <value>
                                    <text>x</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="0mm"/>
                              <ui>
                                 <button highlight="inverted"/>
                              </ui>
                              <bind match="none"/>
                              <event activity="click" name="event__click">
                                 <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var count = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.part3IngredientSubForm.instanceManager.count ;

var deleteButton = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.part3IngredientSubForm.btnDelete;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

var itemsPart2 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ingredientSubForm.all;

var itemsPart3 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.part3IngredientSubForm.all;

var part2IngredText;
var part3IngredText;
var deleteIndex;

	 for(i=0; i&lt;itemsPart2.length; i++) 
	 { 
    	if (i == this.parent.index) {
    	 	part2IngredText = itemsPart2.item(i).txtIngredient; 
    	 	break;
    	}
	}
	
	for(j=0; j&lt;itemsPart3.length; j++) 
	 { 
    	
    	 	part3IngredText = itemsPart3.item(j).txtIngredient; 
    	 	if (part3IngredText.rawValue == part2IngredText.rawValue) {
    	 		deleteIndex = j;
    	 		break;
    	 	}
    	 	
    	
	}
	
	
this.parent.instanceManager.removeInstance(this.parent.index);



cLog.trace ("SUCCESSFULLY REMOVED .....");
if (count &gt;  1) {
	cLog.trace ("OK INDEX: " + deleteIndex);
	deleteButton.parent.instanceManager.removeInstance(deleteIndex);
}
else {

	cLog.trace ("NOT OK MESSAGE");
	if (language == "en") {
		xfa.host.messageBox ("Part 3 will keep this ingredient as it must have at least one ingredient.");
	}
	else {
		xfa.host.messageBox ("La Partie 3 gardera cet ingrédient car il doit avoir au moins un ingrédient.");
	}
}
</script>
                              </event>
                           </field>
                           <field name="txtIngredient" w="82.07mm" h="8.89mm">
                              <ui>
                                 <textEdit>
                                    <border>
                                       <edge stroke="lowered"/>
                                       <?templateDesigner StyleID aped3?></border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <caption reserve="0mm">
                                 <para vAlign="middle"/>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <border>
                                 <corner thickness="0.175mm"/>
                                 <edge/>
                              </border>
                              <format>
                                 <picture>num{zzzzzzz9}</picture>
                              </format>
                              <validate nullTest="error"/>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">var cLog = script.core.util.Log;

var count1 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ingredientSubForm.instanceManager.count ;
var count2 = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.part3IngredientSubForm.instanceManager.count ;
if ( count1 == count2) {

	this.resolveNode("sfAnimalHuman.part3Header.part3IngredientSubForm.txtIngredient").rawValue = xfa.event.newText;
}
else {
     var vItems = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.part3IngredientSubForm.all;
     var txtIngred;
	 for(i=0; i&lt;vItems.length; i++) 
	 { 
    	//if (vItems.item(i).description.rawValue == null) 
    	if (i == (count2 - 1) || i == (count2 - 2) || i == (count2 - 3) || i == (count2 - 4) || i == (count2 - 5) || i == (count2 - 6) || i == (count2 - 7)) {
    	    cLog.trace ("I: " + i);
    		txtIngred = vItems.item(i).txtIngredient; 
    	}
    	
	}
	
	txtIngred.rawValue = xfa.event.newText; 
}



if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}//		xfa.host.messageBox ( "The License Number entered exceeds the maximum length (8 numbers)!", "Invalid License Number", 3, 1);
//		xfa.host.setFocus(DrugAppl.sfPage1.sfAddresses.sfPart5.sfPart5OriginalManufacturerDetail.txtlicenceNumber);
		
</script>
                              </event>
                              <value>
                                 <text maxChars="49"/>
                              </value>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                              </event>
                           </field>
                           <occur max="7"/>
                           <?templateDesigner expand 1?></subform>
                        <draw h="6.35mm" name="lblEmpty2" w="200.613mm" presence="invisible">
                           <ui>
                              <textEdit>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font baselineShift="0pt" typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="0.5mm" leftInset="1.27mm" rightInset="0.5mm" topInset="1.27mm"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                           <assist role="H2">
                              <speak disable="1"/>
                           </assist>
                        </draw>
                        <field name="txtBrandName1" w="200.279mm" h="8.89mm">
                           <ui>
                              <textEdit>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="40.07mm">
                              <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Brand Name*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <value>
                              <text maxChars="49"/>
                           </value>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
/*if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
}*/

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                           </event>
                        </field>
                        <field name="ddlHumanVetSecond" w="120.934mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="40.07mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Human/Veterinary*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <items save="1"/>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

/*if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
}*/
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="txtStrength" w="120.934mm" h="8.89mm">
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <caption reserve="40.0974mm">
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Strength per Unit*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

//if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
//  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
//}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlDosageForm" w="120.935mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="39.9616mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Dosage Form*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <items save="1"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue == "OTHER1") {
    cLog.trace ("Dos Details Raw value == VIND " );
    
    // show Dosage Details text box if 'Other' is selected
	txtOtherDosage.presence = "visible";
	
	// reset to blank
	txtOtherDosage.rawValue = " ";
	
	if (language == "en") {
	    //this.rawValue = "Enter the specific dosage form in this box";
	    cLog.trace ("otherDosageIsSelected2 is set to 1" );
	    
	    // keep track if 'Other' is selected
	    cDrugApplModel.setDosageIsSelected(1);
	       
	}
	else {
	    //this.rawValue = "Saisir la forme posologique précise dans cette case";
	    
	    // keep track if 'Other' is selected
	    cDrugApplModel.setDosageIsSelected(1);
	    cLog.trace ("otherDosageIsSelected2 is set to 1" );
	       
    }
		
	
} 

// if dosage details has the default text, then do nothing
else if (this.rawValue == "Enter the specific dosage form in this box" || this.rawValue == "Saisir la forme posologique précise dans cette case") {
	cDrugApplModel.setDosageIsSelected(0);
    cLog.trace ("Do nothing");
}

// in this case, 'Other' is not selected, so hide the text field
else {
    cLog.trace ("Dos Details Raw value == " + this.rawValue);
    cDrugApplModel.setDosageIsSelected(0);
    cLog.trace ("otherDosageIsSelected is set to 1" );
	txtOtherDosage.presence = "hidden";
}

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">

var cLog = script.core.util.Log;
//cLog.trace("dosageValueChanged   = true");
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setDosageValueChanged (true);
</script>
                           </event>
                           <event activity="ready" ref="$layout" name="event__layout_ready">
                              <script contentType="application/x-javascript">var cLog = script.core.util.Log;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

function copyAndSortDosage() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER1") {
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem(i, bigArray[i]);
				
				}
		}
		if (language == "en") {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem("Other", "OTHER1"); 
		}
		else {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.addItem("Autre", "OTHER1");
		}   
		
 }

copyAndSortDosage();
</script>
                           </event>
                        </field>
                        <field name="txtOtherDosage" w="200.279mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <?templateDesigner StyleID aped3?></border>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <validate nullTest="error">
                              <message>
                                 <text name="nullTest"/>
                              </message>
                           </validate>
                           <caption reserve="40.1924mm">
                              <value>
                                 <text>Dosage Form Details*</text>
                              </value>
                              <para vAlign="middle"/>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <value>
                              <text maxChars="50000"> </text>
                           </value>
                           <para vAlign="middle"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

//if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
//  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
//}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlROA" w="120.934mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="39.9616mm">
                              <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Route(s) of Administration*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <items save="1"/>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setRouteValueChanged (true);

if (xfa.event.newText &gt; 9999999999999999999999999999999) {

		xfa.event.change = "";
}
</script>
                           </event>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue == "OTHER") {
  
    // if 'Other' is selected, show the text field and reset it.
	txtOtherRoute.presence = "visible";
	txtOtherRoute.rawValue = " ";
	
	if (language == "en") {
	    //this.rawValue = "Enter the specific route of administration in this box";
	    cLog.trace ("otherRouteIsSelected is set to 1" );
	    
	    
	     // keep track if 'Other' is selected
	    cDrugApplModel.setRouteIsSelected(1);
	       
	}
	else {
	
	    //this.rawValue = "Saisir la voie d'administration précise dans cette case";
	    
	    // keep track when 'Other' is selected
	     cDrugApplModel.setRouteIsSelected(1);
	    cLog.trace ("otherRouteIsSelected is set to 1" );
	       
	}
		
	
} 

// if the text field, displays the default string, do nothing.
else if (this.rawValue == "Enter the specific route of administration in this box" || this.rawValue == "Saisir la voie d'administration précise dans cette case") {
	 cDrugApplModel.setRouteIsSelected(0);
    cLog.trace ("Do nothing");
}

// if 'Other' is not selected, hide the text field.
else {
    cLog.trace ("Dos Details Raw value == " + this.rawValue);
     cDrugApplModel.setRouteIsSelected(0);
    cLog.trace ("otherRoutesIsSelected is set to 0" );
	txtOtherRoute.presence = "hidden";
}

//if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
///  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
//}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <event activity="ready" ref="$layout" name="event__layout_ready">
                              <script contentType="application/x-javascript">


var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

function copyAndSortROA() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER") {
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.addItem(i, bigArray[i]);
				
				}
		}
		if (language == "en") {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.addItem("Other", "OTHER");
		}
		else {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.addItem("Autre", "OTHER"); 
		}   
		
 }

copyAndSortROA();
</script>
                           </event>
                        </field>
                        <field name="txtOtherRoute" w="200.279mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <?templateDesigner StyleID aped3?></border>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <validate nullTest="error">
                              <message>
                                 <text name="nullTest"/>
                              </message>
                           </validate>
                           <caption reserve="40.1924mm">
                              <value>
                                 <text>Routes Details*</text>
                              </value>
                              <para vAlign="middle"/>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <value>
                              <text maxChars="50000"> </text>
                           </value>
                           <para vAlign="middle"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

//if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
//  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
//}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="txtUses" w="200.279mm" minH="15.429mm">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <caption reserve="40.0974mm">
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Use(s) of Medicinal Ingredient(s)* </text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

//if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
//  this.resolveNode("DrugAppl.#variables.countryScript").isPart2Completed();
//}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <?templateDesigner expand 1?></subform>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.928mm" layout="lr-tb" name="sfNonMedIngredients">
                     <draw h="6.35mm" name="lblPart3Title1" w="203.103mm" presence="hidden">
                        <assist role="H2">
                           <speak disable="1"/>
                        </assist>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Part 3 - First Person's Referenced Product</text>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <color value="255,255,153"/>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                           </fill>
                        </border>
                     </draw>
                     <?templateDesigner expand 0?></subform>
                  <subform w="203.103mm" minH="31.326mm" name="sfAnimalHuman" layout="lr-tb">
                     <margin topInset="0mm" leftInset="0mm" bottomInset="0mm"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <draw h="10.16mm" name="lblPart3Title2" w="169.684mm">
                        <assist role="H2">
                           <speak disable="1"/>
                        </assist>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Part 3 - First Person's Referenced Product</text>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <color value="255,255,153"/>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                           </fill>
                        </border>
                        <?renderCache.bounds 478160 25966 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 42 Part 3 - First Person's Referenced Product 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <field h="10.16mm" name="btn2AddIngredient" w="32.882mm" relevant="-print" anchorType="middleLeft">
                        <border hand="right">
                           <edge stroke="raised"/>
                           <fill>
                              <color value="212,208,200"/>
                           </fill>
                           <?templateDesigner StyleID apbx2?></border>
                        <caption>
                           <para hAlign="center" vAlign="middle"/>
                           <value>
                              <text>Add an Ingredient</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="0mm"/>
                        <ui>
                           <button highlight="inverted"/>
                        </ui>
                        <bind match="none"/>
                        <event activity="click" name="event__click">
                           <script contentType="application/x-javascript">var cFormNodeManager = script.core.model.FormNodeManager;
this.resolveNode('part3Header._part3IngredientSubForm').addInstance(1);
cFormNodeManager.getBaseNode().updateUI();
if (xfa.host.version &lt; 8) {
  xfa.form.recalculate(1);
}

/*var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cDrugFormHandler = script.DrugAppl.control.Part2.DrugFormulationHandler;

try
{
	// set up event object
	var actionName = cDrugFormHandler.ADD_ACTIVE2_INGREDIENT_ACTION;
	//pass the parent subform in the action
	var anActionEvent = cActionEvent.createInstance(actionName, this);
	// deploy event to controller
	cDrugFormHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with Add an active ingredient button::click", exception);
}
*/
</script>
                        </event>
                     </field>
                     <draw h="11.59mm" name="lblPart3ActiveIngredients1" w="199.166mm">
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Under subsection 5(1) and 5(2) of the Regulations, address each patent listed in respect of the drug to which you directly or indirectly compare, or make reference.</text>
                        </value>
                        <font baselineShift="0pt" typeface="Myriad Pro" size="8pt"/>
                        <margin bottomInset="0.5mm" leftInset="1.27mm" rightInset="0.5mm" topInset="1.27mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <assist role="H3">
                           <speak disable="1"/>
                        </assist>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <?renderCache.bounds 559548 27837 0 0 3600 3600 0 0?>
                        <?renderCache.textRun 164 Under subsection 5(1) and 5(2) of the Regulations, address each patent listed in respect of the drug to which you directly or indirectly compare, or make reference. 0 3600 19518 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                     <draw h="6.35mm" name="lblPart3ActiveIngredients2" w="202.569mm">
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Medicinal (Active) Ingredient(s)</text>
                        </value>
                        <font baselineShift="0pt" typeface="Myriad Pro" weight="bold"/>
                        <margin bottomInset="0.5mm" leftInset="1.27mm" rightInset="0.5mm" topInset="1.27mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="bottom"/>
                        <assist role="H3">
                           <speak disable="1"/>
                        </assist>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <?renderCache.bounds 569194 12983 0 0 3600 3600 0 0?>
                        <?renderCache.textRun 32 Medicinal (Active) Ingredient(s) 0 3600 14083 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
                     <subform w="203.2mm" minH="8.363mm" layout="lr-tb" name="part3Header">
                        <margin topInset="1.27mm" bottomInset="1.27mm" leftInset="1.27mm" rightInset="1.27mm"/>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <draw h="6.35mm" name="lblActiveIngredients" w="202.957mm">
                           <ui>
                              <textEdit>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font baselineShift="0pt" typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="0.5mm" leftInset="1.27mm" rightInset="0.5mm" topInset="1.27mm"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                           <assist role="H2">
                              <speak disable="1"/>
                           </assist>
                           <?renderCache.bounds 570294 12983 0 0 3600 3600 0 0?></draw>
                        <keep intact="contentArea"/>
                        <subform y="13.335mm" w="199.619mm" layout="lr-tb" name="part3IngredientSubForm">
                           <field h="8.89mm" name="btnDelete" w="8.89mm" relevant="-print">
                              <border hand="right">
                                 <edge stroke="raised"/>
                                 <fill>
                                    <color value="212,208,200"/>
                                 </fill>
                                 <?templateDesigner StyleID apbx2?></border>
                              <caption>
                                 <para hAlign="center" vAlign="middle"/>
                                 <value>
                                    <text>x</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="0mm"/>
                              <ui>
                                 <button highlight="inverted"/>
                              </ui>
                              <bind match="none"/>
                              <event activity="click" name="event__click">
                                 <script contentType="application/x-javascript">

 this.parent.instanceManager.removeInstance(this.parent.index);
</script>
                              </event>
                           </field>
                           <field name="txtIngredient" w="82.07mm" h="8.89mm">
                              <ui>
                                 <textEdit>
                                    <border>
                                       <edge stroke="lowered"/>
                                       <?templateDesigner StyleID aped3?></border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <caption reserve="0mm">
                                 <para vAlign="middle"/>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <border>
                                 <corner thickness="0.175mm"/>
                                 <edge/>
                              </border>
                              <format>
                                 <picture>num{zzzzzzz9}</picture>
                              </format>
                              <validate nullTest="error"/>
                              <value>
                                 <text maxChars="255"/>
                              </value>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
/*if (xfa.event.newText &gt; 9999999999999999999999999999999999999999999999999) {

		xfa.event.change = "";
}*/

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                              </event>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                              </event>
                           </field>
                           <occur max="7"/>
                           <?templateDesigner expand 1?></subform>
                        <draw h="6.35mm" name="lblActiveIngredients" w="203.125mm" presence="invisible">
                           <ui>
                              <textEdit>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font baselineShift="0pt" typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="0.5mm" leftInset="1.27mm" rightInset="0.5mm" topInset="1.27mm"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                           <assist role="H2">
                              <speak disable="1"/>
                           </assist>
                        </draw>
                        <field name="txtBrandName" w="200.279mm" h="8.89mm">
                           <ui>
                              <textEdit>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="41.9538mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Brand Name*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <value>
                              <text maxChars="50"/>
                           </value>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                           </event>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlHumanVetFirst" w="120.934mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="41.9968mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Human/Veterinary*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <items save="1"/>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="txtStrength1" w="120.934mm" h="8.89mm">
                           <ui>
                              <textEdit multiLine="1" hScrollPolicy="off" vScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <caption reserve="41.9968mm">
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Strength per Unit*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="numDIN" w="120.934mm" h="8.128mm">
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border hand="right">
                                    <?templateDesigner StyleID aped2?>
                                    <edge/>
                                 </border>
                                 <margin/>
                                 <comb numberOfCells="8"/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="41.9968mm">
                              <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>DIN*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
if(this.rawValue !=null){
if (this.rawValue.toString().length  &lt; 8) {
	if (language == "en") {
      	xfa.host.messageBox ("The DIN must contain 8 digits.");
	}
	else {
      	xfa.host.messageBox ("Le DIN doit avoir 8 chiffres.");
	}
		
	xfa.host.setFocus(this);
		
		
}else{

 var regExp = /\D/;

          if (regExp.test(this.rawValue.toString())) {
  			 if (language == "en") {
                 app.alert("The field must only contain numbers.");
             } else {
                 app.alert("Le champs ne peut contenir que des chiffres.");
             }
             xfa.host.setFocus(this);
          }

}
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <format>
                              <picture>zero{}|text{99999999}</picture>
                           </format>
                           <validate nullTest="error">
                              <picture>num.integer{}</picture>
                           </validate>
                           <assist>
                              <toolTip>DIN</toolTip>
                           </assist>
                        </field>
                        <field name="ddlDosageForm1" w="120.935mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="41.9968mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Dosage Form*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <items save="1"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue == "OTHER1") {
    cLog.trace ("Dos Details Raw value == VIND " );
    
    // show Dosage Details text box if 'Other' is selected
	txtOtherDosage.presence = "visible";
	
	// reset to blank
	txtOtherDosage.rawValue = " ";
	
	if (language == "en") {
	    //this.rawValue = "Enter the specific dosage form in this box";
	    cLog.trace ("otherDosageIsSelected2 is set to 1" );
	    
	    // keep track if 'Other' is selected
	    cDrugApplModel.setDosageIsSelected2(1);
	       
	}
	else {
	    //this.rawValue = "Saisir la forme posologique précise dans cette case";
	    
	    // keep track if 'Other' is selected
	    cDrugApplModel.setDosageIsSelected2(1);
	    cLog.trace ("otherDosageIsSelected2 is set to 1" );
	       
    }
		
	
} 

// if dosage details has the default text, then do nothing
else if (this.rawValue == "Enter the specific dosage form in this box" || this.rawValue == "Saisir la forme posologique précise dans cette case") {
	cDrugApplModel.setDosageIsSelected2(0);
    cLog.trace ("Do nothing");
}

// in this case, 'Other' is not selected, so hide the text field
else {
    cLog.trace ("Dos Details Raw value == " + this.rawValue);
    cDrugApplModel.setDosageIsSelected2(0);
    cLog.trace ("otherDosageIsSelected2 is set to 1" );
	txtOtherDosage.presence = "hidden";
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">

var cLog = script.core.util.Log;
//cLog.trace("dosageValueChanged   = true");
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setDosageValueChanged2 (true);
</script>
                           </event>
                           <event activity="ready" ref="$layout" name="event__layout_ready">
                              <script contentType="application/x-javascript">var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

function copyAndSortDosage() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER1") {
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.addItem(i, bigArray[i]);
				
				}
		}
		if (language == "en") {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.addItem("Other", "OTHER1"); 
		}
		else {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlDosageForm1.addItem("Autre", "OTHER1");
		}      
		
 }

copyAndSortDosage();
</script>
                           </event>
                        </field>
                        <field name="txtOtherDosage" w="200.279mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <?templateDesigner StyleID aped3?></border>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <validate nullTest="error">
                              <message>
                                 <text name="nullTest"/>
                              </message>
                           </validate>
                           <caption reserve="42.2036mm">
                              <value>
                                 <text>Dosage Details*</text>
                              </value>
                              <para vAlign="middle"/>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <value>
                              <text maxChars="50000"> </text>
                           </value>
                           <para vAlign="middle"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlROA1" w="120.934mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="41.9968mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Route(s) of Administration*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <items save="1"/>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">


var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setRouteValueChanged2 (true);

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 32) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                           </event>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue == "OTHER") {
  
    // if 'Other' is selected, show the text field and reset it.
	txtOtherRoute.presence = "visible";
	txtOtherRoute.rawValue = " ";
	
	if (language == "en") {
	    //this.rawValue = "Enter the specific route of administration in this box";
	    cLog.trace ("otherRouteIsSelected2 is set to 1" );
	    
	    
	     // keep track if 'Other' is selected
	    cDrugApplModel.setRouteIsSelected2(1);
	       
	}
	else {
	
	    //this.rawValue = "Saisir la voie d'administration précise dans cette case";
	    
	    // keep track when 'Other' is selected
	     cDrugApplModel.setRouteIsSelected2(1);
	    cLog.trace ("otherRouteIsSelected2 is set to 1" );
	       
	}
		
	
} 

// if the text field, displays the default string, do nothing.
else if (this.rawValue == "Enter the specific route of administration in this box" || this.rawValue == "Saisir la voie d'administration précise dans cette case") {
	 cDrugApplModel.setRouteIsSelected2(0);
    cLog.trace ("Do nothing");
}

// if 'Other' is not selected, hide the text field.
else {
    cLog.trace ("Dos Details Raw value == " + this.rawValue);
     cDrugApplModel.setRouteIsSelected2(0);
    cLog.trace ("otherRoutesIsSelected2 is set to 0" );
	txtOtherRoute.presence = "hidden";
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <event activity="ready" ref="$layout" name="event__layout_ready">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

function copyAndSortROA() {
			
		var dosageList = xfa.resolveNodes("DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.items[*]");
		var displayItems = dosageList .item(0).nodes ;//Node Set containing the display text values
		var boundItems = dosageList .item(1).nodes; //Nodes Set containing the bound values.
		
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		var selectedItemIdx = null;
		var selectedItemDisplay = null;
		var selectedItemBound = null;
		
	
		
		
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			 	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.clearItems();
		var size = 0;
		
		cLog.trace ("SIZE: &amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;&amp;" + size);
		
		for (var i in bigArray) {
				cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				if (bigArray[i] != "OTHER") {
					
						DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.addItem(i, bigArray[i]);
				
				}
		}
		if (language == "en") {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.addItem("Other", "OTHER");
		}
		else {
			DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.part3Header.ddlROA1.addItem("Autre", "OTHER"); 
		}   
		
 }

copyAndSortROA();
</script>
                           </event>
                        </field>
                        <field name="txtOtherRoute" w="200.279mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <?templateDesigner StyleID aped3?></border>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <validate nullTest="error">
                              <message>
                                 <text name="nullTest"/>
                              </message>
                           </validate>
                           <caption reserve="42.2036mm">
                              <value>
                                 <text>Routes Details*</text>
                              </value>
                              <para vAlign="middle"/>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <value>
                              <text> </text>
                           </value>
                           <para vAlign="middle"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="txtUses1" w="200.314mm" minH="14.986mm">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <caption reserve="41.9968mm">
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Use(s) of Medicinal Ingredient(s) (for referenced product)* </text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="txtUses2" w="200.314mm" h="14.986mm">
                           <ui>
                              <textEdit multiLine="1" hScrollPolicy="off" vScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <caption reserve="41.9968mm">
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Name of Manufacturer (of referenced product)* </text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <?templateDesigner expand 1?></subform>
                     <draw h="10.16mm" name="lblPart31Title" w="203.103mm">
                        <assist role="H2">
                           <speak disable="1"/>
                        </assist>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Part 3.1:</text>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <color value="255,255,153"/>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                           </fill>
                        </border>
                        <?renderCache.bounds 572891 25966 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 9 Part 3.1: 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <field name="lblPatentNumber" w="100.608mm" h="8.89mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border hand="right">
                                 <?templateDesigner StyleID aped2?>
                                 <edge/>
                              </border>
                              <margin/>
                              <comb numberOfCells="7"/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="43.3472mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Patent Number </text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
if(this.rawValue !=null){
if (this.rawValue.toString().length  &lt; 7) {
	if (language == "en") {
      	xfa.host.messageBox ("The Patent Number must contain 7 digits.");
	}
	else {
      	xfa.host.messageBox ("Le Numéro de brevet doit avoir 7 chiffres.");
	}
		
	xfa.host.setFocus(this);
		
		
}else{

 var regExp = /\D/;

          if (regExp.test(this.rawValue.toString())) {
  			 if (language == "en") {
                 app.alert("The field must only contain numbers.");
             } else {
                 app.alert("Le champs ne peut contenir que des chiffres.");
             }
             xfa.host.setFocus(this);
          }

}
}

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                        </event>
                        <format>
                           <picture>text{9999999}</picture>
                        </format>
                        <validate nullTest="error">
                           <picture>num.integer{}</picture>
                        </validate>
                     </field>
                     <field name="ddtRefPatExpDate" w="102.315mm" h="8.89mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <date/>
                        </value>
                        <caption reserve="63.0205mm">
                           <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                           <value>
                              <text>Referenced Patent Expiration Date (YYYY-MM-DD)*</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                        </caption>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <validate nullTest="error">
                           <picture>date{YYYY-MM-DD}</picture>
                        </validate>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">

if (this.rawValue != null) { 
	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);

}

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                        </event>
                     </field>
                     <draw h="10.16mm" name="lblPart32Title" w="203.103mm">
                        <assist role="H2">
                           <speak disable="1"/>
                        </assist>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Part 3.2:</text>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <color value="255,255,153"/>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                           </fill>
                        </border>
                        <?renderCache.bounds 572891 25966 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 9 Part 3.2: 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <draw name="lblPart3Check" w="203.011mm" h="7.62mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>Check at least one of the following as appropriate:</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt" weight="bold" posture="italic"/>
                        <margin topInset="0.5002mm" bottomInset="0mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                        <assist role="H2">
                           <speak disable="1"/>
                        </assist>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <?renderCache.bounds 572630 20182 0 0 1417 1418 0 0?>
                        <?renderCache.textRun 51 Check at least one of the following as appropriate: 0 1417 13509 0 0 0 "Myriad Pro" 1 1 8000 ISO-8859-1?></draw>
                     <subform w="203.103mm" name="sfDrugUse" layout="tb">
                        <subform y="7.209mm" w="186.916mm" minH="24mm" layout="tb" name="part3sfOptions1">
                           <field name="chkSecPerson" w="196.215mm" h="8.128mm">
                              <ui>
                                 <checkButton>
                                    <border>
                                       <?templateDesigner StyleID apcb2?>
                                       <edge stroke="lowered"/>
                                       <fill/>
                                    </border>
                                 </checkButton>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <value>
                                 <integer>0</integer>
                              </value>
                              <caption placement="right" reserve="187.633mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>The Second Person has obtained consent from the patent owner to the making, constructing, using or selling of the drug in Canada.</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <items>
                                 <integer>1</integer>
                                 <integer>0</integer>
                                 <integer>2</integer>
                              </items>
                              <event activity="mouseUp" name="event__mouseUp">
                                 <script contentType="application/x-javascript">if (this.rawValue){
	sfHuman.presence = "visible";
 
}else{
	sfHuman.presence = "hidden";
	this.resolveNode("sfHuman.chkScanCopy").rawValue = 0;
	this.resolveNode("sfHuman.chkScanCopy2").rawValue = 0;
}
</script>
                              </event>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">if (this.rawValue == "1") {
    oTargetField = this.resolveNode("sfHuman.chkScanCopy");
    oTargetField2 = this.resolveNode("sfHuman.chkScanCopy2");
  	oTargetField.access = "open";
  	oTargetField.presence = "visible";
  	oTargetField2.access = "open";
  	oTargetField2.presence = "visible";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue = 0;
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue == 0;
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.presence = "hidden";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
}
else if (this.rawValue == "0") {
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "visible";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "visible";
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "visible";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.presence = "visible";
}
//else if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue == 0) {
//
//    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "visible";
//  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "visible";
 // 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "visible";
//}
</script>
                              </event>
                              <border>
                                 <edge presence="hidden"/>
                              </border>
                           </field>
                           <subform w="203.2mm" layout="lr-tb" name="sfHuman">
                              <field name="chkScanCopy" w="161.277mm" h="6mm" presence="hidden">
                                 <ui>
                                    <checkButton size="3.5278mm">
                                       <border>
                                          <edge stroke="lowered"/>
                                          <fill>
                                             <color value="255, 255, 255"/>
                                          </fill>
                                          <?templateDesigner StyleID apcb2?></border>
                                    </checkButton>
                                 </ui>
                                 <font typeface="Myriad Pro"/>
                                 <margin leftInset="1mm" rightInset="1mm"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <integer>0</integer>
                                 </value>
                                 <caption reserve="153.657mm" placement="right">
                                    <para vAlign="middle"/>
                                    <value>
                                       <text>A scanned copy of the statement of consent from the patent owner is included with this submission.</text>
                                    </value>
                                    <font typeface="Myriad Pro" size="8pt"/>
                                 </caption>
                                 <items>
                                    <integer>1</integer>
                                    <integer>0</integer>
                                    <integer>2</integer>
                                 </items>
                                 <event activity="change" name="event__change">
                                    <script contentType="application/x-javascript">
if (this.rawValue == "1") {
	  
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue = 0;
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.rawValue = 0;
  	
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,250,250";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.border.edge.presence = "hidden";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,250,250";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.border.edge.presence = "hidden";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,250,250";
}
</script>
                                 </event>
                              </field>
                              <field name="chkScanCopy2" w="154.257mm" h="6.243mm" presence="hidden">
                                 <ui>
                                    <checkButton size="3.5278mm">
                                       <border>
                                          <edge stroke="lowered"/>
                                          <fill>
                                             <color value="255, 255, 255"/>
                                          </fill>
                                          <?templateDesigner StyleID apcb2?></border>
                                    </checkButton>
                                 </ui>
                                 <font typeface="Myriad Pro"/>
                                 <margin leftInset="1mm" rightInset="1mm"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <integer>0</integer>
                                 </value>
                                 <caption reserve="146.637mm" placement="right">
                                    <para vAlign="middle" spaceAbove="5pt" spaceBelow="5pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                                    <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                    <value>
                                       <text>A statement of consent from the patent owner will be sent to the Minister of Health</text>
                                    </value>
                                 </caption>
                                 <items>
                                    <integer>1</integer>
                                    <integer>0</integer>
                                    <integer>2</integer>
                                 </items>
                                 <event activity="change" name="event__change">
                                    <script contentType="application/x-javascript">
if (this.rawValue == "1") {
	  
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue = 0;
  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.rawValue = 0;
  	
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,250,250";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,250,250";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,250,250";
}
</script>
                                 </event>
                              </field>
                              <margin leftInset="6.35mm"/>
                              <?templateDesigner expand 1?></subform>
                           <field name="chkSecPerson2" w="196.215mm" h="8.128mm">
                              <ui>
                                 <checkButton>
                                    <border>
                                       <?templateDesigner StyleID apcb2?>
                                       <edge stroke="lowered"/>
                                       <fill/>
                                    </border>
                                 </checkButton>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <value>
                                 <integer>0</integer>
                              </value>
                              <caption placement="right" reserve="187.633mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>The Second Person accepts that the Notice of Compliance will not be issued until the declared expiration date for the above patent number.</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <items>
                                 <integer>1</integer>
                                 <integer>0</integer>
                                 <integer>2</integer>
                              </items>
                              <event activity="mouseUp" name="event__mouseUp">
                                 <script contentType="application/x-javascript">
/*if (this.rawValue)
	sfDisinfectant.presence = "visible";
else
	sfDisinfectant.presence = "hidden";*/
</script>
                              </event>
                              <border>
                                 <edge presence="hidden"/>
                              </border>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (this.rawValue == "1") {
 
 	 this.fillColor = "255,255,255";
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.rawValue = 0;
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.rawValue = 0;
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.presence = "hidden";
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "hidden";
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "hidden";
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "hidden";
  	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.presence = "hidden";
  	 
  	 cLog.trace ("chkSecPerson2 = 1");
}
else if (this.rawValue == "0") {
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.rawValue = 0;
  	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.presence = "visible";
  	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "visible";
  	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "visible";
  	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "visible";
  	 	
  	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
	  	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
		DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";

}

//else if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.rawValue == 0) {


 //    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.presence = "visible";
  //	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfTypeOfNC.presence = "visible";
  //	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.lblSecPersonAlleg.presence = "visible";
  
//}

</script>
                              </event>
                           </field>
                           <subform w="203.2mm" layout="lr-tb" name="sfDisinfectant" presence="hidden">
                              <margin leftInset="6.35mm"/>
                              <?templateDesigner expand 1?></subform>
                           <margin leftInset="5.08mm" rightInset="3.81mm" topInset="0mm" bottomInset="0mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <?templateDesigner expand 1?></subform>
                        <margin topInset="0mm" bottomInset="0mm" leftInset="1.524mm"/>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 1?></subform>
                     <draw name="lblSecPersonAlleg" w="202.71mm" h="4.44mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>The Second Person alleges that:</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt" weight="bold"/>
                        <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="7.62mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="bottom"/>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <edge/>
                        </border>
                        <assist role="H2">
                           <speak disable="1"/>
                        </assist>
                        <?renderCache.bounds 551594 9752 0 0 21600 1417 0 0?>
                        <?renderCache.textRun 31 The Second Person alleges that: 0 21600 9169 0 0 0 "Myriad Pro" 1 0 8000 ISO-8859-1?></draw>
                     <subform w="203.103mm" name="sfPart3Second" layout="tb">
                        <subform y="8.761mm" w="199.038mm" minH="48.985mm" layout="tb" name="part3sfOptions2">
                           <field name="chkStatMade" w="196.215mm" h="8.128mm">
                              <ui>
                                 <checkButton>
                                    <border>
                                       <?templateDesigner StyleID apcb2?>
                                       <edge stroke="lowered"/>
                                       <fill/>
                                    </border>
                                 </checkButton>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <value>
                                 <integer>0</integer>
                              </value>
                              <caption placement="right" reserve="187.68mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>The statement made by the First Person pursuant to paragraph 4(4)(d)) is false;</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <items>
                                 <integer>1</integer>
                                 <integer>0</integer>
                                 <integer>2</integer>
                              </items>
                              <border>
                                 <edge presence="hidden"/>
                              </border>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
 if (this.rawValue == 1) {
   if(this.resolveNode("DrugAppl.#variables.countryScript").isSecPersonChecked() == false) {
 
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "hidden";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,255,255";
    }
 
 }
 else if ((DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.rawValue == 0) &amp;&amp;
		 (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.rawValue == 0) &amp;&amp;
		 (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.rawValue == 0)) {
		 
		 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "visible";
		 
}
 
if (this.rawValue == 1) {

	this.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
}
	
 
 


</script>
                              </event>
                           </field>
                           <field name="chkPatentExp" w="196.215mm" h="8.128mm">
                              <ui>
                                 <checkButton>
                                    <border>
                                       <?templateDesigner StyleID apcb2?>
                                       <edge stroke="lowered"/>
                                       <fill/>
                                    </border>
                                 </checkButton>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <value>
                                 <integer>0</integer>
                              </value>
                              <caption placement="right" reserve="187.68mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text> The patent has expired;</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <items>
                                 <integer>1</integer>
                                 <integer>0</integer>
                                 <integer>2</integer>
                              </items>
                              <border>
                                 <edge presence="hidden"/>
                              </border>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
if (this.rawValue == 1) {
  
  if(this.resolveNode("DrugAppl.#variables.countryScript").isSecPersonChecked() == false) {
 
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "hidden";
      	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,255,255";
 
 }

}

else if ((DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.rawValue == 0) &amp;&amp;
         (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.rawValue == 0) &amp;&amp;
         (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.rawValue == 0)) {
         
         DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "visible";
         
}

if (this.rawValue == 1) {

	this.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
}


</script>
                              </event>
                           </field>
                           <field name="chkPatentNotValid" w="196.215mm" h="8.128mm">
                              <ui>
                                 <checkButton>
                                    <border>
                                       <?templateDesigner StyleID apcb2?>
                                       <edge stroke="lowered"/>
                                       <fill/>
                                    </border>
                                 </checkButton>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <value>
                                 <integer>0</integer>
                              </value>
                              <caption placement="right" reserve="187.68mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>The patent is not valid.</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <items>
                                 <integer>1</integer>
                                 <integer>0</integer>
                                 <integer>2</integer>
                              </items>
                              <border>
                                 <edge presence="hidden"/>
                              </border>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
 if (this.rawValue == 1) {
   
    if(this.resolveNode("DrugAppl.#variables.countryScript").isSecPersonChecked() == false) {
 
     	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "hidden";
     	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,255,255";
    }
 
 }
 else if ((DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.rawValue == 0) &amp;&amp;
		  (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.rawValue == 0) &amp;&amp;
		  (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.rawValue == 0)) {
		  
		   DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "visible";
 
 
 }


if (this.rawValue == 1) {

	this.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
}
 
</script>
                              </event>
                           </field>
                           <field name="chkNoClaim" w="196.215mm" h="11.43mm">
                              <ui>
                                 <checkButton>
                                    <border>
                                       <?templateDesigner StyleID apcb2?>
                                       <edge stroke="lowered"/>
                                       <fill/>
                                    </border>
                                 </checkButton>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <value>
                                 <integer>0</integer>
                              </value>
                              <caption placement="right" reserve="187.68mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>No claim for the medicinal ingredient, no claim for the formulation., no claim for the dosage form and no claim for the use of the medicinal ingredient would be infringed by the second person making, constructing, using or selling the drug for which the submission is filed.</text>
                                 </value>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <items>
                                 <integer>1</integer>
                                 <integer>0</integer>
                                 <integer>2</integer>
                              </items>
                              <border>
                                 <edge presence="hidden"/>
                              </border>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
if (this.rawValue == 1) { 

	if(this.resolveNode("DrugAppl.#variables.countryScript").isSecPersonChecked() == false) {
 
     	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "hidden";
     	 	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,255,255";
     DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,255,255";
 
 	}
}

else if ((DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.rawValue == 0) &amp;&amp;
		 (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.rawValue == 0) &amp;&amp;
		 (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.rawValue == 0)) {
		 
      DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.presence = "visible";
	

}

if (this.rawValue == 1) {

	this.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
	DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
}
</script>
                              </event>
                           </field>
                           <field name="txtOther" w="110.33mm" h="6.985mm" presence="hidden">
                              <ui>
                                 <textEdit>
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <caption reserve="25.93mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>Please specify other*</text>
                                 </value>
                                 <font size="8pt" typeface="Myriad Pro"/>
                              </caption>
                              <validate nullTest="error"/>
                           </field>
                           <margin leftInset="3.81mm" topInset="0mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <?templateDesigner expand 1?></subform>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <margin bottomInset="2.54mm" leftInset="2.794mm" rightInset="0mm" topInset="0mm"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 1?></subform>
                     <subform name="sfTypeOfNC" layout="tb" w="203.103mm">
                        <subform w="152.4mm" minH="71.234mm" layout="tb" name="sfOptions">
                           <margin leftInset="3.81mm"/>
                           <?templateDesigner expand 1?>
                           <assist role="TH"/>
                        </subform>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge/>
                           <edge/>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <margin bottomInset="0mm"/>
                        <keep intact="contentArea"/>
                        <draw name="lblComply" w="203.103mm" h="5.229mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>Note: If you have checked any of the allegations above, you are required to comply with subsection 5(3) of the regulations.</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt" weight="bold"/>
                           <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge/>
                              <edge/>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <corner thickness="0.175mm"/>
                              <corner thickness="0.175mm"/>
                           </border>
                           <assist role="H2">
                              <speak disable="1"/>
                           </assist>
                           <?renderCache.bounds 572891 11988 0 0 1417 1417 0 0?>
                           <?renderCache.textRun 123 Note: If you have checked any of the allegations above, you are required to comply with subsection 5(3) of the regulations. 0 1417 9411 0 0 0 "Myriad Pro" 1 0 8000 ISO-8859-1?></draw>
                        <?templateDesigner expand 1?></subform>
                     <?templateDesigner expand 0?></subform>
                  <?templateDesigner expand 1?></subform>
               <margin topInset="0mm"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <occur max="-1"/>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?></subform>
         <subform name="sfAuthSignOfficial" layout="tb" w="203.2mm">
            <draw h="10.16mm" name="lblPart4Title1" w="203.104mm">
               <assist role="H2">
                  <speak disable="1"/>
               </assist>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text>Part 4 - Manufacturer Information</text>
               </value>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <?renderCache.bounds 572894 25966 0 0 1417 1417 0 0?>
               <?renderCache.textRun 33 Part 4 - Manufacturer Information 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform w="203.2mm" layout="lr-tb" name="sfPart1ACompanyDetail">
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <field h="11.43mm" name="txtCompanyName" w="203.103mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0683mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Company Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="100"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 52) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtAddress" w="203.103mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Street/Suite/PO Box*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCity" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>City - Town*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 21) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="ddlCountry" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Country*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.RegulatoryAddresses.control.RegulatoryAddressHandler;
var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

var keypressed = xfa.event.commitKey;

if (keypressed == 3 &amp;&amp; DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlProvince != null) {

}

else {



	try
	{
		// set up event object
		var actionName =  cAddressHandler.PART1A_COUNTRY_CHANGED_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
	}
	catch(exception)
	{
		cLog.warn("Problem with Manufacturer Country selection ::exit", exception);
	}
	
	
	if (telephone.rawValue != null) {
	
		this.resolveNode("DrugAppl.#variables.countryScript").validatePhoneNumber  (telephone);
	
	}
	
	if (fax.rawValue != null) {
	
		this.resolveNode("DrugAppl.#variables.countryScript").validatePhoneNumber  (fax);
	
	}
	
	if (language == "fr") {
			var provinceList = xfa.resolveNodes("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlProvince.items[*]");
			var oItems = xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlProvince.#items");
			var provinceOrigDisplay = provinceList .item(0).nodes ;//Node Set containing the display text values
			var provinceOrigBound = provinceList .item(1).nodes; //Nodes Set containing the bound values. 
			for (var i = 0; i &lt; provinceOrigBound.length; i++){
				cLog.trace ("BOUND VALUE: " + provinceOrigBound.item(i).value );
					
					if (provinceOrigBound.item(i).value == "WA") {
						cLog.trace ("WASHINGTON@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
						oItems.nodes.item(i).value = "L'état de Washington";
					}
					else if (provinceOrigBound.item(i).value == "PEI" || provinceOrigBound.item(i).value == "PE") {
						oItems.nodes.item(i).value = "L’Île-du-Prince-Édouard";
					}
				
			}
	}
}	

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">
if (!($.boundItem(xfa.event.newText)== "CA") &amp;&amp;  !($.boundItem(xfa.event.newText)== "US")) {
  
  this.resolveNode("ddlProvince").presence = "hidden";
  this.resolveNode("txtProvince").rawValue = " ";
  this.resolveNode("txtProvince").presence = "visible";
  
}
else {

  this.resolveNode("ddlProvince").presence = "visible";
  this.resolveNode("txtProvince").presence = "hidden";
  
}

</script>
                  </event>
               </field>
               <field h="11.43mm" name="ddlProvince" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Province - State*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList commitOn="select">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <validate nullTest="error"/>
                  <items save="1">
                     <text>  </text>
                  </items>
                  <value>
                     <text>  </text>
                  </value>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="10.825mm" name="txtProvince" w="50.8mm" presence="hidden">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="2.8788mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Province</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtPostalCode" w="50.704mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Postal/ZIP Code*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;
var zipCodeStr = this.rawValue.toString();
var endsWithHyphen = false;

//cLog.info("txtPostalCode::exit, actionName: " + fieldType );
//cLog.info("txtPostalCode::exit, sourceNode: " + this );
//cLog.info("txtPostalCode::exit, this.rawValue: " + this.rawValue);
//cLog.info("txtPostalCode::exit, country ddl: " + sfPart1ACompanyDetail.ddlCountry.rawValue );

try
{
	// set up event object
	cLog.info( "txtPostalCode::exit, invoking ActionEvent.exit" );	
	var aValidator = cFormatValidator.createInstance();
	var validationResult;
	if( this.rawValue != null ) {
	
	    cLog.trace ("sfPart1ACompanyDetail.ddlCountry.rawValue: " + sfPart1ACompanyDetail.ddlCountry.rawValue);
		if( sfPart1ACompanyDetail.ddlCountry.rawValue == "CA" )
			fieldType = cFormatValidator.POSTAL_CODE;
			
		if( sfPart1ACompanyDetail.ddlCountry.rawValue == "US" ) {
			fieldType  = cFormatValidator.ZIP_CODE;
			
			
			if (zipCodeStr.charAt(zipCodeStr.length - 1) == '-') {
			
			    endsWithHyphen  = true;
				var oldValue = this.rawValue;
				
				this.rawValue = "NOTGOOD";
				validationResult = aValidator.validateFieldFormat(this,fieldType);
				this.rawValue = oldValue ;
				app.alert( validationResult + "(ex. 12345)");
				xfa.host.setFocus(this);
				
			}
			else {
				cLog.trace ("Not Equalllllllllllllllllllllllllll");
				
			
			}
		}
		if (!endsWithHyphen  ) {
		
			if( fieldType != null ) {
				validationResult = aValidator.validateFieldFormat(this,fieldType);
				cLog.info( "txtPostalCode::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
			}
			else {
		  	  cLog.trace ("fieldType is NULL");
			}
		   
			if( validationResult != null ) {
		
		  	  if (fieldType == cFormatValidator.POSTAL_CODE) {
		 		   	app.alert( validationResult + "(ex. K1G4L5)");
		 	   }
		 	   else if (fieldType == cFormatValidator.ZIP_CODE) {
		    		app.alert( validationResult + "(ex. 12345)");
		  		}
			
				xfa.host.setFocus(this);
			}
		
		}
		
	}
}
catch(exception)
{
	cLog.warn("Problem with Email ::exit", exception);
}*/

var selectedCountry =   DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlCountry;
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPostalcodeValid(this, selectedCountry.rawValue);
</script>
                  </event>
               </field>
               <draw name="lblContactPersonMS" w="203.103mm" h="10.16mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Text</text>
                  </value>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                     <fill>
                        <color value="228,228,228"/>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                     </fill>
                  </border>
                  <?renderCache.bounds 572891 25966 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 4 Text 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <field h="11.43mm" name="ddlSalutation" w="25.4mm">
                  <caption placement="top" reserve="3.0677mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Salutation</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items save="1">
                     <text>Mr</text>
                     <text>Ms</text>
                     <text>Mrs</text>
                     <text>Dr</text>
                  </items>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtGivenName" w="47.008mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Given Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 25) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtInitials" w="18.265mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.0685mm" placement="top">
                     <para vAlign="middle"/>
                     <value>
                        <text>Initials</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtSurname" w="56.622mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Surname*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtManufCntctTitle" w="55.88mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Title*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text maxChars="255"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 31) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtTelephone" w="38.1067mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Telephone Number*</text>
                     </value>
                  </caption>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var selectedCountry =   DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlCountry;
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPhoneValid(this, selectedCountry.rawValue);

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;
	
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();	

var counter = countDigits (this.rawValue.toString());

cLog.trace ("counter: " + counter);

//if (countDigits (this.rawValue.toString())) {
	if ((countDigits (this.rawValue.toString())  &lt; 9) || (countDigits (this.rawValue.toString())  &gt; 18)) {
	
	        cLog.trace ("phone number is not within range !!!!!!!!");
			if (language == "en") {
				xfa.host.messageBox ("Phone numbers must be within 9 to 18 digits only.");
			}
			else {
				xfa.host.messageBox ("Numéros de téléphone doivent être dans les 9 à 18 chiffres seulement.");
			}
			xfa.host.setFocus(this);
	
	}
	else {
	
		
		
		//cLog.info("txtEmail::exit, actionName: " + fieldType );
		//cLog.info("txtEmail::exit, sourceNode: " + this );
		//cLog.info("txtEmail::exit, this.rawValue: " + this.rawValue);
		
		try
		{
			// set up event object
			cLog.info( "txtEmail::exit, invoking ActionEvent.exit" );	
			var aValidator = cFormatValidator.createInstance();
			var validationResult;
			if( this.rawValue != null ) {
			
			    //cLog.trace ("sfPart1ACompanyDetail.txtEmail.rawValue: " + txtTelephone.rawValue);
				
				fieldType = cFormatValidator.TELEPHONE;
				
				if( fieldType != null ) {
					validationResult = aValidator.validateFieldFormat(this,fieldType);
					cLog.info( "txtEmail::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
				}
				else {
				    cLog.trace ("fieldType is NULL");
				}
				   
				if( validationResult != null ) {
					app.alert( validationResult);
					xfa.host.setFocus(this);
				}
			}
		}
		catch(exception)
		{
			cLog.warn("Problem with Phone ::exit", exception);
		}
		
		 
	}
//}
//else {
 //    	cLog.trace ("phone number is not within range !!!!!!!!");
//		if (language == "en") {
//			xfa.host.messageBox ("Phone numbers must be within 9 to 18 digits only.");
//		}
//		else {
//			xfa.host.messageBox ("Numéros de téléphone doivent être dans les 9 à 18 chiffres seulement.");
//		}
//		xfa.host.setFocus(this);
//		cLog.trace ("Nfklsdfdshfldshlsdhlfsdlflldsdsfdf ALL DIGITS!!!!!!!!!!!!!!!!!!!!!!!!!!");
//}

function allDigits(str) {
	return /^\d+$/.test(str);
}

function countDigits (str) {

	var chr = ""
	var nDigits = 0

	for (position = 0; position &lt; str.length; position++){
   		chr = str.charAt(position)
   		if (chr &gt;= "0" &amp;&amp; chr &lt;= "9") nDigits++;
	}

	
	
	return nDigits;

}*/
</script>
                  </event>
                  <validate nullTest="error"/>
               </field>
               <field name="txtExtension" w="19.879mm" h="11.43mm">
                  <ui>
                     <numericEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </numericEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.0677mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Ext.</text>
                     </value>
                  </caption>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <validate>
                     <picture>zero{}|num.integer{}</picture>
                  </validate>
                  <format>
                     <picture>num{zzzzzzzzzzzz9}</picture>
                  </format>
               </field>
               <field name="txtFax" w="38.1mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.0677mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Fax Number*</text>
                     </value>
                  </caption>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

var selectedCountry =   DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlCountry;
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPhoneValid(this, selectedCountry.rawValue);

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;
	
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();	

var counter = countDigits (this.rawValue.toString());

cLog.trace ("counter: " + counter);

//if (countDigits (this.rawValue.toString())) {
	if ((countDigits (this.rawValue.toString())  &lt; 9) || (countDigits (this.rawValue.toString())  &gt; 18)) {
	
	        cLog.trace ("phone number is not within range !!!!!!!!");
			if (language == "en") {
				xfa.host.messageBox ("Phone numbers must be within 9 to 18 digits only.");
			}
			else {
				xfa.host.messageBox ("Numéros de téléphone doivent être dans les 9 à 18 chiffres seulement.");
			}
			xfa.host.setFocus(this);
	
	}
	else {
	
		
		
		//cLog.info("txtEmail::exit, actionName: " + fieldType );
		//cLog.info("txtEmail::exit, sourceNode: " + this );
		//cLog.info("txtEmail::exit, this.rawValue: " + this.rawValue);
		
		try
		{
			// set up event object
			cLog.info( "txtEmail::exit, invoking ActionEvent.exit" );	
			var aValidator = cFormatValidator.createInstance();
			var validationResult;
			if( this.rawValue != null ) {
			
			    //cLog.trace ("sfPart1ACompanyDetail.txtEmail.rawValue: " + txtTelephone.rawValue);
				
				fieldType = cFormatValidator.TELEPHONE;
				
				if( fieldType != null ) {
					validationResult = aValidator.validateFieldFormat(this,fieldType);
					cLog.info( "txtEmail::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
				}
				else {
				    cLog.trace ("fieldType is NULL");
				}
				   
				if( validationResult != null ) {
					app.alert( validationResult);
					xfa.host.setFocus(this);
				}
			}
		}
		catch(exception)
		{
			cLog.warn("Problem with Phone ::exit", exception);
		}
		
		 
	}
//}
//else {
 //    	cLog.trace ("phone number is not within range !!!!!!!!");
//		if (language == "en") {
//			xfa.host.messageBox ("Phone numbers must be within 9 to 18 digits only.");
//		}
//		else {
//			xfa.host.messageBox ("Numéros de téléphone doivent être dans les 9 à 18 chiffres seulement.");
//		}
//		xfa.host.setFocus(this);
//		cLog.trace ("Nfklsdfdshfldshlsdhlfsdlflldsdsfdf ALL DIGITS!!!!!!!!!!!!!!!!!!!!!!!!!!");
//}

function allDigits(str) {
	return /^\d+$/.test(str);
}

function countDigits (str) {

	var chr = ""
	var nDigits = 0

	for (position = 0; position &lt; str.length; position++){
   		chr = str.charAt(position)
   		if (chr &gt;= "0" &amp;&amp; chr &lt;= "9") nDigits++;
	}

	
	
	return nDigits;

}
*/
</script>
                  </event>
                  <validate nullTest="error"/>
               </field>
               <field h="11.43mm" name="txtEmail" w="106.873mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Email</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isEmailValid(this);

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;

cLog.info("txtEmail::exit, actionName: " + fieldType );
cLog.info("txtEmail::exit, sourceNode: " + this );
cLog.info("txtEmail::exit, this.rawValue: " + this.rawValue);

try
{
	// set up event object
	cLog.info( "txtEmail::exit, invoking ActionEvent.exit" );	
	var aValidator = cFormatValidator.createInstance();
	var validationResult;
	if( this.rawValue != null ) {
	
	    cLog.trace ("sfPart1ACompanyDetail.txtEmail.rawValue: " + sfPart1ACompanyDetail.txtEmail.rawValue);
		
		fieldType = cFormatValidator.EMAIL;
		
		if( fieldType != null ) {
			validationResult = aValidator.validateFieldFormat(this,fieldType);
			cLog.info( "txtEmail::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
		}
		else {
		    cLog.trace ("fieldType is NULL");
		}
		   
		if( validationResult != null ) {
			app.alert( validationResult + "(ex. ananana@ananan.com)");
			xfa.host.setFocus(this);
		}
	}
}
catch(exception)
{
	cLog.warn("Problem with Email ::exit", exception);
}*/
</script>
                  </event>
               </field>
               <draw name="Rectangle1" w="203.2mm" h="2.54mm">
                  <value>
                     <rectangle>
                        <edge presence="hidden"/>
                        <corner radius="5.08mm" presence="hidden"/>
                     </rectangle>
                  </value>
                  <ui>
                     <defaultUi/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
               </draw>
               <draw h="10.16mm" name="lblCertification" w="8in">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                     <fill>
                        <color value="229,229,229"/>
                     </fill>
                  </border>
                  <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>CERTIFICATION</text>
                  </value>
                  <assist role="H2">
                     <speak disable="1"/>
                  </assist>
                  <?renderCache.bounds 573166 25965 0 0 1417 1418 0 0?>
                  <?renderCache.textRun 13 CERTIFICATION 0 1417 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <draw h="10.061mm" name="lblRationale" w="203.202mm">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                     <fill/>
                  </border>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.    </text>
                  </value>
                  <assist role="H3">
                     <speak disable="1"/>
                  </assist>
                  <?renderCache.bounds 573172 25684 0 0 1417 1418 0 0?>
                  <?renderCache.textRun 150 I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.     0 1417 16260 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <field h="11.43mm" name="ddlCertSalutation" w="25.4mm">
                  <caption placement="top" reserve="3.0685mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Salutation</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items save="1">
                     <text>Mr</text>
                     <text>Ms</text>
                     <text>Mrs</text>
                     <text>Dr</text>
                  </items>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCertGivenName" w="47.008mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Given Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="255"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 25) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtInitialsCert" w="18.265mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.0685mm" placement="top">
                     <para vAlign="middle"/>
                     <value>
                        <text>Initials</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCertSurname" w="56.622mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Surname*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="255"/>
                  </value>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="posTitle" w="55.88mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0685mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Position Title*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text maxChars="255"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 31) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <subform y="85.749mm" w="203.2mm" minH="15.135mm" layout="lr-tb" name="sfSignatureBlock" presence="hidden">
                  <subform layout="lr-tb" name="sfSignatureRBGroup" w="31.75mm">
                     <exclGroup layout="lr-tb" name="rbgSignature">
                        <field h="8.16mm" name="rbDigitalSignature" w="31.75mm">
                           <caption placement="right" reserve="25.75mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Digital Signature</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <checkButton shape="round">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <fill/>
                                 </border>
                                 <margin/>
                              </checkButton>
                           </ui>
                           <value>
                              <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                           </value>
                           <event activity="click" name="event__click">
                              <script contentType="application/x-javascript">
console.println("rbDigitalSignature::click...");
this.resolveNode("sfSignatureDate.sfSignatureFields.DigitalSignatureField").rawValue = "";
this.resolveNode("sfSignatureDate.sfSignatureFields.WetSignatureField").rawValue = "";
this.resolveNode("sfSignatureDate.DateSignedField").rawValue = '';

sfSignatureDate.sfSignatureFields.DigitalSignatureField.presence = "visible";
sfSignatureDate.sfSignatureFields.WetSignatureField.presence = "hidden";
</script>
                           </event>
                           <items>
                              <text>Digital Signature</text>
                           </items>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                           </border>
                        </field>
                        <field h="8.458mm" name="rbWetSignature" w="31.75mm">
                           <caption placement="right" reserve="25.75mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Signature Image</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <checkButton shape="round">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <fill/>
                                 </border>
                                 <margin/>
                              </checkButton>
                           </ui>
                           <event activity="click" name="event__click">
                              <script contentType="application/x-javascript">
console.println("rbWetSignature::click...");
this.resolveNode("sfSignatureDate.sfSignatureFields.DigitalSignatureField").rawValue = "";
this.resolveNode("sfSignatureDate.sfSignatureFields.WetSignatureField").rawValue = "";
this.resolveNode("sfSignatureDate.DateSignedField").rawValue = '';

sfSignatureDate.sfSignatureFields.DigitalSignatureField.presence = "hidden";
sfSignatureDate.sfSignatureFields.WetSignatureField.presence = "visible";
</script>
                           </event>
                           <value>
                              <text>Signature Image</text>
                           </value>
                           <items>
                              <text>Signature Image</text>
                           </items>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                           </border>
                        </field>
                        <border hand="right">
                           <?templateDesigner StyleID apbx1?></border>
                        <?templateDesigner expand 1?></exclGroup>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <?templateDesigner expand 1?></subform>
                  <subform layout="lr-tb" name="sfSignatureDate" w="203.2mm">
                     <subform layout="lr-tb" anchorType="middleLeft" name="sfSignatureFields">
                        <border>
                           <corner thickness="0.175mm"/>
                           <edge/>
                        </border>
                        <keep intact="contentArea"/>
                        <draw h="9.135mm" name="WetSignatureCaption" w="19.762mm">
                           <font typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                           <para hAlign="center" vAlign="middle"/>
                           <ui>
                              <textEdit>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <value>
                              <text>Signature*</text>
                           </value>
                           <assist role="H3">
                              <speak disable="1"/>
                           </assist>
                        </draw>
                        <field anchorType="middleCenter" h="8.745mm" name="DigitalSignatureField" w="44.45mm" presence="hidden">
                           <border>
                              <edge stroke="embossed" presence="hidden"/>
                              <fill>
                                 <color value="201,229,253"/>
                              </fill>
                              <corner presence="hidden"/>
                           </border>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <signature type="PDF1.6">
                                 <border>
                                    <edge/>
                                 </border>
                                 <manifest action="all"/>
                                 <margin/>
                              </signature>
                           </ui>
                           <bind match="none"/>
                           <event activity="preSign" name="event__preSign">
                              <script contentType="application/x-javascript">

	 DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245";
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";
	
//this.resolveNode(DateSignedField).rawValue = util.printd("yyyy-mm-dd", new Date());
</script>
                           </event>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">

var cFormNodeManager = script.core.model.FormNodeManager;
	
var baseNode=cFormNodeManager.getBaseNode();
	
console.println("WetSignatureField::click...");


/*if (this.rawValue !== null) {
	 console.println("WetSignatureField::click...now saving the file");
	
	 console.println("WetSignatureField::change...");
	 //DateSignedField.rawValue = util.printd("yyyy-mm-dd", new Date());

	
	 baseNode.lock();
	 app.execMenuItem("SaveAs");
}*/

	
</script>
                           </event>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

if (this.rawValue !== null) {
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue = util.printd("yyyy-mm-dd", new Date());
	 
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245";
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";
	
}
</script>
                           </event>
                           <assist>
                              <toolTip>Signature</toolTip>
                           </assist>
                        </field>
                        <field anchorType="middleCenter" h="8.745mm" name="WetSignatureField" w="44.45mm" x="3.028028in" y="0.172139in">
                           <border>
                              <edge stroke="embossed"/>
                              <fill>
                                 <color value="201,229,253"/>
                              </fill>
                           </border>
                           <margin bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm"/>
                           <ui>
                              <imageEdit data="embed">
                                 <margin/>
                              </imageEdit>
                           </ui>
                           <desc>
                              <text name="embeddedHref">Unknown Embedded URI</text>
                           </desc>
                           <value>
                              <image contentType="application/octet-stream"/>
                           </value>
                           <event activity="postSave" ref="$host" name="event__postSave">
                              <script contentType="application/x-javascript">
console.println("WetSignatureField::postSave");
console.println("WetSignatureField::postSave: sfSignatureRBGroup.rbgSignature = ") + this.resolveNode("sfSignatureRBGroup.rbgSignature").rawValue;
console.println("WetSignatureField::postSave: sfSignatureRBGroup.rbgSignature.rbWetSignature = ") + this.resolveNode("sfSignatureRBGroup.rbgSignature.rbWetSignature").rawValue;
console.println("WetSignatureField::postSave: sfSignatureRBGroup.rbgSignature.rbDigitalSignature = ") + this.resolveNode("sfSignatureRBGroup.rbgSignature.rbDigitalSignature").rawValue;
//this.resolveNode("form1").access = "readOnly";

</script>
                           </event>
                           <event activity="ready" ref="$layout" name="event__layout_ready">
                              <script contentType="application/x-javascript">

if(this.rawValue !=null){
	var img = this.value.resolveNode("#image").contentType;
	
	var imgType = img.substr(img.length -3).toLowerCase();
	
	
	var imgFormatSplit = img.split("/");
	var imgFormat = imgFormatSplit[imgFormatSplit.length - 1].toLowerCase();
	
	if (imgFormat != "bmp" &amp;&amp; imgFormat != "gif" &amp;&amp; imgFormat != "jpg" &amp;&amp; imgFormat != "png" &amp;&amp; imgFormat != "jpeg") {
		app.alert("Plese insert suported image file only: \n\n'bmp', 'gif', 'jpg', 'png', 'jpeg'");
		this.rawValue = null;
	}
}
</script>
                           </event>
                           <event activity="click" name="event__click">
                              <script contentType="application/x-javascript">


var cFormNodeManager = script.core.model.FormNodeManager;
	
var baseNode=cFormNodeManager.getBaseNode();
	
console.println("WetSignatureField::click...");
if (this.rawValue !== null) {
	 console.println("WetSignatureField::click...now saving the file");
	
	 console.println("WetSignatureField::change...");
	 //DateSignedField.rawValue = util.printd("yyyy-mm-dd", new Date());

	// Not sure about this here --- this.resolveNode("form1").access = "readOnly";
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue = util.printd("yyyy-mm-dd", new Date());
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";
	 DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245"
	 baseNode.lock();
	 app.execMenuItem("SaveAs");
}

	
</script>
                           </event>
                           <assist>
                              <toolTip>Signature</toolTip>
                           </assist>
                        </field>
                        <?templateDesigner expand 1?>
                     </subform>
                     <field h="9mm" name="DateSignedField" w="95.589mm" access="protected">
                        <border>
                           <corner thickness="0.175mm"/>
                           <edge/>
                        </border>
                        <caption reserve="38.3259mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Date (YYYY-MM-DD)*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border hand="right">
                                 <edge/>
                              </border>
                              <comb numberOfCells="10"/>
                              <margin/>
                           </dateTimeEdit>
                        </ui>
                        <value>
                           <date/>
                        </value>
                        <bind match="none"/>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                     </field>
                     <?templateDesigner expand 1?>
                  </subform>
                  <?templateDesigner expand 1?>
               </subform>
               <?templateDesigner expand 0?>
            </subform>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <margin topInset="0mm"/>
            <keep intact="contentArea"/>
            <subform w="196.85mm" layout="lr-tb" name="sfFinalizeButton">
               <field name="btnFinalize" w="28.575mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Finalize</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cFailureReporter = script.core.validation.FailureReporter;
var cFormNodeManager = script.core.model.FormNodeManager;
var cLog = script.core.util.Log;
var baseNode = cFormNodeManager.getBaseNode();
var cDateUtil = script.core.util.DateUtil;
var validationFailures = baseNode.validateNode(baseNode.getNodeInstance(), true);

var cDrugApplModel = script.DrugAppl.model.DrugApplMain;

var chrnologicalBool = true;
var chrnologicalMsg = null;
var part4CheckedMsg = null;
var part1CheckedMsgBool = false;
var part4CheckedMsg1 = null;
var part3CheckBool = false;
var finalMessage = "";
var elseBool = false;
var elseBool2 = false;
var chronoBool = false;
var bool1 = false;

var language = cDrugApplModel.getLanguage();
var date = new Date();

//check if any of the check boxes is checked
var check = isChecked();

//xfa.host.messageBox ("isChecked: " + check);

var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;

if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.rawValue == 1) {

    // The first option in section part 3.2 is checked
    if (isScannedCopyProductOwnerChecked() == false) {

        // If the scanned copy option is not checked, alarm the user
        if (language == "en") {

            part4CheckedMsg = "Product owner's consent must be supported by a \n\nscanned copy of the statement of consent. Refer to Part 3.2.\n\n";

        }

        else {
            part4CheckedMsg = "Le consentement du propriétaire du produit doit être appuyée par \n\nune copie scannée de la déclaration de consentement. Reportez-vous à \n\nla partie 3.2.\n\n";
        }

        if (validationFailures != null) {
            //finalMessage  = cFailureReporter.getFailureSummary(validationFailures) + "\n\n";
            if (language == "en") {
                finalMessage = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red." + "\n";
            }
            else {
                finalMessage = "Le formulaire n'a pas pu être finalisé car il manque de l'information obligatoire. Les champs manquants sont surlignés en rouge." + "\n";
            }
        }

        finalMessage = finalMessage + part4CheckedMsg;

        xfa.host.messageBox(finalMessage);
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "230,125,125";
    }

    // in this case, the scanned option in part 3.2 is not checked. Another option in part 3.2 is checked. No failures too.
    else if (validationFailures === null &amp;&amp; isChecked()) {

        var checkPhone = this.resolveNode("DrugAppl.#variables.countryScript").validatePhoneNumber(telephone);
        var checkFax = this.resolveNode("DrugAppl.#variables.countryScript").validatePhoneNumber(fax);

        if (checkPhone == 0 &amp;&amp; checkFax == 0) {
            baseNode.lock();
            if (language == "en") {
                finalMessage = "The form has been validated and locked for editing. It can now be printed and sent to Health Canada. In order to modify the form, press the 'Modify' button." + "\n";
            }
            else {
                finalMessage = "Le formulaire a été validé et verrouillé contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton 'Modifier'." + "\n";
            }
            xfa.host.messageBox(finalMessage);

            if (language == "en") {
                xfa.host.messageBox("We strongly encourage you to save the form at this point. \nOnce the form is digitally signed, you will not be able to correct it \nand you will need to re-input all the information again. \nPlease proceed to signing the form after saving it.");
            }
            else {
                xfa.host.messageBox("Nous vous encourageons fortement à sauvegarder le formulaire à ce point-ci. Une fois que le formulaire est signé électroniquement, vous serez incapable de le corriger et vous aurez à entrer à nouveau toute l'information. Veuillez procéder à la signature du formulaire une fois que vous l'avez sauvegardé.");
            }

            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.presence = "visible";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbDigitalSignature.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbDigitalSignature.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbDigitalSignature.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbWetSignature.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.sfSignatureFields.DigitalSignatureField.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.sfSignatureFields.WetSignatureField.access = "open";

            this.resolveNode("officeUseOnly").presence = "visible";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.lblSubNumberOfficeUse.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.ddtSignedOnOfficeUse.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.notesOfficeUse.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "open";
            DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "211,211,211";
            //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").rawValue = "FORM V-000" + this.resolveNode("DrugAppl.#variables.Globals").genUniqueID();
            //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").fillColor = "211,211,211";
            //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").font.weight = "bold";

            if (language == "en") {
                this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
            }

            else {
                this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date de finalisé: " + util.printd("yyyy-mm-dd", date);
            }

            this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtLocked").caption.value.text.value = "LOCKED";

            if (language == "en") {
                this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
            }

            else {
                this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date de finalisé: " + util.printd("yyyy-mm-dd", date);
            }

            this.resolveNode("DrugAppl.#variables[0].Globals").finalizedDate = date;

            this.resolveNode("DrugAppl.#variables[0].Globals").isFinalized = true;
            cLog.trace("IS FINALIZED111111111111111 IS TRUE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
            //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,250,250";
            //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
            DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";

        }


    } else if (validationFailures === null &amp;&amp; !isChecked()) {

        cLog.trace("No failures, but part 3.2 is left with no options checked");
        // No failures, but part 3.2 is left with no options checked.

        if (language == "en") {

            part4CheckedMsg1 = "Some required fields have not been filled in Part 3.2.\n\n";
        }

        else {
            part4CheckedMsg1 = "Certains champs requis n'ont pas été remplis de la partie 3.2.\n\n";
        }

        if (validationFailures != null) {
            //finalMessage  = cFailureReporter.getFailureSummary(validationFailures) + "\n\n";
            if (language == "en") {
                finalMessage = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red." + "\n";
            }
            else {
                finalMessage = "Le formulaire n'a pas pu être finalisé car il manque de l'information obligatoire. Les champs manquants sont surlignés en rouge." + "\n";
            }
        }

        finalMessage = finalMessage + part4CheckedMsg1;

        xfa.host.messageBox(finalMessage);

        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.fillColor = "230,125,125";
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "230,125,125";
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "230,125,125";
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "230,125,125";
    }
    else if (validationFailures != null &amp;&amp; !isChecked()) {

        cLog.trace("NO CHECK validationFailures  NOT NULL");
        if (language == "en") {

            part4CheckedMsg1 = "Some required fields have not been filled in Part 3.2.\n\n";
        }

        else {
            part4CheckedMsg1 = "Certains champs requis n'ont pas été remplis de la partie 3.2.\n\n";
        }
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "230,125,125";
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "230,125,125";

        if (part4CheckedMsg != null) {

            finalMessage = finalMessage + part4CheckedMsg;

        }
        if (part4CheckedMsg1 != null) {

            finalMessage = finalMessage + part4CheckedMsg1;

        }


        xfa.host.messageBox(finalMessage);
    }
    else {
        // Report the failure
        //this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
        //finalMessage  = cFailureReporter.getFailureSummary(validationFailures) + "\n\n";

        if (language == "en") {
            finalMessage = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red." + "\n\n";
        }
        else {
            finalMessage = "Le formulaire n'a pas pu être finalisé car il manque de l'information obligatoire. Les champs manquants sont surlignés en rouge." + "\n\n";
        }
        xfa.host.messageBox(finalMessage);
        if (part4CheckedMsg != null) {

            finalMessage = finalMessage + part4CheckedMsg;

        }
        if (part4CheckedMsg1 != null) {

            finalMessage = finalMessage + part4CheckedMsg1;

        }


        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,250,250";
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";

    }

}

// The first option in section part 3.2 is NOT checked
else if (validationFailures === null &amp;&amp; isChecked()) {

    //No failure
    var checkPhone = this.resolveNode("DrugAppl.#variables.countryScript").validatePhoneNumber(telephone);
    var checkFax = this.resolveNode("DrugAppl.#variables.countryScript").validatePhoneNumber(fax);

    if (checkPhone == 0 &amp;&amp; checkFax == 0) {

        baseNode.lock();
        if (language == "en") {
            finalMessage = "The form has been validated and locked for editing. It can now be printed and sent to Health Canada. In order to modify the form, press the 'Modify' button." + "\n";
        }
        else {
            finalMessage = "Le formulaire a été validé et verrouillé contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton 'Modifier'." + "\n";
        }

        if (language == "en") {
            xfa.host.messageBox("We strongly encourage you to save the form at this point. \nOnce the form is digitally signed, you will not be able to correct it \nand you will need to re-input all the information again. \nPlease proceed to signing the form after saving it.");
        }
        else {
            xfa.host.messageBox("Nous vous encourageons fortement à sauvegarder le formulaire à ce point-ci. Une fois que le formulaire est signé électroniquement, vous serez incapable de le corriger et vous aurez à entrer à nouveau toute l'information. Veuillez procéder à la signature du formulaire une fois que vous l'avez sauvegardé.");
        }

        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbDigitalSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbDigitalSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbDigitalSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureRBGroup.rbgSignature.rbWetSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.sfSignatureFields.DigitalSignatureField.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.sfSignatureFields.WetSignatureField.access = "open";

        this.resolveNode("officeUseOnly").presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.lblSubNumberOfficeUse.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.ddtSignedOnOfficeUse.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.notesOfficeUse.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "211,211,211";
        //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").rawValue = "FORM V-000" + this.resolveNode("DrugAppl.#variables.Globals").genUniqueID();
        //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").fillColor = "211,211,211";
        //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").font.weight = "bold";
        xfa.host.messageBox(finalMessage);
        if (language == "en") {
            this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
        }

        else {
            this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date de finalisé: " + util.printd("yyyy-mm-dd", date);
        }

        this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtLocked").caption.value.text.value = "LOCKED";

        if (language == "en") {
            this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
        }

        else {
            this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date de finalisé: " + util.printd("yyyy-mm-dd", date);
        }

        this.resolveNode("DrugAppl.#variables[0].Globals").finalizedDate = date;

        this.resolveNode("DrugAppl.#variables[0].Globals").isFinalized = true;
        cLog.trace("IS FINALIZED22222222222222222222222222222 IS TRUE!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");

        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,250,250";
        //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
    }
}
else if (validationFailures === null &amp;&amp; !isChecked()) {

    // no option is checked in part 3.2

    if (language == "en") {

        part4CheckedMsg1 = "Some required fields have not been filled in Part 3.2.\n\n";
    }

    else {
        part4CheckedMsg1 = "Certains champs requis n'ont pas été remplis de la partie 3.2.\n\n";
    }

    if (part4CheckedMsg1 != null) {

        finalMessage = finalMessage + part4CheckedMsg1;

    }


    xfa.host.messageBox(finalMessage);
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "230,125,125";
    //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "230,125,125";
}
else if (validationFailures != null &amp;&amp; !isChecked() &amp;&amp; DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.presence == "visible") {

    cLog.trace("NO CHECK validationFailures  NOT NULL");
    finalMessage = cFailureReporter.getFailureSummary(validationFailures) + "\n\n";
    if (language == "en") {

        part4CheckedMsg1 = "Some required fields have not been filled in Part 3.2.\n\n";
    }

    else {
        part4CheckedMsg1 = "Certains champs requis n'ont pas été remplis de la partie 3.2.\n\n";
    }
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "230,125,125";
    //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "230,125,125";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "230,125,125";

    if (part4CheckedMsg != null) {

        finalMessage = finalMessage + part4CheckedMsg;

    }
    if (part4CheckedMsg1 != null) {

        finalMessage = finalMessage + part4CheckedMsg1;

    }


    xfa.host.messageBox(finalMessage);
}
else {
    // Report failure
    //this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
    finalMessage = cFailureReporter.getFailureSummary(validationFailures) + "\n\n";

    if (language == "en") {
        finalMessage = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red." + "\n\n";
    }
    else {
        finalMessage = "Le formulaire n'a pas pu être finalisé car il manque de l'information obligatoire. Les champs manquants sont surlignés en rouge." + "\n\n";
    }
    if (part4CheckedMsg != null) {

        finalMessage = finalMessage + part4CheckedMsg;

    }
    if (part4CheckedMsg1 != null) {

        finalMessage = finalMessage + part4CheckedMsg1;

    }

    xfa.host.messageBox(finalMessage);
    //xfa.host.messageBox(cFailureReporter.getFailureSummary(validationFailures));
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.fillColor = "255,250,250";
    //DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.fillColor = "255,250,250";
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.fillColor = "255,250,250";
}

var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("DrugAppl.script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);




function isChecked() {

    return (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkNoClaim.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentExp.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkPatentNotValid.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.chkStatMade.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfPart3Second.part3sfOptions2.txtOther.rawValue == 1)
}

function isScannedCopyProductOwnerChecked() {

    return (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.rawValue == 1 ||
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy2.rawValue == 1);


}
</script>
                  </event>
               </field>
               <draw name="Text2" w="7.042mm" h="5.2331mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <assist>
                     <speak disable="1"/>
                  </assist>
                  <?renderCache.bounds 17128 12000 0 0 1417 1417 0 0?></draw>
               <field name="btnModify" w="28.575mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Modify</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cFormNodeManager = script.core.model.FormNodeManager;
var cLog = script.core.util.Log;

var baseNode=cFormNodeManager.getBaseNode();
baseNode.unLock();
DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.presence = "hidden";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.presence = "hidden";
DrugAppl.sfPage1.sfInstructions.sButtons.txtLocked.caption.value.text.value = "UNLOCKED";
cLog.trace ("txtLocked caption: " + DrugAppl.sfPage1.sfInstructions.sButtons.txtLocked.caption.value.text.value );

DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.lblSubNumberOfficeUse.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.ddtSignedOnOfficeUse.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.officeUseOnly.notesOfficeUse.rawValue = "";

if (DrugAppl.sfPage1.sfInstructions.sfInstructionsContent.presence == "visible") {
	DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.access = "open";
	DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.fillColor = "211,211,211";
	
	DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.access = "readOnly";
	DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.fillColor = "245, 245, 245";
}
else {
	DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.access = "readOnly";
	DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.fillColor = "245, 245, 245";
	
	DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.access = "open";
	DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.fillColor = "211,211,211";		
}

this.access = "readOnly";
this.fillColor = "245,245,245";
</script>
                  </event>
                  <assist>
                     <speak disable="1"/>
                  </assist>
                  <event activity="initialize" name="event__initialize">
                     <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.DateSignedField.rawValue == null) {
	if (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.presence == "visible") {
		if ( (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.sfSignatureFields.DigitalSignatureField.rawValue != null) ||
		 	 (DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureBlock.sfSignatureDate.sfSignatureFields.WetSignatureField.rawValue != null)) {
			 	cLog.trace ("MATCH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
				this.access = "readOnly";
				this.fillColor = "245,245,245";
		}
		else {
	
			cLog.trace ("NO MATCH@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
		}
	}
	else {
		this.access = "readOnly";
		this.fillColor = "245,245,245";
	}
}
</script>
                  </event>
               </field>
               <draw name="lblEmptySpace" w="7.75in" h="5.233mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                  <margin topInset="0.5002mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <?renderCache.bounds 555166 11999 0 0 1417 1418 0 0?></draw>
               <subform y="11.233mm" w="203.2mm" layout="lr-tb" name="officeUseOnly" presence="hidden">
                  <draw h="7.47mm" name="lblOfficeUseTitle" w="203.2mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                        <fill>
                           <color value="0,0,0"/>
                        </fill>
                     </border>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold">
                        <fill>
                           <color value="255,255,255"/>
                        </fill>
                     </font>
                     <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <ui>
                        <textEdit>
                           <margin/>
                        </textEdit>
                     </ui>
                     <value>
                        <text>Health Canada Use Only</text>
                     </value>
                     <assist role="H2">
                        <speak disable="1"/>
                     </assist>
                  </draw>
                  <field name="lblSubNumberOfficeUse" w="100.925mm" h="8.054mm">
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border hand="right">
                              <?templateDesigner StyleID aped2?>
                              <edge/>
                           </border>
                           <margin/>
                           <comb numberOfCells="6"/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="51.6153mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Submission Number </text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <assist>
                        <toolTip>	Where applicable, state the number of volumes contained in the drug submission. Indicate the number of original volumes, followed by the number of duplicate copies.</toolTip>
                     </assist>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue.toString().length  &lt; 6) {
	if (language == "en") {
      	xfa.host.messageBox ("Submission Number must be 6 numbers.");
	}
	else {
      	xfa.host.messageBox ("Numéro de la présentation doit être de 6 numéros.");
	}
		
	xfa.host.setFocus(this);
		
		
}

</script>
                     </event>
                     <format>
                        <picture>zero{}|text{999999}</picture>
                     </format>
                     <validate>
                        <picture>num.integer{}</picture>
                     </validate>
                  </field>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                     <fill>
                        <linear>
                           <color value="192,192,192"/>
                        </linear>
                     </fill>
                  </border>
                  <field name="ddtSignedOnOfficeUse" w="92.139mm" h="8.238mm">
                     <ui>
                        <dateTimeEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </dateTimeEdit>
                        <picture>date{YYYY-MM-DD}</picture>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1.0008mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle" hAlign="center"/>
                     <value>
                        <date/>
                     </value>
                     <caption reserve="53.5047mm">
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <text>Filing Date (YYYY-MM-DD)</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <format>
                        <picture>date{YYYY-MM-DD}</picture>
                     </format>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <validate>
                        <picture>date{YYYY-MM-DD}</picture>
                     </validate>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">


if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);
}
</script>
                     </event>
                  </field>
                  <field name="notesOfficeUse" w="151.208mm" minH="30.891mm">
                     <ui>
                        <textEdit multiLine="1">
                           <border>
                              <?templateDesigner StyleID aped3?>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <caption reserve="26.8279mm">
                        <value>
                           <text>Notes</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <value>
                        <text maxChars="500"/>
                     </value>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                  </field>
                  <?templateDesigner expand 1?></subform>
               <keep intact="contentArea"/>
               <margin topInset="5.08mm"/>
               <?templateDesigner expand 0?></subform>
            <?templateDesigner expand 1?>
         </subform>
         <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
         <?templateDesigner expand 1?>
      </subform>
      <subform w="100mm" name="script" layout="tb" presence="hidden">
         <bind match="none"/>
         <subform usehref=".\Fragments\CoreJavaScript.xdp#som($template.form1.core)">
            <bind/>
            <?templateDesigner expand 0?>
         </subform>
         <subform h="50mm" name="RegulatoryAddresses" w="100mm">
            <subform h="50mm" name="control" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="RegulatoryAddressHandler">
//imports
var cLog = script.core.util.Log;


var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cException = script.core.util.Exception;


//Globals
var YES="Yes";
var NO="No";
var COUNTRY_CANADA="CA";


//Handler name
var SCRIPT_OBJECT_NAME=					"RegulatoryAddressHandler";

//Action Globals
var PART1A_COUNTRY_CHANGED_ACTION=		"parta_country_changed";
var PART1B_COUNTRY_CHANGED_ACTION=		"partb_country_changed";
var PART1C_COUNTRY_CHANGED_ACTION=		"partc_country_changed";
var SAME_AS_ACTION=						"same_as_above";
var ADDRESS_NA_ACTION=					"address_na";
var REGULATORY_CONTACT_SAMEAS_ACTION=	"same_as_reg_contact";
var COMPANYNAME_SAMEAS_ACTION=			"company_name_sameas";
var COMPANYCONTACT_SAMEAS_ACTION=		"company_contact_sameas";
var IMPORTER_ADDRESS_SAMEAS_ACTION=		"importer_sameas";




//FORM NODES (FN)

//Part A Form Nodes
var PART1A_MANUFACT_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("manufactCountry");
var PART1A_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("manufactProvince");
var PART1A_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("manufactPostalCode");

//PartB FormNoes
var PART1B_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("companyProvince");
var PART1B_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("companyPostalCode");

var PART1C_NOTAPPLICABLE_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var PART1C_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("provinceRegMail");
var PART1C_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("postalCodeRegMail");

//Company nodes
var COMPANY_CONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyContactSameAsManufact");
var COMPANY_ADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyAddressSameAsManufact");
var COMPANYADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BCompanyDetail");
var COMPANYCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BContactDetail");
//regulatory address nodes (1C)
var REG_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1CCompanyDetail");
var REGMAIL_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("countryRegMail");
var REGADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regAddressSameAsManufacturer");
//reg mailing address contact
var NOTAPPL_CHK_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var REGCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("part1CContactDetail");
var REGCONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regContactSameAs");
//Importer address nodes
//var PART1D_IMPORTER_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1D");
var IMPORTER_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1DCompanyDetail");
var IMPORTER_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("importerSameRegulatory");   




_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
		case PART1A_COUNTRY_CHANGED_ACTION:
				_manufacturerCountryChanged(PART1A_PROVINCE_FN,PART1A_POSTAL_CODE_FN);					
			break;
		case PART1B_COUNTRY_CHANGED_ACTION:
				_applicantCountryChanged(PART1B_PROVINCE_FN,PART1B_POSTAL_CODE_FN);		
			break;
			
		case PART1C_COUNTRY_CHANGED_ACTION:
				_regulatoryAddressCountryChanged(PART1C_PROVINCE_FN,PART1C_POSTAL_CODE_FN);
			break;			
		case SAME_AS_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),NOTAPPL_CHK_FN);
			break;
		case ADDRESS_NA_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),REGADDRESS_SAMEAS_CHK_FN);
			break;
		case REGULATORY_CONTACT_SAMEAS_ACTION:		
				_contactStatusChanged(anEvent.getValue(),REGCONTACT_SF_FN);		
			break;
		case COMPANYNAME_SAMEAS_ACTION:
			 	_contactStatusChanged(anEvent.getValue(),COMPANYADDRESS_SF_FN);
			 break;	
			 
		case COMPANYCONTACT_SAMEAS_ACTION:
				
				_contactStatusChanged(anEvent.getValue(),COMPANYCONTACT_SF_FN);
			 break;	
			 
		case IMPORTER_ADDRESS_SAMEAS_ACTION:
		
				_contactStatusChanged(anEvent.getValue(),IMPORTER_ADDRESS_SF_FN);
			break;	 	 
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


/*
* updates the UI based on the submission type that has been selected
*
*
*
*
*/



function initialize(){
	
	cLog.trace("Starting initialize of adddress");
	//Company Address
	_contactStatusChanged(COMPANY_ADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue, COMPANYADDRESS_SF_FN);
	//company Address contact
	_contactStatusChanged(COMPANY_CONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue,COMPANYCONTACT_SF_FN);
	
	
	//initialize the regulatory contact
	_contactStatusChanged(REGCONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue, REGCONTACT_SF_FN);
	
	//initialize the regulatory Mailing address, need to check for NA or same as values

	var sameAsValue=REGADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue;
	if( sameAsValue===YES){
		//clear out
		_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);	
	}else{
		_contactStatusChanged(NOTAPPL_CHK_FN.getNodeInstance().rawValue,REG_ADDRESS_SF_FN);
	}
	
}

//process the rules for importer address
function updateImporterAddressState(){

	//check Manufacturer address
	var manufact_country_node=PART1A_MANUFACT_COUNTRY_DDL_FN.getNodeInstance();
	var instManager=PART1D_IMPORTER_SF_FN.getInstanceManager();
	if(manufact_country_node.rawValue!=COUNTRY_CANADA){		
		if(instManager.count&lt;instManager.max || instManager.max&lt;0){
			cInstanceManagerUtil.addInstance(instManager);	
			cLog.trace("add an instance");
			_updateImporterSameAsState();
		}
	}else{
		
		cInstanceManagerUtil.clearInstances(instManager);		
	}
	if(instManager.count&gt;0){
		//check if the regulatory country has changed
		var regCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
			if(regCountry_node.rawValue===COUNTRY_CANADA){
			_updateImporterSameAsState();	
		}else{
			//force the form to show by forcing the status to NO
			cLog.trace("beforeContactStatusChanged");
			_contactStatusChanged(NO,IMPORTER_ADDRESS_SF_FN);	
			cLog.trace("after ContactStatusChanged")
		}
	}


}


/************ Private functions ***************************************/

function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(COMPANY_ADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_ADDRESS_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(PART1A_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1A_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1A_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1A_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(PART1A_MANUFACT_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"PART1A_MANUFACT_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PART1C_NOTAPPLICABLE_FN, SCRIPT_OBJECT_NAME ,"PART1C_NOTAPPLICABLE_FN");
		cControllerUtil.checkFormNode(PART1C_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1C_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1C_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1C_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(REG_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"REG_ADDRESS_SF_FN");	
		cControllerUtil.checkFormNode(REGADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGADDRESS_SAMEAS_CHK_FN");	
		cControllerUtil.checkFormNode(NOTAPPL_CHK_FN, SCRIPT_OBJECT_NAME ,"NOTAPPL_CHK_FN");	
		cControllerUtil.checkFormNode(REGCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANYADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYADDRESS_SF_FN");
		cControllerUtil.checkFormNode(REGCONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(COMPANYCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANY_CONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_CONTACT_SAMEAS_CHK_FN");  
		cControllerUtil.checkFormNode(IMPORTER_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_ADDRESS_SF_FN"); 
		//cControllerUtil.checkFormNode(PART1D_IMPORTER_SF_FN, SCRIPT_OBJECT_NAME ,"PART1D_IMPORTER_SF_FN");
		cControllerUtil.checkFormNode(IMPORTER_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(REGMAIL_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"REGMAIL_COUNTRY_DDL_FN");
		
				
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}


/*
*	relies on core delegate for updating address and state based on County
*	@param province_formNode- the province droplist to update
*	@param postal_formNode- the postal code textbox to update
*	@returns null
*
*
*
**/
function _applicantCountryChanged(province_formNode,postal_formNode){
	// Update correct labels to province/state and postal/state code and
	// clear the value entered in the postal/state code field
	province_formNode.getNodeInstance().rawValue = " ";	
	province_formNode.updateUI();
	postal_formNode.updateUI();
	postal_formNode.getNodeInstance().rawValue = null;	
	
}//end fun



function _manufacturerCountryChanged(province_formNode,postal_formNode){

	//update the province, postal code labels
	_applicantCountryChanged(province_formNode,postal_formNode);
	//todelete
	//updateImporterAddressState();		
}//end fn




/*
*	updates the regulatory mailing address 
*	@param sameAs- if yes (Y) the mailing address is deleted, if No the mailing address is added
					Any other values are ignored
*
*
**/

function _regulatoryAddressStatusChanged(sameAsValue,checkbox_formNode){

	checkbox_formNode.getNodeInstance().rawValue=NO;
	_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);
	
	
}//end fn

/*
*	Updates the regulatory addres country
*
*
*/
function _regulatoryAddressCountryChanged(province_formNode,postal_formNode){


	_applicantCountryChanged(province_formNode,postal_formNode);
	_updateImporterSameAsState();
	//updateImporterAddressState();
	
}

/*
* For the Importer same As 1D checkbox make it hidden if iC country is not canada
*
*
*
**/

function _updateImporterSameAsState(){

	var regMailCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
	var importerSameAs_node=IMPORTER_SAMEAS_CHK_FN.getNodeInstance();
	
	//if node does not exist do not proceed
	if(!cTypeChecker.isNode(importerSameAs_node)){
		return;
	}
	
	if(regMailCountry_node.rawValue!==COUNTRY_CANADA){
		importerSameAs_node.rawValue=NO; //reset the value
		cUiUtil.hide(importerSameAs_node);
	}else{
		cUiUtil.show(importerSameAs_node);
	}
}



/*
* Updates the passed node, if sameAsValue is yes, removes the subform, otherwise addit
*
*
*
*
**/
function _contactStatusChanged(sameAsValue,src_FormNode){

	cLog.trace("starting ContactStatusChanged "+src_FormNode.getSomExpression());
	var sfInstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(src_FormNode.getFullSomExpression());
	cLog.trace("Same as value is: "+sameAsValue);
	if(sameAsValue===YES){
		
		if(sfInstanceManager.count&gt;sfInstanceManager.min){
			cInstanceManagerUtil.clearInstances(sfInstanceManager);
		}
	}
	else if(sameAsValue===NO){
	
		cLog.trace("count: "+sfInstanceManager.count+"max: "+sfInstanceManager.max)
		if(sfInstanceManager.count&lt;sfInstanceManager.max || sfInstanceManager.max&lt;0){
			var temp=cInstanceManagerUtil.addInstance(sfInstanceManager);
			cLog.trace(temp);
		}
	}	
	//TO DO add a log message?
}//end fn

</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="nodeDefinitions" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="Addresses">
var content={

		sfAddresses: {
			somExpression: "sfAddresses",
			parentNodeKey: "sfPage1"},
		
		sfPart1A: {
			somExpression: "sfPart1A",
			parentNodeKey: "sfAddresses"},
		
		lblPart1: {
			somExpression:	"lblPart1",
			parentNodeKey:	"sfPart1A",
			labelKey:		"part1DrugInfo"},
		
		sfPart1ACompanyHeader: {
			somExpression: "sfPart1ACompanyHeader",
			parentNodeKey: "sfPart1A"},
		
		part1ASubHeading: {
			somExpression: "lblContactAddress",
			parentNodeKey: "sfPart1ACompanyHeader",
			labelKey:		"manufactMailingHeading"},
		
		sfPart1ACompanyDetail: {
			somExpression: "sfPart1ACompanyDetail",
			parentNodeKey: "sfAuthSignOfficial"},
		
		companyNamePart1A: {
			somExpression:	"txtCompanyName",
			parentNodeKey:	"sfPart1ACompanyDetail",
			toolTipKey:		"lbCompanyName_tt",
			labelKey:		"lbCompanyName"},
		
		manufactAddress: {
			somExpression: "txtAddress",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"streetAddress_tt",
			labelKey:		"streetAddress"},
		
		manufactCity: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"cityTown_tt",
			labelKey:		"cityTown"},
		
		manufactCountry: {
			somExpression:	"ddlCountry",
			parentNodeKey:	"sfPart1ACompanyDetail",
			labelKey:		"country",
			toolTipKey:		"country_tt",
			pickListKey:	"countryList"
			},
		
		manufactProvince: {
			somExpression: "ddlProvince",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"ddlProvince_tt",
			delegate:		"script.core.model.delegate.ProvinceStateDelegate"
			},
		
		manufactPostalCode: {
			somExpression: "txtPostalCode",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"txtPostalCode_tt",
			delegate:		"script.core.model.delegate.PostalZipDelegate"},
		
		part1AContactHeader: {
			somExpression:	"sfPart1AContactHeader",
			parentNodeKey:	"sfPart1A"},
		
		manufactSponserHeading: {
			somExpression:	"lblContactPersonMS",
			parentNodeKey:	"sfPart1ACompanyDetail",
			labelKey:		"manufactSponser"},
		
		sfPart1AContactDetail: {
			somExpression: "sfPart1AContactDetail",
			parentNodeKey: "sfPart1A"},	
		
		givenNamePart1A: {
			somExpression:	"txtGivenName",
			parentNodeKey:	"sfPart1ACompanyDetail",
			toolTipKey:		"givenName_tt",
			labelKey:		"givenName"},
		
		initialsPart1A: {
			somExpression:	"txtInitials",
			parentNodeKey:	"sfPart1ACompanyDetail",
			toolTipKey:		"nameInitials_tt",
			labelKey:		"nameInitials"},
		
		surnamePart1A: {
			somExpression:	"txtSurname",
			parentNodeKey:	"sfPart1ACompanyDetail",
			toolTipKey:		"surname_tt",
			labelKey:		"surname"},
		
//		txtTitle: {
//			somExpression: "txtTitle",
//			parentNodeKey: "sfPart1ACompanyDetail",
//			toolTipKey:		"title_tt",
//			labelKey:		"title"},
		
		ddlLangPref: {
			somExpression:	"ddlLangPref",
			parentNodeKey:	"sfPart1ACompanyDetail",
			labelKey:		"language",
			toolTipKey:		"language_tt",
			pickListKey:	"languageList"},
		
		telephonePart1AContact: {
			somExpression: "txtTelephone",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"telephone_tt",
			labelKey:		"telephone"},
		
		extensionPart1A: {
			somExpression: "txtExtension",
			parentNodeKey: "sfPart1ACompanyDetail",
			labelKey:		"extension",
			toolTipKey:		"phoneExtension_tip"},
		
		faxPart1A: {
			somExpression: 	"txtFax",
			parentNodeKey: 	"sfPart1ACompanyDetail",
			toolTipKey:		"faxNumber_tt",
			labelKey:		"faxNumber"},
		
		emailPart1A: {
			somExpression: "txtEmail",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"email_tt",
			labelKey:		"email",
			delegate:		"script.core.model.delegate.EmailDelegate"
			},
		
		sfPart1B: {
			somExpression: "sfPart1B",
			parentNodeKey: "sfAddresses"},
		
		sfPart1BCompanyHeader: {
			somExpression: "sfPart1BCompanyHeader",
			parentNodeKey: "sfPart1B"},
		
		part1BSubHeading: {
			somExpression: "lblContactAddress",
			parentNodeKey: "sfPart1BCompanyHeader",
			labelKey:		"companyNameHeading"},
			
		companyAddressSameAsManufact: {
			somExpression: "chkSameManufacturer",
			parentNodeKey: "sfPart1BCompanyHeader",
			labelKey:		"manufactAddressSameAs"},
		
		sfPart1BCompanyDetail: {
			somExpression: "sfPart1BCompanyDetail",
			parentNodeKey: "sfPart1B"},
		
		companyNamePart1B: {
			somExpression:	"txtCompanyName",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:	"",
			labelKey:		"lbCompanyName"},
		
		companyAddress: {
			somExpression: "txtAddress",
			parentNodeKey: "sfPart1BCompanyDetail",
			fieldNumber:	"",
			labelKey:		"streetAddress"},
		
		companyCity: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1BCompanyDetail",
			fieldNumber:	"",
			labelKey:		"cityTown"},
		
		companyCountry: {
			somExpression:	"ddlCountry",
			parentNodeKey:	"sfPart1BCompanyDetail",
			pickListKey:	"countryList"
			},
		
		companyProvince: {
			somExpression:	"ddlProvince",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:		"",
			delegate:		"script.core.model.delegate.ProvinceStateDelegate"
			},
		
		companyPostalCode: {
			somExpression:	"txtPostalCode",
			parentNodeKey:	"sfPart1BCompanyDetail",
			fieldNumber:		"",
			delegate:		"script.core.model.delegate.PostalZipDelegate"},
		
		sfPart1BContactHeader: {
			somExpression: "sfPart1BContactHeader",
			parentNodeKey: "sfPart1B"},
		
		companyContactPerson: {
			somExpression:	"lblContactPersonMS",
			parentNodeKey:	"sfPart1BContactHeader",
			labelKey:		"contact1BHeading"},
		
		companyContactSameAsManufact: {
			somExpression: "chkSameManufacturer",
			parentNodeKey: "sfPart1BContactHeader",
			labelKey:		"manufactContactSameAs"},
		
		sfPart1BContactDetail: {
			somExpression: "sfPart1BContactDetail",
			parentNodeKey: "sfPart1B"},
		
//		salutationPart1BContact: {
//			somExpression: "ddlSalutation",
//			parentNodeKey: "sfPart1BContactDetail",
//			labelKey:		"salutation",
//			//pickListKey:	"salutationList"},
//			pickListKey: "listSalutation"},
		
		givenNamePart1BContact: {
			somExpression:	"txtGivenName",
			parentNodeKey:	"sfPart1BContactDetail",
			labelKey:		"givenName"},
		
		initialsPart1BContact: {
			somExpression: "txtInitials",
			parentNodeKey: "sfPart1BContactDetail",
			labelKey:		"nameInitials"},
		
		surnamePart1BContact: {
			somExpression: "txtSurname",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"",
			labelKey:		"surname"},
		
		titlePart1BContact: {
			somExpression: "txtTitle",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"",
			labelKey:		"title"},
		
		langPrefPart1BContact: {
			somExpression: "ddlLangPref",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"",
			labelKey:		"language",
			pickListKey:	"languageList"},
		
		telephonePart1BContact: {
			somExpression: "txtTelephone",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"",
			labelKey:		"telephone"},
		
		extensionPart1B: {
			somExpression:	"txtExtension",
			parentNodeKey:	"sfPart1BContactDetail",
			labelKey:		"extension"},
		
		faxPart1BContact: {
			somExpression: "txtFax",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"",
			labelKey:		"faxNumber"},
		
		mailPart1BContact: {
			somExpression: "txtEmail",
			parentNodeKey: "sfPart1BContactDetail",
			fieldNumber:	"",
			//labelKey:		"email"
			delegate:		"script.core.model.delegate.EmailDelegate"},
		
		sfPart1C: {
			somExpression: "sfPart1C",
			parentNodeKey: "sfAddresses"},
		
		sfPart1CCompanyHeader: {
			somExpression: "sfPart1CCompanyHeader",
			parentNodeKey: "sfPart1C"},
		
		part1CContactHeading: {
			somExpression: "lblContactAddress",
			parentNodeKey: "sfPart1CCompanyHeader",
			labelKey:		"regMailHeading"},
		
		regAddressSameAsManufacturer: {
			somExpression:	"chkRegAddrSameManufactr",
			parentNodeKey:	"sfPart1CCompanyHeader",
			labelKey:		"manufactAddressSameAs"},
		
		part1CNotApplicable: {
			somExpression:	"chkNotApplicable",
			parentNodeKey:	"sfPart1CCompanyHeader",
			labelKey:		"notApplicable"},
		
		sfPart1CCompanyDetail: {
			somExpression: "sfPart1CCompanyDetail",
			parentNodeKey: "sfPart1C"},
		
		companyNameRegMail: {
			somExpression:	"txtCompanyName",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:	"",
			labelKey:		"lbCompanyName"},
		
		addressRegMail: {
			somExpression:	"txtAddress",
			parentNodeKey:	"sfPart1CCompanyDetail",
			labelKey:		"streetAddress"},
		
		cityRegMail: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1CCompanyDetail",
			fieldNumber:	"37"},
		
		countryRegMail: {
			somExpression:	"ddlCountry",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:		"39",
			pickListKey:		"countryList"
			},
		
		provinceRegMail: {
			somExpression:	"ddlProvince",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:		"",
			delegate:		"script.core.model.delegate.ProvinceStateDelegate"
			},
		
		postalCodeRegMail: {
			somExpression:	"txtPostalCode",
			parentNodeKey:	"sfPart1CCompanyDetail",
			fieldNumber:		"",
			delegate:		"script.core.model.delegate.PostalZipDelegate"
			},
		
		//Part 1C Regulatory Contact
		sfPart1CContactHeader: {
			somExpression: "sfPart1CContactHeader",
			parentNodeKey: "sfPart1C"},
		
		contactPersonRegMail: {
			somExpression: "lblContactPersonMS",
			parentNodeKey: "sfPart1CContactHeader",
			labelKey:		"regContactHeading"},
		
		regContactSameAs: {
			somExpression: "chkRegContactSameAs",
			parentNodeKey: "sfPart1CContactHeader",
			labelKey:		"manufactContactSameAs"},
			
		part1CContactDetail: {
			somExpression: "sfPart1CContactDetail",
			parentNodeKey: "sfPart1C"},
		
//		salutationRegMail: {
//			somExpression: "ddlSalutation",
//			parentNodeKey: "part1CContactDetail",
//			labelKey:		"salutation",
//			//pickListKey:	"salutationList"},
//			pickListKey: "listSalutation"},
		
		givenNameRegMail: {
			somExpression: "txtGivenName",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"givenName"},
		
		initialsRegMail: {
			somExpression: "txtInitials",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"nameInitials"},
		
		surnameRegMail: {
			somExpression: "txtSurname",
			parentNodeKey: "part1CContactDetail",
			fieldNumber:	"",
			labelKey:		"surname"},
		
		titleRegMail: {
			somExpression: "txtTitle",
			parentNodeKey: "part1CContactDetail",
			fieldNumber:	"",
			labelKey:		"title"},
		
		langPrefRegMail: {
			somExpression: "ddlLangPref",
			parentNodeKey: "part1CContactDetail",
			fieldNumber:	"",
			labelKey:		"language",
			pickListKey:	"languageList"},
		
		telephoneRegMail: {
			somExpression: 	"txtTelephone",
			parentNodeKey:	"part1CContactDetail",
			fieldNumber:	"",
			labelKey:		"telephone"},
		
		extensionRegMail: {
			somExpression: "txtExtension",
			parentNodeKey: "part1CContactDetail",
			labelKey:		"extension",
			toolTipKey:		"phoneExtension_tip"},
		
		faxRegMail: {
			somExpression:	"txtFax",
			parentNodeKey:	"part1CContactDetail",
			fieldNumber:	"",
			labelKey:		"faxNumber"},
		
		emailRegMail: {
			somExpression:	"txtEmail",
			parentNodeKey:	"part1CContactDetail",
			fieldNumber:	"",
			//labelKey:		"email",
			delegate:		"script.core.model.delegate.EmailDelegate"},
		
		sfPart1D: {
			somExpression: "sfPart1D",
			parentNodeKey: "sfAddresses"},
		
		sfPart1DCompanyHeader: {
			somExpression: "sfPart1DCompanyHeader",
			parentNodeKey: "sfPart1D"},
		
		part1DSubHeading: {
			somExpression:	"lblContactAddress",
			parentNodeKey:	"sfPart1DCompanyHeader",
			labelKey:		"importerHeading"},
		
		importerSameRegulatory: {
			somExpression: "chkSameRegulatory",
			parentNodeKey: "sfPart1DCompanyHeader",
			labelKey:		"regMailSameAs"},
		
		sfPart1DCompanyDetail: {
			somExpression:	"sfPart1DCompanyDetail",
			parentNodeKey:	"sfPart1D"},
		
		companyNameImporter: {
			somExpression: "txtCompanyName",
			parentNodeKey: "sfPart1DCompanyDetail",
			fieldNumber:	"",
			labelKey:		"lbCompanyName"},
		
		addressImporter: {
			somExpression: "txtAddress",
			parentNodeKey: "sfPart1DCompanyDetail",
			fieldNumber:	"",
			labelKey:		"streetAddress"},
		
		cityImporter: {
			somExpression: "txtCity",
			parentNodeKey: "sfPart1DCompanyDetail",
			fieldNumber:	"",
			labelKey:		"cityTown"},
		
		countryImporter: {
			somExpression:	"txtCountry",
			parentNodeKey:	"sfPart1DCompanyDetail",
			fieldNumber:	"",
			labelKey:		"country"},
		
		provinceImporter: {
			somExpression: "ddlProvince",
			parentNodeKey: "sfPart1DCompanyDetail",
			labelKey:		"province",
			pickListKey:	"provinceList"},
		
		postalCodeImporter: {
			somExpression: "txtPostalCode",
			parentNodeKey: "sfPart1DCompanyDetail",
			labelKey:		"postalCode"},
			
		
		lblRationale: {
			somExpression: "lblRationale",
			parentNodeKey: "sfPart1ACompanyDetail",
			labelKey:      "lbAttest"},
		
		//All copied to DrugAppl
//		txtCertGivenName: {
//			somExpression: "txtCertGivenName",
//			parentNodeKey: "sfPart1ACompanyDetail",
//			toolTipKey:      "lbCertGivenName_tt",
//			labelKey:      "lbCertGivenName"},
//		
//		txtCertSurname: {
//			somExpression: "txtCertSurname",
//			parentNodeKey: "sfPart1ACompanyDetail",
//			toolTipKey:      "lbCertSurname_tt",
//			labelKey:      "lbCertSurname"},
//			
//		txtInitialsCert: {
//			somExpression: "txtInitialsCert",
//			parentNodeKey: "sfPart1ACompanyDetail",
//			toolTipKey:		"nameInitials_tt",
//			labelKey:		"nameInitials"},
//		
//		txtCertTitle: {
//			somExpression: "posTitle",
//			parentNodeKey: "sfPart1ACompanyDetail",
//			toolTipKey:      "lbCertTitle_tt",
//			labelKey:      "lbCertTitle"},
//		
		sigCertSignature: {
			somExpression: "sigSignature",
			parentNodeKey: "sfPart1ACompanyDetail",
			labelKey:      "lbCertSignature"},
		
		ddtCertSignedOn: {
			somExpression: "ddtSignedOn",
			parentNodeKey: "sfPart1ACompanyDetail"},

		lblCertHeader: {
			somExpression: "lblCertification",
			parentNodeKey: "sfPart1ACompanyDetail",
			labelKey:      "lbCertHeader"}

}//end var content
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="addressLabels_en">
var content={


	
	part1DrugInfo:			"Part 4 - Manufacturer Information",
	manufactMailingHeading:	"A)  MANUFACTURINGO INFORMATION AND CERTIFICATON",
	manufactSponser:		"MANUFACTURER CONTACT",
	regMailHeading:			"C) REGULATORY MAILING ADDRESS",
	companyNameHeading:		"B)  COMPANY NAME &amp; ADDRESS  (For THIS Drug Submission)",
	importerHeading:		"D)  CANADIAN IMPORTER MAILING ADDRESS",
	manufactAddressSameAs:	"Same as A Above (i.e. Manufacturer/Sponsor Mailing Address)",
	manufactContactSameAs:	"Same as A Above (i.e. Manufacturer/Sponsor Contact)",
	regMailSameAs:			"Same as C Above (i.e. Regulatory Mailing Address)",
	contact1BHeading:		"Contact (for THIS Drug Submission)",
	regContactHeading:		"Regulatory Contact",
	notApplicable:			"Not Applicable",
	lbCompanyName:			"Company Name",	
	streetAddress:			"Street/Suite/PO Box",
	cityTown:				"City - Town",
	country:				"Country",
//	salutation:				"Salutation",
	givenName:				"Given Name",
	nameInitials:			"Initials",
	surname:				"Surname",
	title:					"Title",
	language:				"Language",
	telephone:				"Telephone No.",
	extension:				"Ext.",
	faxNumber:				"Fax No.",
	email:					"Email",
	title:					"Title",

//	lbCertHeader:           "CERTIFICATION",
//	lbAttest:			    "I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.",
//	lbCertSalutation:       "Salutation",
//	lbCertGivenName:        "Given Name",
//	lbCertSurname:		    "Surname",
//	lbCertTitle:            "Title",
	lbCertSignature:        "Signature"
	//add comma if adding more
	
	
//	listSalutation:	[
//				["MR","Mr."],
//				["MRS","Mrs."],
//				["MS","Ms."],
//				["DR","Dr."],
//	
//	],	
	
  
	
	

}

</script>
                  <script contentType="application/x-javascript" name="addressLabels_fr">
var content={


	
	part1DrugInfo:			"fr_Part 4 - Renseignements sur le fabricant",
	manufactMailingHeading:	"fr_A)  Information et de la certification maufacturing",
	manufactSponser:		"PERSONNE-RESOURCE DU FABRICANT",
	regMailHeading:			"fr_C) REGULATORY MAILING ADDRESS",
	companyNameHeading:		"fr_B)  COMPANY NAME &amp; ADDRESS  (For THIS Drug Submission)",
	importerHeading:		"fr_D)  CANADIAN IMPORTER MAILING ADDRESS",
	manufactAddressSameAs:	"fr_Same as A Above (i.e. Manufacturer/Sponsor Mailing Address)",
	manufactContactSameAs:	"fr_Same as A Above (i.e. Manufacturer/Sponsor Contact)",
	regMailSameAs:			"fr_Same as C Above (i.e. Regulatory Mailing Address)",
	contact1BHeading:		"fr_Contact (for THIS Drug Submission)",
	regContactHeading:		"fr_Regulatory Contact",
	notApplicable:			"fr_Not Applicable",
	lbCompanyName:			"Nom de l'entreprise",	
	streetAddress:			"Rue/Bureau/C. P.",
	cityTown:				"Ville-village",
	country:				"Pays",
//	salutation:				"Appel",
	givenName:				"Prénom",
	nameInitials:			"Initiales",
	surname:				"Nom",
	title:					"Titre",
	language:				"Langue de préférence",
	telephone:				"No de téléphone",
	extension:				"No de poste",
	faxNumber:				"No de télécopieur",
	email:					"Courriel",
	title:					"Titre",
	
//	lbCertHeader:           "ATTESTATION",
//	lbAttest:				"J'atteste que les renseignements inclus dans la présente Déclaration sont exacts et conformes aux exigences du Règlement sur les médicaments brevetés (avis de conformité).",
//	lbCertSalutation:       "Appel",
//	lbCertGivenName:        "Prénom",
//	lbCertSurname:		    "Nom",
//	lbCertTitle:            "Titre",
	lbCertSignature:        "Signature"
	//add comma if adding more
	
//	listSalutation:	[
//				["MR","M."],
//				["MRS","Mme"],
//				["MS","Mlle"],
//				["DR","Dr."],
//	],	
	
	

}
</script>
                  <script contentType="application/x-javascript" name="addressTooltips_en">
var content={


	phoneExtension_tip:		"Provide the telephone extension number, if it exists",



	part1DrugInfo_tt:			"Part 4 - Manufacturer Information",
	manufactMailingHeading_tt:	"A)  MANUFACTURINGO INFORMATION AND CERTIFICATON",
	manufactSponser_tt:		"MANUFACTURER CONTACT",
	regMailHeading_tt:			"C) REGULATORY MAILING ADDRESS",
	companyNameHeading_tt:		"B)  COMPANY NAME &amp; ADDRESS  (For THIS Drug Submission)",
	importerHeading_tt:		"D)  CANADIAN IMPORTER MAILING ADDRESS",
	manufactAddressSameAs_tt:	"Same as A Above (i.e. Manufacturer/Sponsor Mailing Address)",
	manufactContactSameAs_tt:	"Same as A Above (i.e. Manufacturer/Sponsor Contact)",
	regMailSameAs_tt:			"Same as C Above (i.e. Regulatory Mailing Address)",
	contact1BHeading_tt:		"Contact (for THIS Drug Submission)",
	regContactHeading_tt:		"Regulatory Contact",
	notApplicable_tt:			"Not Applicable",
	lbCompanyName_tt:			"Company Name",	
	streetAddress_tt:			"Street/Suite/PO Box",
	cityTown_tt:				"City - Town",
	country_tt:				"Country",
//	salutation_tt:				"Salutation",
	givenName_tt:				"Given Name",
	nameInitials_tt:			"Initials",
	surname_tt:				"Surname",
	title_tt:					"Title",
	language_tt:				"Language",
	telephone_tt:				"Telephone No.",
	extension_tt:				"Ext.",
	faxNumber_tt:				"Fax No.",
	email_tt:					"Email",
	title_tt:					"Title",
//	lbCertHeader_tt:           "CERTIFICATION",
//	lbAttest_tt:			    "I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.",
//	lbCertSalutation_tt:       "Salutation",
//	lbCertGivenName_tt:        "Given Name",
//	lbCertSurname_tt:		    "Surname",
//	lbCertTitle_tt:            "Title",
	lbCertSignature_tt:        "Signature",
	
	ddlProvince_tt: "Province/State",
txtPostalCode_tt: "Postal/ZIP Code"
}

</script>
                  <script contentType="application/x-javascript" name="addressTooltips_fr">var content={


	phoneExtension_tip:		"Indiquez le numéro de poste téléphonique, si elle existe",


	part1DrugInfo_tt:			"fr_Part 4 - Renseignements sur le fabricant",
	manufactMailingHeading_tt:	"fr_A)  Information et de la certification maufacturing",
	manufactSponser_tt:		"PERSONNE-RESOURCE DU FABRICANT",
	regMailHeading_tt:			"fr_C) REGULATORY MAILING ADDRESS",
	companyNameHeading_tt:		"fr_B)  COMPANY NAME &amp; ADDRESS  (For THIS Drug Submission)",
	importerHeading_tt:		"fr_D)  CANADIAN IMPORTER MAILING ADDRESS",
	manufactAddressSameAs_tt:	"fr_Same as A Above (i.e. Manufacturer/Sponsor Mailing Address)",
	manufactContactSameAs_tt:	"fr_Same as A Above (i.e. Manufacturer/Sponsor Contact)",
	regMailSameAs_tt:			"fr_Same as C Above (i.e. Regulatory Mailing Address)",
	contact1BHeading_tt:		"fr_Contact (for THIS Drug Submission)",
	regContactHeading_tt:		"fr_Regulatory Contact",
	notApplicable_tt:			"fr_Not Applicable",
	lbCompanyName_tt:			"Nom de l'entreprise",	
	streetAddress_tt:			"Rue/Bureau/C. P.",
	cityTown_tt:				"Ville-village",
	country_tt:				"Pays",
//	salutation_tt:				"Appel",
	givenName_tt:				"Prénom",
	nameInitials_tt:			"Initiales",
	surname_tt:				"Nom",
	title_tt:					"Titre",
	language_tt:				"Langue de préférence",
	telephone_tt:				"No de téléphone",
	extension_tt:				"No de poste",
	faxNumber_tt:				"No de télécopieur",
	email_tt:					"Courriel",
	title_tt:					"Titre",
//	lbCertHeader_tt:           "ATTESTATION",
//	lbAttest_tt:				"J'atteste que les renseignements inclus dans la présente Déclaration sont exacts et conformes aux exigences du Règlement sur les médicaments brevetés (avis de conformité).",
//	lbCertSalutation_tt:       "Appel",
//	lbCertGivenName_tt:        "Prénom",
//	lbCertSurname_tt:		    "Nom",
//	lbCertTitle_tt:            "Titre",
	lbCertSignature_tt:        "Signature",
	
	
ddlProvince_tt: "Province/état",
txtPostalCode_tt: "Code postal/code de zone"

}

</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?></subform>
         <subform h="50mm" name="DrugAppl" w="100mm">
            <subform layout="tb" name="config" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="general">
var cLog = script.core.util.Log;


var content = { 

formType: "DrugAppl",
formVersion: "00.01.00",

//Overrides
//NodeValidator_formatValidator: "",
Log_logLevel: cLog.LEVEL_TRACE,
Log_showExceptionDetail: true,
Log_writeToFile: false,


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform layout="tb" name="control" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="FormHandler">
/** Global Variables **/
var cLog = script.core.util.Log;
var cFormNodeManager = script.core.model.FormNodeManager;
var cResourceManager = script.core.lang.ResourceManager;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var cAddressHandler=script.DrugAppl.control.Part1.RegulatoryAddressHandler;
var cDrugFormulationHandler=script.DrugAppl.control.Part2.DrugFormulationHandler;
var cDateUtil = script.core.util.DateUtil;

//action Global
var LANGUAGE_CHANGE="language_change";


var SCRIPT_OBJECT_NAME="FormHandler";

/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case LANGUAGE_CHANGE:
			
			//do stuff
			 cDrugApplModel.setLanguage(anEvent.getSource().rawValue);
			_updateFormLanguage();
			break;
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}



/*
* Initializes the form to it's default state
*
*
*
*/
function initialize(){

	var SIGNATURE_OPEN =cFormNodeManager.getFormNodeForKey("DateSignedField");
	var SIGNATURE_OPEN_INSTANCE = SIGNATURE_OPEN.getNodeInstance();
	
	if (SIGNATURE_OPEN_INSTANCE.rawValue == null) {
			   
		var cInstructHandler=DrugAppl.control.InstructionsHandler;
		
		var PAGINATION_FN =cFormNodeManager.getFormNodeForKey("txtPagination");
	    
	    var PAGINATION_INST = PAGINATION_FN.getNodeInstance();
	    
	    if (PAGINATION_INST == null) {
	      	cLog.trace ("PAGINATION_INST == null");
	    
	    }
	    //else if(PAGINATION_INST.rawValue == "FALSE") {
	    
	    		cLog.trace ("PAGINATION_INST == TRUE##############");
	    		PAGINATION_INST.rawValue = "TRUE";
	    //}
	    		
	
		_updateFormLanguage();
		cLog.trace ("initialize is ecexuted !!!!!!!!!!!!!!!!!!!");
	}	
	
}








/********* Private functions *****/
function _updateFormLanguage()
{
    cLog.trace ("_updateFormLanguage is called !!!!!!!!!!!!!!!!!!!!!!!!!!!");
	cResourceManager.setCurrentLanguage(cDrugApplModel.getLanguage());
	cFormNodeManager.getBaseNode().updateUI();
}
</script>
                  <script contentType="application/x-javascript" name="SubmissionTypeHandler">
//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;

//Handlers
var cRegulatoryAddressHandler=script.DrugAppl.control.Part1.RegulatoryAddressHandler;
var cPart2GeneralHandler= script.DrugAppl.control.Part2.GeneralHandler; 
var cAppendix3Handler=script.DrugAppl.control.Appendix3.Appendix3Handler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;


var SCRIPT_OBJECT_NAME="SubmissionTypeHandler";


//action Global variables

var SUBMISSION_TYPE_ACTION="sub_type_selection";

//submission Type Global Variables
var CTA_TYPE="CTA";
var CTAA_TYPE="CTAA";
var NDS_TYPE="NDS";
var SNDS_TYPE="SNDS";
var ANDS_TYPE="ANDS";
var SANDS_TYPE="SANDS";
var NC_TYPE="NC";
var DIN_TYPE="DIN";
var PDC_TYPE="PDC";
var ADMIN_TYPE="ADMIN";
var VIND_TYPE="VIND";
var VINDAM_TYPE="VINDAM";
var VNDS_TYPE="VNDS";
var VSNDS_TYPE="VSNDS";
var VANDS_TYPE="VANDS";
var VSANDS_TYPE="VSANDS";
var VNC_TYPE="VNC";
var VDIN_TYPE="VDIN";
var VPDC_TYPE="VPDC";
var OTHER1_TYPE="OTHER1";
var OTHER_TYPE="OTHER";


//FORM NODES (FN)






/*
* actionPerformed- central event handler for the Header functionality in the form (Pre Part 1)
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SUBMISSION_TYPE_ACTION:
				updateSubmissionType(anEvent.getValue());
		break;	
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}




function updateSubmissionType(subTypeID){

	 
	 cApplicationModel.setSubType(subTypeID);
	 cRegulatoryAddressHandler.updateSubmissionType();
	 cPart2GeneralHandler.updateSubmissionType();
	 cAppendix3Handler.updateSubmissionType();
	
}//end function

/**
Rules
-----------------------------------------------------------------------
if CTA or CTAA or VIND or VINDAM

Visible:
	sPart1CCompanyHeader.chkNotApplicable
	sPart2Body.sCountriesManufacture.chkManufSponsor

hidden:
	sPart2Body.sCountriesManufacture.sCountries

else

hidden:
	sPart1C.sPart1CCompanyHeader.chkNotApplicable
	sPart2.sPart2Body.sCountriesManufacture.chkManufSponsor
	
 Dec 2 Done!!	

-----------------------------------------------------------------------
Q70 is only visible when the following is true

if (SNDS or SANDS or VSNDS or VSANDS) or DIN and sDrugProduct.sOptions.chkBiologic == "1" ///

visible:
	sPart2.sPart2Body.sRationale

else hidden
	sPart2.sPart2Body.sRationale

------------------------------------------------------------------------------------------
 Q71 visibility

if NC or VNC

visbile:
	sPart2.sPart2Body.sTypeOfNC

else hidden:
	sPart2.sPart2Body.sTypeOfNC

--------------------------------------------------------------------------------------------------------
// Q72 and Q73 only visible for vet submissions
if VIND or VINDAM or VNDS or VANDS or VSANDS or VNC or VDIN or VPDC

Visible
sPart2.sPart2Body.sSpeciesSubtype
sPart2.sPart2Body.ddlFoodProducing

else hidden
sPart2.sPart2Body.sSpeciesSubtype
sPart2.sPart2Body.ddlFoodProducing


-----------------------------------------------------------------------------------------------------------------
 Appendix 1 is only visible when CTA or CTA-A

if (CTAA or CTAA) AND sPart1A.sPart1ACompanyDetail.ddlCountry.rawValue == "2"

Visbile: Appendix 1

else Appendix 1 hidden

-------------------------------------------------------------
Appendix 3

if (CTAA or CTAA)

Appendix 3 visible

else
appendix3 hidden

**/

/*
*	updates the UI states for clinical trials 
*	@param isClinicalTrial- a boolean, true if setting to clinical trial state	
*
*
**/
/*function clinicalTrialUIUpdate(isClinicalTrial){


		
				
	if(isClinicalTrial){
		cUiUtil.show(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		//cUiUtil.show(PART2_MANUFACT_SPONSER_FN.getNodeInstance());
		cUiUtil.hide(MANUFACT_COUNTRIES_SF_FN.getInstance());
		xfa.host.resetData(MANUFACT_COUNTRIES_SF_FN.getFullSomExpression());
	}else{
		
		cUiUtil.hide(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		//cUiUtil.hide(PART2_MANUFACT_SPONSER_FN.getNodeInstance());
		cUiUtil.show(MANUFACT_COUNTRIES_SF_FN.getInstance());
		//could just null it
		xfa.host.resetData(PART1C_NOTAPPLICABLE_FN.getFullSomExpression());
		//xfa.host.resetData(PART2_MANUFACT_SPONSER_FN.getFullSomExpression());
	}
		
}*/
/*
* Updates the UI for vet specific submission Q72,73 only visible for these submissions
*
*
*
*
*/



/***PRIVATE**/

</script>
                  <script contentType="application/x-javascript" name="InstructionsHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
//var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;


var SCRIPT_OBJECT_NAME="InstructionsHandler";


//action Global variables
var HIDE_INSTRUCTIONS="instruct_hide";
var SHOW_INSTRUCTIONS="instruct_show";


//FORM NODES

var INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent");

_initialize();



/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SHOW_INSTRUCTIONS:
		case HIDE_INSTRUCTIONS:	
				
			toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;
					
		default:
			throw cException.createInstance("InstructionsHandler"
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/*
* Called during form initialization. By Default instructions are hidden
*
*
*
*/
function initialize(){
	//always hide instructions on open
	toggleInstructionsVisiblity(HIDE_INSTRUCTIONS);

}



/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=INSTRUCTIONS_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_INSTRUCTIONS){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_INSTRUCTIONS){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

/***Private functionality ***/
function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(INSTRUCTIONS_SF_FN, SCRIPT_OBJECT_NAME ,"INSTRUCTIONS_SF_FN");
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <subform layout="tb" name="Part1" w="100mm">
                  <keep intact="contentArea"/>
                  <variables>
                     <script contentType="application/x-javascript" name="RegulatoryAddressHandler">
//imports
var cLog = script.core.util.Log;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;

var cFormUtil=script.DrugAppl.util.General;

var cApplicationModel=script.DrugAppl.model.DrugApplMain;

//Globals
var YES="Yes";
var NO="No";
var COUNTRY_CANADA="CA";


//Handler name
var SCRIPT_OBJECT_NAME="RegulatoryAddressHandler";

//Action Globals
var PART1A_COUNTRY_CHANGED_ACTION="parta_country_changed";
var PART1B_COUNTRY_CHANGED_ACTION="partb_country_changed";
var PART1C_COUNTRY_CHANGED_ACTION="partc_country_changed";
var SAME_AS_ACTION="same_as_above";
var ADDRESS_NA_ACTION="address_na";
var REGULATORY_CONTACT_SAMEAS_ACTION="same_as_reg_contact";
var COMPANYNAME_SAMEAS_ACTION="company_name_sameas";
var COMPANYCONTACT_SAMEAS_ACTION="company_contact_sameas";
var IMPORTER_ADDRESS_SAMEAS_ACTION="importer_sameas";




//FORM NODES (FN)

//Part A Form Nodes
var PART1A_MANUFACT_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("manufactCountry");
var PART1A_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("manufactProvince");
var PART1A_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("manufactPostalCode");

//PartB FormNoes
var PART1B_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("companyProvince");
var PART1B_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("companyPostalCode");

var PART1C_NOTAPPLICABLE_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var PART1C_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("mailingProvince");
var PART1C_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("mailingPostalCode");

//Company nodes
var COMPANY_CONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyContactSameAsManufact");
var COMPANY_ADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyAddressSameAsManufact");
var COMPANYADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BCompanyDetail"); //TODO PROBLEM
var COMPANYCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BContactDetail");

//regulatory address nodes (1C)
var REG_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1CCompanyDetail");
var REGMAIL_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("mailingCountry");
var REGADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regAddressSameAsManufacturer");
//reg mailing address contact
var NOTAPPL_CHK_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var REGCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("part1CContactDetail");
var REGCONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regContactSameAs");
//Importer address nodes
//var PART1D_IMPORTER_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1D");
var IMPORTER_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1DCompanyDetail");
var IMPORTER_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("importerSameRegulatory");   




_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
		//case PART1A_COUNTRY_CHANGED_ACTION:
		//		_manufacturerCountryChanged(PART1A_PROVINCE_FN,PART1A_POSTAL_CODE_FN);					
		//	break;
		case PART1B_COUNTRY_CHANGED_ACTION:
				_applicantCountryChanged(PART1B_PROVINCE_FN,PART1B_POSTAL_CODE_FN);		
			break;
			
		case PART1C_COUNTRY_CHANGED_ACTION:
				_regulatoryAddressCountryChanged(PART1C_PROVINCE_FN,PART1C_POSTAL_CODE_FN);
			break;			
		case SAME_AS_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),NOTAPPL_CHK_FN);
			break;
		case ADDRESS_NA_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),REGADDRESS_SAMEAS_CHK_FN);
			break;
		case REGULATORY_CONTACT_SAMEAS_ACTION:		
				_contactStatusChanged(anEvent.getValue(),REGCONTACT_SF_FN);		
			break;
		case COMPANYNAME_SAMEAS_ACTION:
			 	_contactStatusChanged(anEvent.getValue(),COMPANYADDRESS_SF_FN);
			 break;	
			 
		case COMPANYCONTACT_SAMEAS_ACTION:
				
				_contactStatusChanged(anEvent.getValue(),COMPANYCONTACT_SF_FN);
			 break;	
			 
		case IMPORTER_ADDRESS_SAMEAS_ACTION:
		
				_contactStatusChanged(anEvent.getValue(),IMPORTER_ADDRESS_SF_FN);
			break;	 	 
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


/*
* updates the UI based on the submission type that has been selected
*
*
*
*
*/

function updateSubmissionType(){
	var subType=cApplicationModel.getSubType();
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
			cUiUtil.show(PART1C_NOTAPPLICABLE_FN.getNodeInstance());	
			break;
		default:
			cUiUtil.hide(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		
	}//swtich

}//updateSubmissionType


function intialize(){
	
	cLog.trace("Starting initialize of adddress");
	//Company Address
	_contactStatusChanged(COMPANY_ADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue, COMPANYADDRESS_SF_FN);
	//company Address contact
	_contactStatusChanged(COMPANY_CONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue,COMPANYCONTACT_SF_FN);
	
	
	//initialize the regulatory contact
	_contactStatusChanged(REGCONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue, REGCONTACT_SF_FN);
	
	//initialize the regulatory Mailing address, need to check for NA or same as values

	var sameAsValue=REGADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue;
	if( sameAsValue===YES){
		//clear out
		_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);	
	}else{
		_contactStatusChanged(NOTAPPL_CHK_FN.getNodeInstance().rawValue,REG_ADDRESS_SF_FN);
	}
	
}

//process the rules for importer address
function updateImporterAddressState(){

	//check Manufacturer address
	var manufact_country_node=PART1A_MANUFACT_COUNTRY_DDL_FN.getNodeInstance();
	var instManager=PART1D_IMPORTER_SF_FN.getInstanceManager();
	if(manufact_country_node.rawValue.toUpperCase()!=COUNTRY_CANADA){		
		if(instManager.count&lt;instManager.max || instManager.max&lt;0){
			cInstanceManagerUtil.addInstance(instManager);	
			cLog.trace("add an instance");
			_updateImporterSameAsState();
		}
	}else{
		
		cInstanceManagerUtil.clearInstances(instManager);		
	}
	if(instManager.count&gt;0){
		//check if the regulatory country has changed
		var regCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
			if(regCountry_node.rawValue===COUNTRY_CANADA){
			_updateImporterSameAsState();	
		}else{
			//force the form to show by forcing the status to NO
			cLog.trace("beforeContactStatusChanged");
			_contactStatusChanged(NO,IMPORTER_ADDRESS_SF_FN);	
			cLog.trace("after ContactStatusChanged")
		}
	}


}




/************ Private functions ***************************************/

function _initialize(){

	try{
	
		/*cControllerUtil.checkFormNode(PART1A_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1A_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1A_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1A_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(PART1A_MANUFACT_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"PART1A_MANUFACT_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PART1C_NOTAPPLICABLE_FN, SCRIPT_OBJECT_NAME ,"PART1C_NOTAPPLICABLE_FN");
		cControllerUtil.checkFormNode(PART1C_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1C_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1C_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1C_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(REG_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"REG_ADDRESS_SF_FN");	
		cControllerUtil.checkFormNode(REGADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGADDRESS_SAMEAS_CHK_FN");	
		cControllerUtil.checkFormNode(NOTAPPL_CHK_FN, SCRIPT_OBJECT_NAME ,"NOTAPPL_CHK_FN");	
		cControllerUtil.checkFormNode(REGCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANYADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYADDRESS_SF_FN");
		cControllerUtil.checkFormNode(REGCONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(COMPANYCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANY_CONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_CONTACT_SAMEAS_CHK_FN");  
		cControllerUtil.checkFormNode(IMPORTER_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_ADDRESS_SF_FN"); 
		cControllerUtil.checkFormNode(PART1D_IMPORTER_SF_FN, SCRIPT_OBJECT_NAME ,"PART1D_IMPORTER_SF_FN");
		cControllerUtil.checkFormNode(IMPORTER_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(REGMAIL_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"REGMAIL_COUNTRY_DDL_FN");*/
		
					
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}


/*
*	relies on core delegate for updating address and state based on County
*	@param province_formNode- the province droplist to update
*	@param postal_formNode- the postal code textbox to update
*	@returns null
*
*
*
**/
function _applicantCountryChanged(province_formNode,postal_formNode){
	// Update correct labels to province/state and postal/state code and
	// clear the value entered in the postal/state code field
	province_formNode.updateUI();
	postal_formNode.updateUI();
	postal_formNode.getNodeInstance().rawValue = null;	
	
}//end fun



function _manufacturerCountryChanged(province_formNode,postal_formNode){

	//update the province, postal code labels
	_applicantCountryChanged(province_formNode,postal_formNode);
	//todelete
	//updateImporterAddressState();		
}//end fn




/*
*	updates the regulatory mailing address 
*	@param sameAs- if yes (Y) the mailing address is deleted, if No the mailing address is added
					Any other values are ignored
*
*
**/

function _regulatoryAddressStatusChanged(sameAsValue,checkbox_formNode){

	checkbox_formNode.getNodeInstance().rawValue=NO;
	_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);
	
	
}//end fn

/*
*	Updates the regulatory addres country
*
*
*/
function _regulatoryAddressCountryChanged(province_formNode,postal_formNode){

	cLog.trace("starting _regulatoryAddressCountryChanged");
	_applicantCountryChanged(province_formNode,postal_formNode);
	cLog.trace("after _applicantCountryChanged")
	_updateImporterSameAsState();
	cLog.trace("after _updateImporter");
	var regCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
	//updateImporterAddressState();
	
}

/*
* For the Importer same As 1D checkbox make it hidden if iC country is not canada
*
*
*
**/

function _updateImporterSameAsState(){

	var regMailCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
	var importerSameAs_node=IMPORTER_SAMEAS_CHK_FN.getNodeInstance();
	
	//if node does not exist do not proceed
	if(!cTypeChecker.isNode(importerSameAs_node)){
		return;	}
	
	if(regMailCountry_node.rawValue!==COUNTRY_CANADA){
		importerSameAs_node.rawValue=NO; //clear the value
		cUiUtil.hide(importerSameAs_node);
	}else{
		cUiUtil.show(importerSameAs_node);
	}
}



/*
* Updates the passed node, if sameAsValue is yes, removes the subform, otherwise addit
*
*
*
*
**/
function _contactStatusChanged(sameAsValue,src_FormNode){

	cLog.trace("starting ContactStatusChanged "+src_FormNode.getSomExpression());
	var sfInstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(src_FormNode.getFullSomExpression());
	cLog.trace("Same as value is: "+sameAsValue);
	if(sameAsValue===YES){
		
		if(sfInstanceManager.count&gt;sfInstanceManager.min){
			cInstanceManagerUtil.clearInstances(sfInstanceManager);
		}
	}
	else if(sameAsValue===NO){
	
		cLog.trace("count: "+sfInstanceManager.count+"max: "+sfInstanceManager.max)
		if(sfInstanceManager.count&lt;sfInstanceManager.max || sfInstanceManager.max&lt;0){
			var temp=cInstanceManagerUtil.addInstance(sfInstanceManager);
			cLog.trace(temp);
		}
	}	
	//TO DO add a log message?
}//end fn






</script>
                     <script contentType="application/x-javascript" name="RelatedSubmissionsHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cStringUtil=script.core.util.StringUtil;


var SCRIPT_OBJECT_NAME="RelatedSubmissionsHandler";


//action globals

var ADD_RELATED_SUBMISSION_ACTION=		"add_related_Sub";
var REMOVE_RELATED_SUBMISSION_ACTION=	"remove_related_Sub";
var ADD_DIN_ACTION=						"add_din";
var REMOVE_DIN_ACTION=					"remove_din";


//form nodes (FN)
RELATED_SUBMISSION_SF_FN=	cFormNodeManager.getFormNodeForKey("relatedSubmissionsBody");
DIN_SF_FN=					cFormNodeManager.getFormNodeForKey("sfDIN");
relatedSubSequence

_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_RELATED_SUBMISSION_ACTION:
				_addRelatedSubmission();		
			break;
			
		case REMOVE_RELATED_SUBMISSION_ACTION:
			_removeRelatedSubmission(anEvent.getValue());		
			break;	
			
		case	 ADD_DIN_ACTION:
			_addDIN();
		break;
		case REMOVE_DIN_ACTION:
			_removeDIN(anEvent.getValue());			
		break;
				 						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn





/****** PRIVATE FUNCTIONS *****/



/*
*  adds the related submission subform
*
**/

function _addRelatedSubmission(){
				
	var instManager=RELATED_SUBMISSION_SF_FN.getInstanceManager();
	var anInstance=cInstanceManagerUtil.addInstance(instManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeRelatedSubmission(currentInstance){

	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(instManager.count&gt;instManager.min){	
		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}
	
}//end fn


function _addDIN(){
	cLog.trace("in the add din");			
	var instManager=DIN_SF_FN.getInstanceManager();
	var anInstance=cInstanceManagerUtil.addInstance(instManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeDIN(currentInstance){

	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(instManager.count&gt;instManager.min){	
		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}
	
}//end fn


function _relatedSubmissionsIncrementer(){

	var count = _sfRelatedSubmissionsBody.count;
	var indexNum = sfRelatedSubmissionsBody.index + 1;

	if (indexNum &lt; 10) {
		this.rawValue = "53.0" + indexNum;
	} else { 
		this.rawValue = "53." + indexNum;
	}



}



/*** private functions ****/

function _initialize(){

	try{
		cControllerUtil.checkFormNode(RELATED_SUBMISSION_SF_FN, SCRIPT_OBJECT_NAME ,"RELATED_SUBMISSION_SF_FN");
		cControllerUtil.checkFormNode(DIN_SF_FN, SCRIPT_OBJECT_NAME ,"DIN_SF_FN");
			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}





</script>
                     <script contentType="application/x-javascript" name="DrugNotificationHandler">//imports
var cLog = script.core.util.Log;
var cAppendix3Handler=script.DrugAppl.control.Appendix3Handler;
var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;



var SCRIPT_OBJECT_NAME="DrugNotificationHandler";



var THIRD_PARTY_ACTION="1e_third_party";





function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case  THIRD_PARTY_ACTION:
				_thirdPartyChanged(anEvent.getValue());		
			break;
			
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn






/******* Private functions ****/



//simple wrapper to appendix 3 code
function _thirdPartyChanged(thirdPartyValue){

		
		cAppendix3Handler.updateAppendix2State(thirdPartyValue);
		
		
}//end fn
</script>
                     <?templateDesigner expand 1?></variables>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform h="50mm" name="Part2" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="GeneralHandler">

//imports
var cDrugFormulationHandler=script.DrugAppl.control.Part2.DrugFormulationHandler;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

//Handler name
var SCRIPT_OBJECT_NAME="Part2GeneralHandler";



//Action Globals
var ADD_SPECIES_ACTION="add_species";
var REMOVE_SPECIES_ACTION="remove_species";



//Form Nodes (FN)
//var SPECIES_QUESTION_SF_FN=cFormNodeManager.getFormNodeForKey("sfSpeciesSubtype"); //Question 72
//var SPECIES_SUBTYPE_SF_FN=cFormNodeManager.getFormNodeForKey("sfSpeciesBody");	//subform for multiple question 2



//sfSpeciesSubtype
_initialize();


/**** Public Functions ****/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_SPECIES_ACTION:
				
				//_addSpecies();
				break;
		case REMOVE_SPECIES_ACTION:
				 //_removeSpecies(anEvent.getValue());
				break;
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}





/*
* updateSubmissionType overall controller for part 2 for form visiblity based on sub type input
*
*
*
*
*/
function updateSubmissionType(){

	cDrugFormulationHandler.updateSubmissionType();
	//_updateSpeciesSubType();	
	
}//end fn


//working on Dec 5

function _updateSpeciesSubType(){
	var subType=cApplicationModel.getSubType();

	switch(subType){
		case cSubmissionTypeHandler.VIND_TYPE:
		case cSubmissionTypeHandler.VINDAM_TYPE:
		case cSubmissionTypeHandler.VNDS_TYPE:
		case cSubmissionTypeHandler.VSNDS_TYPE:
		case cSubmissionTypeHandler.VANDS_TYPE:
		case cSubmissionTypeHandler.VSANDS_TYPE:
		case cSubmissionTypeHandler.VDIN_TYPE:
		case cSubmissionTypeHandler.VPDC_TYPE:
			//_addSpeciesSubTypeQuestion();
		
		break;
		//create a subform
		default:
		////clear instances
		//_removeSpeciesSubTypeQuestion();
	
	}//end switch

}//end fn


/** Private Functions**/



function _initialize(){

	try{
	
		//cControllerUtil.checkFormNode(SPECIES_SUBTYPE_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_SUBTYPE_SF_FN");
		cControllerUtil.checkFormNode(SPECIES_QUESTION_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_QUESTION_SF_FN");
		
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}

/* Makes Q72 and Q73 visible on the form
*
*
*
*/
function _addSpeciesSubTypeQuestion(){

	
	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_QUESTION_SF_FN.getFullSomExpression());
	//if(speciesInstManager.count&lt;speciesInstManager.max){
	//	cInstanceManagerUtil.addInstance(speciesInstManager);	
	//}
}
/*
*	removes all instances of the speciesSubTypeQuestion
*	@returns -null
*
*
*
*
*/

function _removeSpeciesSubTypeQuestion(){
	//should only be one instance of this subform
	//var instManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_QUESTION_SF_FN.getFullSomExpression())
	//if(instManager.count&gt;instManager.min){
	//	cInstanceManagerUtil.clearInstances(instManager);
	//}

}//end _removeSpeciesSubTypeQuestion



function _addSpecies(){

	//TO DO handle exception?
	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_SUBTYPE_SF_FN.getFullSomExpression());
	//var anInstance=cInstanceManagerUtil.addInstance(speciesInstManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function  _removeSpecies(currentInstance){

	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	//if(speciesInstManager.count&gt;speciesInstManager.min){	
	//		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	//}else{
	
		//to do throw exception/warning?
	//}
}//end fn







</script>
                     <script contentType="application/x-javascript" name="DrugFormulationHandler">	//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cSharedAppendix4Model=script.DrugAppl.model.SharedAppendix4;
var cAppendix4Handler=script.DrugAppl.control.Appendix4.Appendix4Handler;


var cNodeUtil=script.core.util.NodeUtil;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cFormUtil=script.DrugAppl.util.General;
///script object name
var SCRIPT_OBJECT_NAME="DrugFormulationHandler";

//action events
var ADD_FORMULATION_ACTION=					"add_formulation";
var REMOVE_FORMULATION_ACTION=				"remove_formulation";
var ADD_MANUFACT_COUNTRY_ACTION=			"add_country_manufact";
var REMOVE_MANUFACT_COUNTRY_ACTION=			"remove_country_manufact";
var ADD_ACTIVE_INGREDIENT_ACTION=			"add_active";
var ADD_ACTIVE2_INGREDIENT_ACTION=			"add2_active";
var REMOVE_ACTIVE_INGREDIENT_ACTION=		"remove_active";
var ADD_FORMULATION_VARIANT_ACTION=			"add_formulation_variant";
var REMOVE_FORMULATION_VARIANT_ACTION=		"remove_formulation_variant";
var ADD_NONMEDICINAL_INGREDIENT_ACTION=		"add_nonmedicinal_ingred";
var REMOVE_NONMEDICINAL_INGREDIENT_ACTION=	"remove_nonmedicinal_ingred";
var ADD_SPECIES_ACTION=						"add_species";
var REMOVE_SPECIES_ACTION=					"remove_species";
var ADD_SOURCED_MATERIAL_ACTION=			"add_sourced_material";
var REMOVE_SOURCED_MATERIAL_ACTION=			"remove_sourced_material";
var ANIMAL_HUMAN_SRC_CHANGED_ACTION=		"animal_human_source_change";


//Form Nodes (FN)
var FORMULATION_CONTAINER_FN=		cFormNodeManager.getFormNodeForKey("sfPart2");
//var MANUFACT_SPONSER_CHK_FN=			cFormNodeManager.getFormNodeForKey("chkManufSponsor");
//var MANUFACT_COUNTRIES_SF_FN=		cFormNodeManager.getFormNodeForKey("formulationCountriesManufacture");
//var A_MANUFACT_COUNTRY_SF_FN=		cFormNodeManager.getFormNodeForKey("countryManSF");

//var ACTIVE_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("btnDelete1");
//var ACTIVE_INGRED2_SF_FN=               cFormNodeManager.getFormNodeForKey("part3IngredientSubForm");

//var VARIANT_SF_FN=					cFormNodeManager.getFormNodeForKey("sfVariant");
//var NONMED_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("sfNonMedIngredientsTbl");
//var SPECIES_SUBTYPE_SF_FN=			cFormNodeManager.getFormNodeForKey("sfSpeciesBody");	//subform for multiple question 2
//var MANUFACTURE_MATERIAL_SF_FN=		cFormNodeManager.getFormNodeForKey("sfAnimalHumanTbl");
//var SOURCED_MATERIAL_HEADER_SF_FN=	cFormNodeManager.getFormNodeForKey("materialSourceTblTitlesSF");
//var ACTIVE_INGREDIENT_NAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("activeIngredientName");	
var APPENDIX4_TXT_FN=				cFormNodeManager.getFormNodeForKey("txtAppendixID");	
							

_initialize();


/*
* function to handle all the actions for formulations
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_FORMULATION_ACTION:
				
					//_addDrugFormulation(anEvent.getValue());
				break;
		case REMOVE_FORMULATION_ACTION:
					//_removeDrugFormulation(anEvent.getValue());
				break;
		case ADD_MANUFACT_COUNTRY_ACTION:		
					//_addManufactCountry(anEvent.getValue());	
				break;
				
		case REMOVE_MANUFACT_COUNTRY_ACTION:		
					//_removeManufactCountry(anEvent.getValue());	
				break;
		case ADD_ACTIVE_INGREDIENT_ACTION:
			_addMedicinalIngredient();
			break;
		case ADD_ACTIVE2_INGREDIENT_ACTION:
			_addMedicinalIngredient2();
			break;
		
		case REMOVE_ACTIVE_INGREDIENT_ACTION:
			//_removeMedicinalIngredient(anEvent.getValue());
			break;		
					
		case ADD_FORMULATION_VARIANT_ACTION:
			//_addFormulationVariant();
			break;			
		
		case REMOVE_FORMULATION_VARIANT_ACTION:
			//_removeFormulationVariant(anEvent.getValue());
			break;
								
		case ADD_NONMEDICINAL_INGREDIENT_ACTION:
			// _addNonMedicinalIngredient();	
			break;
		
		case REMOVE_NONMEDICINAL_INGREDIENT_ACTION:
			 //_removeNonMedicinalIngredient(anEvent.getValue());	
			break;
			
		case ADD_SPECIES_ACTION:
				//_addSpecies();
				break;
		case REMOVE_SPECIES_ACTION:
				// _removeSpecies(anEvent.getValue());
				break;			
		case ADD_SOURCED_MATERIAL_ACTION:
				//_addSourcedMaterial(anEvent.getValue());
				break;
		case REMOVE_SOURCED_MATERIAL_ACTION:
				//_removeSourcedMaterial(anEvent.getValue());
				break;
				
		case ANIMAL_HUMAN_SRC_CHANGED_ACTION:
			//_ingredientSourceChanged(anEvent.getSource(),anEvent.getValue());
			break ;			
															
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/* updates all drug formulations based on the submissionType
* right now just calls the private functions,being used as a wrapper
*
*
*
*/

function updateSubmissionType(){

	_updateAllFormulationInstances();	
	
}


function initialize(){

	//_initializeSourcedMaterialHeader();



}



/**Private Functions****/


/*
* Checks that all the global form nodes are not null
*
*
*
*/

function _initialize(){

	try{
	
		//cControllerUtil.checkFormNode(FORMULATION_CONTAINER_FN, SCRIPT_OBJECT_NAME ,"FORMULATION_CONTAINER_FN");
		//cControllerUtil.checkFormNode(MANUFACT_SPONSER_CHK_FN, SCRIPT_OBJECT_NAME ,"MANUFACT_SPONSER_CHK_FN");
		//cControllerUtil.checkFormNode(MANUFACT_COUNTRIES_SF_FN, SCRIPT_OBJECT_NAME ,"MANUFACT_COUNTRIES_SF_FN");
		//cControllerUtil.checkFormNode(A_MANUFACT_COUNTRY_SF_FN, SCRIPT_OBJECT_NAME ,"A_MANUFACT_COUNTRY_SF_FN");
		//cControllerUtil.checkFormNode(ACTIVE_INGRED_SF_FN, SCRIPT_OBJECT_NAME ,"ACTIVE_INGRED_SF_FN");
		//cControllerUtil.checkFormNode(VARIANT_SF_FN, SCRIPT_OBJECT_NAME ,"VARIANT_SF_FN");
		//cControllerUtil.checkFormNode(NONMED_INGRED_SF_FN, SCRIPT_OBJECT_NAME ,"NONMED_INGRED_SF_FN");
		//cControllerUtil.checkFormNode(SPECIES_SUBTYPE_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_SUBTYPE_SF_FN");
		//cControllerUtil.checkFormNode(MANUFACTURE_MATERIAL_SF_FN, SCRIPT_OBJECT_NAME ,"MANUFACTURE_MATERIAL_SF_FN");
		//cControllerUtil.checkFormNode(SOURCED_MATERIAL_HEADER_SF_FN, SCRIPT_OBJECT_NAME ,"SOURCED_MATERIAL_HEADER_SF_FN");
		//cControllerUtil.checkFormNode(ACTIVE_INGREDIENT_NAME_TXT_FN, SCRIPT_OBJECT_NAME ,"ACTIVE_INGREDIENT_NAME_TXT_FN");
		//cControllerUtil.checkFormNode(APPENDIX4_TXT_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_TXT_FN");
		
				
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}


/*
*	Add a Drug formulation instance in the form
*	@param currentInstance- the current (calling) instance of a formulation object
*	@returns- null
*
*/
function _addDrugFormulation(currentInstance){

	//TO DO add code to check instance
	//var formulationInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	//var anInstance=cInstanceManagerUtil.addInstance(formulationInstManager);
	//_updateFormulationInstance(anInstance);		
	

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeDrugFormulation(currentInstance){

	var formulationInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	
	cFormUtil.removeSpecificSubformInstance(formulationInstManager,currentInstance);

}//end fn



/* Updates all the formulation instances based the subType that was selected
*
*
*
*
*/

function _updateAllFormulationInstances() {

	var formulationList=FORMULATION_CONTAINER_FN.getNodeInstances();

	for(var i=0;i&lt;formulationList.length;i++){
		var oneFormulation=formulationList.item(i);
		_updateFormulationInstance(oneFormulation);
		//_updateSpeciesSubType(oneFormulation);
					
	}

}

/* Updates the state of a single formulation instance
*	
*	@formulationInstance- a single instance of the formulation subform
*
*/

function _updateFormulationInstance(formulationInstance){
	//TO DO check subform is being passed in
	//var subType= cApplicationModel.getSubType();
	//var sfCountry_an= MANUFACT_COUNTRIES_SF_FN.getNodeInstance(formulationInstance);
	//var chkSponser_an=MANUFACT_SPONSER_CHK_FN.getNodeInstance(formulationInstance);
	/*var manufactCountry_InstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACT_COUNTRIES_SF_FN.getFullSomExpression());
	
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
			//cUiUtil.show(chkSponser_an);
			cInstanceManagerUtil.clearInstances(manufactCountry_InstanceManager);	
			break;
		default:
			//var chkSponser_an=MANUFACT_SPONSER_CHK_FN.getNodeInstance(formulationInstance);
			//cUiUtil.hide(chkSponser_an);
			chkSponser_an.rawValue=null;
			cFormUtil.addSubformInstance(manufactCountry_InstanceManager);	
			//cInstanceManagerUtil.addInstance(manufactCountry_InstanceManager);			
	}
	_updateSpeciesSubType(formulationInstance);*/
}//end fn


function _addManufactCountry(manufactCountryInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(manufactCountryInstance.somExpression);
	cFormUtil.addSubformInstance(instanceManager);
}
function _removeManufactCountry(manufactCountryInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(manufactCountryInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,manufactCountryInstance);

}


function _addMedicinalIngredient(){
	var ACTIVE_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("ingredientSubForm");
var ACTIVE_INGRED2_SF_FN=               cFormNodeManager.getFormNodeForKey("part3IngredientSubForm");
	if (cFormNodeManager == null) {
	cLog.trace ("cFormNodeManager  is NULL!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
}
else {
	cLog.trace ("cFormNodeManager  is NOT NULL!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
}
	var instanceManager=ACTIVE_INGRED_SF_FN.getInstanceManager();
	cFormUtil.addSubformInstance(instanceManager);
}

function _addMedicinalIngredient2(){
	var ACTIVE_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("ingredientSubForm");
var ACTIVE_INGRED2_SF_FN=               cFormNodeManager.getFormNodeForKey("part3IngredientSubForm");
	if (cFormNodeManager == null) {
	cLog.trace ("cFormNodeManager  is NULL!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
}
else {
	cLog.trace ("cFormNodeManager  is NOT NULL!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!");
}
	var instanceManager=ACTIVE_INGRED2_SF_FN.getInstanceManager();
	cFormUtil.addSubformInstance(instanceManager);
}

function _removeMedicinalIngredient(ingredientInstance){
	
	//var instanceManager=ACTIVE_INGRED_SF_FN.getInstanceManager();
	//cFormUtil.removeSpecificSubformInstance(instanceManager,ingredientInstance);
}


function _addFormulationVariant(){
	//TO DO add error checking for parameter
	//var instanceManager=VARIANT_SF_FN.getInstanceManager();
	//cFormUtil.addSubformInstance(instanceManager);
}



function _removeFormulationVariant(variantInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(variantInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,variantInstance);
}



function _addNonMedicinalIngredient(){
	
	//var instanceManager=NONMED_INGRED_SF_FN.getInstanceManager();
	//cFormUtil.addSubformInstance(instanceManager);

}


function _removeNonMedicinalIngredient(nonMedInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(nonMedInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,nonMedInstance);
}

function _updateSpeciesSubType(formulationInstance_adobeNode){
	
	var subType=cApplicationModel.getSubType();

	switch(subType){
		case cSubmissionTypeHandler.VIND_TYPE:
		case cSubmissionTypeHandler.VINDAM_TYPE:
		case cSubmissionTypeHandler.VNDS_TYPE:
		case cSubmissionTypeHandler.VSNDS_TYPE:
		case cSubmissionTypeHandler.VANDS_TYPE:
		case cSubmissionTypeHandler.VSANDS_TYPE:
		case cSubmissionTypeHandler.VDIN_TYPE:
		case cSubmissionTypeHandler.VPDC_TYPE:
			cLog.trace("going to add an species instance");
			//_addSpeciesSubTypeQuestion(formulationInstance_adobeNode);
			
		break;
		//create a subform
		default:
		////clear instances
		//_removeSpeciesSubTypeQuestion(formulationInstance_adobeNode);
	
	}//end switch

}//end fn


//Adds the subspecies questions Q72
function _addSpeciesSubTypeQuestion(subformInstance_adobeNode){
	
	//to do replace instance manager directAccess
	/*var part2Body_AN=cNodeUtil.getChildNode(subformInstance_adobeNode,"sfPart2Body");
	
	var PART2_FN=cFormNodeManager.getFormNodeForSom(part2Body_AN.somExpression);
	
	var species_AN=cNodeUtil.getChildNode(part2Body_AN,"sfSpeciesSubtype");
	
	cLog.trace("part2 body "+part2Body_AN.somExpression);
	//TO DO type checking
	if(!species_AN){
		//TODO fix this if possible, should not have to hard code instance manager 
		cFormUtil.addSubformInstance(part2Body_AN._sfSpeciesSubtype);			
	}*/
	
}



function _removeSpeciesSubTypeQuestion(subformInstance_adobeNode){
	//TO DO -do not directly access the instanceManager	
	
	//var part2Body_AN=cNodeUtil.getChildNode(subformInstance_adobeNode,"sfPart2Body");
		
	//cInstanceManagerUtil.clearInstances(part2Body_AN._sfSpeciesSubtype);
		
}//end _removeSpeciesSubTypeQuestion


function _addSpecies(){

	//TO DO handle exception?
	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_SUBTYPE_SF_FN.getFullSomExpression());
	//cFormUtil.addSubformInstance(speciesInstManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function  _removeSpecies(currentInstance){

	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);	
	//cFormUtil.removeSpecificSubformInstance(speciesInstManager,currentInstance);
}//end fn


function _initializeSourcedMaterialHeader(parentSourceMaterial_adobeNode){

	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACTURE_MATERIAL_SF_FN.getFullSomExpression());
	
		var children=parentSourceMaterial_adobeNode.nodes;
		var nodeName=SOURCED_MATERIAL_HEADER_SF_FN.getSomExpression();
		
		
		for(var i=0;i&lt;children.length;i++){
			//find the appropriate child based on the name
			var oneChild=children.item(i);
			if(oneChild.name===nodeName){
				if(instanceManager.count===0){
					cUiUtil.hide(oneChild);
				}else{
					cUiUtil.show(oneChild);
				}	
			}		
		}
	
	
	if(instanceManager.count&gt;0){
		cUiUtil.show(SOURCED_MATERIAL_HEADER_SF_FN.getNodeInstance());
	}else{
	
		cUiUtil.hide(SOURCED_MATERIAL_HEADER_SF_FN.getNodeInstance());
	}

}


function _addSourcedMaterial(parentAdobeNode){

	//var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACTURE_MATERIAL_SF_FN.getFullSomExpression());
	//cFormUtil.addSubformInstance(instanceManager);
	//_initializeSourcedMaterialHeader(parentAdobeNode);
}//end fn


/*
*	removes the animal human source material question for drug manufacture
*	@param currentInstance- current instance of the source material subform
*	@returns- null
*
*/
function  _removeSourcedMaterial(currentInstance){

	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	var parentSourceMaterial_adobeNode=currentInstance.parent; //remember the parent container
	cFormUtil.removeSpecificSubformInstance(instanceManager,currentInstance);
	_initializeSourcedMaterialHeader(parentSourceMaterial_adobeNode);
}//end fn

/*
*	Updates the ingredient appendix 4 association. If animal/human sourced looks for an existing Appendix 4
*	If no appendix 4 is found it creates one. If changing to not human sourced, decrements or deletes appendix4 association 
*
*	@param- valueSrce_adobeNode- the source node that contains the new user selected value
*	@param- ingredientSrcSubform_adobeNode- the subform (ie ingredient record) for which this applies
*
**/
function _ingredientSourceChanged(valueSrce_adobeNode,ingredientSrcSubform_adobeNode){

	var humanAnimalSrcValue=valueSrce_adobeNode.rawValue;
	var ingredientName=null;
	var appendixId_adobeNode;
	//TO DO type checking
	
	var	ingredient_sf_fn=cFormNodeManager.getFormNodeForSom(ingredientSrcSubform_adobeNode.somExpression);
	var ingredientChildren=ingredient_sf_fn.getChildren();
	//find the appropriate children 
	for(var i=0;i&lt;ingredientChildren.length;i++){
		var singleIngredient_adobeNode=ingredientChildren[i].getNodeInstance();
				
		//if(ACTIVE_INGREDIENT_NAME_TXT_FN.getSomExpression()===singleIngredient_adobeNode.name){
		//	ingredientName=singleIngredient_adobeNode.rawValue;
		//}
		//if(APPENDIX4_TXT_FN.getSomExpression()===singleIngredient_adobeNode.name){
		//	appendixId_adobeNode=singleIngredient_adobeNode;
		
		//}
	}//end for
	cLog.trace(ingredientName);
	cLog.trace(cSharedAppendix4Model.entryExists(ingredientName));
	
	//1) Check if this ingredient was already assigned an appendix
		if(!appendixId_adobeNode.isNull){
			cLog.trace("decrementing an entry");
			var appendixIndex=cSharedAppendix4Model.findAppendix(appendixID);
			var entryMatch=cSharedAppendix4Model.getEntryByIndex(appendixIndex);
			//decrement the entry
			 var instances=cSharedAppendix4Model.decrementWithEntry(entryMatch[cSharedAppendix4Model.ITEM_NAME]);
			 if(instances==0){
			 
			 	cAppendix4Handler.removeAppendix4(appendixID);
			 }
			 
			//to do error handling
		}
		
	
	if(cSharedAppendix4Model.entryExists(ingredientName)&gt;-1){
		cSharedAppendix4Model.incrementWithEntry(ingredientName);
	}else{
		//create appendix4. Update the entries
		cLog.trace("ID is "+cSharedAppendix4Model.getNextAppendix4ID());
		var entry=new Array(3);
		var uniqueAppendix4ID=cAppendix4Handler.createAppendix4(ingredientName);
		entry[cSharedAppendix4Model.ITEM_NAME]=ingredientName;
		entry[cSharedAppendix4Model.INDEX_ID]=cSharedAppendix4Model.getNextAppendix4ID();
		entry[cSharedAppendix4Model.NUMBER_INSTANCES]=1;
		cSharedAppendix4Model.addEntry(entry);
	}
}



</script>
                     <script contentType="application/x-javascript" name="IDGenerator"/>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <subform h="50mm" name="Appendix2" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="Appendix2Handler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;

///script object name
var SCRIPT_OBJECT_NAME="Appendix2Handler";


var YES="Y" //to do make as a resource


var APPENDIX2_SF_FN=cFormNodeManager.getFormNodeForKey("sfAppendix2");


_initialize()


function updateAppendix2State(stateValue){

	var sfInstanceManager=APPENDIX2_SF_FN.getInstanceManager();
	if(stateValue===YES){
					
		if(sfInstanceManager.count&lt;sfInstanceManager.max || sfInstanceManager.max&lt;0){
			var temp=cInstanceManagerUtil.addInstance(sfInstanceManager);
			cLog.trace(temp);
		}	
	}
	else {
	
		if(sfInstanceManager.count&gt;sfInstanceManager.min){
			cInstanceManagerUtil.clearInstances(sfInstanceManager);
		}
	}
		

}//end fn



/**Private functions ***/


function _initialize(){

	try{
		cControllerUtil.checkFormNode(APPENDIX2_SF_FN, SCRIPT_OBJECT_NAME ,"APPENDIX2_SF_FN");
			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}

}//end fn



</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <subform h="50mm" name="Appendix3" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="Appendix3Handler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;

///script object name
var SCRIPT_OBJECT_NAME="Appendix3Handler";

//Form Nodes (FN)
//var APPENDIX3_SF_FN=cFormNodeManager.getFormNodeForKey("sfAppendix3");

_initialize();



function updateSubmissionType(){

	var subType=cApplicationModel.getSubType();
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
				//addAppendix3();			
			break;
		
		default:
			//removeAppendix3();
	}

}



function addAppendix3(){

	//TO DO check that current instance is an adobe Form Node
	//var appendix3InstManager=cInstanceManagerUtil.getInstanceManagerForSom(APPENDIX3_SF_FN.getSomExpression());
	//if(appendix3InstManager.count&lt;appendix3InstManager.max){
	//	cInstanceManagerUtil.addInstance(appendix3InstManager);
	//}

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function removeAppendix3(){

	//TO DO check that current instance is an adobe Form Node
	//var appendix3InstManager=cInstanceManagerUtil.getInstanceManagerForSom(APPENDIX3_SF_FN.getSomExpression());

	//if(appendix3InstManager.count&gt;appendix3InstManager.min){	
	//	cInstanceManagerUtil.removeInstance(appendix3InstManager,0); //only one instance of this subform
	}
	
}//end fn




/*********************Private Functions****************************************/


function _initialize(){

	try{
	//	cControllerUtil.checkFormNode(APPENDIX3_SF_FN, SCRIPT_OBJECT_NAME ,"APPENDIX3_SF_FN");				
	}
	catch (exception)
	{
	//	cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}//end initialize
</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <subform w="100mm" h="50mm" name="Appendix4">
                  <variables>
                     <script contentType="application/x-javascript" name="temp">
var cLog = script.core.util.Log;
//cLog.trace("Log ran");

//_initialize();
//cLog.trace("Log ran again");
//var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
//var cResourceManager = script.core.lang.ResourceManager;
//var cTypeEnforcer=script.core.util.TypeEnforcer;
//var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;


//var SCRIPT_OBJECT_NAME="InstructionsHandler";


//action Global variables
var HIDE_INSTRUCTIONS="instruct_hide";
var SHOW_INSTRUCTIONS="instruct_show";

//cLog.trace("Log ran again");

var INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent");
_initialize();






function initialize(){
	//always hide instructions on open
	cLog.trace("value is in Temp:"+	INSTRUCTIONS_SF_FN);
	INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent")
	cLog.trace("value is in Temp after :"+	INSTRUCTIONS_SF_FN);
}

function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(INSTRUCTIONS_SF_FN, SCRIPT_OBJECT_NAME ,"INSTRUCTIONS_SF_FN");
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                     <script contentType="application/x-javascript" name="Appendix4Handler">
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;
var cSharedAppendix4Model=script.DrugAppl.model.SharedAppendix4;

var cFormUtil=script.DrugAppl.util.General;




//var APPENDIX4_SF_FN=					cFormNodeManager.getFormNodeForKey("sfAppendix4");	 
//var APPENDIX4_ID_TXT_FN=				cFormNodeManager.getFormNodeForKey("Appendix4ID");
//var APPENDIX4_MATERIALNAME_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtIngMatName");

///script object name
var SCRIPT_OBJECT_NAME="DrugFormulationHandler";


_initialize();

function createAppendix4(ingredientName){

	/*var instanceManager= 			cInstanceManagerUtil.getInstanceManagerForSom(APPENDIX4_SF_FN.getFullSomExpression());
	var createdAppendix4_adobeNode=	cFormUtil.addSubformInstance(instanceManager);
	var appendixID=					cSharedAppendix4Model.getNextAppendix4ID();
	
	var numberOfChildren=			createdAppendix4_adobeNode.nodes.length;
	var appendix4Children= 			createdAppendix4_adobeNode.nodes;
	var appendix4IDSom=				APPENDIX4_ID_TXT_FN.getSomExpression();
	var appendix4MaterialSom= 		APPENDIX4_MATERIALNAME_TXT_FN.getSomExpression();
	cLog.trace(appendix4MaterialSom);
	cLog.trace(ingredientName);
	
	for(var i=0;i&lt;numberOfChildren;i++){
		 if(appendix4Children.item(i).name &amp;&amp; appendix4Children.item(i).name===appendix4IDSom){
		 	appendix4Children.item(i).rawValue=appendixID; 	
		 }
		if(appendix4Children.item(i).name &amp;&amp; appendix4Children.item(i).name===appendix4MaterialSom){
		 	appendix4Children.item(i).rawValue=ingredientName;	
		 }
		
	}
	//update	*/

}



function getCurrentIDs(){
	/*var result=						new Array();
	var appendix4_array_adobeNode=	APPENDIX4_SF_FN.getNodeInstances();
	
	for(var i=0;i&lt;appendix4_array_adobeNode.length;i++){
		var appendix4ID_AdobeNode=APPENDIX4_ID_TXT_FN.getNodeInstance(appendix4_array_adobeNode);
		result.push(appendix4ID_AdobeNode.rawValue);		
	}
	return(result);*/
}


function removeAppendix4(appendixID){

	/*var appendix4_array_adobeNode=	APPENDIX4_SF_FN.getNodeInstances(null,true);
	var appendix4_array_length=		appendix4_array_adobeNode.length;
	cLog.trace( "Starting removeAppendix");
	cLog.trace("length of array"+ appendix4_array_length);
	cLog.trace(appendix4_array_adobeNode);*/
	
		//bad performance but inner loop is short
	//get all the appendixes
	/*for(var i=0;i&lt;appendix4_array_length;i++){
		var oneAppendix4=appendix4_array.item(i);		
		
		
		for(var j=0;j&lt;
		
			
	}*/


}



/**** Private Functions *****/


function _initialize(){

	/*try{
	
		cControllerUtil.checkFormNode(APPENDIX4_SF_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_SF_FN");
		cControllerUtil.checkFormNode(APPENDIX4_ID_TXT_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_ID_TXT_FN");
		cControllerUtil.checkFormNode(APPENDIX4_MATERIALNAME_TXT_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_MATERIALNAME_TXT_FN");
						
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}*/
}







</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 0?></subform>
            <subform h="50mm" name="model" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="DrugApplMain">

var cLog = script.core.util.Log;
var cFormNodeManager = script.core.model.FormNodeManager;
var cResourceManager = script.core.lang.ResourceManager;
var cConfigManager=script.core.util.ConfigurationManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cControllerUtil = script.core.util.ControllerUtil;
var cDateUtil = script.core.util.DateUtil;

var initialized = false;


var LANGUAGE_NODE;
var FINALIZED_FORM_NODE;
var SUBMISSION_TYPE_NODE;
var YES="Y";


var SCRIPT_OBJECT_NAME="InstructionsHandler";


var otherDosageIsSelected = 0;
var otherRouteIsSelected = 0;
var dosageValueChanged = false;
var routeValueChanged = false;

var otherDosageIsSelected2 = 0;
var otherRouteIsSelected2 = 0;
var dosageValueChanged2 = false;
var routeValueChanged2 = false;
var dateString = "";



function setDosageIsSelected(value)
{
	
	otherDosageIsSelected = value;
	
	
	
}

function getDosageIsSelected()
{
	
	return otherDosageIsSelected ;
}

function setRouteIsSelected(value)
{
	
	otherRouteIsSelected = value;
	
	cLog.trace("setRouteFlag: counter: " + otherRouteIsSelected );
	
}

function getRouteIsSelected()
{
	
	return otherRouteIsSelected ;
}

function setDosageValueChanged(value)
{
	
	dosageValueChanged = value;
	
}

function getDosageValueChanged()
{
	
	return dosageValueChanged;
	
}

function setRouteValueChanged(value)
{
	
	routeValueChanged = value;
	
}

function getRouteValueChanged()
{
	
	return routeValueChanged;
	
}

function setDosageIsSelected2(value)
{
	
	otherDosageIsSelected2 = value;
	
	
}

function getDosageIsSelected2()
{
	
	return otherDosageIsSelected2 ;
}

function setRouteIsSelected2(value)
{
	
	otherRouteIsSelected2 = value;
	
	
}

function getRouteIsSelected2()
{
	
	return otherRouteIsSelected2 ;
}

function setDosageValueChanged2(value)
{
	
	dosageValueChanged2 = value;
	
}

function getDosageValueChanged2()
{
	
	return dosageValueChanged2;
	
}

function setRouteValueChanged2(value)
{
	
	routeValueChanged2 = value;
	
}

function getRouteValueChanged2()
{
	
	return routeValueChanged2;
	
}

function setDateString(dateStr){

   dateString = dateStr;
   
}

function getDateString () {
  
   return dateString;

}

function getLanguage()
{
	if (!initialized)
	{
		_initialize();
	}
	return LANGUAGE_NODE.rawValue;
}

function setLanguage(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
	LANGUAGE_NODE.rawValue=langValue;
}

function getSubType()
{
	if (!initialized)
	{
		_initialize();
	}
	return  SUBMISSION_TYPE_NODE.rawValue;
}

function setSubType(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
		//TO DO Check for valid submission type values?
	 SUBMISSION_TYPE_NODE.rawValue=langValue;
}



/*Function to determine if the form has been finalized or not
*
*	@returns- boolean, true if the form has been finalized
*
*/
function isFinalized(){
	if (!initialized)
	{
		_initialize();
	}
	 //if(FINALIZED_FORM_NODE.getNodeInstance().rawValue===YES){
	 
	 //	return true;
	 //}
	 return false;
}



/**
 * Describes this object. This is implemented in all objects since their
 * toString() cannot be overridden!
 * @return the description of this object.
 */
function asString()
{		
	var bufferArray = []; // Array used to simplify comma delimiting.

	bufferArray[bufferArray.length] = "language = " + getLanguage();
	bufferArray[bufferArray.length] = "finalized = " + isFinalized();
	bufferArray[bufferArray.length] = "submission Type = " +  getSubType();
			
	return "DrugAppl[" + bufferArray.join(", ") + "]";		
}





/********PRIVATE METHODS START HERE*****/

/*
* Private function to initalize model values for the form
*
*/

function _initialize(){

     	var date = new Date();

	//this.resolveNode("#pageSet.Page1.ddtAccessed").rawValue = "Date Accessed: " + cDateUtil.toDateString(date);
	
	//cLog.trace ("Date Accessed SET!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!" + util.printd("yyyy-mm-dd", date));
	//xfa.host.messageBox ("Date: " + cDateUtil.toDateString(date));
		
	setDateString(cDateUtil.toDateString(date));
    
    //xfa.host.messageBox ("Date: " + getDateString());
	
	 var languageFormNode=cFormNodeManager.getFormNodeForKey("languageChoice");
	 //FINALIZED_FORM_NODE = cFormNodeManager.getFormNodeForKey("chkIsFinalized");
	 var subTypeFormNode=cFormNodeManager.getFormNodeForKey("submissionType");
	 
	  cControllerUtil.checkFormNode( subTypeFormNode,SCRIPT_OBJECT_NAME,
									  "subTypeFormNode");
									  
	 cControllerUtil.checkFormNode(languageFormNode,"form",
									  "languageFormNode");
	
	 //cControllerUtil.checkFormNode(FINALIZED_FORM_NODE,"form",
	//								  "FINALIZED_FORM_NODE");								  
									  
	 
	 LANGUAGE_NODE=languageFormNode.getNodeInstance();
	 cTypeEnforcer.checkNode(LANGUAGE_NODE, SCRIPT_OBJECT_NAME,
								"_initialize", "LANGUAGE_NODE");
								
								
	 SUBMISSION_TYPE_NODE=subTypeFormNode.getNodeInstance();
	  cTypeEnforcer.checkNode( SUBMISSION_TYPE_NODE, SCRIPT_OBJECT_NAME,
								"_initialize", " SUBMISSION_TYPE_NODE");							
								
	initialized=true;
	
	cLog.trace("initialized is executed ????????!!!!!!!");
}//end _initialize
</script>
                  <script contentType="application/x-javascript" name="AddressType"/>
                  <script contentType="application/x-javascript" name="SharedAppendix4">
var cLog = script.core.util.Log;
var cTypeChecker=script.core.util.TypeChecker;
var cAppendix4Handler=script.DrugAppl.control.Appendix4.Appendix4Handler; 


var NUMBER_INSTANCES=2;
var ITEM_NAME=0;
var INDEX_ID=1;
var APPENDIX4_PREFIX="APPENDIX_FOUR_";
var _currentAppendixNumber=0;


var _appendix4Mapping=new Array();







function intialize(){


 //TO DO
 // need to regen the mapping on open

}



/*
*  looks for an entry in the array of entries based on the ingredient Name
*	Using the ingredient name as the key to look for
*	@param itemToFind - the ingredient name string to search for
*	@returns- number -1, if value is not found, index in the array otherwise
*/

function entryExists(itemToFind){

	return (_findAppendixItem(itemToFind,ITEM_NAME));
}

/*
*  looks for an entry in the array of entries based on the appendix ID
*	
*	@param appendixID - the appendixID string to search for
*	@returns- number -1, if value is not found, index in the array otherwise
*/
function findAppendix(appendixID){

	return (_findAppendixItem(itemToFind,APPENDIX4_PREFIX));
}



function getNumberInstances(index){

	if(index&lt;_appendix4Mapping.length){
	
		return (_appendix4Mapping[index][NUMBER_INSTANCES]);
	}

	return -1;
}

/*
* Checks if there is only one instance of the mapping
*
*
*
*/
function isLastInstance(index){
	if(index&lt;_appendix4Mapping.length){
	
		var numInstance= _appendix4Mapping[index];
		if(numInstance===1){
			return true;
		}
	}
	return false;
}


function decrementWithEntry(itemToUpdate){

	var numberInstances=-1;
	var index;
	if(index=entryExists(itemToUpdate)&gt;-1){
	
			
		if(getNumberInstances(index)===1){
				_appendix4Mapping.splice(index,1);
				numberInstances=0;					
		}
		else{
				numberInstances=_appendix4Mapping[index][NUMBER_INSTANCES]--;
		}
	
	}	
	return(numberInstances);
}
//to fix

function incrementWithEntry(itemToUpdate){
	var numberInstances=-1;
	var index=entryExists(itemToUpdate);
			
	if(index&gt;-1){
		cLog.trace("IncrementEntry index"+index)
			numberInstances=_appendix4Mapping[index][NUMBER_INSTANCES]++;	
	}
	
	return(numberInstances);
}

function addEntry(entry_to_add){

	//check if an array and length is 3
	if(cTypeChecker.isArray(entry_to_add) &amp;&amp; entry_to_add.length==3 ){
		 _appendix4Mapping.push(entry_to_add);
	
	}else{
		cLog.trace("Entry not addded")
		//to do throw exception		
	}

}//end fn

function getEntryByIndex(entryIndex){

	if(entryIndex&lt; _appendix4Mapping.length){
	
		return( _appendix4Mapping[entryIndex]);
	}
	return (null);
}





/*
* Gets the next unique identifier for the appendix 4
*
*
*
**/
function getNextAppendix4ID(){
	if(!_currentAppendixNumber){	
		_initializeID();		
	}
	return(APPENDIX4_PREFIX+ _currentAppendixNumber++);
}


function parseAppendix4Number(anID){
	
	var index=anID.indexOf(APPENDIX4_PREFIX);
	if(index&gt;-1){
		var idNumber=parseInt(adID.substring(index+APPENDIX4_PREFIX.length));
		return idNumber
	}else{
	//TO DO error? handling
	}
	return(-1);
}



/****** Private functionality *****/



function _initializeID(){

	var id_array= cAppendix4Handler.getCurrentIDs();
	
	for(var i=0;i&lt;id_array.length;i++){
		var anID=id_array[i];
		var idNumber=_parseAppendix4Number(anID);
		if(anID&gt;_currentAppendixNumber){
			_currentAppendixNumber=anID;
		}
	}//endfor	
	
}//function

function _findAppendixItem(itemToFind,itemType){

	for(var index=0;index&lt;_appendix4Mapping.length;index++){
		var oneEntry=_appendix4Mapping[index];
		if(oneEntry[itemType]===itemToFind){
			cLog.trace("entry exists index"+index);
			return(index);
		}	
	}
	return(-1);

}

</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="general_en">

var content={

	lbApplTitle : 		"FORM V: DECLARATION RE: PATENT LIST\n Patented Medicines (Notice of Compliance) Regulations",	
	lbHideInstruct:		"Hide Instructions",
	lbShowInstruct:		"Show Instructions",
	lbGuideDoc:         "Guidance Document",
	lbHumanH:           "Human Drugs:",
	lbVetH:             "Veterinary Drugs:",
	lbVetBody:          "All veterinary drug submissions (including Veterinary Investigational New Drug Submissions and Amendments) are to be sent to: \n\n          Veterinary Drugs Directorate\n          Health Canada\n          Holland Cross Complex\n          11 Holland Avenue, Suite 14\n          Address Locator: 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Fax: (613) 946-1125",
	lbInstruct:         "This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the 'Finalize' button at the bottom of the form before printing and signing.\n\nOnce finalized, the fields in the form become 'locked' (i.e. fields cannot be modified). In order to modify fields after finalizing, you must press the 'Modify' button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the 'Finalize' button again to re-validate entries."
						+"\n\nAlternatively:\n"
				   		+"-Save, print, sign and date the completed form;\n"
				   		+"-Scan the signed form, and\n"
				   		+"-Send to Health Canada in electronic format. "
				   		+"\n\nThe Guidance Document: Patented Medicines (Notice of Compliance) Regulations provides instructions on each field of the form. Please read it in its entirety prior to completing the form. Information for a submission already filed need only be accompanied by a copy of the letter from Health Canada requesting additional information.\n",
    lbInstructTitle:    "Where to send Drug Submission Application",
    lbHumanBody:        "Clinical Trial Applications and Amendments must be sent directly to the applicable Directorate (see Guidance for Industry: Management of Drug Submissions for addresses)\nAll other drug submission types are to be sent to:\n\n          Office of Submissions and Intellectual Property, Therapeutic Products Directorate\n          Health Canada\n          Finance Building\n          101 Tunney's Pasture Driveway\n          Address Locator: 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Fax: (613) 941-0825"
   //lbInstruct: "DFDSFDSF"
	//add comma
}
</script>
                  <script contentType="application/x-javascript" name="general_fr"> 		  	 	
var content={

	lbApplTitle : 		"FORMULAIRE V : DÉCLARATION RELATIVE À LA LISTE DES BREVETS - Règlement sur les médicaments brevetés (avis de conformité)",
	lbHideInstruct:		"Masquer les instructions",
	lbShowInstruct:		"Afficher les instructions",
	lbGuideDoc:         "Ligne directrice",
	lbHumanH:           "Médicaments pour usage humain:",
	lbVetH:             "Médicaments pour usage vétérinaire:",
	lbVetBody:          "Toutes les présentations de médicaments pour usage vétérinaire (y compris les présentations de drogues nouvelles de recherche pour usage vétérinaire et modifications) doivent être envoyées à l'adresse : \n\n          Direction des médicaments vétérinaires\n          Santé Canada\n          Complexe Holland Cross\n          11, avenue Holland, bureau 14\n          Indice de l'adresse : 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Télécopieur : 613-946-1125",
	lbInstruct:         "Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton 'Finalisation' au bas du formulaire avant de l'imprimer et de le signer.\n\nUne fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton 'Modification' au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton 'Finalisation' à nouveau afin de valider les entrées."
	                    +"\n\nAlternativement:\n"
                   		+"-Enregistrez, imprimez, signez et datez le formulaire rempli;\n"
                   		+"-Scannez le formulaire signé et\n"
                   		+"-Envoyer à Santé Canada en format électronique. "
                   		+"\n\nLa ligne directrice : Règlement sur les médicaments brevetés (avis de conformité) contient des directives relatives à chaque champ du formulaire. Veuillez le lire en entier avant de remplir le formulaire. Les renseignements relatifs à une présentation déjà déposée ne doivent être accompagnées que d'une lettre de Santé Canada demandant des renseignements supplémentaires.\n",
    lbInstructTitle:    "Où envoyer la demande de présentation de médicament",
    lbHumanBody:        "Les demandes et modifications d'essais cliniques doivent être envoyées directement à la Direction applicable (voir le Guide pour l'industrie: Gestion des présentations de drogues pour les adresses). Tous les autres types de présentations de médicaments doivent être envoyés à:\n\n          Bureau des présentations et de la propriété intellectuelle (BPPI), Direction des produits thérapeutiques\n          Santé Canada\n          Immeuble des finances\n          101, promenade du pré Tunney\n          Indice de l’adresse : 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Télécopieur : 613-941-0825"
	
}
</script>
                  <script contentType="application/x-javascript" name="part1Label_en">

var content={


	lbCompanyName:		"Company Name",
	lbSubType:			"Form V Filing Option",
	lbDIN:				"DIN",
	lbPart100:			"PART 1: COMPLETE ONE FORM PER PATENT PER DRUG IDENTIFICATION NUMBER (DIN). COMPLETE ALL MANDATORY FIELDS.",
	lbPart200:			"PART 2: SECOND PERSON'S MEDICINE. COMPLETE ALL MANDATORY FIELDS BEFORE MOVING TO PART 3.",
    lbSubNumber:        "Submission Number",
    lbDDLCDSA:          "Amendment to previously filed form V?",
    lbAct: 				"Medicinal (Active) Ingredients*",
    lbBtnAddIngred: 	"Add an Ingredient",	
    lbBrandName:        "Brand Name",
    lbHumanVet:         "Human/Veterinary",
    lbStrength:			"Strength per Unit",
    lbRoutes:			"Route(s) of Administration",
    lbDosage:			"Dosage Form",
    lbUses:				"Use(s) of Medicinal Ingredient(s)",
    lbUsesReferenced:   "Use(s) of Medicinal Ingredient(s) (for referenced product)",
    lbUses2:            "Name of Manufacturer (of referenced product)",
    lbPart3Title:       "PART 3: FIRST PERSON'S REFERENCE PRODUCT",
    lbPart3ActIngred:   "Under subsection 5(1) and 5(2) of the Regulations, address each patent listed in respect of the drug to which you directly or indirectly compare, or make reference.",
    lbPart31Title:      "Part 3.1",
    lbPart32Title:      "Part 3.2",
    lbPatentNumber:     "Patent Number",
    lbExpDate:          "Patent Expiration Date (YYYY-MM-DD)",
    lbPart3Check:       "Check at least one of the following as appropriate:*",
    lbSecPerson:        "The Second Person has obtained consent from the patent owner to the making, constructing, using or selling of the drug in Canada.",
    lbScanCopy:         "A statement of consent from the patent owner is included with this submission.",
    lbScanCopy2:        "A statement of consent from the patent owner will be sent to the Minister of Health.",
    lbSecPersonAlleg:   "The Second Person alleges that:",
    lbComply:           "Note: If you have checked any of the allegations above, you are required to comply with subsection 5(3) of the Regulations.",
    lbSecPerson2:       "The Second Person accepts that the Notice of Compliance will not be issued until the declared expiration date for the above patent number.",
    lbStatMade:			"The statement made by the First Person pursuant to paragraph 4(4)(d) is false;",
    lbPatExp:           "The patent has expired;",
	lbPatNotValid:		"The patent is not valid;",
	lbNoClaim:          "No claim for the medicinal ingredient, no claim for the formulation, no claim for the dosage form and no claim for the use of the medicinal ingredient would be infringed by the Second Person making, constructing, using or selling the drug for which the submission is filed.",
	lbPart4Title1:      "PART 4: MANUFACTURER INFORMATION AND CERTIFICATION",
	lbPart4Title2:      "A) MANUFACTURER INFORMATION AND CERTIFICATION",
	lbOfficeUseTitle:   "FOR HEALTH CANADA USE ONLY",
	lbddtSignedOnOfficeUse: "Filing Date (YYYY-MM-DD)",
	lbnotesOfficeUse:   "Notes",
	lbFinalize:         "Finalize",
	lbModify:           "Modify",
	lbDosageDetails:    "Dosage Form Details",
	lbRouteDetails:     "Routes Details",
	lbddtCertSignedOn:  "Date (YYYY-MM-DD)",
    lbDigitalID:        "Digital ID",
	lbDigitalImg:       "Image Signature",
	sigSignature:        "Signature",
	
	lbCertHeader:           "CERTIFICATION",
	lbAttest:			    "I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.",
	lbCertSalutation:       "Salutation",
	lbCertGivenName:        "Given Name",
	lbCertInitials:			"Initials",
	lbCertSurname:		    "Surname",
	lbCertTitle:            "Title"
	
	//add comma if adding more


}
</script>
                  <script contentType="application/x-javascript" name="part1Label_fr">

var content={


	lbCompanyName:		"Nom de l'entreprise",
	lbSubType:			"Option de dépôt du formulaire V",
	lbPart100:			"PARTIE 1 : REMPLIR UN FORMULAIRE PAR BREVET PAR IDENTIFICATION NUMÉRIQUE DE DROGUE (DIN). REMPLIR TOUS LES CHAMPS OBLIGATOIRES.",
	lbPart200:			"PARTIE 2 : PRODUIT DE LA SECONDE PERSONNE. REMPLIR TOUS LES CHAMPS OBLIGATOIRES AVANT DE PASSER À LA PARTIE 3.",
    lbSubNumber:        "Numéro de la présentation",
    lbDDLCDSA:          "Modification apportée au formulaire V déposé antérieurement?",
    lbAct: 				"Ingrédients médicinaux (actifs)*",
    lbBtnAddIngred: 	"Ajouter un ingrédient", 
    lbBrandName:        "Marque nominative",
    lbHumanVet:         "Usage humain/Usage vétérinaire",
    lbStrength:			"Concentration par unité",
    lbRoutes:			"Voie(s) d’administration",
    lbDosage:			"Forme posologique",
    lbUses:				"Utilisation(s) de l'ingrédient ou des ingrédients médicinal(aux)",
    lbUsesReferenced:   "Utilisation(s) de l'ingrédient ou des ingrédients médicinal(aux) (pour le produit de référence)",
    lbUses2:            "Nom du fabricant (pour le produit de référence)", 
    lbPart3Title:       "PARTIE 3 : PRODUIT DE REFÉRÉNCE DE LA PREMIÈRE PERSONNE",
    lbPart3ActIngred:   "En vertu des paragraphes 5(1) et 5(2) du Règlement, veuillez prendre en compte le brevet inscrit au Registre à l'égard de la drogue à laquelle votre présentation de drogue, directement ou indirectement, compare ou y fait renvoi.",
    lbPart31Title:      "Partie 3.1",
    lbPart32Title:      "Partie 3.2 ",
    lbPatentNumber:     "Numéro de brevet",
    lbExpDate:          "Date d'expiration du brevet (AAAA-MM-JJ)",
    lbPart3Check:       "Cocher au moins l'une des allégations suivantes, s'il y a lieu:*",
    lbSecPerson:        "La seconde personne a obtenu le consentement du propriétaire du brevet pour la fabrication, la construction, l'utilisation ou la vente de la drogue au Canada.",
    lbScanCopy:         "Un énoncé de consentement du propriétaire de brevet est inclus avec cette présentation.",
    lbScanCopy2:        "Un énoncé de consentement du propriétaire du brevet sera envoyé au Ministre de la Santé.",
    lbSecPersonAlleg:   "La seconde personne allègue que:",
    lbComply:           "Remarque: Si une ou plusieurs allégations ci-dessus mentionnées ont été cochées, vous devez vous conformer au paragraphe 5(3) du Règlement.",
    lbSecPerson2:       "La seconde personne accepte que l'avis de conformité ne sera pas délivré avant l'expiration du brevet ci-haut mentionné.",
    lbStatMade:			"La déclaration faite par la première personne aux termes de l'alinéa 4(4)(d) est fausse.",
    lbPatExp:           "Le brevet a expiré.",
	lbPatNotValid:		"Le brevet n'est pas valide.",
	lbNoClaim:          "Elle ne contreferait aucune revendication de l'ingrédient médicinal, revendication de la formulation, revendication de la forme posologique ni revendication de l'utilisation de l'ingrédient médicinal en fabricant, construisant, utilisant ou vendant la drogue pour laquelle la présentation est déposée.",
	lbPart4Title1:      "PARTIE 4 : RENSEIGNMENTS SUR LE FABRICANT ET ATTESTATION",
	lbPart4Title2:      "A) RENSEIGNEMENTS SUR LE FABRICANT ET ATTESTATION",
	lbOfficeUseTitle:   "POUR RÉSÉRVE À SANTÉ CANADA",
	lbddtSignedOnOfficeUse: "Date de présentation (AAAA-MM-JJ)",
	lbnotesOfficeUse:   "Notes",
	lbFinalize:         "Finaliser",
	lbModify:           "Modifier",
	lbDosageDetails:    "Détails de la forme posologique",
	lbRouteDetails:     "Précédemment déposé",
	lbddtCertSignedOn:  "Date (AAAA-MM-JJ)",
	lbDigitalID:        "ID électronique",
	lbDigitalImg:       "Image de signature",
	sigSignature:        "Signature",
	
	lbCertHeader:           "ATTESTATION",
	lbAttest:				"J'atteste que les renseignements inclus dans la présente Déclaration sont exacts et conformes aux exigences du Règlement sur les médicaments brevetés (avis de conformité).",
	lbCertSalutation:       "Le titre de civilité",
	lbCertGivenName:        "Prénom",
	lbCertInitials:			"Initials",
	lbCertSurname:		    "Nom",
	lbCertTitle:            "Titre"
	//add comma if adding more


}
</script>
                  <script contentType="application/x-javascript" name="pickList_en">//picklists for the form. Save value first, followed by display value
var content={

	listSubType:	[
				
				["CTAA","Amendment to previously filed Form V"],
				["CTA","Form V filed with the submission"],
	
	],	
    
    listAmendType:	[
				["NDS","Yes"],
				["SNDS","No"],
	
	],
	
	   
	listHumanVet:	[
				["ANDS","Human"],
				["SANDS","Veterinary"],
	
	],



//var VINDAM_TYPE="VINDAM";
//var VNDS_TYPE="VNDS";
//var VSNDS_TYPE="VSNDS";
//var VANDS_TYPE="VANDS";
//var VSANDS_TYPE="VSANDS";
//var VNC_TYPE="VNC";
//var VDIN_TYPE="VDIN";
//var VPDC_TYPE="VPDC";

    listRoutes:	[
				["BLOCK_INFILTRATION","Block/Infiltration"],
				["BUCCAL","Buccal"],
				["DENTAL","Dental"],
				["DIALYSIS","Dialysis"],
				["EPIDURAL","Epidural"],
				["INHALATION","Inhalation"],
				["INTRA-ARTERIAL","Intra-Arterial"],
				["INTRA-ARTICULAR","Intra-Articular"],
				["INTRABURSAL","Intrabursal"],
				["INTRADERMAL","Intradermal"],
				["INTRAMAMMARY","Intramammary"],
				["INTRAMUSCULAR","Intramuscular"],
				["INTRAOCULAR","Intraocular"],
				["INTRAPERITONEAL","Intraperitoneal"],
				["INTRATHECAL","Intrathecal"],
				["INTRATRACHEAL","Intratracheal"],
				["INTRAVASCULAR","Intravascular"],
				["INTRAVENOUS","Intravenous"],
				["INTRAVITREAL","Intravitreal"],
				["IRRIGATION","Irrigation"],
				["NASAL","Nasal"],
				["OPHTHALMIC","Ophthalmic"],
				["ORAL","Oral"],
				["OTIC","Otic"],
				["RECTAL","Rectal"],
				["SUBCUTANEOUS","Subcutaneous"],
				["SUBLINGUAL","Sublingual"],
				["TOPICAL","Topical"],
				["TRANSDERMAL","Transdermal"],
				["URETHRAL","Urethral"],
				["VAGINAL","Vaginal"],
				["Other","Other"],	
	],
	
    listDosage:	[
					["AEROSOL","Aerosol"],
					["BOLUS","Bolus"],
					["CAPSULE","Capsule"],
					["CAPSULE_DELAYED_RELEASE","Capsule\, Delayed Release"],
					["CAPSULE_EXTENDED_RELEASE","Capsule\, Extended Release"],
					["CON","Concentrate for Solution for Injection"],
					["CREAM","Cream"],
					["EMULSION","Emulsion"],
					["GAS","Gas"],
					["GEL","Gel"],
					["IMPLANT","Implant"],
					["LOTION","Lotion"],
					["LOZENGE","Lozenge"],
					["OINTMENT","Ointment"],
					["PATCH","Patch"],
					["PATCH_EXTENDED_RELEASE","Patch\, Extended-Release"],
					["POWDER","Powder"],
					["POWDER_FOR_SOLUTION","Powder For Solution"],
					["POWDER_FOR_SUSPENSION","Powder For Suspension"],
					["SHAMPOO","Shampoo"],
					["SOLUTION","Solution"],
					["SPRAY","Spray"],
					["SPRAY_BAG-ON-VALVE","Spray\, Bag-On-Valve"],
					["SPRAY, METERED DOSE","Spray\, Metered Dose"],
					["STICK","Stick"],
					["STRIP","Strip"],
					["SUPPOSITORY","Suppository"],
					["SUSPENSION","Suspension"],
					["SYRUP","Syrup"],
					["TABLET","Tablet"],
					["TABLET_CHEWABLE","Tablet\, Chewable"],
					["TABLET_DELAYED_RELEASE","Tablet\, Delayed Release"],
					["TABLET_EXTENDED_RELEASE","Tablet\, Extended Release"],
					["TABLET_ORALLY_DISINTEGRATING","Tablet\, Orally Disintegrating"],
					["WIPE","Wipe"],
					["Other","Other"]
	],

}//end content
</script>
                  <script contentType="application/x-javascript" name="pickList_fr">
var content={

	listSubType:	[
				["CTA","Formulaire V déposé avec la présentation"],
				["CTAA","Modification apportée au formulaire V déposé antérieurement"],	
	
	],	

    listAmendType:	[
				["NDS","Oui"],
				["SNDS","Non"],
    ],
	
	
	listHumanVet:	[
				["ANDS","Usage humain"],
				["SANDS","Usage vétérinaire"],
	
	],
	
	listRoutes:	[
				["BLOCK_INFILTRATION","Bloc/Infiltration"],
				["BUCCAL","Buccale"],
				["DENTAL","Dentaire"],
				["DIALYSIS","Dialyse"],
				["EPIDURAL","Épidurale"],
				["INHALATION","Inhalation"],
				["INTRA-ARTERIAL","Intra-artérielle"],
				["INTRA-ARTICULAR","Intra-articulaire"],
				["INTRABURSAL","Intrabursique"],
				["INTRADERMAL","Intradermique"],
				["INTRAMAMMARY","Intramammaire"],
				["INTRAMUSCULAR","Intramusculaire"],
				["INTRAOCULAR","Intraoculaire"],
				["INTRAPERITONEAL","Intrapéritonéale"],
				["INTRATHECAL","Intrathécale"],
				["INTRATRACHEAL","Intratrachéale"],
				["INTRAVASCULAR","Intravasculaire"],
				["INTRAVENOUS","Intraveineuse"],
				["INTRAVITREAL","Intravitreuse"],
				["IRRIGATION","Irrigation"],
				["NASAL","Nasale"],
				["OPHTHALMIC","Ophtalmique"],
				["ORAL","Orale"],
				["OTIC","Otique"],
				["RECTAL","Rectale"],
				["SUBCUTANEOUS","Sous-cutanée"],
				["SUBLINGUAL","Sublinguale"],
				["TOPICAL","Topique"],
				["TRANSDERMAL ", "Transdermique"],
				["URETHRAL","Urétrale"],
				["VAGINAL","Vaginale"],
				["Other","Autre"],	
	],
	
	listDosage:	[
					["AEROSOL","Aérosol"],
					["BOLUS","Bol"],
					["CAPSULE","Capsule"],
					["CAPSULE_DELAYED_RELEASE","Capsule (à libération retardée)"],
					["CAPSULE_EXTENDED_RELEASE","Capsule (à libération prolongée)"],
					["CREAM","Crème"],
					["EMULSION","Émulsion"],
					["GAS","Gaz"],
					["GEL","Gel"],
					["IMPLANT","Implant"],
					["LOTION","Lotion"],
					["LOZENGE","Pastille"],
					["OINTMENT","Pommade"],
					["PATCH","Timbre"],
					["PATCH_EXTENDED_RELEASE","Timbre (à libération prolongée)"],
					["POWDER","Poudre"],
					["POWDER_FOR_SOLUTION","Poudre pour solution"],
					["POWDER_FOR_SUSPENSION","Poudre pour suspension"],
					["SHAMPOO","Shampoing"],
					["SOLUTION","Solution"],
					["CON","Solution concentrée pour injection"],
					["SPRAY","Pulvérisation"],
					["SPRAY_BAG-ON-VALVE","Pulvérisation\, sac-sur-valve"],
					["SPRAY, METERED DOSE","Pulvérisation\, à dose mesurée"],
					["STICK","Bâton"],
					["STRIP","Bandelette"],
					["SUPPOSITORY","Suppositoire"],
					["SUSPENSION","Suspension"],
					["SYRUP","Sirop"],
					["TABLET","Comprimé"],
					["TABLET_CHEWABLE","Comprimé (à croquer)"],
					["TABLET_DELAYED_RELEASE","Comprimé (à libération retardée)"],
					["TABLET_EXTENDED_RELEASE","Comprimé (à libération prolongée)"],
					["TABLET_ORALLY_DISINTEGRATING","Comprimé (à désintégration orale)"],
					["WIPE","Serviette"],
					["Other","Autre"]
				],

}//end content
</script>
                  <script contentType="application/x-javascript" name="toolTip_en">
var content = {

    ttSubType: "The type of form being submitted to Health Canada. ",
    ttNameManufacturer: "11. Company Name: Name of the Manufacturer/Sponsor must match Item 11 in the Drug Submission Application form. It must be the full legal name with no abbreviations. ",
    ttAddIngredText: "Ingredient Name",
    ttBtnDeleteIngredient: "Delete medicinal (active) ingredients",
    ttDIN: "DIN must be 8 digits.  If your DIN has only 7 digits, please enter the number 0 as the first digit.",

    //lbApplTitle _tt: 		"FORM V: DECLARATION RE: PATENT LIST\n Patented Medicines (Notice of Compliance) Regulations",	
    lbHideInstruct_tt: "Hide Instructions",
    lbShowInstruct_tt: "Show Instructions",
    lbGuideDoc_tt: "Guidance Document",
    lbHumanH_tt: "Human Drugs:",
    lbVetH_tt: "Veterinary Drugs:",
    //lbVetBody_tt:          "All veterinary drug submissions (including Veterinary Investigational New Drug Submissions and Amendments) are to be sent to: \n\n          Veterinary Drugs Directorate\n          Holland Cross Complex\n          11 Holland Avenue, Suite 14\n          Address Locator: 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Fax: (613) 946-1125",
    //lbInstruct_tt:         "This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the 'Finalize' button at the bottom of the form before printing and signing.\n\nOnce finalized, the fields in the form become 'locked' (i.e. fields cannot be modified). In order to modify fields after finalizing, you must press the 'Modify' button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the 'Finalize' button again to re-validate entries.\n\nThe Guidance Document provides instructions on each field of the form. Please read it in its entirety prior to completing the form. Information for a submission already filed need only be accompanied by a copy of the letter from Health Canada requesting additional information.",
    // lbInstructTitle_tt:    "Where to send Drug Submission Application",
    //lbHumanBody_tt:        "Clinical Trial Applications and Amendments must be sent directly to the applicable Directorate (see Guidance for Industry: Management of Drug Submissions for addresses)\nAll other drug submission types are to be sent to:\n\n          Office of Submissions and Intellectual Property, Therapeutic Products Directorate\n          Health Canada\n          Finance Building\n          101 Tunney's Pasture Driveway\n          Address Locator: 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Fax: (613) 941-0825",

    lbCompanyName_tt: "Company Name",
    lbSubType_tt: "Form V Filing Option",
    lbDIN_tt: "DIN",
    lbPart100_tt: "PART 1: COMPLETE ONE FORM PER PATENT PER DRUG IDENTIFICATION NUMBER (DIN). COMPLETE ALL MANDATORY FIELDS.",
    lbPart200_tt: "PART 2: SECOND PERSON'S MEDICINE. COMPLETE ALL MANDATORY FIELDS BEFORE MOVING TO PART 3.",
    lbSubNumber_tt: "Submission Number",
    lbDDLCDSA_tt: "Amendment to previously filed form V?",
    lbAct_tt: "Medicinal (Active) Ingredients",
    lbBtnAddIngred_tt: "Add an Ingredient",
    lbBrandName_tt: "Brand Name",
    lbHumanVet_tt: "Human/Veterinary",
    lbStrength_tt: "Strength per Unit",
    lbRoutes_tt: "Route(s) of Administration",
    lbDosage_tt: "Dosage Form",
    lbUses_tt: "Use(s) of Medicinal Ingredient(s)",
    lbUsesReferenced_tt: "Use(s) of Medicinal Ingredient(s) (for referenced product)",
    lbUses2_tt: "Name of Manufacturer (of referenced product)",
    lbPart3Title_tt: "PART 3: FIRST PERSON'S REFERENCE PRODUCT",
    lbPart3ActIngred_tt: "Under subsection 5(1) and 5(2) of the Regulations, address each patent listed in respect of the drug to which you directly or indirectly compare, or make reference.",
    lbPart31Title_tt: "Part 3.1",
    lbPart32Title_tt: "Part 3.2",
    lbPatentNumber_tt: "Patent Number",
    lbExpDate_tt: "Patent Expiration Date (YYYY-MM-DD)",
    lbPart3Check_tt: "Check at least one of the following as appropriate:",
    lbSecPerson_tt: "The Second Person has obtained consent from the patent owner to the making, constructing, using or selling of the drug in Canada.",
    lbScanCopy_tt: "A statement of consent from the patent owner is included with this submission.",
    lbScanCopy2_tt: "A statement of consent from the patent owner will be sent to the Minister of Health.",
    lbSecPersonAlleg_tt: "The Second Person alleges that:",
    lbComply_tt: "Note: If you have checked any of the allegations above, you are required to comply with subsection 5(3) of the Regulations.",
    lbSecPerson2_tt: "The Second Person accepts that the Notice of Compliance will not be issued until the declared expiration date for the above patent number.",
    lbStatMade_tt: "The statement made by the First Person pursuant to paragraph 4(4)(d) is false;",
    lbPatExp_tt: "The patent has expired;",
    lbPatNotValid_tt: "The patent is not valid;",
    lbNoClaim_tt: "No claim for the medicinal ingredient, no claim for the formulation, no claim for the dosage form and no claim for the use of the medicinal ingredient would be infringed by the Second Person making, constructing, using or selling the drug for which the submission is filed.",
    lbPart4Title1_tt: "PART 4: MANUFACTURER INFORMATION AND CERTIFICATION",
    lbPart4Title2_tt: "A) MANUFACTURER INFORMATION AND CERTIFICATION",
    lbOfficeUseTitle_tt: "FOR HEALTH CANADA USE ONLY",


    lbddtSignedOnOfficeUse_tt: "Filing Date (YYYY-MM-DD)",
    lbnotesOfficeUse_tt: "Notes",
    lbFinalize_tt: "Finalize",
    lbModify_tt: "Modify",
    lbDosageDetails_tt: "Dosage Form Details",
    lbRouteDetails_tt: "Routes Details",
    lbddtCertSignedOn_tt: "Date (YYYY-MM-DD)",
    lbDigitalID_tt: "Digital ID",
    lbDigitalImg_tt: "Image Signature",
    sigSignature_tt: "Signature",

    lbFoodAnimal_tt: "Is this used for the treatment of food-producing animals?",
    lbCountriesManufacture_tt: "Please indicate the country(ies) of manufacture for this drug product.",
    lbCountryManufacture_tt: "Please indicate the country(ies) of manufacture for this drug product.",
    
    ttAddIngredText2: "Ingredient Name - Second person's medicine",
    ttBtnDeleteIngredient2: "Delete medicinal (active) ingredients - Second person's medicine",
	
    lbBtnAddIngred2_tt: "Add an ingredient - Second person's medicine",
    lbBrandName2_tt: "Second person's medicine - brand name",
    lbHumanVet2_tt: "Second person's medicine - select either human or veterinary",
    lbStrength2_tt: "Second person's medicine - strength per unit",
    lbRoutes2_tt: "Second person's medicine - routes of administration",
    lbRouteDetails2_tt: "Second person's medicine - Provide details for other route of administration",
    lbDosage2_tt: "Second person's medicine - dosage form",
    lbDosageDetails2_tt: "Second person's medicine - Provide details for other dosage form",
    lbUses2_tt: "Second person's medicine - uses of the medicinal ingredients",
    lbUsesReferenced2_tt: "Second person's medicine - uses of medicinal ingredients (for referenced product)",
    //lbUses2_tt: "Second person's medicine - Name of manufacturer (of referenced product)",


    ttIngredText3: "Ingredient Name - First person's reference product",
    ttBtnDeleteIngredient3: "Delete medicinal (active) ingredients - First person's reference product",
	
    lbBtnAddIngred3_tt: "Add an ingredient - First person's reference product",
    lbBrandName3_tt: "First person's reference product - brand name",
    lbHumanVet3_tt: "First person's reference product - select either human or veterinary",
    lbStrength3_tt: "First person's reference product - strength per unit",
    lbRoutes3_tt: "First person's reference product - routes of administration",
    lbRouteDetails3_tt: "First person's reference product - Provide details for other route of administration",
    lbDosage3_tt: "First person's reference product - dosage form",
    lbDosageDetails3_tt: "First person's reference product - Provide details for other dosage form",
    lbUses3_tt: "First person's reference product - name of manufacturer",
    lbUsesReferenced3_tt: "First person's reference product - uses of medicinal ingredients",

    manufCompanyName_tt: "Manufacturer's company name",
    manufAddress_tt: "Manufacturer's street address",
    manufCity_tt: "Manufacturer's city/town",
    manufCountry_tt: "Manufacturer's country",
    manufProvince_tt: "Manufacturer's province/state",
    manufPostalCode_tt: "Manufacturer's postal/ZIP code",
    manufCntctSalutation_tt: "Manufacturer's contact's salutation",
    manufCntctGivenName_tt: "Manufacturer's contact's given name",
    manufCntctInitials_tt: "Manufacturer's contact's initials",
    manufCntctSurname_tt: "Manufacturer's contact's surname",
    manufCntctTitle_tt: "Manufacturer's contact's title",
    manufCntctLanguage_tt: "Manufacturer's preferred language of communication",
    manufCntctTel_tt: "Manufacturer's contact's telephone number",
    manufCntctTelExtn_tt: "Manufacturer's contact's telephone extension",
    manufCntctFax_tt: "Manufacturer's contact's fax number",
    manufCntctEmail_tt: "Manufacturer's contact's email address",

	lbCertHeader_tt:   "CERTIFICATION",
    lbCertSalutation_tt: "Certifier's salutation",
    lbCertGivenName_tt: "Certifier's given name",
    lbCertInitials_tt: "Certifier's initials",
    lbCertSurname_tt: "Certifier's surname",
    lbCertTitle_tt: "Certifier's title"
    
}//content
</script>
                  <script contentType="application/x-javascript" name="toolTip_fr">

var content = {

    ttSubType: "Le type de dépôt a été présentée à Santé Canada.",
    ttNameManufacturer: "fr_ 11. Company Name: Name of the Manufacturer/Sponsor must match Item 11 in the Drug Submission Application form. It must be the full legal name with no abbreviations. ",
    ttAddIngredText: "Nom de l'ingrédient",
    ttBtnDeleteIngredient: "Supprimer ingrédients médicinaux (actifs)",
    ttDIN: "DIN doit être de 8 chiffres. Si votre DIN ne dispose que de 7 chiffres, s'il vous plaît entrez le numéro 0 comme première chiffre.",


    //lbApplTitle _tt: 		"FORMULAIRE V : DÉCLARATION RELATIVE À LA LISTE DES BREVETS - Règlement sur les médicaments brevetés (avis de conformité)",
    lbHideInstruct_tt: "Masquer les instructions",
    lbShowInstruct_tt: "Afficher les instructions",
    lbGuideDoc_tt: "Ligne directrice",
    lbHumanH_tt: "Médicaments pour usage humain:",
    lbVetH_tt: "Médicaments pour usage vétérinaire:",
    //lbVetBody_tt:          "Toutes les présentations de médicaments pour usage vétérinaire (y compris les présentations de drogues nouvelles de recherche pour usage vétérinaire et modifications) doivent être envoyées à l'adresse : \n\n          Direction des médicaments vétérinaires\n          Complexe Holland Cross\n          11, avenue Holland, bureau 14\n          Indice de l'adresse : 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Télécopieur : 613-946-1125",
    //lbInstruct_tt:         "Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton 'Finalisation' au bas du formulaire avant de l'imprimer et de le signer.\n\nUne fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton 'Modification' au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton 'Finalisation' à nouveau afin de valider les entrées.\n\nLe document d'orientation contient des directives relatives à chaque champ du formulaire. Veuillez le lire en entier avant de remplir le formulaire. Les renseignements relatifs à une présentation déjà déposée ne doivent être accompagnées que d'une lettre de Santé Canada demandant des renseignements supplémentaires.",
    // lbInstructTitle_tt:    "Où envoyer la demande de présentation de médicament",
    //lbHumanBody_tt:        "Toutes les présentations de médicaments pour usage vétérinaire (y compris les présentations de drogues nouvelles de recherche pour usage vétérinaire et modifications) doivent être envoyées à l'adresse suivante :\n\n          Bureau des présentations et de la propriété intellectuelle (BPPI), Direction des produits thérapeutiques\n          Santé Canada\n          Immeuble des finances\n          101, promenade du pré Tunney\n          Indice de l’adresse : 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Télécopieur : 613-941-0825",


    lbCompanyName_tt: "Nom de l'entreprise",
    lbSubType_tt: "Option de dépôt du formulaire V",
    lbPart100_tt: "PARTIE 1 : REMPLIR UN FORMULAIRE PAR BREVEN PAR IDENTIFICATION NUMÉRIQUE DE DROGUE (DIN). REMPLIR TOUS LES CHAMPS OBLIGATOIRES.",
    lbPart200_tt: "PARTIE 2 : PRODUIT DE LA SECONDE PERSONNE. REMPLIR TOUS LES CHAMPS OBLIGATOIRES AVANT DE PASSER À LA PARTIE 3.",
    lbSubNumber_tt: "Numéro de la présentation",
    lbDDLCDSA_tt: "Modification apportée au formulaire V déposé antérieurement?",
    lbAct_tt: "Ingrédients médicinaux (actifs)",
    lbBtnAddIngred_tt: "Ajouter un ingrédient",
    lbBrandName_tt: "Marque nominative",
    lbHumanVet_tt: "Usage humain/Usage vétérinaire",
    lbStrength_tt: "Concentration par unité",
    lbRoutes_tt: "Voie(s) d’administration",
    lbDosage_tt: "Forme posologique",
    lbUses_tt: "Utilisation(s) de l'ingrédient ou des ingrédients médicinal(aux)",
    lbUsesReferenced_tt: "Utilisation(s) de l'ingrédient ou des ingrédients médicinal(aux) (pour le produit de référence)",
    lbUses2_tt: "Nom du fabricant (pour le produit de référence)",
    lbPart3Title_tt: "PARTIE 3 : PRODUIT DE REFÉRÉNCE DE LA PREMIÈRE PERSONNE",
    lbPart3ActIngred_tt: "En vertu des paragraphes 5(1) et 5(2) du Règlement, veuillez prendre en compte le brevet inscrit au Registre à l'égard de la drogue à laquelle votre présentation de drogue, directement ou indirectement, compare ou y fait renvoi.",
    lbPart31Title_tt: "Partie 3.1",
    lbPart32Title_tt: "Partie 3.2 ",
    lbPatentNumber_tt: "Numéro de brevet",
    lbExpDate_tt: "Date d'expiration du brevet (AAAA-MM-JJ)",
    lbPart3Check_tt: "Cocher au moins l'une des allégations suivantes, s'il y a lieu:",
    lbSecPerson_tt: "La seconde personne a obtenu le consentement du propriétaire du brevet pour la fabrication, la construction, l'utilisation ou la vente de la drogue au Canada.",
    lbScanCopy_tt: "Un énoncé de consentement du propriétaire de brevet est inclus avec cette présentation.",
    lbScanCopy2_tt: "Un énoncé de consentement du propriétaire du brevet sera envoyé au Ministre de la Santé.",
    lbSecPersonAlleg_tt: "La seconde personne allègue que:",
    lbComply_tt: "Remarque: Si une ou plusieurs allégations ci-dessus mentionnées ont été cochées, vous devez vous conformer au paragraphe 5(3) du Règlement.",
    lbSecPerson2_tt: "La seconde personne accepte que l'avis de conformité ne sera pas délivré avant l'expiration du brevet ci-haut mentionné.",
    lbStatMade_tt: "La déclaration faite par la première personne aux termes de l'alinéa 4(4)(d) est fausse.",
    lbPatExp_tt: "Le brevet a expiré.",
    lbPatNotValid_tt: "Le brevet n'est pas valide.",
    lbNoClaim_tt: "Elle ne contreferait aucune revendication de l'ingrédient médicinal, revendication de la formulation, revendication de la forme posologique ni revendication de l'utilisation de l'ingrédient médicinal en fabricant, construisant, utilisant ou vendant la drogue pour laquelle la présentation est déposée.",
    lbPart4Title1_tt: "PARTIE 4 : RENSEIGNMENTS SUR LE FABRICANT ET ATTESTATION",
    lbPart4Title2_tt: "A) RENSEIGNEMENTS SUR LE FABRICANT ET ATTESTATION",
    lbOfficeUseTitle_tt: "POUR RÉSÉRVE À SANTÉ CANADA",

    lbddtSignedOnOfficeUse_tt: "Date de présentation (AAAA-MM-JJ)",
    lbnotesOfficeUse_tt: "Notes",
    lbFinalize_tt: "Finaliser",
    lbModify_tt: "Modifier",
    lbDosageDetails_tt: "Détails de la forme posologique",
    lbRouteDetails_tt: "Précédemment déposé",
    lbddtCertSignedOn_tt: "Date (AAAA-MM-JJ)",
    lbDigitalID_tt: "ID électronique",
    lbDigitalImg_tt: "Image de signature",
    sigSignature_tt: "Signature",

    lbFoodAnimal_tt: "Is this used for the treatment of food-producing animals?",
    lbCountriesManufacture_tt: "Please indicate the country(ies) of manufacture for this drug product.",
    lbCountryManufacture_tt: "Please indicate the country(ies) of manufacture for this drug product.",

    ttAddIngredText2: "Nom de l'ingrédient - produit de la seconde personne",
    ttBtnDeleteIngredient2: "Supprimer les ingrédients médicinaux (actifs) - produit de la seconde personne",
	
    lbBtnAddIngred2_tt: "Ajouter un ingrédient - produit de la seconde personne",
    lbBrandName2_tt: "Produit de la seconde personne - nom de marque",
    lbHumanVet2_tt: "Produit de la seconde personne - sélectionner soit humain ou vétérinaire",
    lbStrength2_tt: "Produit de la seconde personne - concentration par unité",
    lbRoutes2_tt: "Produit de la seconde personne - voie(s) d’administration",
    lbRouteDetails2_tt: "Produit de la seconde personne - fournir des détails pour d'autres voie(s) d'administration",
    lbDosage2_tt: "Produit de la seconde personne - forme posologique",
    lbDosageDetails2_tt: "Produit de la seconde personne - fournir des détails pour une autre forme posologique",
    lbUses2_tt: "Produit de la seconde personne - utilisations de l'ingrédient ou des ingrédients médicinaux",
    lbUsesReferenced2_tt: "Produit de la seconde personne - utilisations de l'ingrédient ou des ingrédients médicinaux",
    //lbUses2_tt: "Second person's medicine - Name of manufacturer (of referenced product)",


    ttIngredText3: "Nom de l'ingrédient - Le produit de référence de la première personne",
    ttBtnDeleteIngredient3: "Supprimer les ingrédients médicinaux (actifs) - First person's reference product",
	
    lbBtnAddIngred3_tt: "Ajouter un ingrédient - le produit de référence de la première personne",
    lbBrandName3_tt: "Le produit de référence de la première personne - nom de marque",
    lbHumanVet3_tt: "Le produit de référence de la première personne - sélectionner soit humain ou vétérinaire",
    lbStrength3_tt: "Le produit de référence de la première personne - concentration par unité",
    lbRoutes3_tt: "Le produit de référence de la première personne - voie(s) d’administration",
    lbRouteDetails3_tt: "Le produit de référence de la première personne - fournir des détails pour d'autres voie(s) d'administration",
    lbDosage3_tt: "Le produit de référence de la première personne - forme posologique",
    lbDosageDetails3_tt: "Le produit de référence de la première personne - Fournir des détails pour une autre forme posologique",
    lbUses3_tt: "Le produit de référence de la première personne - nom du fabricant",
    lbUsesReferenced3_tt: "Le produit de référence de la première personne - utilisations de l'ingrédient ou des ingrédients médicinaux",

    manufCompanyName_tt: "Nom de l'entreprise du fabricant",
    manufAddress_tt: "Rue/bureau du fabricant",
    manufCity_tt: "Ville/village du fabricant",
    manufCountry_tt: "Pays du fabricant",
    manufProvince_tt: "Province/état du fabricant",
    manufPostalCode_tt: "Code postal/code de zone du fabricant",
    manufCntctSalutation_tt: "Le titre de civilité de la personne-ressource du fabricant",
    manufCntctGivenName_tt: "Le prénom de la personne-ressource du fabricant",
    manufCntctInitials_tt: "Les initiales de la personne-ressource du fabricant",
    manufCntctSurname_tt: "Le nom de la personne-ressource du fabricant",
    manufCntctTitle_tt: "Le titre de la personne-ressource du fabricant",
    manufCntctLanguage_tt: "La langue de communication préférée de la personne-ressource du fabricant",
    manufCntctTel_tt: "Le numéro de téléphone de la personne-ressource du fabricant",
    manufCntctTelExtn_tt: "Le numéro de poste de la personne-ressource du fabricant",
    manufCntctFax_tt: "Le numéro de télécopieur de la personne-ressource du fabricant",
    manufCntctEmail_tt: "Le courriel de la personne-ressource du fabricant",
    
    lbCertHeader_tt:           "ATTESTATION",
    lbCertSalutation_tt: "Le titre de civilité du certificateur",
    lbCertGivenName_tt: "Le prénom du certificateur",
    lbCertInitials_tt: "Les initiales du certificateur",
    lbCertSurname_tt: "Le nom du certificateur",
    lbCertTitle_tt: "Le titre du certificateur"
    }
</script>
                  <script contentType="application/x-javascript" name="part2Label_en">

var content={

		lbFoodAnimal:			"Is this used for the treatment of food-producing animals?",
		lbCountriesManufacture:	"Please indicate the country(ies) of manufacture for this drug product.",
						

}//content
</script>
                  <script contentType="application/x-javascript" name="part2Label_fr">

var content={

		lbFoodAnimal:	"FR_Is this used for the treatment of food-producing animals?",
		lbCountriesManufacture:	"fr_Please indicate the country(ies) of manufacture for this drug product."
		

}//content

</script>
                  <script contentType="application/x-javascript" name="part2_DrugForm_en">var content={


	lbCountryManufacture:		"Please indicate the country(ies) of manufacture for this drug product."




}

</script>
                  <script contentType="application/x-javascript" name="part2_DrugForm_fr">var content={


	lbCountryManufacture:		"fr_Please indicate the country(ies) of manufacture for this drug product."




}
</script>
                  <script contentType="application/x-javascript" name="address_en">

var content = {
	salutation:				"Salutation",

	listSalutation:	[
		["MR","Mr."],
		["MRS","Mrs."],
		["MS","Ms."],
		["DR","Dr."]
		]
}
</script>
                  <script contentType="application/x-javascript" name="address_fr">

var content = {
	salutation:	"Le titre de civilité",
	
	listSalutation:	[
		["MR","M."],
		["MRS","Mme"],
		["MS","Mlle"],
		["DR","Dr."]
	]
}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="util" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="General">
//globals
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;




/*
*	Generic Instance manager checker. Core does not check if it allowed to add an instance
*	This should really be part of core
*	@param instanceManager- the instanceManager to check
*
*/

function addSubformInstance(instanceManager){
	var createdInstance=null;
	//TO DO check if instance manager exists and is an instanceManager
	if((instanceManager.count&lt;instanceManager.max) || instanceManager.max&lt;0){
		 createdInstance=cInstanceManagerUtil.addInstance(instanceManager);

	}
	return(createdInstance);
}

function removeSpecificSubformInstance(instanceManager,sfInstance){
	
	//TO DO check if instance manager exists and is an instanceManager
	if(instanceManager.count&gt;instanceManager.min){
				cInstanceManagerUtil.removeSpecificInstance(sfInstance);

	}

}



</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 0?></subform>
            <subform w="100mm" h="50mm" name="nodeDefinitions">
               <variables>
                  <script contentType="application/x-javascript" name="Page1">
var content = {

    root: {
        somExpression: "xfa.form.DrugAppl",
    },

    sfPage1: {
        somExpression: "sfPage1",
        parentNodeKey: "root"},

    sfMainHeader: {
        somExpression: "sfMainHeader",
        parentNodeKey: "sfPage1"},

    lblFormTitle: {
        somExpression: "lblFormTitle",
        parentNodeKey: "sfMainHeader",
        labelKey: "lbApplTitle"},

    languageChoice: {
        somExpression: "pageLanguage",
        parentNodeKey: "sfMainHeader"},

    chkEnglish: {
        somExpression: "chkEnglish",
        parentNodeKey: "languageChoice"},

    chkFrancais: {
        somExpression: "chkFrancais",
        parentNodeKey: "languageChoice"},

    sfHCOnly: {
        somExpression: "sfHCOnly",
        parentNodeKey: "sfPage1"},

    lblHCOnly: {
        somExpression: "lblHCOnly",
        parentNodeKey: "sfHCOnly"},

    txtSAPInvoice: {
        somExpression: "txtSAPInvoice",
        parentNodeKey: "sfHCOnly"},

    txtFileNumber: {
        somExpression: "txtFileNumber",
        parentNodeKey: "sfHCOnly"},

    txtScreenedBy: {
        somExpression: "txtScreenedBy",
        parentNodeKey: "sfHCOnly"},

    txtSAPOrder: {
        somExpression: "txtSAPOrder",
        parentNodeKey: "sfHCOnly"},

    sfInstructions: {
        somExpression: "sfInstructions",
        parentNodeKey: "sfPage1"},

    sButtons: {
        somExpression: "sButtons",
        parentNodeKey: "sfInstructions"},

    txtPagination: {
        somExpression: "txtPagination",
        parentNodeKey: "sButtons"},

    btnViewInstructions: {
        somExpression: "btnViewInstructions",
        parentNodeKey: "sButtons",
        toolTipKey: "lbShowInstruct_tt",
        labelKey: "lbShowInstruct"},

    txtGuideDoc: {
        somExpression: "txtGuideDoc",
        parentNodeKey: "sButtons",
        labelKey: "lbGuideDoc"},

    btnHideInstructions: {
        somExpression: "btnHideInstructions",
        parentNodeKey: "sButtons",
        toolTipKey: "lbHideInstruct_tt",
        labelKey: "lbHideInstruct"},

    sfInstructionsContent: {
        somExpression: "sfInstructionsContent",
        parentNodeKey: "sfInstructions"},

    lblInstructions: {
        somExpression: "lblInstructions",
        parentNodeKey: "sfInstructionsContent",
        labelKey: "lbInstruct"},

    lblInstructTitle: {
        somExpression: "lblInstructTitle",
        parentNodeKey: "sfInstructionsContent",
        labelKey: "lbInstructTitle"},

    lblInstructHumanHeading: {
        somExpression: "lblInstructHumanHeading",
        parentNodeKey: "sfInstructionsContent",
        labelKey: "lbHumanH"},

    lblInstructHumanBody: {
        somExpression: "lblInstructHumanBody",
        parentNodeKey: "sfInstructionsContent",
        labelKey: "lbHumanBody"},

    lblInstructVetHeading: {
        somExpression: "lblInstructVetHeading",
        parentNodeKey: "sfInstructionsContent",
        labelKey: "lbVetH"},

    lblInstructVetBody: {
        somExpression: "lblInstructVetBody",
        parentNodeKey: "sfInstructionsContent",
        labelKey: "lbVetBody"},

    sfSubmission: {
        somExpression: "sfSubmission",
        parentNodeKey: "sfPage1"},

    lblPart100: {
        somExpression: "lblPart100",
        parentNodeKey: "sfSubmission",
        labelKey: "lbPart100"},


    submissionType: {
        somExpression: "ddlSubmissionFilingStatus",
        parentNodeKey: "sfSubmission",
        labelKey: "lbSubType",
        //fieldNumber:	"5",
        toolTipKey: "ttSubType",
        pickListKey: "listSubType"
    },

    lblSubNumber: {
        somExpression: "lblSubNumber",
        parentNodeKey: "sfSubmission",
        toolTipKey: "lbSubNumber_tt",
        labelKey: "lbSubNumber"},

    ddlCDSA: {
        somExpression: "ddlCDSA",
        parentNodeKey: "sfSubmission",
        labelKey: "lbDDLCDSA",
        toolTipKey: "lbDDLCDSA_tt",
        pickListKey: "listAmendType"},

    part2Title: {
        somExpression: "part2Title",
        parentNodeKey: "sfSubmission"},

    lblPart200: {
        somExpression: "lblPart200",
        parentNodeKey: "part2Title",
        labelKey: "lbPart200"},

    sfFormulationList: {
        somExpression: "sfFormulationList",
        parentNodeKey: "sfPage1"},

    sfPart2: {
        somExpression: "sfPart2",
        parentNodeKey: "sfFormulationList"},

    sfPart2Body: {
        somExpression: "sfPart2Body",
        parentNodeKey: "sfPart2"},

    sfActiveIngredients: {
        somExpression: "sfActiveIngredients",
        parentNodeKey: "sfPart2Body"},

    part2Header: {
        somExpression: "part2Header",
        parentNodeKey: "sfActiveIngredients"},

    lblAct: {
        somExpression: "lblAct",
        parentNodeKey: "part2Header",
        labelKey: "lbAct"},

    btnIngredHeader: {
        somExpression: "btnIngredHeader",
        parentNodeKey: "btnIngredHeader"},

    lblEmptyOne: {
        somExpression: "lblEmptyOne",
        parentNodeKey: "part2Header"},

    sfAddIngredient: {
        somExpression: "sfAddIngredient",
        parentNodeKey: "part2Header"},

    btnAddIngredient: {
        somExpression: "btnAddIngredient",
        parentNodeKey: "sfAddIngredient",
        toolTipKey: "lbBtnAddIngred2_tt",
        labelKey: "lbBtnAddIngred"},

    btnIngredHeader2: {
        somExpression: "btnIngredHeader2",
        parentNodeKey: "sfAddIngredient"},

    ingredientSubForm: {
        somExpression: "ingredientSubForm",
        parentNodeKey: "part2Header"},

    btnDelete1: {
        somExpression: "btnDelete",
        parentNodeKey: "ingredientSubForm",
        toolTipKey: "ttBtnDeleteIngredient2"},

    txtIngredient1: {
        somExpression: "txtIngredient",
        parentNodeKey: "ingredientSubForm",
        toolTipKey: "ttAddIngredText2"},

    lblEmpty2: {
        somExpression: "lblEmpty2",
        parentNodeKey: "part2Header"},

    txtBrandName1: {
        somExpression: "txtBrandName1",
        parentNodeKey: "part2Header",
        toolTipKey: "lbBrandName2_tt",
        labelKey: "lbBrandName"},

    ddlHumanVetSecond: {
        somExpression: "ddlHumanVetSecond",
        parentNodeKey: "part2Header",
        pickListKey: "listHumanVet",
        toolTipKey: "lbHumanVet2_tt",
        labelKey: "lbHumanVet"},

    txtStrength: {
        somExpression: "txtStrength",
        parentNodeKey: "part2Header",
        toolTipKey: "lbStrength2_tt",
        labelKey: "lbStrength"},

    ddlROA: {
        somExpression: "ddlROA",
        parentNodeKey: "part2Header",
        labelKey: "lbRoutes",
        toolTipKey: "lbRoutes2_tt",
        pickListKey: "listRoutes"},

    ddlDosageForm: {
        somExpression: "ddlDosageForm",
        parentNodeKey: "part2Header",
        labelKey: "lbDosage",
        toolTipKey: "lbDosage2_tt",
        pickListKey: "listDosage"},

    txtOtherDosage1: {
        somExpression: "txtOtherDosage",
        parentNodeKey: "part2Header",
        toolTipKey: "lbDosageDetails2_tt",
        labelKey: "lbDosageDetails"},

    txtOtherRoute1: {
        somExpression: "txtOtherRoute",
        parentNodeKey: "part2Header",
        toolTipKey: "lbRouteDetails2_tt",
        labelKey: "lbRouteDetails"},

    txtUses: {
        somExpression: "txtUses",
        parentNodeKey: "part2Header",
        toolTipKey: "lbUses2_tt",
        labelKey: "lbUses"},

    sfTitles: {
        somExpression: "sfTitles",
        parentNodeKey: "sfActiveIngredients"},

    sfNonMedIngredients: {
        somExpression: "sfNonMedIngredients",
        parentNodeKey: "sfPart2Body"},

    lblPart3Title1: {
        somExpression: "lblPart3Title1",
        parentNodeKey: "sfNonMedIngredients",
        labelKey: "lbPart3Title"},

    sfAnimalHuman: {
        somExpression: "sfAnimalHuman",
        parentNodeKey: "sfPart2Body"},

    lblPart3Title2: {
        somExpression: "lblPart3Title2",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbPart3Title"},

    lblPart3ActiveIngredients1: {
        somExpression: "lblPart3ActiveIngredients1",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbPart3ActIngred"},

    lblPart3ActiveIngredients2: {
        somExpression: "lblPart3ActiveIngredients2",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbAct"},

    part3Header: {
        somExpression: "part3Header",
        parentNodeKey: "sfAnimalHuman"},

    ingredHeader2: {
        somExpression: "ingredHeader2",
        parentNodeKey: "part3Header"},

    btn2AddIngredient: {
        somExpression: "btn2AddIngredient",
        parentNodeKey: "sfAnimalHuman",
        toolTipKey: "lbBtnAddIngred3_tt",
        labelKey: "lbBtnAddIngred"},

    lblActiveIngredients: {
        somExpression: "lblActiveIngredients",
        parentNodeKey: "part3Header"},

    part3IngredientSubForm: {
        somExpression: "part3IngredientSubForm",
        parentNodeKey: "part3Header"},

    btnDelete: {
        somExpression: "btnDelete",
        parentNodeKey: "part3IngredientSubForm",
        toolTipKey: "ttBtnDeleteIngredient3"},

    txtIngredient: {
        somExpression: "txtIngredient",
        parentNodeKey: "part3IngredientSubForm",
        toolTipKey: "ttIngredText3"},

    lblActiveIngredients: {
        somExpression: "lblActiveIngredients",
        parentNodeKey: "part3Header"},

    txtBrandName: {
        somExpression: "txtBrandName",
        parentNodeKey: "part3Header",
        toolTipKey: "lbBrandName3_tt",
        labelKey: "lbBrandName"},

    ddlHumanVetFirst: {
        somExpression: "ddlHumanVetFirst",
        parentNodeKey: "part3Header",
        pickListKey: "listHumanVet",
        toolTipKey: "lbHumanVet3_tt",
        labelKey: "lbHumanVet"},


    txtStrength1: {
        somExpression: "txtStrength1",
        parentNodeKey: "part3Header",
        toolTipKey: "lbStrength3_tt",
        labelKey: "lbStrength"},

    numDIN: {
        somExpression: "numDIN",
        parentNodeKey: "part3Header",
        toolTipKey: "ttDIN"},

    ddlDosageForm1: {
        somExpression: "ddlDosageForm1",
        parentNodeKey: "part3Header",
        labelKey: "lbDosage",
        toolTipKey: "lbDosage3_tt",
        pickListKey: "listDosage"},

    txtOtherDosage: {
        somExpression: "txtOtherDosage",
        parentNodeKey: "part3Header",
        toolTipKey: "lbDosageDetails3_tt",
        labelKey: "lbDosageDetails"},

    ddlROA1: {
        somExpression: "ddlROA1",
        parentNodeKey: "part3Header",
        labelKey: "lbRoutes",
        toolTipKey: "lbRoutes3_tt",
        pickListKey: "listRoutes"},

    txtOtherRoute: {
        somExpression: "txtOtherRoute",
        parentNodeKey: "part3Header",
        toolTipKey: "lbRouteDetails3_tt",
        labelKey: "lbRouteDetails"},

    txtUses1: {
        somExpression: "txtUses1",
        parentNodeKey: "part3Header",
        toolTipKey: "lbUsesReferenced3_tt",
        labelKey: "lbUsesReferenced"},

    txtUses2: {
        somExpression: "txtUses2",
        parentNodeKey: "part3Header",
        toolTipKey: "lbUses3_tt",
        labelKey: "lbUses2"},

    sfTitles: {
        somExpression: "sfTitles",
        parentNodeKey: "sfAnimalHuman"},

    sfPart3ActiveIngredientsTbl: {
        somExpression: "sfPart3ActiveIngredientsTbl",
        parentNodeKey: "sfAnimalHuman"},

    txtAppendixID: {
        somExpression: "txtAppendixID",
        parentNodeKey: "sfPart3ActiveIngredientsTbl"},

    lblPart31Title: {
        somExpression: "lblPart31Title",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbPart31Title"},

    lblPatentNumber: {
        somExpression: "lblPatentNumber",
        parentNodeKey: "sfAnimalHuman",
        toolTipKey: "lbPatentNumber_tt",
        labelKey: "lbPatentNumber"},

    ddtRefPatExpDate: {
        somExpression: "ddtRefPatExpDate",
        parentNodeKey: "sfAnimalHuman",
        toolTipKey: "lbExpDate_tt",
        labelKey: "lbExpDate"},

    lblPart32Title: {
        somExpression: "lblPart32Title",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbPart32Title"},

    lblPart3Check: {
        somExpression: "lblPart3Check",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbPart3Check"},

    sfDrugUse: {
        somExpression: "sfDrugUse",
        parentNodeKey: "sfAnimalHuman"},

    part3sfOptions1: {
        somExpression: "part3sfOptions1",
        parentNodeKey: "sfDrugUse"},

    chkSecPerson: {
        somExpression: "chkSecPerson",
        parentNodeKey: "part3sfOptions1",
        toolTipKey: "lbSecPerson_tt",
        labelKey: "lbSecPerson"},

    sfHuman: {
        somExpression: "sfHuman",
        parentNodeKey: "part3sfOptions1"},

    chkScanCopy: {
        somExpression: "chkScanCopy",
        parentNodeKey: "sfHuman",
        toolTipKey: "lbScanCopy_tt",
        labelKey: "lbScanCopy"},

    chkScanCopy2: {
        somExpression: "chkScanCopy2",
        parentNodeKey: "sfHuman",
        toolTipKey: "lbScanCopy2_tt",
        labelKey: "lbScanCopy2"},

    chkSecPerson2: {
        somExpression: "chkSecPerson2",
        parentNodeKey: "part3sfOptions1",
        toolTipKey: "lbSecPerson2_tt",
        labelKey: "lbSecPerson2"},

    sfDisinfectant: {
        somExpression: "sfDisinfectant",
        parentNodeKey: "part3sfOptions1"},

    lblSecPersonAlleg: {
        somExpression: "lblSecPersonAlleg",
        parentNodeKey: "sfAnimalHuman",
        labelKey: "lbSecPersonAlleg"},

    sfPart3Second: {
        somExpression: "sfPart3Second",
        parentNodeKey: "sfAnimalHuman"},

    part3sfOptions2: {
        somExpression: "part3sfOptions2",
        parentNodeKey: "sfPart3Second"},

    chkStatMade: {
        somExpression: "chkStatMade",
        parentNodeKey: "part3sfOptions2",
        toolTipKey: "lbStatMade_tt",
        labelKey: "lbStatMade"},

    chkPatentExp: {
        somExpression: "chkPatentExp",
        parentNodeKey: "part3sfOptions2",
        toolTipKey: "lbPatExp_tt",
        labelKey: "lbPatExp"},

    chkPatentNotValid: {
        somExpression: "chkPatentNotValid",
        parentNodeKey: "part3sfOptions2",
        toolTipKey: "lbPatNotValid_tt",
        labelKey: "lbPatNotValid"},

    chkNoClaim: {
        somExpression: "chkNoClaim",
        parentNodeKey: "part3sfOptions2",
        toolTipKey: "lbNoClaim_tt",
        labelKey: "lbNoClaim"},

    txtOther: {
        somExpression: "txtOther",
        parentNodeKey: "part3sfOptions2"},

    sfTypeOfNC: {
        somExpression: "sfTypeOfNC",
        parentNodeKey: "sfAnimalHuman"},

    sfOptions: {
        somExpression: "sfOptions",
        parentNodeKey: "sfTypeOfNC"},

    lblComply: {
        somExpression: "lblComply",
        parentNodeKey: "sfTypeOfNC",
        labelKey: "lbComply"},

    sfDosageForm: {
        somExpression: "sfDosageForm",
        parentNodeKey: "sfPart2Body"},

    txtOther: {
        somExpression: "txtOther",
        parentNodeKey: "sfDosageForm"},

    sfContainer: {
        somExpression: "sfContainer",
        parentNodeKey: "sfPart2Body"},

    sfRouteofAdmin: {
        somExpression: "sfRouteofAdmin",
        parentNodeKey: "sfPart2Body"},

    txtOther: {
        somExpression: "txtOther",
        parentNodeKey: "sfRouteofAdmin"},

    sfScheduleA: {
        somExpression: "sfScheduleA",
        parentNodeKey: "sfPart2Body"},

    sfIndicDosage: {
        somExpression: "sfIndicDosage",
        parentNodeKey: "sfPart2Body"},

    sfLabels: {
        somExpression: "sfLabels",
        parentNodeKey: "sfPart2Body"},

    sfAuthSignOfficial: {
        somExpression: "sfAuthSignOfficial",
        parentNodeKey: "sfPage1"},

    lblPart4Title1: {
        somExpression: "lblPart4Title1",
        parentNodeKey: "sfAuthSignOfficial",
        labelKey: "lbPart4Title1"},

    lblPart4Title2: {
        somExpression: "lblPart4Title2",
        parentNodeKey: "sfAuthSignOfficial",
        labelKey: "lbPart4Title2"},

    sfPart1ACompanyDetail: {
        somExpression: "sfPart1ACompanyDetail",
        parentNodeKey: "sfAuthSignOfficial"},

    txtCompanyName: {
        somExpression: "txtCompanyName",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCompanyName_tt"},

    txtAddress: {
        somExpression: "txtAddress",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufAddress_tt"},

    txtCity: {
        somExpression: "txtCity",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCity_tt"},

    Country: {
        somExpression: "ddlCountry",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCountry_tt"},

    ddlProvince: {
        somExpression: "ddlProvince",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufProvince_tt"},

    txtProvince: {
        somExpression: "txtProvince",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufProvince_tt"},

    txtPostalCode: {
        somExpression: "txtPostalCode",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufPostalCode_tt"},

    lblContactPersonMS: {
        somExpression: "lblContactPersonMS",
        parentNodeKey: "sfPart1ACompanyDetail"},

	ddl: {
		somExpression: "ddlSalutation",
		parentNodeKey: "sfPart1ACompanyDetail",
		toolTipKey:		"manufCntctSalutation_tt",
		labelKey:		"salutation",
		pickListKey: "listSalutation"},
		
    txtGivenName: {
        somExpression: "txtGivenName",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctGivenName_tt"},

    txtInitials: {
        somExpression: "txtInitials",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctInitials_tt"},

    txtSurname: {
        somExpression: "txtSurname",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctSurname_tt"},

    txtManufCntctTitle: {
        somExpression: "txtManufCntctTitle",
        parentNodeKey: "sfPart1ACompanyDetail",
        labelKey:	"lbCertTitle",
        toolTipKey: "manufCntctTitle_tt"},

    ddlLangPref: {
        somExpression: "ddlLangPref",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctLanguage_tt"},

    txtTelephone: {
        somExpression: "txtTelephone",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctTel_tt"},

    txtExtension: {
        somExpression: "txtExtension",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctTelExtn_tt"},

    txtFax: {
        somExpression: "txtFax",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctFax_tt"},

    txtEmail: {
        somExpression: "txtEmail",
        parentNodeKey: "sfPart1ACompanyDetail",
        toolTipKey: "manufCntctEmail_tt"},

    lblCertification: {
        somExpression: "lblCertification",
        parentNodeKey: "sfPart1ACompanyDetail"},

    lblRationale: {
        somExpression: "lblRationale",
        parentNodeKey: "sfPart1ACompanyDetail"},

	ddlCertSalutation: {
			somExpression: "ddlCertSalutation",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:      "lbCertSalutation_tt",
			labelKey:      "lbCertSalutation",
			pickListKey: "listSalutation"},
			
	//Copied from Regulatory Addresesses
	
	txtCertGivenName: {
			somExpression: "txtCertGivenName",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:    "lbCertGivenName_tt",
			labelKey:      "lbCertGivenName"},
		
		txtCertSurname: {
			somExpression: "txtCertSurname",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:    "lbCertSurname_tt",
			labelKey:      "lbCertSurname"},
			
		txtInitialsCert: {
			somExpression: "txtInitialsCert",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:		"lbCertInitials_tt",
			labelKey:		"nameInitials"},
		
		txtCertTitle: {
			somExpression: "posTitle",
			parentNodeKey: "sfPart1ACompanyDetail",
			toolTipKey:    "lbCertTitle_tt",
			labelKey:      "lbCertTitle"},
		
		sigCertSignature: {
			somExpression: "sigSignature",
			parentNodeKey: "sfPart1ACompanyDetail",
			labelKey:      "lbCertSignature"},
		
		ddtCertSignedOn: {
			somExpression: "ddtSignedOn",
			parentNodeKey: "sfPart1ACompanyDetail"},

		lblCertHeader: {
			somExpression: "lblCertification",
			parentNodeKey: "sfPart1ACompanyDetail",
			labelKey:      "lbCertHeader"},
	
	
	
	
	//////////////////
			
//    txtInitialsCert: {
  //      somExpression: "txtInitialsCert",
    //    parentNodeKey: "sfPart1ACompanyDetail"},

//    txtCertGivenName: {
//        somExpression: "txtCertGivenName",
//        parentNodeKey: "sfPart1ACompanyDetail"},

//    txtCertSurname: {
//        somExpression: "txtCertSurname",
//        parentNodeKey: "sfPart1ACompanyDetail"},

//    posTitle: {
//        somExpression: "posTitle",
//        parentNodeKey: "sfPart1ACompanyDetail"},

    sfSignatureBlock: {
        somExpression: "sfSignatureBlock",
        parentNodeKey: "sfPart1ACompanyDetail"},

    sfSignatureRBGroup: {
        somExpression: "sfSignatureRBGroup",
        parentNodeKey: "sfSignatureBlock"},

    rbgSignature: {
        somExpression: "rbgSignature",
        parentNodeKey: "sfSignatureRBGroup"},

    rbDigitalSignature: {
        somExpression: "rbDigitalSignature",
        parentNodeKey: "rbgSignature",
        toolTipKey: "lbDigitalID_tt",
        labelKey: "lbDigitalID"},

    rbWetSignature: {
        somExpression: "rbWetSignature",
        parentNodeKey: "rbgSignature",
        toolTiplKey: "lbDigitalImg_tt",
        labelKey: "lbDigitalImg"},

    sfSignatureDate: {
        somExpression: "sfSignatureDate",
        parentNodeKey: "sfSignatureBlock"},

    sfSignatureFields: {
        somExpression: "sfSignatureFields",
        parentNodeKey: "sfSignatureDate"},

    WetSignatureCaption: {
        somExpression: "WetSignatureCaption",
        parentNodeKey: "sfSignatureFields",
        labelKey: "sigSignature"},

    DigitalSignatureField: {
        somExpression: "DigitalSignatureField",
        parentNodeKey: "sfSignatureFields"},

    WetSignatureField: {
        somExpression: "WetSignatureField",
        parentNodeKey: "sfSignatureFields"},

    DateSignedField: {
        somExpression: "DateSignedField",
        parentNodeKey: "sfSignatureDate",
        labelKey: "lbddtCertSignedOn"},

    sfFinalizeButton: {
        somExpression: "sfFinalizeButton",
        parentNodeKey: "sfAuthSignOfficial"},

    btnFinalize: {
        somExpression: "btnFinalize",
        parentNodeKey: "sfFinalizeButton",
        labelKey: "lbFinalize"},

    Text2: {
        somExpression: "Text2",
        parentNodeKey: "sfFinalizeButton"},

    btnModify: {
        somExpression: "btnModify",
        parentNodeKey: "sfFinalizeButton",
        labelKey: "lbModify"},

    lblEmptySpace: {
        somExpression: "lblEmptySpace",
        parentNodeKey: "sfFinalizeButton"},

    officeUseOnly: {
        somExpression: "officeUseOnly",
        parentNodeKey: "sfFinalizeButton"},

    lblOfficeUseTitle: {
        somExpression: "lblOfficeUseTitle",
        parentNodeKey: "officeUseOnly",
        labelKey: "lbOfficeUseTitle"},

    lblSubNumberOfficeUse: {
        somExpression: "lblSubNumberOfficeUse",
        parentNodeKey: "officeUseOnly",
        toolTipKey: "lbSubNumber_tt",
        labelKey: "lbSubNumber"},

    ddtSignedOnOfficeUse: {
        somExpression: "ddtSignedOnOfficeUse",
        parentNodeKey: "officeUseOnly",
        toolTipKey: "lbddtSignedOnOfficeUse_tt",
        labelKey: "lbddtSignedOnOfficeUse"},

    notesOfficeUse: {
        somExpression: "notesOfficeUse",
        parentNodeKey: "officeUseOnly",
        toolTipKey: "lbnotesOfficeUse_tt",
        labelKey: "lbnotesOfficeUse"},

    script: {
        somExpression: "script",
        parentNodeKey: "root"},

    core: {
        somExpression: "core",
        parentNodeKey: "script"},

    config: {
        somExpression: "config",
        parentNodeKey: "core"},

    encode: {
        somExpression: "encode",
        parentNodeKey: "core"},

    event: {
        somExpression: "event",
        parentNodeKey: "core"},

    lang: {
        somExpression: "lang",
        parentNodeKey: "core"},

    model: {
        somExpression: "model",
        parentNodeKey: "core"},

    delegate: {
        somExpression: "delegate",
        parentNodeKey: "model"},

    factory: {
        somExpression: "factory",
        parentNodeKey: "model"},

    resources: {
        somExpression: "resources",
        parentNodeKey: "core"},

    service: {
        somExpression: "service",
        parentNodeKey: "core"},

    test: {
        somExpression: "test",
        parentNodeKey: "core"},

    util: {
        somExpression: "util",
        parentNodeKey: "core"},

    validation: {
        somExpression: "validation",
        parentNodeKey: "core"},

    zip: {
        somExpression: "zip",
        parentNodeKey: "core"},

    RegulatoryAddresses: {
        somExpression: "RegulatoryAddresses",
        parentNodeKey: "script"},

    control: {
        somExpression: "control",
        parentNodeKey: "RegulatoryAddresses"},

    nodeDefinitions: {
        somExpression: "nodeDefinitions",
        parentNodeKey: "RegulatoryAddresses"},

    resources: {
        somExpression: "resources",
        parentNodeKey: "RegulatoryAddresses"},

    DrugAppl: {
        somExpression: "DrugAppl",
        parentNodeKey: "script"},

    config: {
        somExpression: "config",
        parentNodeKey: "DrugAppl"},

    control: {
        somExpression: "control",
        parentNodeKey: "DrugAppl"},

    Part1: {
        somExpression: "Part1",
        parentNodeKey: "control"},

    Part2: {
        somExpression: "Part2",
        parentNodeKey: "control"},

    Appendix2: {
        somExpression: "Appendix2",
        parentNodeKey: "control"},

    Appendix3: {
        somExpression: "Appendix3",
        parentNodeKey: "control"},

    Appendix4: {
        somExpression: "Appendix4",
        parentNodeKey: "control"},

    model: {
        somExpression: "model",
        parentNodeKey: "DrugAppl"},

    nodeDefinitions: {
        somExpression: "nodeDefinitions",
        parentNodeKey: "DrugAppl"},

    resources: {
        somExpression: "resources",
        parentNodeKey: "DrugAppl"},

    util: {
        somExpression: "util",
        parentNodeKey: "DrugAppl"}

}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <variables>
               <script contentType="application/x-javascript"/>
               <?templateDesigner expand 1?></variables>
            <?templateDesigner expand 1?></subform>
         <variables>
            <script usehref=".\Fragments\Accessibility.xdp#som($template.form1.script.#variables.Accessibility)"/>
            <?templateDesigner expand 1?></variables>
         <?templateDesigner expand 1?></subform>
      <variables>
         <script contentType="application/x-javascript" name="Globals">var txtCountry = "";
var txtSubType = "";

var isFinalized = false;

var finalizedDate = new Date();

var cLog = script.core.util.Log;
var paginationRawValue = null;

var ingredIndex;
function genUniqueID()
{
	if(!this.counter) this.counter = 0;
	this.counter++;
	//cLog.trace(this.counter);
	
	return this.counter;
}

var ddlDosageFlag = -1;
var ddlDosageFlag1 = -1;
var otherFlag = -1;
var otherFlag1 = -1;
</script>
         <script contentType="application/x-javascript" name="countryScript">
// This script object controls the interaction between the country and state/province Drop-down lists.

// The array contains the country and the corresponding states/provinces.


//var country_arr = new Array("Afghanistan", "Albania", "Algeria", "American Samoa", "Angola", "Anguilla", "Antartica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Ashmore and Cartier Island", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Clipperton Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czeck Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Europa Island", "Falkland Islands (Islas Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "Gambia, The", "Gaza Strip", "Georgia", "Germany", "Ghana", "Gibraltar", "Glorioso Islands", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Holy See (Vatican City)", "Honduras", "Hong Kong", "Howland Island", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Ireland, Northern", "Israel", "Italy", "Jamaica", "Jan Mayen", "Japan", "Jarvis Island", "Jersey", "Johnston Atoll", "Jordan", "Juan de Nova Island", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia, Former Yugoslav Republic of", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Man, Isle of", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia, Federated States of", "Midway Islands", "Moldova", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcaim Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Reunion", "Romainia", "Russia", "Rwanda", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Scotland", "Senegal", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and South Sandwich Islands", "Spain", "Spratly Islands", "Sri Lanka", "Sudan", "Suriname", "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Tobago", "Toga", "Tokelau", "Tonga", "Trinidad", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "Uruguay", "USA", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Virgin Islands", "Wales", "Wallis and Futuna", "West Bank", "Western Sahara", "Yemen", "Yugoslavia", "Zambia", "Zimbabwe");
var myCountries = new Array(new Array(2), new Array(14), new Array(52)); // Create a two-dimensional array.
var cLog = script.core.util.Log;	
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;													   				 // For each country, add a 'new Array(number of state/province +1)'.

// Define the country and the corresponding states/provinces.
// The array syntax is arrayName[index][index].
// The first index number represents the country,
// the second index number is the actual data value.

myCountries[0][0] = " ";		// The first items in the Drop-dowm Lists should be blank.
myCountries[0][1] = " ";
myCountries[1][0] = "Canada";	// The first data value is the country name,
myCountries[1][1] = "Alberta";	// the rest are states/provinces.
myCountries[1][2] = "British Columbia";
myCountries[1][3] = "Manitoba";
myCountries[1][4] = "New Brunswick";
myCountries[1][5] = "Newfoundland and Labrador";
myCountries[1][6] = "Northwest Territories";
myCountries[1][7] = "Nova Scotia";
myCountries[1][8] = "Nunavut";
myCountries[1][9] = "Ontario";
myCountries[1][10] = "Prince Edward Island";
myCountries[1][11] = "Quebec";
myCountries[1][12] = "Saskatchewan";
myCountries[1][13] = "Yukon";
myCountries[2][0] = "United States";	// This is a new country, see how the first number is now [1].
myCountries[2][1] = "Alabama";
myCountries[2][2] = "Alaska";
myCountries[2][3] = "Arizona";
myCountries[2][4] = "Arkansas";
myCountries[2][5] = "California";
myCountries[2][6] = "Colorado";
myCountries[2][7] = "Connecticut";
myCountries[2][8] = "Delaware";
myCountries[2][9] = "District of Columbia";
myCountries[2][10] = "Florida";
myCountries[2][11] = "Georgia";
myCountries[2][12] = "Hawaii";
myCountries[2][13] = "Idaho";
myCountries[2][14] = "Illinois";
myCountries[2][15] = "Indiana";
myCountries[2][16] = "Iowa";
myCountries[2][17] = "Kansas";
myCountries[2][18] = "Kentucky";
myCountries[2][19] = "Louisiana";
myCountries[2][20] = "Maine";
myCountries[2][21] = "Maryland";
myCountries[2][22] = "Massachusetts";
myCountries[2][23] = "Michigan";
myCountries[2][24] = "Minnesota";
myCountries[2][25] = "Mississippi";
myCountries[2][26] = "Missouri";
myCountries[2][27] = "Montana";
myCountries[2][28] = "Nebraska";
myCountries[2][29] = "Nevada";
myCountries[2][30] = "New Hampshire";
myCountries[2][31] = "New Jersey";
myCountries[2][32] = "New Mexico";
myCountries[2][33] = "New York";
myCountries[2][34] = "North Carolina";
myCountries[2][35] = "North Dakota";
myCountries[2][36] = "Ohio";
myCountries[2][37] = "Oklahoma";
myCountries[2][38] = "Oregon";
myCountries[2][39] = "Pennsylvania";
myCountries[2][40] = "Rhode Island";
myCountries[2][41] = "South Carolina";
myCountries[2][42] = "South Dakota";
myCountries[2][43] = "Tennessee";
myCountries[2][44] = "Texas";
myCountries[2][45] = "Utah";
myCountries[2][46] = "Vermont";
myCountries[2][47] = "Virginia";
myCountries[2][48] = "Washington";
myCountries[2][49] = "West Virginia";
myCountries[2][50] = "Wisconsin";
myCountries[2][51] = "Wyoming";




// This function will populate the country Drop-down List.
// This function is called from the initialize event of the country Drop-down List.

function getCountries(dropdownField)
{
   dropdownField.clearItems();
   for (var i=0; i &lt; myCountries.length; i++)
      dropdownField.addItem(myCountries[i][0]);
}


// This function will populate the state/province Drop-down List for any event EXCEPT the change event. 
// This function is called by the initialize event of the state/province Drop-down List.
function getStates(countryField, dropdownField)
{   
    		
    dropdownField.clearItems();							// Clear the items of the Drop-down List.
    dropdownField.rawValue = ""; 						// Clear the selection in the drop down list.
    
    for (var i=0; i &lt; myCountries.length; i++) 			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == countryField) 			// Check to see if they match.
      {
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
	  	 }
	  }
	  
	dropdownField.Items.Insert(0, new ListItem("", String.Empty)); // Insert a blank entry at the top
	  
}


function clearItems(dropdownField)
{   

    dropdownField.clearItems();										// Clear the items of the Drop-down List.
    dropdownField.rawValue = "";  									// Clear the selection in the Drop-down List.
    dropdownField.items.Insert(0, new ListItem("", String.Empty));  // Insert a blank entry at the top
   
}

// This function will populate the state/province Drop-down List for the change event. 
// This function is called by the change event of the country Drop-down List.
// The first parameter is simply a pointer to the xfa object model.

function getStatesOther(myXfa, dropdownField) 
{                                              
   dropdownField.clearItems();							// Clear the items of the Drop-down list.
   for (var i=0; i &lt; myCountries.length; i++)			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == myXfa.event.newText)		// Check to see if they match. Note: we have to use the event.newText in this case because
	  {                                            		// the change hasn't been committed yet.
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
 		 }
	  }
}

function isValidEmail(strEmail){
  validRegExp = /^[^@]+@[^@]+.[a-z]{2,}$/i;
  
   // search email text for regular exp matches
    if (strEmail.rawValue.search(validRegExp) == -1) 
   {
      //console.println("A valid e-mail address is required.\nPlease amend and retry!");
      //xfa.host.messageBox("A valid e-mail address is required. Please amend and retry!");
      //xfa.host.messageBox("A valid e-mail address is required. Please amend and retry! ", "Invalid Email Address", 3, 1);

      return false;
    } 
    return true; 
}

function isValidPhoneNo(strPhone){
 
   validRegExp = /^[0-9]+$/;

  
   // search email text for regular exp matches
    if (strPhone.rawValue.search(validRegExp) == -1) 
   {
      xfa.host.messageBox("A valid phone number is required (6131234567). Please amend and retry! ", "Invalid Phone Number", 3, 1);
      
      //xfa.host.messageBox("This is a message", "This is a title", 3, 1);


      return false;
    } 
    
    if (strPhone.rawValue.length &lt; 10) {
    	xfa.host.messageBox("A valid phone number is required (6131234567). Please amend and retry! ", "Invalid Phone Number", 3, 1);
    	return false;
    }
    
    return true; 
}

function checkForFieldValidity(strField){
  
  if (strField.rawValue == "") {
      xfa.host.messageBox("This field is mandatory!");

      return false;
    } 
    return true; 
}

function isPart2Completed() {

  cLog.trace ("cDrugApplModel.getDosageIsSelected(): " + cDrugApplModel.getDosageIsSelected());
  var otherDosageContinue = false;
  var otherRouteContinue = false;
  
  
  if (cDrugApplModel.getDosageValueChanged() &amp;&amp; 
       cDrugApplModel.getDosageIsSelected() == 0 ) {
 		
        otherDosageContinue = true;
        cLog.trace ("otherDosageContinue is true");
     
  }
  else {
  		cLog.trace ("otherDosageContinue is false");
  
  }
  if (cDrugApplModel.getRouteValueChanged() &amp;&amp; 
       cDrugApplModel.getRouteIsSelected() == 0 ) {
 	
        otherRouteContinue = true;
        cLog.trace ("otherRouteContinue  is true");
     
  }
  else {
  		cLog.trace ("otherRouteContinue  is false");
  
  }
  if (cDrugApplModel.getDosageIsSelected()!= 0 ) {
    cLog.trace ("Other Dosage Raw Value: " + DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtOtherDosage.rawValue);
    if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtOtherDosage.rawValue != " ") {
      otherDosageContinue  = true;
      cLog.trace ("if cDrugApplModel.getDosageIsSelected()!= 0 otherDosageContinue   is true");
    }
    else {
    	cLog.trace ("otherDosageContinue   is false");
    }
    
  }
  else {
  
  	if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtOtherDosage.rawValue != null) {
  		otherDosageContinue  = true;
  	}
  }
  
  if (cDrugApplModel.getRouteIsSelected()!= 0 ) {
  
    if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtOtherRoute.rawValue != " ") {
      otherRouteContinue  = true;
      cLog.trace ("cDrugApplModel.getRouteIsSelected() otherRouteContinue   is true");
    }
    
  }
  else {
  	if (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtOtherRoute.rawValue != null) {
  		otherRouteContinue  = true;
  	}
  
  }
  if (!DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtBrandName1.isNull &amp;&amp;
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlHumanVetSecond.isNull &amp;&amp; 
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtStrength.isNull &amp;&amp;
      
       otherDosageContinue &amp;&amp;
       
       otherRouteContinue &amp;&amp;
       
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtUses.isNull) {
  
  	 cLog.trace ("fifth loop is true");
 	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.presence = "visible";
 	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfNonMedIngredients.lblPart3Title1.presence = "hidden"
  	
  }
  else {
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.presence = "hidden";
    cLog.trace ("sixth loop is true");
  	//xfa.host.messageBox("ddlHumanVet is null!");
  }
}
   
//shuffle = function(o){ //v1.0
//	for(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
//	return o;
//};

function randomize() {
	var ran_number=Math.floor(Math.random()*100); 

	//You can also use two steps if it seems to make more sense: 

	//var ran_unrounded=Math.random()*5;
	//var ran_number=Math.floor(ran_unrounded); 
	
	return ran_number;
}

function addLeadingZeroes(num){
	if (num&lt;10) num="000"+num;
	else if (num&lt;100) num="00"+num;
	else if (num&lt;1000) num="0"+num;
	return num;
}

function generateTrackingNumber(i) {

	var x = new Array(9999);
	var zeros = '000';
	for (var i=1; i&lt;=9999; ++i) x[i] = zeros.substring(String(i).length - 1) + i;
	return x;
}

function countMyself() {     

	// Check to see if the counter has been initialized     

	if ( typeof countMyself.counter == 'undefined' ) {         
	 
		// It has not... perform the initilization         
		
		countMyself.counter = 0;    	
	}     
	
	// Do something stupid to indicate the value     
	 

	
	xfa.host.messageBox (++countMyself.counter);
	 
}  

function isValidDate (value) {

  
  var dateRegExp = new RegExp("^([0-9]{4})-([0-9]{2})-([0-9]{2})$");
  
  var isMatch = dateRegExp.exec(value.rawValue);
  
  if (!isMatch) { 
  
       return false;
  }
  
  return true;
  
} 

function validateDateValue(field) {
	
		cLog.info("... date rawValue: "+field.rawValue);
		
		var language = cDrugApplModel.getLanguage();
		
		var regExp1 = /^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/; // DD/MM/YYYY(DD-MM-YYYY)
		var regExp2 = /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/; // YYYY/MM/DD(YYYY-MM-DD)
		var regExpA = /^\d+\-\d+\-\d+$/; 
		var regExpB = /^\d+\/\d+\/\d+$/; 
		var regExpC = /^(0[1-9]|[12]\d|3[01])(0[1-9]|1[012])\d{4}$/;
		var regExpD = /^\d{4}(0?[1-9]|1[012])(0?[1-9]|[12][0-9]|3[01])$/;
		var regExpE = /(\d{2})/ig;

		var noChars = false;
		
		var year = null;
	    var month = null;
	    var day   = null;
		
		if (field.rawValue.toString().length &lt; 8) {
			cLog.trace ("yymmdd");
			if (language == "en") {
		      noChars = true;
		      //cLog.trace ("EXECUTE IF 1 english...........................");
		      xfa.host.messageBox ( "Please enter valid date. (ex. YYYY-MM-DD)" , "Invalid Date Format", 3, 1);
		      xfa.host.setFocus(field);
		    }
		    else {
		       noChars = true;
		       //cLog.trace ("EXECUTE IF 2 english...........................");
		       xfa.host.messageBox( "Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Format de date invalide", 3, 1);
		       xfa.host.setFocus(field);
		    }
			return;
		}
		
		if ( regExpD.test(field.rawValue) ) {
			cLog.trace ("yyyymmdd");
			
			var dateStr = field.rawValue.toString();
			
			year = dateStr .substr(0,4);
			month = dateStr .substr(4,2);
			day = dateStr .substr(6,2);
			
			cLog.trace ("year: "  + year);
			cLog.trace ("month: " + month);
			cLog.trace ("day: "   + day);
			
			if (parseInt(year) &lt; 1900) {
			
				if (noChars == false) {
		           if (language == "en") {
		              cLog.trace("INCORRECT date!!!!!!!!!!!!!!!!");
		              xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date", 3, 1); 
		              xfa.host.setFocus(field);	
		           }
		           else {
		              xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Date non Valide", 3, 1);
		              xfa.host.setFocus(field);
		           }
		         }
			
			}
			
			if (! (year.isNull || month.isNull || day.isNull) ) {
		    var date  = new Date(year, month - 1, day) ;
		    
		    cLog.trace ("Expression 3: year: " + year + " month: " + month + " day: " + day);
		    
		    if ((date.getMonth()+1 != month) ||
		        (date.getDate()    != day )  ||
		        (date.getFullYear()!= year)) {	
		        
		        if (noChars == false) {
		           if (language == "en") {
		              cLog.trace("INCORRECT date!!!!!!!!!!!!!!!!");
		              xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date", 3, 1); 	
		              xfa.host.setFocus(field);
		           }
		           else {
		              xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Date non Valide", 3, 1);
		              xfa.host.setFocus(field);
		           }
		         }
		            		
				}
			else { 
		 	   cLog.trace("Correct date");
		 	   return null;
			} 
		} else {
			xfa.host.messageBox ("Error: Date is NULL.");
		}
			return;
		} 
		
		
		
		if ( regExpC.test(field.rawValue) ) {
			cLog.trace ("ddmmyyyy");
			if (language == "en") {
		      //noChars = true;
		      //cLog.trace ("EXECUTE IF 1 english...........................");
		      xfa.host.messageBox ( "Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date Format", 3, 1);
		      xfa.host.setFocus(field);
		    }
		    else {
		       //noChars = true;
		       //cLog.trace ("EXECUTE IF 2 english...........................");
		       xfa.host.messageBox( "Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Format de date invalide", 3, 1);
		       xfa.host.setFocus(field);
		    }
			return;
		} 
		else {
			cLog.trace ("BNOPPSPSPPSPSPSPSPSP");
		
		}
		var splitChar = "-";
		if ( regExpA.test(field.rawValue) ) {
			splitChar = "-";
			cLog.trace ("char -");
		} else if ( regExpB.test(field.rawValue) ){
			splitChar = "/";
			cLog.trace ("char /");
		} else {
		
		    if (language == "en") {
		      noChars = true;
		      cLog.trace ("EXECUTE IF 1 english...........................");
		      xfa.host.messageBox ( "Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date Format", 3, 1);
		      xfa.host.setFocus(field);
		    }
		    else {
		       noChars = true;
		       cLog.trace ("EXECUTE IF 2 english...........................");
		       xfa.host.messageBox( "Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Format de date invalide", 3, 1);
		       xfa.host.setFocus(field);
		    }
			
		}
		
		year = null;
	    month = null;
	    day   = null;
	
		if ( regExp1.test(field.rawValue) )	{ //(DD-MM-YYYY)
			if (!(field.isNull || field.rawValue == "")) {
				year  = field.rawValue.split(splitChar)[2] ;
			    month = field.rawValue.split(splitChar)[1] ;
			    day   = field.rawValue.split(splitChar)[0] ;
			    
			    cLog.trace ("Expression 1: year: " + year + " month: " + month + " day: " + day);
			}
		} else if ( regExp2.test(field.rawValue) ) { //(YYYY-MM-DD)
			if (!(field.isNull || field.rawValue == "")) {
				year  = field.rawValue.split(splitChar)[0] ;
			    month = field.rawValue.split(splitChar)[1] ;
			    day   = field.rawValue.split(splitChar)[2] ;
			    
			    cLog.trace ("Expression 2: year: " + year + " month: " + month + " day: " + day);
			}	
		} else {
		
		   if (noChars == false) {
		        cLog.trace ("EXECUTE IF 2...........................");
		     	if (language == "en") {
		        	xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date", 3, 1);
		        	xfa.host.setFocus(field);
		        
		     	}
		     
		     	else {
		       		xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Date non Valide", 3, 1);
		       		xfa.host.setFocus(field);
		        
		     	}
		   }
				
		}
		
			    
		if (! (year.isNull || month.isNull || day.isNull) ) {
		
		    var date  = new Date(year, month - 1, day) ;
		    
		    cLog.trace ("Expression 3: year: " + year + " month: " + month + " day: " + day);
		    
		    if ((date.getMonth()+1 != month) ||
		        (date.getDate()    != day )  ||
		        (date.getFullYear()!= year)) {	
		        
		        if (noChars == false) {
		           if (language == "en") {
		              cLog.trace("INCORRECT date!!!!!!!!!!!!!!!!");
		              xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date", 3, 1); 	
		              xfa.host.setFocus(field);
		           }
		           else {
		              xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Date non Valide", 3, 1);
		              xfa.host.setFocus(field);
		           }
		         }
		            		
				}
			else { 
		 	   cLog.trace("Correct date");
		 	   return null;
			} 
		} else {
			xfa.host.messageBox ("Error: Date is NULL.");
		}
	
}
function populateDate(value) {

    
    var language = cDrugApplModel.getLanguage();	
    
	if (!(value.isNull || value.rawValue == "")) {
	
		if (value.resolveNode("DrugAppl.#variables.countryScript").isValidDate(value) != null)  {
	
	   		if (language == "en") {
	   		
	   		  xfa.host.messageBox("Date must be in this format: YYYY-MM-DD", "Invalid Date Format", 3, 1);
	   		}
	   		
	   		else {
	   		  xfa.host.messageBox("La date doit être au format suivant: AAAA-MM-JJ", "Format de date invalide", 3, 1);
	   		}
	   		xfa.host.setFocus(value);
	   	
		}
		else {
		
		   var year  = value.rawValue.split("-")[0] ;
	    	var month = value.rawValue.split("-")[1] ;
	    	var day   = value.rawValue.split("-")[2] ;
	    	var date  = new Date(year, month - 1, day) ;
	    
	    	if ((date.getMonth()+1 != month) ||
	    	    (date.getDate()    != day )  ||
	    	    (date.getFullYear()!= year)) {
	        
	             if (language == "en") {
	             	xfa.host.messageBox("Invalid Day, Month, or Year range. Please correct and submit again.", "Invalid Date", 3, 1); 
	             }
	             else {
	                xfa.host.messageBox ("Journée Blancs, Mois, ou Année gamme. S'il vous plaît corriger et soumettre à nouveau", "Date non Valide", 3, 1);
	             }
	      	      
				xfa.host.setFocus(value);	
	       }
			else { 
	 	 	  cLog.trace("Correct date"); 
			 } 
		
		}
		
		
	}
	
	}
	
	function isSecPersonChecked() {
	
	  return  (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson.rawValue == 1) ||
	  		  (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.sfHuman.chkScanCopy.rawValue == 1) ||
	  		  (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.sfDrugUse.part3sfOptions1.chkSecPerson2.rawValue == 1)
	
	}
	
	function validatePhoneNumber ( phone) {
	
		var countrySel = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlCountry.rawValue;


		if (countrySel  == "CA" || countrySel == "US") {
			var cFormatValidator = script.core.validation.BasicFormatValidator;
			var cLog = script.core.util.Log;
			var fieldType = null;
			
			//cLog.info("txtEmail::exit, actionName: " + fieldType );
			//cLog.info("txtEmail::exit, sourceNode: " + this );
			//cLog.info("txtEmail::exit, this.rawValue: " + this.rawValue);
			
			try
			{
				// set up event object
				cLog.info( phone.rawValue + " ::exit, invoking ActionEvent.exit" );	
				var aValidator = cFormatValidator.createInstance();
				var validationResult;
				if( phone.rawValue != null ) {
				
				    //cLog.trace ("sfPart1ACompanyDetail.txtEmail.rawValue: " + txtTelephone.rawValue);
					
					fieldType = cFormatValidator.TELEPHONE;
					
					if( fieldType != null ) {
						validationResult = aValidator.validateFieldFormat(phone,fieldType);
						cLog.info( phone.rawValue + "::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
					}
					else {
					    cLog.trace ("fieldType is NULL");
					}
					   
					if( validationResult != null ) {
						app.alert( validationResult + " (6131234567)");
						xfa.host.setFocus(phone);
						return 1;
					}
				}
			}
			catch(exception)
			{
				cLog.warn("Problem with Phone ::exit", exception);
			}
		}
	
	    return 0;
	}
	
	var DATE_VALID = 0;
	var DATE_ERR_NOTDATE = 1;
	var DATE_ERR_INVALID_MONTH = 3;
	
	function _checkDateOk(value)
{
	if(!value) return(DATE_VALID); //does not check for empty
		
	var reg = /^\d{4}(\-|\/|\.)\d{2}\1\d{2}$/;
	
	//1) check if in proper format	
	var check = reg.test(value); 
	if (check!=true) return(DATE_ERR_NOTDATE); 
		
	var strSeparator = '-'
	var arrayDate = value.split(strSeparator); 
	var intDay = parseInt(arrayDate[2],10); 
	var intMonth = parseInt(arrayDate[1],10);
	var intYear = parseInt(arrayDate[0]);
    	 	
    //check if month is valid ie 1-12
    var maxDaysInMonth=_getMaxDayRange(arrayDate[1]);
    
    if(!maxDaysInMonth &amp;&amp; intMonth!==2) {
  	  	 return(DATE_ERR_INVALID_MONTH);  	 
    }
 	//month passed, check if day is valid
 	
 	if (intMonth === 2) {      //since lookup will return null
	      maxDaysInMonth=28;
	      if( _isLeapYear(intYear)){  
	      		maxDaysInMonth=29;
	      }		
	 }     		
	if(intDay &lt;=  maxDaysInMonth &amp;&amp; intDay != 0){
	        	return DATE_VALID; //found in lookup table, good date
	}else{
	
		return _getDayErrorType(maxDaysInMonth);
	}
	     
   return(DATE_ERR_NOTDATE);
}//end fn

/*
* Calculates the max number of days for a given month. Does not calculate for Febuary
* @param month: the month to lookup. Valid values are 1-12 as strings!
* @returns: the integer value of the max number of days, null if not found
*/
function _getMaxDayRange(month){

	 var arrayLookup = { 	'01' : 31,'03' : 31, 
	                      	'04' : 30,'05' : 31,
	                      	'06' : 30,'07	' : 31,
	                      	'08' : 31,'09' : 30,
	                      	'10' : 31,'11' : 30,'12' : 31}

	return(arrayLookup[month]);

}

/*
*	Determines the correct day error message
*	@param maxDays- the max number of days allowed in a month
*	@returns- the error message
*
*/
function _getDayErrorType(maxDays){

	var errorType;
	
	switch(maxDays){
	
		case 28:
			errorType=DATE_ERR_INVALID_DAY_28;
			break; 
		
		case 29:
			errorType=DATE_ERR_INVALID_DAY_29;
			break; 
		
		case 30:
			errorType=DATE_ERR_INVALID_DAY_30;
			break; 
			
		case 31:
			errorType=DATE_ERR_INVALID_DAY_31;
			break; 
		
	
	}
	return errorType;
}

/*
*	Determines if a year is a leap year using the famous standard alg
*	@param intYear- the integer year value to check
*	@returns- true if a leap year
*
*/
function _isLeapYear(intYear){

	if ((intYear % 4 == 0) &amp;&amp; (intYear % 100 != 0) ||  (intYear % 400 == 0)) {
		 // year div by 4 and ((not div by 100) or div by 400) =ok
		 return true;
	} 
	return false;
}

function isDataEntered(field) {

	if ((field.rawValue != null) &amp;&amp; (field.rawValue != "") &amp;&amp; (field.rawValue != " ")) {
	
		cLog.trace ("FIELD COLOR: " + field.fillColor);
		if ((field.fillColor != "255,250,250") &amp;&amp; (field.fillColor != "255,255,255")) {
			field.fillColor = "255,250,250";
		}
		
		return true;
	}
	
	return false;
}
</script>
         <?templateDesigner expand 0?></variables>
      <subform w="203.2mm" minH="6.985mm" layout="tb" name="sfRouteofAdmin" presence="hidden">
         <field name="txtOther" minH="6.985mm" w="177.802mm" presence="hidden">
            <ui>
               <textEdit multiLine="1"/>
            </ui>
            <font typeface="Myriad Pro"/>
            <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <validate nullTest="error" scriptTest="warning">
               <message>
                  <text name="nullTest"/>
               </message>
            </validate>
            <caption reserve="42.76mm">
               <value>
                  <text>Route of Administration Details*</text>
               </value>
               <para vAlign="middle"/>
               <font size="8pt" typeface="Myriad Pro"/>
            </caption>
            <value>
               <text> </text>
            </value>
            <para vAlign="middle"/>
         </field>
         <border>
            <edge/>
            <corner thickness="0.175mm"/>
         </border>
         <?templateDesigner expand 1?></subform>
      <proto/>
      <desc>
         <text name="version">$Revision No:1.25$</text>
         <text name="created">$Creation date:$</text>
         <text name="department">Health Canada - Sante Canada</text>
         <text name="creator">$Author: Bianca Andreescu$</text>
         <text name="issued">$Revision Date: 2015-08-17$</text>
         <text name="title">FORM V: DECLARATION RE: PATENT LIST</text>
      </desc>
      <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
      <event activity="initialize" name="event__initialize">
         <script contentType="application/x-javascript">


var cFormHandler=script.DrugAppl.control.FormHandler;

cFormHandler.initialize();
</script>
      </event>
      <event activity="docReady" ref="$host" name="event__docReady">
         <script contentType="application/x-javascript">if (xfa.host.name != "XFAPresentationAgent") {
  event.target.zoomType = zoomtype.fitP;
}

</script>
      </event>
      <?templateDesigner expand 1?>
      <?templateDesigner Hyphenation excludeInitialCap:1, excludeAllCaps:1, wordCharCnt:7, remainCharCnt:3, pushCharCnt:3?>
      <?renderCache.subset "Myriad Pro" 0 0 ISO-8859-1 4 268 71 00010001000400080009000A000B000D000E000F00100012001300150016001B001C00220023002400250026002700280029002A002C002D002E002F00300031003300340035003600370038003A003B00420043004400450046004700480049004A004C004D004E004F005000510053005400550056005700580059005A005B005C005E00CE  #’()*,-./1245:;ABCDEFGHIKLMNOPRSTUVWYZabcdefghiklmnoprstuvwxyz{}ç?>
      <?renderCache.subset "Myriad Pro" 1 0 ISO-8859-1 4 212 53 00010009000A000B000D000E000F00120013001400150016001B00220024002500260027002A002D002E002F00300031003300340035003700420043004400450046004700480049004A004C004D004E004F0050005100520053005400550056005700580059005A0068 ()*,-.12345:ACDEFILMNOPRSTVabcdefghiklmnopqrstuvwxy'?>
      <?renderCache.subset "Myriad Pro" 1 1 ISO-8859-1 4 76 19 0001001B0024004200440046004700480049004A004C004D004F005000510053005400550058 :Cacefghiklnoprstw?>
   </subform>
   <?templateDesigner DefaultPreviewDynamic 1?>
   <?originalXFAVersion http://www.xfa.org/schema/xfa-template/2.8/?>
   <?templateDesigner Grid show:0, snap:0, units:0, color:ff8080, origin:(0,0), interval:(125000,125000), objsnap:0, guidesnap:0, pagecentersnap:-1749206615?>
   <?templateDesigner SaveTaggedPDF 0?>
   <?templateDesigner SavePDFWithEmbeddedFonts 0?>
   <?templateDesigner SavePDFWithLog 0?>
   <?templateDesigner Zoom 139?>
   <?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?>
   <?templateDesigner FormTargetVersion 30?>
   <?templateDesigner DefaultLanguage JavaScript?>
   <?templateDesigner DefaultRunAt client?>
   <?acrobat JavaScript strictScoping?>
   <?PDFPrintOptions embedViewerPrefs 0?>
   <?PDFPrintOptions embedPrintOnFormOpen 0?>
   <?PDFPrintOptions scalingPrefs 0?>
   <?PDFPrintOptions enforceScalingPrefs 0?>
   <?PDFPrintOptions paperSource 0?>
   <?PDFPrintOptions duplexMode 0?>
   <?templateDesigner DefaultPreviewType interactive?>
   <?templateDesigner DefaultPreviewPagination simplex?>
   <?templateDesigner XDPPreviewFormat 20?>
   <?templateDesigner DefaultCaptionFontSettings face:Myriad Pro;size:8;weight:normal;style:normal?>
   <?templateDesigner DefaultValueFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner ValidationMessaging noMessages?></template>
<config xmlns="http://www.xfa.org/schema/xci/3.0/">
   <agent name="designer">
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo/>
      </pdf>
   </agent>
   <present>
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo>
            <embed>0</embed>
         </fontInfo>
         <tagged>0</tagged>
         <version>1.7</version>
         <adobeExtensionLevel>5</adobeExtensionLevel>
      </pdf>
      <common/>
      <script>
         <runScripts>server</runScripts>
      </script>
      <cache>
         <macroCache/>
      </cache>
      <xdp>
         <packets>*</packets>
      </xdp>
   </present>
   <psMap>
      <font typeface="Nimrod" psName="Nimrod-Bold" weight="bold" posture="normal"/>
   </psMap>
   <acrobat>
      <common>
         <validationMessaging>noMessages</validationMessaging>
      </common>
   </acrobat>
</config>
<localeSet xmlns="http://www.xfa.org/schema/xfa-locale-set/2.7/">
   <locale name="en_CA" desc="English (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">D-MMM-YY</datePattern>
         <datePattern name="short">DD/MM/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="fr_CA" desc="French (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>janvier</month>
            <month>février</month>
            <month>mars</month>
            <month>avril</month>
            <month>mai</month>
            <month>juin</month>
            <month>juillet</month>
            <month>août</month>
            <month>septembre</month>
            <month>octobre</month>
            <month>novembre</month>
            <month>décembre</month>
         </monthNames>
         <monthNames abbr="1">
            <month>janv.</month>
            <month>févr.</month>
            <month>mars</month>
            <month>avr.</month>
            <month>mai</month>
            <month>juin</month>
            <month>juil.</month>
            <month>août</month>
            <month>sept.</month>
            <month>oct.</month>
            <month>nov.</month>
            <month>déc.</month>
         </monthNames>
         <dayNames>
            <day>dimanche</day>
            <day>lundi</day>
            <day>mardi</day>
            <day>mercredi</day>
            <day>jeudi</day>
            <day>vendredi</day>
            <day>samedi</day>
         </dayNames>
         <dayNames abbr="1">
            <day>dim.</day>
            <day>lun.</day>
            <day>mar.</day>
            <day>mer.</day>
            <day>jeu.</day>
            <day>ven.</day>
            <day>sam.</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>av. J.-C.</era>
            <era>ap. J.-C.</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE D MMMM YYYY</datePattern>
         <datePattern name="long">D MMMM YYYY</datePattern>
         <datePattern name="med">YY-MM-DD</datePattern>
         <datePattern name="short">YY-MM-DD</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">HH' h 'MM' min 'SS' s 'Z</timePattern>
         <timePattern name="long">HH:MM:SS Z</timePattern>
         <timePattern name="med">HH:MM:SS</timePattern>
         <timePattern name="short">HH:MM</timePattern>
      </timePatterns>
      <dateTimeSymbols>GaMjkHmsSEDFwWxhKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">z,zz9.99 $|(z,zz9.99$)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">,</numberSymbol>
         <numberSymbol name="grouping"> </numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">,</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="en_US" desc="English (United States)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">MMM D, YYYY</datePattern>
         <datePattern name="short">M/D/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99|($z,zz9.99)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">USD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
</localeSet>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
   <xfa:data xfa:dataNode="dataGroup"/>
</xfa:datasets>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2011/06/07-10:39:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about="">
         <xmp:MetadataDate>2015-08-17T15:01:57Z</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe LiveCycle Designer ES 10.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about="">
         <pdf:Producer>Adobe LiveCycle Designer ES 10.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" rdf:about="">
         <xmpMM:DocumentID>uuid:6b0e23fd-4f8c-443a-90cb-39392bbf0e2b</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:be530e1c-3012-4685-a072-8c1b5ac41878</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about="">
         <dc:format>application/pdf</dc:format>
         <dc:date>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Creation date:$</rdf:value>
                  <dc:element-refinement>dc:created</dc:element-refinement>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Revision Date: 2015-08-17$</rdf:value>
                  <dc:element-refinement>dc:issued</dc:element-refinement>
               </rdf:li>
            </rdf:Seq>
         </dc:date>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>$Author: Bianca Andreescu$</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">FORM V: DECLARATION RE: PATENT LIST</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description xmlns:desc="http://ns.adobe.com/xfa/promoted-desc/" rdf:about="">
         <desc:version rdf:parseType="Resource">
            <rdf:value>$Revision No:1.25$</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:version>
         <desc:department rdf:parseType="Resource">
            <rdf:value>Health Canada - Sante Canada</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:department>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
   <annots/>
</xfdf></xdp:xdp>
