<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="AdobeLiveCycleDesignerES_V10.0.2.20120224.1.869952" APIVersion="3.5.12002.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2015-09-21T19:51:03Z" uuid="245e72c5-2151-49d6-af77-2df97d73226e">
<template xmlns="http://www.xfa.org/schema/xfa-template/3.0/">
   <?formServer defaultPDFRenderFormat acrobat9.1dynamic?>
   <?formServer allowRenderCaching 0?>
   <?formServer formModel client?>
   <subform name="DrugAppl" layout="tb" locale="en_CA" restoreState="auto">
      <pageSet>
         <pageArea name="Page1" id="Page1" initialNumber="1">
            <contentArea w="203.2mm" h="252.336mm" x="6.35mm" y="13.508mm" id="contentArea_ID"/>
            <medium stock="default" short="215.9mm" long="279.4mm"/>
            <draw h="6.35mm" name="imgHCLogo" w="47.625mm" y="6.35mm" x="6.35mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/bmp">Qk1bkAAAAAAAAAAAAAAoAAAALAEAACkAAAABABgAAAAAACSQAAAAAAAAAAAAAAAAAAAAAAAAAgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/
+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+///8///8//j///j/+//3+P/38fj/
8fj/8//3+v/3///8//7///3///3/+v/8+v/8/f/////////+///++v/8+v/8//7///7////+///+
5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7+
+v3/+v3////3///3+v//+v/////+///+/f36///8//j//vb++//36vHp8fj/8fj/8//3+v/3+PXy
/v3++/n7//3/+v/8+v/8/f/////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7
AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
/////////////////////Pz8+vr6////////////////////////////////9/f32trapqameXl5
aGhodXV1mJiY3d3d+fn5////8/Pz////8/Pz/////v7+vLy8fX19Z2dni4uLurq69/f3////vLy8
xsbG0NDQ/f39/v7+tbW1uLi48vLy+fn5+vr6/Pz8////+Pj4o6Ojv7+/9vb2/f39////+fn5tra2
hISEZ2dnhISEwsLC7e3t////vb29w8PDzc3N/////f39+vr6////zs7OhISEY2NjlJSU2dnZ+/v7
t7e3vLy8////////+Pj4+vr6ubm5gYGBbm5uf39/z8/P+/v7////srKywsLC3d3d////////////
////////////////////////////////////////////////////////////////////////////
////////////////+/v7////+/v7/v7+////+vr65ubmlpaWYGBgREREQkJCW1tbj4+P3t7e/f39
+vr6/v7+/f398/Pz////ycnJdnZ2Q0NDS0tLaGhoqKio////8PDwc3Nzo6Oj8/Pz////3t7egICA
s7Oz////9vb2////////////sLCwhISEzs7O/f39////////ysrKa2trV1dXUVFRXFxctbW1////
4+Pjjo6OlJSU/v7+9vb2/Pz8////29vbgYGBUVFRRkZGhoaG6Ojo09PTe3t74ODg/////Pz8////
z8/PaGhoREREPT09d3d3uLi4////4ODgkZGRmpqaAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3
+v//+v/////+///+///8///8//j///f/+//3+P/38fj/2+L73vHi+v/3//z5//7///3///z/9v34
+P/6/f/////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
/////Pz8/Pz8/////////f39+/v7/v7+9vb2////39/fbGxsFBQUAAAAAAAAEBAQBQUFAQEBCAgI
h4eH2tra/////Pz8////+fn5ZWVlAAAACAgIAwMDAAAACwsLPj4+u7u7FhYWAAAAsLCw////2tra
BgYGAAAA0dHR+/v7////////+vr6rq6uCgoKCwsL8vLy////4+PjbGxsAAAAAgICBwcHAAAABgYG
Tk5OmpqaGxsbAAAAvLy8+/v7////////bW1tAAAAAAAAFxcXBQUFFhYWYGBgAAAAMzMz9vb2////
+fn5VFRUBwcHAgICAAAAAAAABAQEPj4+oaGhGhoaAAAAwsLC////////////////////////////
////////////////////////////////////////////////////////////////////+fn5////
////////////////6urqmJiYFhYWAAAAAAAABgYGBQUFAAAAAAAAFRUVg4OD////////+/v7////
sLCwGxsbAQEBBQUFBgYGAQEBAgICTExMYWFhIiIiLy8v/v7+9vb2mpqaCAgIUFBQ8fHx+fn5/v7+
/Pz88fHxUlJSCQkJgYGB+/v7/Pz8paWlCQkJAAAAAAAAAgICBwcHAAAAVlZWb29vAQEBTk5O4ODg
////////pqamMjIyBQUFAwMDAQEBAwMDLS0tOjo6EhISmpqa////////qampGBgYAAAAAAAAGxsb
AAAAAAAAaGhoaWlpBgYGOTk5AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+
//38//38+/v1+vr0+v/+6/b3xbX/ZVXFqKTs8u///fr9///8///3///3+v77+////f/////////+
///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4
AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////
/////////////////////////////////////////////////////////////v7+/f39/v7+////
////+/v7+fn5+/v7////zs7OVlZWAAAAAAAAQEBAc3NzkZGRYWFhREREAAAAAwMDW1tb4uLi////
+Pj4l5eXAgICAAAAeHh4urq6xsbGg4ODHx8fDQ0NAAAAHBwc7e3t+vr68/PzCAgIAAAAysrK////
////+/v7////srKyAwMDFxcX9vb2+vr6jo6OAAAAAAAAhoaGxsbGzs7OdHR0GRkZDAwMAAAAERER
/////v7+////fn5+AQEBCwsLenp6srKyh4eHMjIyAAAABAQEMjIy////9/f3lJSUAAAADAwMe3t7
y8vLwsLCenp6GBgYCgoKAAAAICAg////////////////////////////////////////////////
////////////////////////////////////////////////////9/f3////////9/f3////8/Pz
hYWFERERAAAAMzMzeXl5r6+vsLCwfX19OTk5AAAAAAAAl5eX4uLi////8vLyNjY2AAAAQkJCwMDA
39/f1tbWenp6Hx8fAAAACAgIYGBg/f39+vr6lZWVAAAAUVFR////////9fX1/////f39Tk5OAAAA
fHx8////6OjoMDAwAAAAV1dX0tLS2dnZ1dXVh4eHCgoKAAAAAAAAfX19////////zc3NKioqAAAA
S0tLxMTEzs7Oi4uLKioqAAAAAAAAmpqa////5+fnIyMjAAAAUVFR3Nzc4ODgzMzMgoKCAAAABQUF
AAAAkJCQAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+
AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+//r5//38///5///5
+v/+8/7/wbH/NCSUhoLK7uv///z////8///3///3+//8+////f/////////+///++v/8+v/8//7/
//7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/
AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////
/////////////////////////////////////////////v7+/v7+/////////v7+/f39/f39////
////WFhYAAAAHBwcm5ub9fX1////+vr6////6+vrlZWVAAAAAAAAenp6////9/f3UFBQAAAAVlZW
////////////////19fXEBAQAAAAJycn////8vLy7+/vDAwMAQEB0NDQ/////v7+9fX1////q6ur
AAAAFxcX////8PDwVlZWAAAAZmZm/v7+/v7++fn5////rq6uJSUlAAAAHBwc7e3t////1tbWAAAA
BAQEn5+f+fn5/Pz8////xsbGHx8fBAQEOjo6/////v7+QkJCAAAAbGxs////////+/v7/Pz8tra2
GhoaAAAATExM7e3t////////////////////////////////////////////////////////////
/////////////////////////////////////////////////Pz8/v7+rKysHx8fAAAAXFxc3Nzc
////+fn5+vr6////4uLiY2NjAgICBgYGwMDA////w8PDAAAAAAAAwsLC+/v7////////9fX1oaGh
ExMTAQEBgYGB/v7++fn5l5eXBQUFW1tb////////////////////U1NTCQkJgoKC////0tLSAAAA
CgoKs7Oz////////////7e3tnp6eDAwMAAAAioqK////8/Pzc3NzAAAAUFBQ8fHx////////////
lJSUDg4OBQUFrq6u/v7+19fXAgICBQUFzMzM////////////+vr6mZmZBAQEAAAAg4ODAgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v//
//3+//z8//7++v3/+v3////3///3+v//+v/////+///+//3///3////w///w9P/+7fP/zbb/Nh/B
e3bf7Oz/+P7////7///3/f3x9vf7/P3+///////////+///++v/8+v/8//7///7////+///+5O//
V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5
Dg/jhYr/////////////////////////////////////////////////////////////////////
/////////////////////////////////////////f39/v7+////////////t7e3CgoKBwcHmpqa
+fn5/////v7+9/f3////+Pj4+vr6dnZ2AAAAGBgY2NjY////W1tbAAAAW1tb////+fn58PDw////
////h4eHAAAADw8P8vLy/f3929vbCQkJAAAAyMjI+fn5////////////srKyBgYGFhYW9/f38PDw
Xl5eAAAAaGho/Pz8/v7+/v7+/v7+////eXl5AQEBOTk57+/v////fHx8BgYGTExM9vb2////5eXl
////////gYGBAAAAMzMz/v7++/v7QkJCAQEBY2Nj/Pz8////////////////a2trAAAAODg4////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////Pz8////9fX1Xl5eAAAARERE9PT0////+/v7/////////Pz8
////9vb2OTk5AAAATExM9vb28fHxAQEBDAwMrKys/////v7+8vLy////9/f3PT09AAAAh4eH////
+fn5kJCQAAAATU1N8fHx+fn5////////+/v7RkZGAQEBgICA+/v70NDQAwMDDw8PqKio+Pj4////
9vb2/////Pz8ISEhAwMDenp6////39/fJSUlAAAApKSk////+/v77e3t////6urqQEBAAAAAm5ub
////v7+/AQEBAwMDwsLC+/v7+/v7/////////Pz8GRkZAQEBi4uLAgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/
+v3////3///3+v//+v/////+///+//3///3////w/f/u7fv35+3/w6z/LBW3gHvk7Oz/+P7//P74
///2/f3x+vv//f7////////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8
BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////
////////////////////////////////////////////////////////////////////////////
/////////////////////v7+/Pz8/////////////v7+ZGRkAAAAT09P6urq////+fn5/f39////
////+vr6////39/fDAwMAgICkZGR7OzsnZ2dBwcHAAAAjIyM09PT/f39////7OzsoKCgDw8PISEh
7+/v/Pz809PTFxcXCgoK1NTU9/f3/Pz8/v7++Pj4qKioBgYGFhYW8fHx/v7+mpqaCQkJAAAAi4uL
2tra8fHx+Pj4////mpqaAAAASUlJ////+Pj4S0tLAgICdnZ2/////////f39/f39+Pj4qqqqCgoK
MDAw////7OzskZGRAAAAGxsbjIyM0NDQ+vr6+vr6////oKCgBwcHKSkp/Pz8////////////////
////////////////////////////////////////////////////////////////////////////
/////////Pz89/f3////z8/PFxcXAAAAqqqq/v7+////////+vr6+fn5////////+/v7fHx8DAwM
ExMT0dHR////T09PDw8PBQUFiYmJxsbG4+Pj/v7++vr6VFRUAAAAf39//Pz8////nZ2dAAAAWVlZ
/////////Pz8/Pz8////V1dXBgYGhoaG////8PDwWFhYAAAAHBwclZWVy8vL09PT////+Pj4U1NT
DAwMe3t7////1NTUAAAACQkJ6Ojo/////////v7+////+vr6Xl5eAAAAmJiY////+fn5UFBQAAAA
HBwcnp6eu7u76urq+vr6/f39SUlJAQEBgICAAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//
+v/////+///++/f7//v////z///08///5fH/v7X/LCKygo7W5vn/7f71+vz4//7///r//fz//fz/
///////////+///++v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+
AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////
////////////////////////////////////////////////////////////////////////////
/////f39+/v7/////////Pz87+/vJCQkAAAAhISE////////////////+Pj4+/v7+/v7+vr68vLy
e3t7fn5+zMzM////+vr6ZmZmAAAACQkJBQUFCgoKOjo6iIiIh4eHBQUFDg4O+Pj4////5OTkAAAA
AAAA1dXV/v7+////////////ra2tBAQEFxcX9vb2////5ubmbGxsAAAAAwMDDg4ODAwMPj4+fHx8
enp6AAAAMDAw////+vr6Ozs7AQEBlJSU/f399/f3/////////Pz8t7e3AAAANDQ0////////7u7u
V1dXAAAAAwMDCAgIERERQ0NDhoaGY2NjAAAAMzMz////////////////////////////////////
////////////////////////////////////////////////////////////////////////+/v7
/Pz8nJycAAAAFBQU3d3d////9vb2+vr6////////+fn59PT0////9fX1enp6wMDA9/f3////5OTk
REREBQUFAAAACAgIDQ0NIyMjYWFhOjo6DQ0Ng4OD+/v7////mpqaAAAAVVVV/////////f399fX1
////VVVVAAAAenp6////////0tLSTExMFBQUAAAAAwMDDQ0NIyMjbW1tLS0tAAAAh4eH////1NTU
AAAACQkJ8PDw+/v79vb2/////////f39aGhoDg4OoqKi9vb2////1dXVTU1NEhISAAAAERERCQkJ
LCwsZWVlKioqAAAAgYGBAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AQL+AQP7BgbyQTv/+v////3+//z8//7++v3/+v3////3///3+v//+v/////+///+//v/
//r/+frq///08///4Oz/vrT/NCq6kZ3l5vn/7v/2/f/7//7///j//fz/9/b////////////+///+
+v/8+v/8//7///7////+///+5O//V1viBQb4AwH7AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+
AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////
/////////////////////////////////////////////////////////f39/v7+/Pz8/Pz8////
////9PT04eHhAAAABwcHnp6e////+fn5+/v7/////v7+/////Pz8////9/f3////8vLy////////
////////vLy8ZGRkLS0tHh4eAQEBAAAAAAAAAAAAJCQk+Pj47+/v6+vrAwMDAgICzMzM/Pz8/Pz8
////////rq6uAAAAHBwc8fHx9vb2////9/f3r6+vZ2dnJycnKCgoAgICAAAAAAAAAAAANjY2/Pz8
/Pz8LCwsAAAAlpaW/////f39////+Pj4////tLS0AAAAPz8/6Ojo////////////nJycX19fODg4
FhYWDAwMAAAABgYGAgICQkJC8vLy////////////////////////////////////////////////
/////////////////////////////////////////////////v7+////////9/f3gYGBAAAAQUFB
9PT0/////Pz8/////v7+/v7+/////Pz8////7e3t////9vb2/////////v7+9/f3vr6+e3t7TU1N
MDAwCgoKCwsLAAAAAAAAhoaG9/f3/v7+lpaWAAAAVlZW+/v7+vr6/////////Pz8T09PAAAAh4eH
+vr6////+/v7////pqamiIiIS0tLMTExHR0dAAAAAgICAAAAjo6O9fX1ycnJAAAADg4O5+fn/v7+
+/v7////9vb2////Xl5eAAAAqqqq////+/v7////9PT0p6enc3NzSUlJNDQ0Dw8PAAAABAQEBwcH
gICAAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/
DQT0TDj/5P/49f/3+/3+/f//8vf2+v/++/r7+fj5///8+fn24uL/3tj/6t//7eL/7fL/7fb/6fX/
7fn/0sT/NSeNl4zo7ej/7fv/6ff/7fH/7Oj/7eb/5d7/8PL9//z///7+//7+//n///v/+v/x+v/x
+//4+/z/7PL/XlzeEgD/BQD9AAfrAgvvAAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9
AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////
/////////////////////////////////////////Pz8////+/v7/////v7+////////vLy8AAAA
AAAAzs7O+/v7/v7++fn5////////////+fn5/v7+////8/Pz////////9/f3////+/v7////////
/v7+8vLy2traubm5XFxcAQEBGBgY7Ozs+vr64+PjCgoKAgICx8fH+Pj4////+fn5////sLCwAgIC
ICAg7e3t+/v7/////////////Pz88vLy+vr62dnZubm5VFRUAAAAQEBA+/v7+/v7TU1NAQEBcXFx
/////////Pz89PT0////n5+fAAAANTU1+fn5+fn5/////Pz8/f39/////Pz88vLy2NjYsrKyV1dX
AAAAPj4++/v7////////////////////////////////////////////////////////////////
/////////////////////////////////f39////////////UVFRBgYGOzs7+vr6/////Pz8/Pz8
////////+/v7+vr6////+vr6////////9/f3////////9/f3+fn5/Pz8////9/f36urqxcXFPDw8
AwMDenp6/////f39l5eXBwcHMDAw+/v7////+/v7////////V1dXEBAQgoKC6+vr////9/f38/Pz
+fn5/v7+/v7+////4+Pjurq6OTk5AAAAfn5+////19fXBAQEDg4O0NDQ+/v7////+fn5/v7+////
QkJCAAAAkZGR/////////Pz88PDw////+/v79PT0////7OzsyMjIKCgoBQUFkpKSAgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/DQT0TDj/5P/49f/3
+/3+/f//+v/+8vn2//7///7/8e7q///82dn/Ylyza2C9i4Ddp6zZx9Dx1OD45vL/x7n/Sz2jpJn1
39r/2Ob5xtTnuLztjIjPa2S1WlOk8PL9//r///z8//n5//j///v/+v/x9f/s+//4+/z/7PL/Xlze
EgD/BQD9AAfrAgvvAAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/j
hYr/////////////////////////////////////////////////////////////////////////
////////////////////////+/v7////+/v7/////v7+/////f39vb29AAAACQkJzs7O////////
////////+/v7+fn5/v7++Pj4/////v7+////////////xcXFT09Pbm5u7e3t////8PDw/f39////
srKyDw8PJCQk+Pj4+fn55OTkDg4OAAAAmJiY////////9/f3////lpaWAQEBGBgY////////vr6+
RUVFampq////////7e3t+vr6////mpqaCAgIPz8/8vLy////iYmJAAAAPz8/8vLy/////f39////
/Pz8XV1dAQEBPT09////////xcXFTExMY2Nj////////9fX1////////lZWVCQkJPz8/+Pj4////
////////////////////////////////////////////////////////////////////////////
////////////////////////////+vr6WVlZBQUFRkZG////+Pj4////////////////////////
+/v7////9vb2+/v7////9fX1e3t7KysrjY2N////////+fn5////7+/vTExMAgICgYGB/////Pz8
kJCQAAAAGhoa0NDQ////8/Pz////9PT0Ozs7AAAAhISE////+fn5enp6MDAwkJCQ////////7e3t
/////v7+RkZGBwcHjo6O+/v75eXlR0dHAAAAeXl5////9vb2////////wcHBCAgIAAAAq6ur+vr6
8vLyc3NzKCgonZ2d////////+vr6/v7+////Ojo6AAAAqqqqAgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAH/AAH/CwbxTj3/5v/3+v/2//T///b///f/9u76
/vT///7////y///y2uLoWmK2AADpCwP1DAj2FhP9HRr/MC3/OCz/AgD2HRP/KCH/GRb7DAztDwv/
BQD5DQXuNjXR7vfw+/vx///0///0//n///X//Pr6/Pz8//7///3/7/X/XmfJEAH8AwD9AAD8AAP/
AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////
////////////////////////////////////////////////////////////////////////////
////////+/v7/////Pz8/////v7+/////Pz8xsbGAAAACwsLwsLC+/v7/v7++/v7/v7+9vb2/v7+
+fn5////7e3t////9PT0/f39/Pz80NDQCAgIAAAAoaGh/Pz8////////7OzsZGRkAAAANzc39/f3
////7OzsEBAQAwMDLi4uvr6+8/Pz////6OjoVlZWAAAASUlJ+/v7////ycnJBwcHAAAArKys////
////////8/PzZ2dnAAAATk5O6+vr////0NDQGxsbAAAAkJCQ+Pj4////8vLynZ2dDAwMAAAAPj4+
+/v7////wsLCCgoKAAAAurq6/////v7+////6enpXFxcAAAAS0tL9/f3////////////////////
////////////////////////////////////////////////////////////////////////////
/////Pz8////8/Pzb29vAAAAMzMz/Pz8/////v7+9/f3/f39+/v79PT0////////+vr69/f3////
/Pz8////j4+PAAAAHx8f09PT9fX1////////t7e3ExMTAAAAmpqa////////np6eCgoKAQEBVFRU
x8fH////+vr6ra2tCwsLAgICoaGh////7u7uhISEAAAAMTEx0dHR////////7u7usbGxBwcHAAAA
ra2t////////lpaWAAAAEBAQurq6+vr6////wsLCUVFRAQEBAgICnZ2d////////fHx8AAAAMTEx
zMzM/////v7+////sLCwAAAACAgIrq6uAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AAH/AAH/CwbxTj3/5v/3+v/2//T///b///f/+/P/+vD9//3+///y///y
8fn/o6v/Egr+FQ3/BADuAwDqAwDmBQLoEwf/BwD7EAb/DQb3CwjtAADhBAD4CAD8Hhb/ZGP/9v/4
///1///z///0//n//fP//fv7//////7///3/7/X/XmfJEAH8AwD9AAD8AAP/AAL7AAL7AAH+AAH+
AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////
/////////////////////////////////////////////////////////////////////f39////
/Pz8/////f39////////2traEhISAQEBm5ub+Pj4////////////+/v7////+/v7/////////f39
/f39////+/v7////c3NzAwMDDAwMT09Pfn5+bm5uQEBAAAAADg4OiIiI9vb2/v7+3d3dAAAADAwM
EBAQCwsLTk5OZGRkMzMzAAAABQUFpKSk9/f3////////enp6BgYGERERREREgICAd3d3REREAAAA
CQkJnJyc+vr6/v7+////h4eHAQEBBAQEUVFRgYGBQUFBGRkZAAAAAAAAPz8/+fn5////+vr6a2tr
AAAACQkJaWlpcHBwcXFxNzc3AAAACwsLlpaW////////////////////////////////////////
////////////////////////////////////////////////////////////////+fn5////9PT0
mJiYAAAAFBQU5ubm8/Pz/////////////Pz8////////+vr6/v7+////////7u7u////7u7uUlJS
AAAADAwMOjo6VlZWODg4BgYGAAAAQkJC8fHx////////hISEAAAAHR0dFBQUEBAQOTk5Li4uAAAA
AAAAV1dX3Nzc////+vr66+vrRkZGAAAACQkJPj4+W1tbMTExCgoKAAAAOTk539/f////////7e3t
Y2NjAAAAAAAAR0dHREREERERBQUFERERAAAAlpaW/////f3919fXTk5OAAAAEhISRERET09POzs7
AAAABwcHPz8/6OjoAgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AAL+AAL+CwXyUTj/7f////z///X///f//v70+vrw///1/f/16/Dw8/T/6dr/b2f/AALrAgT7
BQX4Cgr/CA3/AwP+AgL6AAD5AAD0AAD3DAz/Dg7/CQn/BAT/DAz1KTn/19P/8PL/9Pv/+//++f/2
///1///y///y//v//+7/8e3/YF3bEAD/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+
AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////
/////////////////////////////////////////////////////////////Pz8/v7+/v7+////
////8fHxNjY2AAAAcHBw////////7e3t+vr6/v7+/////////Pz8////gYGBwsLC8PDw////////
8fHxk5OTJycnAAAACAgIBQUFAAAAGhoagICA7u7u////////4ODgICAgNDQ0xsbGOTk5CwsLAAAA
AAAAJiYmhYWF/////////Pz8////6enphISEFxcXAAAABQUFAwMDAAAAGBgYhISE8/Pz////9PT0
////+fn5lpaWHR0dAAAAAAAABgYGW1tbcnJyBAQEOzs79/f3+vr6////5ubmfn5+IiIiAAAAAAAA
AwMDBAQEIiIii4uL7e3t////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////f39yMjIDw8PAAAAtbW1
////////9vb2/////v7+8PDw/Pz8////paWlc3NzpaWl8PDw////////29vbjIyMGBgYDAwMCgoK
AAAAFhYWYmJivb29/////f39/f39qampPj4+lZWVoKCgPDw8BgYGAQEBHx8fZWVlycnJ////////
////////5+fnfHx8KysrAAAABQUFAAAADAwMVVVVy8vL/////v7+8vLy////6urqfn5+JycnAQEB
AAAARkZGnZ2dU1NTAwMDoaGh6+vr////////0tLScXFxKSkpCQkJBAQEAAAAGBgYVlZW09PT////
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAL+CwXy
UTj/7f////z///X///f////1///1/P/w/f/1+v//3+D/koP2Jh7PAAfwAAL5AADzAAD5AAX/AAD7
AAD4AAD8AAT8AAD4AAD9AAD0AAD6AAD7AADpARHzc2/ZyMrz9Pv/+//+9//0///1///y///x//v/
/+7/8e3/YF3bEAD/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9
AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////////
/////////////////////////////////////////////f39/f39/v7+////////////f39/AAAA
Hh4ez8/P/////////f39/v7++/v79vb2////jY2NAAAAGRkZycnJ/Pz89/f3////////6enpubm5
pKSkr6+vu7u73d3d9/f3////9/f39vb2////xcXF5OTk////6urqurq6r6+vw8PD09PT/f399fX1
+fn5/Pz8+vr6////////2traxsbGqampoaGhtbW12tra/v7+////////+Pj49/f3////////2dnZ
vLy8r6+vv7+/+vr6pqamBAQEMzMz/f39+/v7/Pz8////////3NzczMzMra2tq6urx8fH5eXl////
/////Pz8////////////////////////////////////////////////////////////////////
////////////////////////////////////////////7OzsR0dHAAAAR0dH/////////v7+////
/////v7+/////f39NjY2AAAAXFxc////////8/Pz/////f39+fn5z8/Px8fHycnJ2dnZ////////
/Pz8+Pj4////////09PT8/Pz////7u7u1tbWw8PD3Nzc/Pz8/////v7+////////+/v7////+vr6
8PDwzs7Ow8PD09PT5ubm/////////////////v7++vr6////////7e3tz8/PyMjI8fHx////V1dX
AAAArKys/v7+/////v7+////////6urqxsbGxcXF0dHR5ubm////9vb2/v7+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAT7CwX0UTT/7f////39//z5
///1///r+//r5PDy6u7/3t//dm3/HQf/BgD3BQL4CAX7BAD5BAP5Cgr9CQb8BgL8CAX+BQL4BAH3
AgH0AwH1Dgn/Dg7/BQX6Cwr6CwDiWk3/sbH/3+n/5vf/6/nz9//j///n//3//+3/7+j/XlbpCwD/
AAD+AAT0AAj4AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/
////////////////////////////////////////////////////////////////////////////
/////////////////////v7+/////v7+/////////f39/v7+////5eXlPz8/AAAAVVVVzMzM////
////9/f3////7+/v4+PjMDAwAAAANTU19fX1////////9PT0/v7+/////////Pz8/////////f39
/v7+9/f3+/v7/////////v7+////8/Pz////////8vLy/v7++/v7////////+/v7////////+fn5
/////////////Pz8////////////+fn58fHx/Pz8/////////////v7++vr6////8/Pz/Pz8////
kpKSAAAANDQ0////////+vr69PT0////////////9PT08/Pz/////////Pz89fX1+vr6////////
////////////////////////////////////////////////////////////////////////////
////////////+fn5////////////+/v7paWlIiIiAAAAenp64eHh////8/Pz+Pj4////6enpe3t7
AwMDEhISm5ub/////////Pz8////////////+vr6/////////Pz8////////////////+Pj4////
////+vr6+/v79/f3+/v7////+/v7////+/v79fX1/v7+////////8/Pz/Pz8////////+fn5/v7+
/v7+////////9fX1/f39////+vr69PT0/Pz8+vr68fHx////////9/f3UlJSAQEBmZmZ////////
/Pz89/f3////////////////////////+fn5/////v7+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AAL+AAT7CwX0UTT/7f////39//z5///1///o9//n8f3/
29//dXbRIhm2FgD8BgD3BAH3Cgf9CQX+AQD2AADzAwD2BAD6AwD5BAH3CAX7AQDzBAL2BwL/AAD3
AAD1Bwb2EwbqFwrKTk7Qsbv/5vf/8f/59v/i///n//3//+3/7+j/XlbpCwD/AAD+AAT0AAj4AAP6
AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////
////////////////////////////////////////////////////////////////////////////
////+/v7/f39////////////+vr69vb2+vr6////rKysFRUVAAAAKysrkJCQysrK5+fnysrKpaWl
JSUlAAAAExMT1dXV////8vLy/Pz8////////9vb2+vr6////////////+Pj4/////v7+////////
9fX1/////v7+////8PDw////9vb2////////+vr6////////+/v7////+vr6////////8PDw////
////+fn59/f3////////////+vr6/Pz8////9fX1/Pz8////////////+Pj4lZWVAAAAPT09+fn5
9vb2////////+vr6/f399/f3////////+/v7/f39/////v7+////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+fn5/v7+/v7+////f39/AQEBAAAAQ0NDhYWFycnJ0tLSmJiYUlJSAAAAAAAAc3Nz////+/v7
8/Pz////9fX1////9/f3/v7+////////////////+fn5/////v7+////7+/v////+/v7////////
/v7+/////Pz8////////+/v7////////////////////+/v7/f39////////+Pj4/////Pz8////
////+/v7/////////////////////v7+9/f3////RUVFAAAAnp6e////////////////9vb2/v7+
////+vr6/v7+/////////f39////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AQP8AQT5CwbxUTf/7f/3///2///1///38/X47O7/wbr/Ukf/DwneBgPzExP/
AADlBAT7EQ//Cwv7Cgj/AwP/BQX/AQH6AgD9DQ3/Bwf/Bgb5AgL+AAD3AAD5Cgj/BQX+ERH/AADr
ERL8ICHniY7/3eP/7f//+vr6//7+//7+7fP/XF3dBwL/AAH9AAD7AAT/AAL7AAL7AAH+AAH+AAT4
AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////u7u7Ojo6BQUFAAAABgYGFRUVAgICAAAAAAAAKSkpsbGx+fn5
/////f39/f39/////Pz8/f39////////+/v7/f39/////////Pz8////////+/v7////////+Pj4
////////+vr6/////////////v7+/////Pz8/////////////////f39/Pz8////+Pj49vb2////
/Pz8+Pj4////9/f3/////f39/////////Pz8////////hoaGAAAALS0t8vLy////+vr6/////Pz8
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////f39////////////
////6urqrKysJCQkAwMDAAAABQUFCAgIAAAAAAAADg4OfHx87+/v////////////+vr6////////
+vr6////////9vb2+/v7////+vr6/Pz8/////////////Pz8////////9vb2////////////////
+/v7////////9PT0/Pz8+fn5/////////////Pz8/////v7++fn5////+/v7/////////Pz8/f39
////////////+vr6////9/f3R0dHAAAAo6Oj////////////////////////////////////////
////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AQP8AQT5CwbxUTf/7f/3///2///1///3+vz/urz2XlfiGg/XEQvgBQLyAADyBxL/AAD3AgD+AADw
BgT/AAD8AAD7AAD5BAL/AAD2AAD7AADzAAD8BwX/AwH/BQP/AAD5AAD2AAP/DA33BgfNOj/ak5n4
4fX2//////7+//7+7fP/XF3dBwL/AAH9AAD7AAT/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+
AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+vr6////////0NDQnp6eVVVVJSUlAwMDFxcXQ0NDjY2N0NDQ/////////Pz89/f39/f3////
////////+fn59/f3+vr6////////////+vr6+/v7+vr6+vr6/////////////////f39/Pz8////
+/v7/v7+/////////v7++/v7/////////v7+////////////////////+/v7/v7+////////////
////+vr6+vr6+/v7/f39+/v7////yMjIV1dXe3t77e3t/////Pz8////////+/v7////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////+vr6+vr6/////f399/f3////////+Pj44uLi
o6OjXFxcNDQ0Li4uSEhIhYWFvr6+9/f3////////9vb2/f39+/v7/////v7+/v7+////+fn5+vr6
/////////////////Pz8+vr6/f39+Pj4/v7+////+Pj4/////Pz89fX1////////+fn5////////
/////////Pz89/f39vb2/v7++/v7/////////////////////////f39////////////////////
+vr6////qqqqd3d309PT/Pz8////////////////////////////////////////////////AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwT5AwX3CwX0SjP/
6v///vz///r///z/09f1QUOnCQDWCQT5Cgr+DAz/AAj2CQn/CQnyBw76AAL7Cgr/Bwf6AAD9AA3s
BA3sAArwCQ78BQX/Awb/Bwr7AQX2AAn6Cgr9AAL4Awr/AQH0AADrAADYMyrUoK7Y9fT5//7///7/
6vL/WFzgBAL/AAD+AAH5AAX9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////9fX1////
////////9fX18PDw5+fn5ubm7Ozs////////////8fHx/////////////////f399/f3+/v7////
/////Pz8+fn5/////v7+////////////////+vr67+/v/f39/////////v7+8vLy+fn5/Pz8/Pz8
////9/f3/f39/////f39/////Pz8/Pz8+/v7/////v7+/////////Pz8////////////////////
/////v7+////+/v79vb2/////////////f399/f3/////v7+////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////Pz8/v7+////////+fn59/f3+/v7+/v7/////////////////v7+
/Pz8/////////////v7+/Pz8////////9/f3/Pz8////////////9vb2/Pz8/////Pz8+fn5/Pz8
/////////////////////////Pz8////////+Pj4////////8vLy////////////////+Pj4+vr6
/f39////+Pj4////////+Pj4/////////f39/Pz8/////v7++vr6////////+Pj4////////7+/v
+vr6+/v7////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwT5AwX3CwX0SjP/6v///vz///r///z/
3eH/ZGbKHgzrDgn+AAD0AAD4ABH/AAD3AADpAAfzAAP8AAD6AADzAAH+AhHwAAnoAQ70AAXzAAD9
AAP/AAP0AAT1AAn6AADzAAn/AAf/AADzEw//EAztWlH7tsTu+/r///7///7/6vL/WFzgBAL/AAD+
AAH5AAX9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////+Pj4+/v7/////f39+fn5////
/f39+/v7/v7+////+fn5////////////9PT0+fn5/Pz8/////////////////////f39////////
////////////////////////////////+/v7////+/v7////////+vr69/f3////+vr6+/v7////
////////+Pj4////+fn5+Pj4/f397u7u/f39////9/f3+Pj4/////////////////////f39/f39
/////////////////////v7+////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////v7++fn5/f39/////////f39////9vb2/f39/////f39/Pz8/f39/Pz89/f3////
/f39/Pz8/////////////v7+////9vb2////////////+vr68/Pz////////+Pj4/v7+////+Pj4
+/v7/////v7++vr6/////////////////Pz8////////+vr69fX19vb2////////////+Pj4////
+/v7/////v7+9vb2+Pj4////////////+Pj49/f3////////+vr6/////////f39////////////
////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQT5AQX3CgX0SDP/5v//+vr///f///n/7fT/ydL/Niz/AADt
DQ34AAD3AAD4CAv/CQj/BQX4AgL2AQH2BwP0BwP/CQn+AAD7CAX/AADxAADyCAT/BwjwDhH5DQ3/
AAD0AAD4Cgr+AAD8Bwf5FhHup6L/7Pr//fv///v///v/6Ov/V1joAAL/AAD+AAPyAAf2AAP6AAH9
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////9/f3////////////+/v7////////+vr6+/v7////////
8/Pz////////////+fn5////+fn59vb2/f39/////////////////v7++Pj4+fn5/f39/f39+vr6
+fn5////9/f3////////////9/f3////+/v7/////f39/////////////////////f39////+fn5
/////v7+/////f39////////////////////////+vr69vb2////////////////9fX1+Pj4/v7+
/Pz8/Pz89fX1+vr6////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////v7+
/f39/////////v7+/Pz8/////f39/v7++/v7+fn5/f39////////////9PT0////////+fn5////
////9fX1////////////9/f3////////////////7+/v+Pj4/////////////Pz8////////+Pj4
8PDw/////////////////////f39/////Pz8/////////f398fHx8PDw////9fX1+/v7/f39////
/////f399vb2+/v7////+/v7////////9vb2+vr6////9/f3////////////////////////////
////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AQT5AQX3CgX0SDP/5v//+vr///f///n/7fT/rrf/IBbyAADuFBT/AAP/AAb/AAP+
CQj/AADzAAD0AAD1Eg7/BQH/AAD1BAD/AwD+AQD8Cwf/BgL/AAHpAAPrAAD7BQH/AAL8AAD0AAH+
AADyEw7rnpn/7Pr/9fP///v///v/6Ov/V1joAAL/AAD+AAPyAAf2AAP6AAH9AAH+AAH+AAT4AAP4
AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////Pz8+/v7////9fX1/v7+/////////////////////////Pz8+vr6////
/////v7+////////////////9/f39/f3/////////////////f39/Pz8////////////////+fn5
9PT0/////Pz8////6urq////8PDw////////8PDw+Pj4////+Pj4////+Pj4////9fX19/f39/f3
/////f399fX1/v7+////+Pj4/Pz8/f39/////f399PT0/////////f39/Pz8+Pj4////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////+Pj4////////////+fn5////
/////////////v7+/Pz8////////+vr6+Pj4+fn59vb2////+vr69PT0////////9fX19fX1+fn5
/Pz8+/v7////////6Ojo////////////+Pj47+/v////////////////////////9/f37Ozs/f39
////9vb2+/v7/v7+////////7u7u/////Pz8////////9PT0////+vr6/f39////////////////
9vb2////+vr6/v7+/Pz8/Pz8/////Pz8/f39////////////////////////////////////////
////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+
AQL+CAjuR0L85P/0+f/z//z8//T/7/D/X1jeDADxBwD4AADwAADyDxD/AADmAADZGhqjKjaaAQ3J
CAzgBQToAQD2DAT/AADyDQL3DAzxBQrbJzqXIjWVAADbBwH0CAz+AADsBwP9Fg//Ixvyd3H46vj9
///8///3///36PP/V13eAAL/AAD+AAD8AAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/
AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
ubm5fX19paWl////////////////+Pj4/Pz8+vr6/f39u7u7hYWFra2t/f39+vr66+vr////+Pj4
tbW1gYGBW1tbUVFRaGhovb295ubm/////////v7+////39/ftbW1XV1dU1NTZWVlnZ2d5ubm////
oKCggICA0dHR/v7+9/f3hoaGjo6O9/f3/v7+/Pz8////wMDAioqKb29viYmJ/Pz80NDQi4uLrq6u
////////////////////x8fHh4eHsrKy/////////////////////Pz88/Pz////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////+Pj4+Pj4/////Pz8zc3NfHx8VVVV
MTExKSkpODg4ZmZmtbW1+/v7////////////////8PDwmpqaVFRUHx8fKCgoX19ftra2/Pz8u7u7
YWFhm5ub9PT0/f39lZWVbGxswcHB////+/v7/v7+////8fHxampqampq3Nzc////////////w8PD
VVVVT09PWFhY6enp////////1dXVqampRUVFJCQkJiYmUlJSmJiY8fHx////+/v7/////v7+/f39
/////////////////v7+////////////////////////////////////////////////AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQL+AQL+CAjuR0L85P/0
+f/z//z8//T/4OH/QzzCGAH9DgP/AQD4DQn/AAHzAQjxDgv0dnb/j5v/IS3pBAjcCwruCgD/CAD9
CwD/FQr/AADlGyDxj6L/jJ//IBv/BwH0AQX3AQT5CQX/BwD3CgLZT0nQ7Pr////7///3///36PP/
V13eAAL/AAD+AAD8AAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5
Dg/jhYr/////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////a2trAAAAQEBA9PT0
////+fn5/////v7+////////+Pj4ZGRkAAAAUFBQ+Pj4////////7e3td3d3CQkJAAAABwcHAQEB
BQUFAAAAcXFx6enp////////4uLiZ2dnAAAAAAAAAAAAAAAAAAAAOTk5iIiIGxsbAAAAv7+/////
2dnZAgICCwsL3Nzc////+/v70NDQISEhAAAAAAAAJycn8/Pzo6OjAAAAQkJC8vLy/////f39////
8fHxeXl5AAAAW1tb+vr69/f3////////+fn5/////v7+////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////+/v7////////////7Ozsh4eHAwMDBgYGAAAAAAAABgYGAAAAAAAA
FhYWSEhI6enp+/v7////7+/vcnJyAAAAAAAAEBAQJCQkAAAACwsLV1dXODg4AQEBdXV1////////
SUlJAAAAjIyM////////9vb2////6+vrAAAAAgICxcXF////////0NDQHx8fBAQEAAAADAwM5eXl
+vr6z8/PQEBAAAAABgYGCAgIEBAQAAAAAgICa2tr5eXl/////Pz8/////////////v7++vr6/v7+
////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7Awb1BAjxNTr/7P//8v7/8vv/9Pz/oKLS
KiVyQzt1eGyTXmaKPT25FwDcLA/PkJGv6er7naf/CxLXBwf/Bwf/AwXwAALtAAH9AAX8BQr5FQvh
na/q7+z/vqzSQCGQIA3ULBnReHapamiKQD1qPjaAt6/L+/T////x///x5vD/WF7dBwjyAgT2AAP0
AAX6AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////bm5uBwcHPz8//////////v7++vr6////
/f39/////Pz8WVlZAQEBWFhY/v7++vr6////dnZ2AAAADAwMaGhoxMTEx8fHmZmZEBAQAAAAVVVV
+Pj4////e3t7EhISAwMDmJiY2tra1dXVp6enLy8vAAAACAgIGhoa9fX1/v7+39/fBwcHERER6+vr
////////lZWVAAAAEhISfHx8paWl6urqpaWlAQEBUFBQ/Pz8////////+vr6/Pz8cXFxAAAAX19f
/////f39/////////f39////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////+/v7////7u7u////+/v7bGxsAAAACAgILy8vfX19ubm5ubm5qKioZGRkCwsLAAAASkpK////
////p6enEhISAAAAkpKS29vb9fX12dnZf39/AAAAAgICBAQEr6+v/Pz8/f39VFRUCAgIkJCQ////
/Pz8/v7+////5+fnDAwMAAAAxsbG////////nJycCQkJCwsLmpqara2t////5ubmLy8vAAAALCws
uLi43Nzc6urqjIyMDw8PAQEBdHR0////////////////////////////////////////////////
////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AwP7Awb1BAjxNTr/7P//8v7/8vv/9Pz/zc//t7L/zcX/5Nj/09v/
g4P/KA/tXD//4OH/7e7/doD/AAfMAAD8AAD4AALtCAz3AAH9AAj/Bgv6DwXbgJLN7+z/69n/r5D/
JRLZWkf/zsz/393/1dL/vbX/6+P/+vP////x///x5vD/WF7dBwjyAgT2AAP0AAX6AAP6AAH9AAH+
AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////b29vBQUFQUFB/////////////Pz8/v7+/v7+////////XFxc
AAAAU1NT////////xsbGHBwcBgYGmpqa8fHx////////9vb2qqqqAQEBCQkJwMDA9PT0UVFRAAAA
XV1d/f39////7u7u////zMzMQkJCAAAAFBQU9vb2/v7+39/fBgYGERER6urq////////e3t7BQUF
Wlpa6+vr/v7+////o6OjAAAAUVFR////////////////////dHR0AAAAYGBg/////v7+////////
/Pz8////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////Pz89/f3
////ubm5FhYWAAAAWlpa8vLy/////v7+/Pz8////////rq6uCAgIBQUFqamp+Pj4lZWVAAAAJycn
6urq////////////6+vrhYWFBAQECAgIwcHB/Pz8////U1NTAwMDlJSU////+/v7+/v7////6+vr
Dw8PAAAAxcXF/////Pz8lJSUAAAAOzs7////+/v7////lpaWAAAAJiYm3Nzc////+Pj4/f39+Pj4
kJCQAAAADw8P1NTU////////////////////////////////////////////////////////////
////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+CAD+CwH7CwbxQD3/9P///v/4///y///05+jx9vf/+/n/8/L/7f7/wtPZhoOq2dbp7///
7///SEb+BgjwDA7/BAT/AAjiBhLsAAL4AgX/Bwf/DAz7Y2H76OX/+P/88/r3g4mjqK7B7f//8f7/
8fn/6+/6+/v/9/f2///p///p6vD/WFvhBQP9AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+
AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////dHR0AQEBQUFB/v7+/Pz8/////////v7+////////////X19fAgICVVVV////////
k5OTAAAAMzMz8PDw////+Pj49fX1////////d3d3cXFx3Nzc+vr6YWFhAAAAUVFR8vLy/////f39
/////Pz8d3d3AAAAJiYm9/f3////4ODgBgYGEBAQ6urq////////gICABgYGaGho/////////v7+
m5ubBQUFUFBQ////////////////////dHR0AAAAYGBg/////f39/////////Pz8/f39/f39////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////f39/Pz8/////v7+aWlpAAAARERE
////8fHx////////////7Ozs////////UVFRAAAAdHR0/Pz8s7OzAAAAFxcX0NDQ/v7+////+/v7
////2traAAAAAAAAy8vL////////U1NTAAAAnJyc+/v7+/v7+Pj4////6urqDg4OAAAAxMTE/v7+
+vr6kJCQAAAAQ0ND/////////f39QUFBAAAAbGxs////8/Pz////////////6+vrqampnZ2d+/v7
////////////////////////////////////////////////////////////////////////////
////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CAD+CwH7
CwbxQD3/9P///v/4///y///09fb/9vf/+/n/8/L/7f7/6Pn/29j/7+z/7///1+nqJyXdAgTsAAL/
AAD7AAnjAg7oAAX7AAP9AAD6AADvOTfR1tP/+P/8+P/83+X/5uz/7f//4/D46/P/8PT/+/v////+
///p///p6vD/WFvhBQP9AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9
AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////e3t7
AAAAQkJC/v7+/v7++/v7+/v7/Pz8+Pj4////+vr6WlpaAgICV1dX////+/v7WFhYAQEBbGxs/v7+
/v7++/v7+Pj4////////////////+fn5+/v7np6eDw8PAAAAdXV1urq65ubm9vb2////q6urEhIS
JSUl+fn5////4ODgBQUFDw8P6enp////////i4uLBQUFYmJi/////////Pz8m5ubBQUFTk5O////
/f39/f39////////bm5uAAAAXl5e////+/v7/////////v7+/////f39////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////v7+////////5eXlY2NjDQ0Nb29v////////////8/Pz
////8vLy////////VlZWAAAAZGRk/v7+6enpOTk5AAAAMjIyenp6w8PDwMDA+fn58/PzGhoaAAAA
v7+/////////VVVVAAAAoqKi+fn5////+Pj4////5eXlCgoKAAAAxMTE/////f39lJSUAAAARkZG
8/Pz/////v7+GRkZERERlZWV5eXl5+fn8/Pz9/f36enp8PDw9vb28fHx////////////////////
////////////////////////////////////////////////////////////////AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+BgH+CgL7CwjtQET79v7///77
///1///3///+9PPy///z///u/f3l///n///t9vbs+vv/ycf/LRL8CQf4AAD8BQX/BAb+AADzAAT4
DQ35Cw//CAD1KBDqu6P/9f70+v/1+f7+/f7////q+/vm///5///8/fz8+fj4///u///u7O7/Wlrk
BwH/AAD+AAD8AAP/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/j
hYr/////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////enp6AAAATExM////////
/////////////Pz8/////v7+W1tbAAAAUlJS////9/f3SUlJBgYGHR0dPT09LS0tQEBAMTExMjIy
KysrOTk5Nzc3f39/////////fX19CAgIAwMDAAAAEBAQLS0tW1tbWlpaBwcHNjY2+vr6////4ODg
BQUFDg4O6Ojo/v7+////hoaGAQEBZGRk////////////np6eAAAATExM/////////Pz8/////f39
bGxsAgICXl5e/v7++fn5////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////+fn5/v7++fn5/v7+7Ozs0tLS5eXl////+/v7////////////////////sbGx
Hx8fAgICjY2N////////vLy8R0dHAAAADAwMDw8PAAAAJiYmRUVFDQ0NAAAAx8fH////////V1dX
AAAAnJyc/v7+////+/v7/v7+5ubmDAwMAAAAx8fH////////lZWVAAAAODg4////+fn56+vrFxcX
AAAAFhYWHh4eGhoaGBgYGRkZFxcXHh4eGxsbPDw8lZWV////////////////////////////////
////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+BgH+CgL7CwjtQET79v7///77///1///3///+//79
///x///u///n///n///t///1+vv/qaf5HgPtAgDxAAL/AAD6BAb+AAD1AAn9AADsBQn8CwP4IQnj
o4v/9v/19//y+v//+/z////o///q///5/v/7//7+//7+///u///u7O7/WlrkBwH/AAD+AAD8AAP/
AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////b29vAAAATExM7u7u/v7+/Pz8+fn5////+fn5
////9PT0X19fBQUFTExM/////v7+VlZWBwcHAAAAERERBgYGEhISCAgIDw8PDw8PAAAAAwMDeHh4
7e3t////6+vr0tLSf39/RUVFLy8vDw8PCQkJERERAAAAQUFB/Pz8////4ODgBAQEDQ0N5+fn/v7+
////hoaGAQEBYWFh+fn59PT0+Pj4oKCgBAQEQkJC/////////////////v7+bGxsBwcHY2Nj////
+fn5/v7+////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/f39////+Pj4+vr6////////////////////////9/f31dXVqqqqampqGRkZAAAAJSUlyMjI////
/Pz8////////r6+vhYWFWlpaODg4Hh4eCgoKAAAABwcHzMzM+vr6/f39WFhYAAAAhoaG////////
/////Pz86urqDw8PAwMDycnJ/////f39kpKSAAAARkZG/////v7++Pj4LS0tAAAAExMTHR0dICAg
KSkpISEhKSkpMDAwAAAABwcHrq6u////////////////////////////////////////////////
////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AAH/AAH/AwrtN0j17fz/+vr///n///v/9vj6+/3///j7/vz++///9/v8
/f39+/r69uv/fm/bLBmuPjR8SU58Chi+AAD4Cgb/Dw//AADbMEiOQEd+MB2yflvy9Pv/9/b7/fb9
+/H7+/r3///8//j/+fX5+/X7/vj+///4///46u//WFzgBwT6AAP4AAL2AAb6AAP6AAH9AAH+AAH+
AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////bW1tAQEBKCgoiIiIioqKkJCQj4+PlpaWlJSUj4+PkpKSOTk5BwcH
Tk5O////////cXFxDg4ORERE29vb8fHx4+Pj3t7e3t7e4uLiMDAwBgYGjIyM/Pz8/////v7+////
+fn5/v7+////6+vrwcHBdXV1AwMDMjIy/f39////4ODgBAQEDQ0N5+fn/v7+////iYmJAwMDampq
/////v7++vr6oaGhBQUFKSkp8/Pz/v7+////////+/v7Z2dnBAQEbGxs////+/v7/v7+////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////9/f3/////////Pz8
+/v7////////8PDwwcHBeHh4ODg4GhoaDg4OAAAAAAAAHh4ep6en////////9fX139/f39/f////
////////////8fHxs7OzERERAAAAwsLC/v7++/v7V1dXAAAAZmZm/////v7+////+/v75ubmDAwM
AAAAx8fH/////Pz8kZGRAAAASEhI/v7+/////f39Pj4+AQEBdnZ2////////7Ozs5eXl+vr6w8PD
EBAQAAAAzs7O////////////////////////////////////////////////////////////////
////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AAH/AAH/AwrtN0j17fz/+vr///n///v/+/3/+/3///b5//3/+///8/f4//////7+7OH/dWbS
cV7zwbf/zNH/PkzyAAD5BgL/AAD1Gh3/obn/wcj/dmP4cU7l7/b/+/r///j///X///77///8/vf+
//v///n///n////4///46u//WFzgBwT6AAP4AAL2AAb6AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+
AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////dHR0AQEBAAAAEhISAAAAAAAAAAAAAAAAAQEBAAAADAwMAAAAAAAAUVFR////////tLS0
AAAAHBwc6Ojo////9fX1////////7OzsAgICDAwMwsLC////srKyRkZGOjo6////+/v79/f3////
////paWlBAQEMzMz/v7+////4ODgAwMDDAwM5ubm/f39////i4uLAAAAYmJi////////+Pj4mpqa
AAAAERER4+Pj9vb2/f39////9fX1X19fAAAAc3Nz/////v7+/v7+/////v7+/////v7+////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////f39////+/v7/f39////+vr6srKyNzc3
AAAAAQEBAgICAAAAAAAAKSkpiIiI2NjY////////+/v76enpTU1NERERtra2/Pz8/////////v7+
8/PzCQkJAAAAxsbG/v7++vr6V1dXAAAAT09P/f39+fn5////+vr63NzcBAQEAAAAxMTE/////v7+
lJSUAAAANDQ0////9PT0////jIyMAAAAKysr+/v7////////////////mJiYBQUFKSkp+/v7////
////////////////////////////////////////////////////////////////////////////
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/Awnu
N0b67fr/+vr///r/////+P/7+P/7///8////9P//9P//+v/8+v/85e3x4+v1+Pj88vL47/n/qr/f
CwHNEAjyBgXRf4vh2Pfy8//79uv66d70+P/19f/y+v3//fz////////8+v/5+v/5//7///7////1
///15PT/V1/bBQT8AAL6AAH4AAX8AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9
AAP/CAD5Dg/jhYr/////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////dHR0AAAA
CAgIbW1tS0tLVlZWYmJiXV1dXV1dVlZWcHBwGRkZAAAAXFxc////////6enpRUVFAAAAT09P3t7e
////9vb25ubmWVlZAAAAWFhY7e3t////x8fHDAwMAAAAmpqa9fX1////////6+vrVFRUAAAASUlJ
////////4eHhBwcHCQkJ5+fn////////kJCQAAAAYmJi////////////nJycCAgIBAQETU1N0tLS
/////Pz8xMTEDAwMAQEBqKio8vLy////9fX1////////+vr6////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////v7+////////8/Pz////oaGhFhYWAAAAAAAALCwsVVVVk5OT
0tLS6urq+/v7/////////v7+/////f39cHBwAAAANTU15+fn9/f3////3t7eeHh4AAAAFhYW3Nzc
/////f39WlpaAAAAFBQUYWFhzc3N////6enpW1tbAAAAEhIS6enp/Pz8+vr6fX19AQEBQkJC3Nzc
+Pj4////19fXNzc3AAAAYGBg4+Pj////////qKioEhISAgICl5eX////////////////////////
////////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AQH/AQH/AwnuN0b67fr/+vr///r/
////+P/7+P/7///8////9P//9P//+v/8+v/88/v/7fX/+/v/+fn/7/n/yt//PTP/CADqJSTwnan/
4P/68//7+/D/9On/+P/19f/y+v3//fz////////8+v/5+v/5//7///7////1///15PT/V1/bBQT8
AAL6AAH4AAX8AAP6AAH9AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////cnJyAgICT09P/////////f39
+/v7+/v7////+Pj49PT0Y2NjDAwMUVFR8/Pz/Pz8////r6+vNzc3AAAAIyMjYGBgWVlZJycnAAAA
QEBAxcXF////////////eHh4CgoKAAAAQEBAV1dXSkpKKioqAAAAERERmZmZ////////39/fDAwM
DAwM+vr65eXlNTU1DQ0NAwMDJCQkKCgobm5u/f39qKioAAAADQ0NEBAQExMTPj4+Pj4+EhISAAAA
MjIy3Nzc////////9/f3////////+vr6////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////+Pj4////8vLyPDw8AAAAREREvr6+4+Pj////////+fn5////////9PT0
8vLy////+vr6////u7u7QkJCAAAAAQEBODg4MzMzExMTCAgIERERcnJy9vb2/Pz8////QUFBAAAA
ISEhFRUVEBAQHh4eAwMDAAAAAAAAj4+P////8/PzQkJCCwsLAAAAAAAAHBwcSUlJ5eXl////qKio
LS0tAAAAFxcXHx8fJCQkAAAAAAAAe3t7////9fX1////////////////////////////////////
////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CgD/DQD/DQfuQUP8+Pf///3///73///3/f/0/f/0///4
///7+v//+v//+//++//4+P/x9Pvt///x/v7t///78/j/jZTPICeccHvH2+v2+v/r+f7j//n///n/
///1+P/y9v//9v//+P//+P//9P/09P/0+P/++//+/f/5/f/54/X/VV7dBwH/AgD+AAD8AgL/AAL7
AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////dHR0AAAAR0dH////////////////////////////
////X19fAAAASkpK+/v7////////////x8fHWFhYBQUFAAAAAgICBgYGY2NjyMjI////////8PDw
////8vLyoqKiJiYmGRkZBgYGAAAABwcHKysrjIyM+Pj49/f3////1tbWBAQEAgIC9vb27u7uJiYm
CwsLAAAABwcHBwcHZ2dn/f39oKCgBgYGYmJikpKSLi4uCQkJAAAACQkJX19fxsbG/////////f39
+/v7////////+vr6////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////9/f3
////7u7u////19fXBgYGAQEBsLCw9/f3/f39////////8/Pz////3t7ebW1tdnZ28fHx+vr6////
////0dHReHh4NjY2BQUFEBAQDg4OODg4jo6O4eHh////////////a2trYWFhw8PDnp6eLi4uDQ0N
HBwcQkJCh4eH/v7+/////v7+UlJSJCQkAwMDDg4OPj4+Z2dn5+fn////////0tLSbGxsExMTDg4O
GRkZPz8/lpaW7+/v/////v7+////////////////////////////////////////////////////
////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+CgD/DQD/DQfuQUP8+Pf///3///73///3/f/0/f/0///4///7+v//+v//+//+
+//4+P/x+P/x///t///u//v28/j/vcT/U1rPqLP/5PT/+v/r+v/k//n///n////1+P/y9v//9v//
+P//+P//9P/09P/0+P/++//+/f/5/f/54/X/VV7dBwH/AgD+AAD8AgL/AAL7AAL7AAH+AAH+AAT4
AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////dHR0AAAARkZG8/Pz+Pj4/Pz8+/v79vb2/Pz8////////YGBgBAQEVVVV
/Pz8/v7++/v7+fn5////////4eHhvb29xcXF5ubm9vb2/f39/f39////9/f38/Pz////////////
1dXVt7e3vb290NDQ6Ojo/////////Pz8////3t7eCwsLExMT8PDw////19fXa2trAwMDY2Nj19fX
8fHx////mJiYAAAAR0dH////7e3ty8vLv7+/zc3N9PT0+Pj4////+/v79/f3/v7+////////+/v7
+fn5////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////Pz8////+vr6/f39y8vL
CAgICQkJy8vL////9/f37Ozs9PT0////////mpqaBgYGDQ0N29vb/////Pz8/////////v7+8PDw
2NjY6+vr7e3t7+/v////////+/v7+vr6/f399vb29/f3////////+vr64uLi2NjY4ODg////////
+/v7////9vb2jIyMERERRkZG7u7u/Pz8////9/f3+vr6////9fX19fX14eHh7+/v+/v7////////
9/f3+/v7////////////////////////////////////////////////////////////////////
////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
CgD+DQH7DwfuQz//+Pf///z////1///3///7///+//z///v//f3//f3///3///3///7///7///n8
//z///b/+/f/7/r/v8zP8fb2/f///vv///v/+vj/+/n///j//vf++/7/+/7//fr//fr/9v/49v/4
+v3//fz//f7//f7/4/T/VV7eBQH/AwD+AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+
AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////cnJyAAAASEhI+/v7////////////////////////+/v7W1tbBQUFWlpa/f39+fn5////9/f3
8/Pz////////////+/v7+fn5////+Pj4+vr6/////////////f39+vr6/v7++vr6/v7+////////
/////v7++vr6+/v7////29vbAgICExMT5OTk9PT0////jIyMAAAAc3Nz////7Ozs/v7+qampAAAA
R0dH////+/v7+Pj4/////////////v7++vr6+Pj4+/v7/v7+/f39////////+vr6////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////v7+////////6enpNzc3AAAAbm5u8/Pz
////////////////v7+/QUFBAAAARkZG9PT0/////f39////9fX1/////////Pz8/f39////+vr6
////////9vb2////////////9vb29vb2/////v7++vr6////////////6Ojo////9vb2////jY2N
AAAANzc3////////+/v7////+fn59vb2////u7u7Ozs7fn5++/v7+/v78/Pz////////////////
////////////////////////////////////////////////////////////////////////AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+CgD+DQH7DwfuQz//
+Pf///z////1///3///7///+//z///v//f3//f3///3///3/+vn9//7///b5//z///b/8u7/7/r/
7/z/+v//+Pr6+/j///v/+Pb/+Pb///j///j/+/7/+/7//fr//fr/9v/49v/4+v3//fz//f7//f7/
4/T/VV7eBQH/AwD+AAD8BAL/AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/
CAD5Dg/jhYr/////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////fX19AAAAQUFB
/Pz8////+Pj4+/v7////////////+/v7VlZWAAAAUlJS/v7+////+/v7/////////Pz89/f3+/v7
////////////////////+Pj4/f39/////////f39////////////+/v7/Pz8+vr6/Pz8////////
////7OzsAwMDCQkJ8fHx+vr6+vr6kZGRAAAAVFRU////////////oqKiAAAAXFxc9/f3+fn5////
////////9PT0/////v7+////////+/v7+Pj4////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
/////////////////////////f398/Pz/v7+/v7+////np6eEBAQAAAAOzs7enp6np6elJSUbGxs
FhYWAAAAHR0dwMDA////+/v7////////+vr6+/v7/////////////v7+/v7+/f39////////////
+vr6/////////Pz88/Pz////////5ubm/v7+9/f3+vr6////+Pj48vLyoKCgCgoKOTk5/f39/v7+
9vb2/////v7+8fHx/Pz86+vrGBgYCAgIsrKy////////9/f3/Pz8////////////////////////
////////////////////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7AwfyBgntOj7/8ff//v3////1///3
/f///f7///v///v/+//8+//8/f/8///89/X0///++Pjj/Pzn9vr78PT1/f/t///t///w///1//r/
9Pz/7v7q7f3p//3///3////y///y//3///3/+//x+//x/f///f3///7///z/5PT/V1/bBQH/AwD+
AAD5BAP9AAL7AAL7AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////bm5uAAAARkZG////////+/v7+vr6
/////Pz8+/v79/f3XFxcAwMDVFRU/Pz8/////Pz8/Pz8/////////////v7++vr6/Pz8/Pz8+/v7
////+vr6////9fX1+vr6+/v7////////+vr6/v7+/////////////Pz8+Pj4/v7+6enpDAwMDAwM
7e3t////+/v74uLibW1tdXV18vLy////9vb2k5OTCwsLSkpK9fX1/////////////v7+9/f3////
////////////+fn5+/v7////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////8/Pz////7e3ti4uLHx8fAQEBAQEBBQUFAAAAAAAAAAAAOzs7oaGh+/v7
////7+/v/v7+/Pz8/v7+/////////Pz8/v7++/v7////////+vr6////////////7u7u8/Pz////
////+fn5/f39////+vr6+/v7////9/f3////////8vLylpaWampq+/v7////////9/f3////////
////+/v7h4eHAAAAGhoas7Oz////////////////////////////////////////////////////
////////////////////////////////////////AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+AgD+
AgD+AgD+AgD+AgD+AgD+AgD+AgD+AwP7AwfyBgntOj7/8ff//v3////1///3/f///f7///v///v/
+//8+//8/f/8///8//38///+///q///q+v7/+v7//f/t+/7k///s///1//r/8fn/7//r7//r//j6
//3////y///y//3///3/+//x+//x/f///f3///7///z/5PT/V1/bBQH/AwD+AAD5BAP9AAL7AAL7
AAH+AAH+AAT4AAP4AwD+AwD+AgD+AAH/AAD9AAD9AAP/CAD5Dg/jhYr/////////////////////
////////////////////////////////////////////////////////////////////////////
////////////////////////////////jo6OIiIiZmZm/////Pz8/////////f39/v7+////////
e3t7KCgob29v/////////Pz8/v7+/////////////////////////f39/v7++/v7/v7+////9PT0
/////f39/v7++/v7////////+vr69/f3////////+/v7////5ubmLi4uPT097u7u////////////
/f397e3t/////v7+////uLi4JSUlb29v/////////Pz8/f39/v7+////+/v7+fn5/f39+fn5+vr6
////////+vr6/f39////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////+/v7/v7+
/////////v7++vr6////2dnZgoKCJiYmAAAADg4OR0dHnJyc4uLi/////////Pz8+/v7////+/v7
////////9fX1////////9/f3/v7+////+Pj4////+vr6+Pj4////+vr69fX1////////9fX1////
+fn5////+/v7/f39////+/v7////////7u7u////6+vr////////////9vb2/v7+////5OTkbm5u
UFBQrq6u+Pj4/////v7+////////////////////////////////////////////////////////
////////////////////////AA==</image>
               </value>
               <?templateDesigner expand 1?></draw>
            <draw name="imgHCLogo_fr" y="6.35mm" x="6.35mm" w="47.625mm" h="6.35mm">
               <value>
                  <image contentType="image/gif">R0lGODlhnQAUANUAAP////j/+P/39/f39//v7+/v7//n5+bm5t7e3v/OztbW1szMzP+9vcXFxf+1
tf+trb29vf+lpbW1ta2traampv+MjJmZmf97e4yMjP9ra4SEhP9jY/9aWnt7e3Nzc/9KSv9CQmZm
Zv8xMVpaWv8pKVJSUkpKSv8YGEJCQv8QEP8ICDo6Ov8AADMzMykpKSEhIRkZGRAQEAgICAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACH5BAAHAP8ALAAAAACdABQAAAb/wI/q
RCymTgYBYMlkKptNR+pYPKVU0Kx2sCwUAlood1wYcAGI5TnMHqPNgPIBsN7SD+YCQKFnN0UsgYKB
KklaAhURYQIOKoODfmFmJjEyLgqRZwMTc3QmLZF+awgoHnQAEC11YmodIQcIEgcjFmVwbCCPgoWH
BCkkAk9QjbosWKFZIy0hHi0mnZJcCiYLYAUtEl9gyGpMYy6mdBIut1plACEhBSUYBSgYcatZucW8
UAwVF44XFQlZxMW4NSkQg8KSAzIW7NHQwSAACxM6aFgwwIOMEUs60OomkBWMDn0gvFiCAIMGCF0s
dMCAJx2EGCsWlAiBwYNCP/R02YuiwpGx/xT+hvnU1ZGJCRgeIMB5aWIEUoIyQrR4gSDEjBIHSrQo
4cJEuY6aXKCwQDbEyAUvUBzlBMOF1hUFPIyYMMNFgxIxSqx4gQlXMWMGligRkITEIBCEBy8BSLSo
mQ4vZMjQAEACBjMhVgyI0WFOjAYLYhSgIEPBAQp8i3pTs2LGixkxXrw48OnAuksavFiIoSCECQAf
B6B4BUCGwzA5H/ES8IDBhQ8GKux6YOBDBQZBGT9SXUChbQszLKBr27W4+AEwFiAQraFu7BcS5CEL
S3wABRcFXMiAwb/EQ9ktyADATMB5MMAK8ACXIHJ/8ULAB1ewwEEGPqmQwQfGqHCBEgz8xf+CahLE
gJIZLnTQQXoAKDPAZEvA0IACMwCAwQx4IOCBbao1sVk4ADTwwgAtjKAHBBRYIEM2EMxQQAglENQB
AC1oYMYLlPlVT2AC6CNICoMMpUIFAAjAwFDbqYZCDMyUAIONMViAwX4FzFCliKGFsMAyFqiJgHyZ
MFHACyFwUcAEMow22W4aYFCQBSvEUNUIA7zQQgMrdMCFDDxqkVyXWGrpISGKiEkmJKoNkCegDcQR
QikUdIDASWZ4oMAAGgjZmwkepJGjjh1YcMYCTw4gAQrv6KHBcBbcOAEFA0BQwrLixSUBTg12Omox
KTyw2LWBlJqFJm6cA8cYcHjBUVF9AID/xyl0jDtuu2bEy9FXVuoUGAAEVHDCpyQ88IR2pOYIgQYa
6LrGOX7GcYq8TMTCLp9quKGGAibuOa8YA+gxhy1+FjAivOxuusu9YToASDEgBLXtXzmS8sJeL0wA
bjfx1nzwKR3E0IkeNYtCB14roCADS1/d0scqPAsbw7npikwIyWE+4EiFxjAgFMuOfWJxCDLYdsAC
3Zkxh3oH7THrxApoAEMcBShwkyQceQDDujlXEwACC6xrmwIIaNw22WjAIgEM8aqn6xJOAwbFAylY
B8IHF4hwgtU8Yd2RAjFMAG98DbSwQgstKOCjCy3EIKUFab3cNworuADDSKh/sgI0UBwd/8cM8GQc
AAQFNCCWCy/wHsNUMIQQAFqgT4qOC3uBAgHpzL+d+E6CERAMP8EQ8A+3HxZFl8GnjJBbfhgsMINB
FmXlawHGUaAzAJQUsAInB8wgM8R3HKlwvB54UEbxKzKQBWCggBGAJFIWaEAM8sa1ANDEDG1hwvSg
1gQBTIgNABOEaiCQEI5prAMlONMEFiCDNOQMDRowQWsm4BszaGAkCvBA62QgnlAcIAbZUJe6zICB
FZQgKgOYgQR2RyNTfeJIauOCBH50AAyoEE1nmOAiTiACYVwtIOgamh485iLWYcBHFjDfrF4ovxVY
AAIwSBYKuICBub2AFhIITzTKFSSFKdwABhLgCgYmAKggTmB3pdELBp43AQ0sbQA+KiMGlvibJYiA
W4WwohM2sKEwSK0ejpFReBrgoxbc0H+EooD5TNi1odlHiHHM25kacKQAvMlXdaDXQ3C3AAi07o7q
eEmgaNisGWDOQEnqgPkokBUYsM9AEpDBCpiwARI485kkoCIFKyjJKEATmifIUQEw0AIYtMBVBbAA
sdKhAQW4oG8YeMU4VpAOCyDAAp5bxgI0sAJ2ekAWOmIDBdT0AlkNYAH1nEkJpvFHCIxgAeNoSjoU
AAEUOKNJjKqUCda4hCAAADs=</image>
               </value>
               <ui>
                  <imageEdit/>
               </ui>
               <desc>
                  <text name="embeddedHref">\\vmware-host\Shared Folders\eForms\FIP logos\print-fip-sig-fra.gif</text>
               </desc>
            </draw>
            <draw h="11.1125mm" name="imgCanada" w="38.1mm" y="268.22mm" x="3.174mm">
               <ui>
                  <imageEdit/>
               </ui>
               <desc>
                  <text name="embeddedHref">G:\dev\images\Canada_wordmark_bw.gif</text>
               </desc>
               <value>
                  <image contentType="image/gif">R0lGODlh4AA9APcAAP///wAAAPz8/P7+/vr6+ri4uPv7+2VlZfT09NPT0/39/ff399vb2+vr6wMD
AxgYGBkZGWBgYJqamjQ0NNbW1vLy8gYGBqCgoBwcHAQEBG5ubgUFBQEBAXp6euLi4h8fH6amptXV
1QgICA0NDfn5+QICAufn5+jo6CMjIxUVFfb29hoaGr29vW9vbxISEg8PDy0tLfPz893d3erq6ioq
KgkJCfX19Q4ODubm5h0dHd/f319fX21tbXJyctDQ0NTU1CAgIKOjowwMDE1NTS4uLh4eHjs7OwsL
CzAwMBQUFO/v76enp3FxcVJSUlZWVhAQEMnJyeXl5a2trT4+PlVVVfj4+M7OzvHx8VtbW8/Pz9nZ
2TU1NZOTk+Pj4+7u7unp6UlJSXV1dVBQUBYWFvDw8AcHB+Tk5BsbG0BAQGlpaezs7LCwsLa2tru7
u2dnZ4GBgYWFhbW1tX9/f4uLiygoKKKioiYmJsLCwoeHhywsLNfX156enpWVlUhISHR0dOHh4UdH
R4aGhqysrJeXlzo6OmhoaAoKCtjY2Hh4eJKSkkNDQ8DAwISEhKmpqV1dXcjIyDg4OEFBQbKysr+/
vzExMSsrKykpKSEhIc3NzZ+fn3l5eV5eXi8vLxcXF4qKisfHx3Nzc8zMzGpqajIyMktLSyIiInd3
d8XFxVhYWJaWljY2NkVFRWZmZldXV76+vlpaWoCAgNzc3NHR0T8/PzMzM8vLy7e3t7OzsxMTE5SU
lH5+foiIiDc3N0xMTE9PT52dnUpKSlxcXMPDwxEREYKCgiQkJO3t7aurq2RkZMbGxpmZmWxsbERE
RKqqqllZWTw8PLS0tMTExHZ2dkJCQqioqN7e3pGRkbq6uq6uricnJ9LS0j09Pa+vr2FhYWtra6Sk
pGJiYsHBwX19fXBwcJiYmI2Njdra2nx8fLm5uZycnFNTU7GxsWNjY1FRUaWlpYmJiY+Pj+Dg4Jub
m4ODg05OTkZGRjk5OVRUVCUlJcrKyqGhoQAAAAAAAAAAAAAAAAAAACwAAAAA4AA9AAAI/wABCBxI
sKDBgwgTKlzIsKHDhxAjSpxIsaLFixgzatzIsaPHjyBDihxJsqTJkyhTqlzJsqXLlzBjypxJs6bN
mzhz6tzJs6fPn0ALGlhAlCiJoEiTQpwBZQ0cUBqi8pBzK5wOAgP/hDiqtOvPAZi4oOrEIcCNCbQI
EXERoMY2Rmx8dNmBpYHXiSR8pPI0SIJfCXsELkj0l8udhbX6SiAHosvdgXoY2SkbYAKsNmSUkDjB
IgydAAGOjHoWoImxxxEXtClEYwPo1wIbvAZ9oOCSEwR5zD4j5TECZZZeu0BEYcDBEFgszMbiBfXE
CuJGzI49O0BtgSEk3PCTQIDADrM/FP+4i0ODkNe0BGFNeKVHhteqcDinaGQ6ANmzrxNYAwT0JBvf
hTdeVz/08R5oSJxi3EIxePMaBPHMN9EbR8B2X3WFALCEL6jkAFoLbrQAAHividdVLJHMdsSADSkB
Bmg5/CGhREEkYSF+r7kBwAEBlOFAABsoN8KIAiplDCvVpbKgQ7UEV4wHM0b0Q3+gUTdbhjtUBxok
RJbIIlAG/FJdEyZIJApoh0QJURfF3FgdKwDgUMiBoCkSQpegmYiUFSLMNoYtE6mhSgB3qumQByi4
mZ9ACeSRggvKJRCgl0h58Up1jpw2UQ8B/GDooYlWeeGiACgwgwBO3BGFd3gGoCdQWWj/GURFWYjw
yacNIaroa9cN5ISkA5GY55c9IYBMdUakWRESg3CFa0K6ioojbQVpEwNBpsxWRBxBmfDjbBpcJIks
rA40wAACpJuuAhEtKRC66q7rLkIDKBBvuvMyVG+8S0YbwEL2CmCvAvkmJYAUWs7REQkNJLNHIaCY
wgQTXEChxgIFV4FABZkdIkksAAywAA7XdNACDxq0wAQfhyzA7kEGIJBAECqb4ocGmkxiAgIvJ6RA
BSZwA4soPKQhBxtmLACAvweJ/MUncCwDih88BALCCRUY4JUNWc42zDEcqVHOE6CN8Yo4pKQAYxoJ
zEuCBGnMAoRrAeyAACbdGJKBEXa4/9AnaBuA8chBAjRCRAltKQKLG6E6MEsbBQsUAwuEgFaCEC64
YAiQrWihQ6j/FjRACDt8W8kQVMBwoBHNXNFVBVtUh0QWG+nRJmhGrAeAD7y8JoIU5QJAAs3VzRJM
GQ8MosJAPjSBOGgYcEsQAuo8b0GhANiAx2xMaG3QCV0HgAEe8gHwxS79vXAOBhYOREAmL4DmwBtV
DLSHjQFwQMsXSpFB5WswCIVGBoCP14xhcASRxBle4wCQFYQAXNASKWQkFGfMBg3LG4gbZpOLni1t
ArPhgkFkgITXAGEdBoFCCatTEBYspzkEcY/lhqAUNWgpgBo5xYE4gAaDIEAMs7mFB/8F8ojqXAIK
CMHBbHIAKMlN4TUjgOFADGCN2SBDaQMhQR8o8wRsIEQCZLOPQFTAiNlIwCBWqMFriuC9oEwLNDjM
iAcWGIAHoNAgPHpNOnQ3kBDgDzTESEgFQCi/QBDEEa+hn0GuMZsdXGsgiFBOABwAJ4Qo4IliBIAA
6vAaRTDgIOcBzQP0kBQvSPI1RMDERqTgBGfUASEamM0F+CgQPazgNS+4RUJUkEfQjIMgFDCFI96A
gIO48DURKKZAzHBL0LzAdQlhwrdENZAThKEPEagFQqQDGgh8EilX4ER1snGKk5zpNbM0CAUe8JoJ
aCMhCwgDqRwSh9kkcyA9+FsAXrH/kCWorX0EEUAbDRLKAHgzKRWARHVSsAaTkGEIsqQlANb5mi14
CiEEkMA8GUIAeNhTmQCAwWwWsRAflCKTDfmBGrv5zaDYABVa4oNJLsBN0KSzIBQFzQSABbNGbHQh
1QBdAO4JgCw0EzQDPcgXaIBShrximgdFCgk8oSVNlKQNTI2oOtmpU54axAAg+Cm9tOCL6hCVGmwB
zRkY0oCsUpMhCphDhR7U0qD8QEubyGBHDHCCPwiCChughFsDcFNgcrUyXhVKWHmlkBmcwBUHGMML
APFRgehipQGYQkMGBVCE2CAE5CCNGOgUVaSowQ7VoYQPLlIAWbwsGucAxjaIgIIb/6DhFyrYIDol
mlPEJgSsYo0FH5wwC07k4QZ0SIQW1lBZAIzjlJFoSOU6KxAyCKIFvTDCBFIwhiGwQQUFLW1QFjAP
Lb3SIpWgxgBw4IQiYHYF8miAd2K52622M7EEAS5jpygHGryAMg6Qhg68c0zQELUFp1SEdFGqAHRs
IQl0ikQbGsCumoo3KD7QEjjIUJFFPEEGtTjpayywiVUNhL425e1hd/rbxVJLIBVoRXVSCSCBFHio
ysTDXANAB4YoIQ+ZVEEi6DTJOXhhSRaua1AqoJvZrGASFaHCKhYwCsoEQAQ9MAiKCavi+7Z4npqo
zjNm0MLm1mEYDGSICYIDUCtYuf+OYCtIkr1ihfjNRhMSbcgiLBAHSezYAWI4yJYLO5Deshgh+n1x
CGJXIjMY5MZEPcEHZoPfgsgAte1DAChmY4F0HGTOXRkAJ6vTUIkAYhQ26AHdAtCJCghaqzhdcaUF
kmjrCMQdfwzAHfIFaZAyYzawWEgcICBGE4gYNOzYJl3vUgU5VKcSFIiIg1wBgAgcyAFYQEiTU2zf
rn55v8ooaDbUcJA2NBcAd/hnAFYQOYF4YscBkIFATHCJ1yQhzgRd9l2UkIbqiEHeDklFCXShtFz8
zQKDOIgMMAmaTEg0BOrewqwBYIBvkCofIgXNJh5JkCts2ZEE2cSBNrALhfSiOkv/EIgSmvAaGiCw
IAXQ5wPMgRoC4OGUAVDFD9otGDgEgAmuXhr+HBCMg1hj1QEIBBYBsJ5FzIYIVtjlOUEDjoHIGDQr
wE1BZGFn0DBDBwSpACUoA4FZC+PYoAm08BJhwN4YBAzPC0AKhGGuIQYFGkig0xMak9RSVQAKlA0D
xwHgh+fhQlkDWUQeSqDPFITAOCo4owmoUJ0O5HkA0agOJLQgkGYcVQLOGgADKH+DEQdGIFIwgR62
UBYOjMLRBYkBZbXEAoF4wB7I5OMAGCGCtALJEQORxa28MgNGEOEJz4NBKqzAgBOYwAM/4IYYynCJ
IOQLGH+jQQLMEIUElKMIKJBA/zCmyYtTJIAYIvDBMrQUgDAwoH7vagAbPFSdIVwFAHsgdgAskAkZ
REELjUAIN9ABnoBZuJAJfxBWh1EBTfBPECAFOmACUSADtkAJAVAEm7MbycA/RvUaaaADJxAFDNAC
hgAIglBvoHEDcFANwsALaYAaHvALQwADH+AaHAAEYAAMVGAHI8AJ76AECYEIlVB6ZWAEqEALOdAD
jjEDPUAHQkAZdNAJgRAB4oMBVmiFK1AGkRAOrNIFc7ACuJADV4gBZ2AIaCBAABAEU9AJiGMJTrAK
OeAESEQAQZAHw/A8RfAExFBjGoIGH1AGAeAC9TAFQJABL8AJn8Bw8lMDb/BJFOWgCCngGkVACq0A
A0ggAfUDBdPwAHQzAhiABkpGHq7AB4GABWDADEOgC7lAOwwRBXyADL3gC4jQDPxDEFrABQfQBKww
BzpgDkuADgUQjMIYjI0wCViUAEsADcM4jI3gCsqkAtggB/fQBzygDLA3EDOgD2HgDI6ACAkwRAYQ
DXAQAWCwCtPQDbsADa4WBKsACaTQBMuAB4kgCMkAY2wgDVTQB+3gB2ywdKWyBh1AD+rgBt9AZs9y
kBhxBQ3AcwjZkA75kBAZkRI5kRRZkRZ5kRiZkRq5kRzZkR75kSAZkiI5kiTZFQEBADs=</image>
               </value>
            </draw>
            <field access="protected" h="6.35mm" name="ddtFinalized" w="44.426mm" x="79.169mm" y="273.05mm">
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var cDateUtil = script.core.util.DateUtil;

var language = cDrugApplModel.getLanguage();

var cLog = script.core.util.Log;

cLog.trace ("INITIALIZE IS CALLED !!!!!!!!!!!!!!!!!!!!!!!");

function noError(){return true;}
//window.onerror = noError;


if (this.resolveNode ("DrugAppl.#variables[0].Globals").isFinalized  == true) {

    cLog.trace ("FINALIZED IS TRUE !!!!!!!!!!!!!!!!!!!!!!!");
    

    if (language == "en" ) {
		this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue  = "Date Finalized: " + util.printd("yyyy-mm-dd", this.resolveNode ("DrugAppl.#variables[0].Globals").finalizedDate );
		
		
		
	}
	else {
		this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue  = "Date finalisée: " + util.printd("yyyy-mm-dd", this.resolveNode ("DrugAppl.#variables[0].Globals").finalizedDate );
		
	}
	
	
	
}
else {
	 cLog.trace ("FINALIZED IS FALSE !!!!!!!!!!!!!!!!!!!!!!!");
}

</script>
               </event>
            </field>
            <field name="txtAccessDate" y="273.057mm" x="170.456mm" w="42.268mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <bind match="none"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

if (this.rawValue == null) {
var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cDateUtil = script.core.util.DateUtil;
	var accessDate = "";
	accessDate = new Date();
	accessDate = util.printd("yyyy-mm-dd", accessDate);
	
	if (language == "en") {
		this.rawValue = "Access date: " + accessDate;
	} else {
		this.rawValue = "Date d'accès: " + accessDate
	}
}
</script>
               </event>
               <para vAlign="middle" hAlign="right"/>
            </field>
            <field name="lblVersion" y="273.057mm" x="123.928mm" w="46.227mm" h="6.35mm" access="protected" presence="hidden">
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();	
var cDateUtil = script.core.util.DateUtil;
if (language == "en") {
    this.rawValue = "VERSION 2.11 FINAL DRAFT ";
} else {
    this.rawValue = "Version 2.11 - Ébauche Finale";
}

</script>
               </event>
               <bind match="none"/>
               <para vAlign="middle"/>
            </field>
            <field name="txtTitle" y="266.92mm" x="124.15mm" w="88.574mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <bind match="none"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">


var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var cDateUtil = script.core.util.DateUtil;
if (language == "en") {
    this.rawValue = "FORM IV: PATENT LIST";// (NOTICE OF COMPLIANCE) REGULATIONS\NCOMPLETE ONE FORM PER PATENT PER SUBMISSION",";
} else {
    this.rawValue = "FORMULAIRE IV: LISTE DES BREVETS";// SUR LES MÉDICAMENTS BREVETÉS (AVIS DE CONFORMITÉ)\NREMPLIR UN FORMULAIRE PAR BREVET PAR DIN";
}
</script>
               </event>
            </field>
            <field h="7.5mm" name="CurrentPage" presence="hidden" w="55mm" access="readOnly" id="floatingField024979">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="20mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Text Field</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <calculate override="error"/>
               <event name="event__layout_ready" activity="ready" ref="$layout">
                  <script contentType="application/x-javascript">this.rawValue = xfa.layout.page(this); 
</script>
               </event>
               <?templateDesigner floatingFieldPlaceholder #?>
               <bind match="none"/>
            </field>
            <field h="7.5mm" name="PageCount" presence="hidden" w="55mm" access="readOnly" id="floatingField025889">
               <ui>
                  <numericEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </numericEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="20mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Text Field</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <calculate override="error"/>
               <event name="event__layout_ready" activity="ready" ref="$layout">
                  <script contentType="application/x-javascript">
this.rawValue = xfa.layout.pageCount();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
//app.alert("h2");
if (xfa.layout.page(this) &gt; 1) {

imgCanada.presence  = "invisible";
}
if ((xfa.layout.page(this) == 1)  ) {
	Pages.presence = "hidden";
	
} else if (language == "en"){
	Pages.value.exData.loadXML(Pages.value.exData.resolveNode("##xHTML").saveXML().replace("sur","of"));
	
}else if (language == "fr"){
   Pages.value.exData.loadXML(Pages.value.exData.resolveNode("##xHTML").saveXML().replace("of","sur")); 
	
}


//update the Health Canada FIP Logo
imgHCLogo.presence = "invisible";
imgHCLogo_fr.presence = "invisible";

if (language === "en") {
    imgHCLogo.presence = "visible";
} else {
    imgHCLogo_fr.presence = "visible";
}
</script>
               </event>
               <?templateDesigner floatingFieldPlaceholder ##?>
               <bind match="none"/>
            </field>
            <draw name="Pages" x="6.488mm" y="270.857mm">
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <exData contentType="text/html" maxLength="0">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p>Page<span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField024979"/> of<span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField025889"/></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0mm" leftInset="0mm" rightInset="0mm" topInset="0mm"/>
               <para vAlign="middle"/>
            </draw>
            <draw name="Revision" x="106.724mm" y="268.694mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="tab-interval:0.5in;tab-stops:left 0.333in left 0.667in left 1in left 1.333in left 1.667in left 2in left 2.333in left 2.667in left 3in left 3.333in left 3.667in left 4in left 4.333in left 4.667in left 5in left 5.333in left 5.667in left 6in left 6.333in left 6.667in left 7in left 7.333in left 7.667in left 8in left 8.333in left 8.667in left 9in left 9.333in left 9.667in left 10in left 10.333in;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField025515"/></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <?templateDesigner expand 1?></draw>
            <field name="RevisionNo" w="62mm" h="9mm" id="floatingField025515" presence="hidden" access="readOnly" x="12.702mm" y="32.396mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <para vAlign="middle"/>
               <calculate>
                  <script contentType="application/x-javascript">
this.rawValue = DrugAppl.desc.version.value.replace(/\$/g, "");

</script>
               </calculate>
               <bind match="none"/>
            </field>
            <?templateDesigner expand 1?></pageArea>
         <?templateDesigner expand 0?></pageSet>
      <subform w="576pt" name="sfPage1" layout="lr-tb">
         <subform w="203.2mm" h="38.316mm" name="sfMainHeader">
            <exclGroup name="pageLanguage" x="79.414mm" y="24.693mm">
               <bind match="dataRef" ref="$.SAR_REQUEST.LANGUAGE"/>
               <field h="8.714mm" name="chkEnglish" w="27.992mm" locale="en_CA" relevant="-print" y="0.001mm">
                  <caption placement="right" reserve="21.99mm">
                     <para vAlign="middle"/>
                     <value>
                        <text> English</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>en</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</text>
                  </value>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
var dosage = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue ;
var route = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue ;
var emailValue = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

cLog.trace ("PAGINATION CAPTION: " + this.resolveNode("#pageSet.Page1.Pages").rawValue);
cLog.trace ("english: otherDosageIsSelected : " + cDrugApplModel.getDosageIsSelected());
cLog.trace ("dosage in english: " + dosage );
this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime = false;

if (language == "en") {

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "visible";
	this.resolveNode("DrugAppl.sfPage1.sfFormulationList..lblMedIngredients_en").presence = "visible";
 	this.resolveNode("DrugAppl.sfPage1.sfFormulationList..lblMedIngredients_fr").presence = "hidden";
	if(this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence == "visible") {
		this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "hidden";
		
	}
	
	
   
    
    xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalID.caption.value.text").value = "Digital ID";
     xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalImage.caption.value.text").value = "Image Signature";
	
}
else {
 	
   	this.resolveNode("DrugAppl.sfPage1.sfFormulationList..lblMedIngredients_en").presence = "hidden";
	this.resolveNode("DrugAppl.sfPage1.sfFormulationList..lblMedIngredients_fr").presence = "visible";
	 xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalID.caption.value.text").value = "ID électronique";
	 
	  xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalImage.caption.value.text").value = "Image de signature";
}

</script>
                  </event>
               </field>
               <field h="8.714mm" name="chkFrancais" w="26.316mm" x="28.261mm" locale="fr_CA" relevant="-print">
                  <caption placement="right" reserve="19.7771mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Français</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>fr</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;
var emailValue = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtEmail.caption.value.text.value;
var dosage = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.rawValue ;
var route = DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.rawValue ;
var flagRoute = false;
var flagDosage = false;

var cActionEvent = script.core.event.ActionEvent;
var cAddressHandler = script.RegulatoryAddresses.control.RegulatoryAddressHandler;
var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;
var cFormNodeManager = script.core.model.FormNodeManager;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime = false;

this.resolveNode ("DrugAppl.#variables[0].Globals").provinceSelectedIndex = this.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince").selectedIndex;
this.resolveNode ("DrugAppl.#variables[0].Globals").canadaProvinceSelectedIndex = DrugAppl.sfPage1.sfAuthSignOfficial.sPart4.Address_Block.sPart1BCompanyDetail.ddlProvince.selectedIndex;
cLog.trace ("dosage: " + dosage );

if (language == "fr") {

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "visible";
	                   
    
	if(this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence == "visible") {
		this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "hidden";
		
	}
   
   
    
    
    

 	  xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalID.caption.value.text").value = "ID électronique";
 	  
 	  xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalImage.caption.value.text").value = "Image de signature";
	
}
else {
 	 
	  xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalID.caption.value.text").value = "Digital ID";
	  xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalImage.caption.value.text").value = "Image Signature ";
}
</script>
                  </event>
               </field>
               <?templateDesigner itemValuesSpecified 1?>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cMainHandler = script.DrugAppl.control.FormHandler;

try
{
	// set up event object
	var actionName = cMainHandler.LANGUAGE_CHANGE;
	var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
	
	// deploy event to controller
	cMainHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with pageLanguage::change", exception);
}
</script>
               </event>
               <validate scriptTest="warning"/>
               <?templateDesigner expand 1?></exclGroup>
            <draw name="lblFormTitle" w="193.675mm" h="22.894mm" y="2.654mm" x="9.525mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>FORM IV: PATENT LIST Patented Medicines (Notice of Compliance) Regulations COMPLETE ONE FORM PER PATENT PER SUBMISSION</text>
               </value>
               <font size="16pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H"/>
               <?renderCache.bounds 546166 62062 0 0 1417 1417 0 0?>
               <?renderCache.textRun 21 FORM IV: PATENT LIST  0 195213 13417 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?>
               <?renderCache.textRun 54 Patented Medicines (Notice of Compliance) Regulations  0 77359 32617 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?>
               <?renderCache.textRun 43 COMPLETE ONE FORM PER PATENT PER SUBMISSION 0 87271 51817 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?></draw>
            <?templateDesigner expand 0?></subform>
         <draw name="lblMandatory" w="202.626mm" h="12.7mm" colSpan="2">
            <ui>
               <textEdit/>
            </ui>
            <value>
               <text>Text</text>
            </value>
            <font typeface="Myriad Pro" size="8pt"/>
            <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
            <para vAlign="middle"/>
            <?renderCache.bounds 571539 33166 0 0 1417 1417 0 0?>
            <?renderCache.textRun 4 Text 0 1417 20000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
         <subform minH="63.001mm" layout="lr-tb" name="sfHCOnly" w="160.08mm" presence="hidden">
            <draw name="lblHCOnly" w="143.67mm" h="9.1mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>HEALTH CANADA ONLY</text>
               </value>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin topInset="1.27mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <border>
                  <edge presence="hidden"/>
               </border>
            </draw>
            <field name="txtSAPInvoice" w="55.83mm" h="6.985mm">
               <ui>
                  <textEdit>
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="23.55mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>1. Submission No.</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
            </field>
            <field name="txtFileNumber" w="76.47mm" h="6.985mm">
               <ui>
                  <textEdit>
                     <border>
                        <?templateDesigner StyleID aped2?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="5.08mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="27.25mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>2. Responsible Area</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
            </field>
            <field name="txtScreenedBy" w="55.57mm" h="6.985mm">
               <ui>
                  <textEdit>
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="23.55mm">
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>3. File Number</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
            </field>
            <field name="txtSAPOrder" w="76.46mm" h="6.985mm">
               <ui>
                  <dateTimeEdit>
                     <border>
                        <?templateDesigner StyleID aped3?>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </dateTimeEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1.0008mm" bottomInset="1mm" leftInset="5.08mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <value>
                  <date/>
               </value>
               <caption reserve="27.52mm">
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>4. Date of Receipt</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
               </caption>
               <border>
                  <edge presence="hidden"/>
                  <fill>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <validate>
                  <picture>date{YYYY-MM-DD}</picture>
               </validate>
            </field>
            <margin bottomInset="2.54mm" topInset="2.54mm" leftInset="12.7mm"/>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
               <fill>
                  <color value="255,255,153"/>
               </fill>
            </border>
            <?templateDesigner expand 0?></subform>
         <subform w="203.241mm" name="sfInstructions" layout="tb">
            <subform w="184.825mm" minH="10.16mm" layout="lr-tb" name="sButtons">
               <field name="btnViewInstructions" w="38.918mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>View Instructions</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

this.resolveNode("sfInstructionsContent").presence = "visible";


if (language == "en") {

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "visible";
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "hidden";
}

else {

	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "visible";
	this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "hidden";
}



DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.access = "open";
DrugAppl.sfPage1.sfInstructions.sButtons.btnHideInstructions.fillColor = "211,211,211";

this.access = "readOnly";
this.fillColor = "245,245,245";

</script>
                  </event>
               </field>
               <draw name="Text1" w="4.69mm" h="5.2331mm" presence="invisible">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Text</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               </draw>
               <field name="btnHideInstructions" w="38.496mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Hide Instructions</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

this.resolveNode("sfInstructionsContent").presence = "hidden";

if (language == "en") {
  this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocEnglish").presence = "visible";
}
else {
  this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtGuideDocFrench").presence = "visible";
}


this.access = "readOnly";
this.fillColor = "245,245,245";

DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.access = "open";
DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions.fillColor = "211,211,211";
</script>
                  </event>
                  <event activity="initialize" name="event__initialize">
                     <script contentType="application/x-javascript">if (DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.ddtSignedOn.rawValue == null){
if (DrugAppl.sfPage1.sfInstructions.sfInstructionsContent.presence == "hidden") {
this.access = "readOnly";
this.fillColor = "245,245,245";
}
}
</script>
                  </event>
               </field>
               <draw name="txtGuideDocEnglish" w="48.533mm" h="5.2331mm" relevant="-print">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <exData contentType="text/html">
                        <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="letter-spacing:0in"><a href="http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/guide-ld/patmedbrev/pmreg3_mbreg3-eng.php" style="font-size:8pt">Guidance Document</a></p></body>
                     </exData>
                  </value>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               </draw>
               <field name="txtGuideDocFrench" w="48.475mm" h="5.2331mm" presence="hidden">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <caption reserve="47.475mm">
                     <value>
                        <exData contentType="text/html">
                           <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="text-align:center;text-decoration:none;letter-spacing:0in"><a href="http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/guide-ld/patmedbrev/pmreg3_mbreg3-fra.php">Ligne directrice </a></p></body>
                        </exData>
                     </value>
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                  </caption>
                  <event activity="prePrint" ref="$host" name="event__prePrint">
                     <script contentType="application/x-javascript">

this.relevant = "-print";
</script>
                  </event>
               </field>
               <field name="txtLocked" w="22.71mm" h="7.62mm" presence="hidden">
                  <ui>
                     <textEdit>
                        <border presence="hidden">
                           <?templateDesigner StyleID aped0?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="0mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>UNLOCKED</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border>
                     <corner thickness="0.175mm" presence="hidden"/>
                     <edge presence="hidden"/>
                  </border>
                  <format>
                     <picture>num{zzzzzzz9}</picture>
                  </format>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">//this.resolveNode("").rawValue = xfa.event.newText;
</script>
                  </event>
                  <value>
                     <text maxChars="255"/>
                  </value>
               </field>
               <field name="txtSignatureOpen" w="22.71mm" h="7.62mm" presence="hidden">
                  <ui>
                     <textEdit>
                        <border presence="hidden">
                           <?templateDesigner StyleID aped0?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="0mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>CLOSED</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border>
                     <corner thickness="0.175mm" presence="hidden"/>
                     <edge presence="hidden"/>
                  </border>
                  <format>
                     <picture>num{zzzzzzz9}</picture>
                  </format>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">//this.resolveNode("").rawValue = xfa.event.newText;
</script>
                  </event>
                  <value>
                     <text maxChars="255"/>
                  </value>
               </field>
               <?templateDesigner expand 0?></subform>
            <border>
               <edge presence="hidden"/>
               <corner presence="hidden" thickness="0.175mm"/>
            </border>
            <margin bottomInset="5.08mm"/>
            <subform name="sfInstructionsContent" w="203.2mm" layout="tb" presence="hidden">
               <draw name="lblInstructTitle" w="202.53mm" minH="6.35mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" hAlign="center"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Where to send Drug Submission Application</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw name="lblInstructions" w="202.53mm" minH="39.584mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Instructions guide</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw name="lblInstructHumanHeading" w="202.53mm" minH="6.464mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Human Drugs:</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw name="lblInstructHumanBody" w="202.53mm" minH="39.291mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Human Drugs: </text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <draw name="lblInstructVetHeading" w="202.53mm" minH="5.466mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Veterinary Drugs:</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <border/>
               <draw name="lblInstructVetBody" w="202.53mm" minH="28.53mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Veterinary Drugs: </text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" name="sfSubmission" layout="lr-tb">
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <breakBefore/>
            <subform w="202.569mm" layout="lr-tb" name="part1Sub" minH="20.779mm">
               <draw h="7.62mm" name="lblPart100" w="202.522mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Part 1 - Patent Filing Information</text>
                  </value>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                     <fill>
                        <color value="255,255,153"/>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                     </fill>
                  </border>
                  <?renderCache.bounds 571244 18766 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 34 Part 1 - Patent Filing Information 0 1417 13800 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <draw name="lblSelect" w="7.965153in" minH="5.08mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Please select from the Patent List Filing Option below, and then enter the required information.</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <field name="ddlSubmissionFilingStatus" w="201.764mm" h="7.62mm" locale="en_US">
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="69.1422mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Patent List Filing Option*</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <validate nullTest="error"/>
                  <items/>
                  <items save="1" presence="hidden"/>
                  <border break="open">
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <assist>
                     <toolTip>&#xD;</toolTip>
                  </assist>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">var cLog = script.core.util.Log;
;

cLog.trace ("index: " + $.boundItem(xfa.event. newText));

if ($.boundItem(xfa.event. newText)== "CTAA") {
  this.resolveNode("lblSubNumber").presence = "visible";
  this.resolveNode("ddlCDSA").presence = "visible";
  this.resolveNode("lblNewIssued").presence = "visible";
}

else if($.boundItem(xfa.event. newText)== "CTA") {  
  this.resolveNode("lblSubNumber").presence = "hidden";
  this.resolveNode("lblSubNumber").rawValue = null;
  this.resolveNode("ddlCDSA").presence = "visible";
  this.resolveNode("lblNewIssued").presence = "hidden";
  this.resolveNode("sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients").presence = "visible";
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <field name="lblSubNumber" w="111.76mm" h="7.257mm" presence="hidden">
                  <ui>
                     <textEdit hScrollPolicy="off">
                        <border hand="right">
                           <?templateDesigner StyleID aped2?>
                           <edge/>
                        </border>
                        <margin/>
                        <comb numberOfCells="6"/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="62.8347mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Submission Number *</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

  // validation for Company ID field
 var cResourceManager = script.core.lang.ResourceManager;
 var cFormNodeManager = script.core.model.FormNodeManager;


function countDigits (str) {

	var chr = ""
	var nDigits = 0

	for (position = 0; position &lt; str.length; position++){
   		chr = str.charAt(position)
   		if (chr &gt;= "0" &amp;&amp; chr &lt;= "9") nDigits++;
	}

	
	
	return nDigits;

}

function isNumericValidSubmissionNumberTextBox(numericField, digitNo) {
 numericField.fillColor = "255,255,255";
     if (numericField.rawValue != null &amp;&amp; numericField.rawValue != "") {
     //xfa.host.messageBox ("The Submission Number called isNumericValid.");
     var regExp = /\D/;

          if (regExp.test(numericField.rawValue)) {
  			 if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                   app.alert("The field must only contain numbers.");
             } else {
                  app.alert("Le champs ne peut contenir que des chiffres.");
             }
             numericField.fillColor = "230,125,125";
			return;
          }

          var length = numericField.rawValue.toString().length;
         if (length !== digitNo) {
             if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                 app.alert("Submission Number must contain " + digitNo + " digits with leading zeroes when necessary.");
             } else {
                 app.alert("Le numéro de soumission doit contenir " + digitNo + " chiffres. Ajoutez des zéros au début si nécessaire.");
             }
             numericField.fillColor = "230,125,125";
         } else {
             numericField.fillColor = "255,255,255";
         }
     }/*else{
      numericField.fillColor = "250,128,114";
      if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                 app.alert("Clinical Trial Control Number must contain " + digitNo + " digits");
             } else {
                  app.alert("Le numéro de contrôle de l'essai clinique doit contenir  " + digitNo + " chiffres");
             }
            
     }*/
 }
 
if (this.rawValue.toString().length  &lt; 6) {
	isNumericValidSubmissionNumberTextBox(this,6);
	xfa.host.setFocus(this);
		
} else {
	this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
}
</script>
                  </event>
                  <format>
                     <picture>text{999999}</picture>
                  </format>
                  <validate nullTest="error">
                     <picture>text{999999}</picture>
                  </validate>
               </field>
               <field name="ddlCDSA" w="165.122mm" h="7.62mm" locale="en_US">
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="69.3559mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Related Submission *</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <validate nullTest="error"/>
                  <items/>
                  <items save="1" presence="hidden"/>
                  <border break="open">
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <assist>
                     <toolTip>&#xD;</toolTip>
                  </assist>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

if ($.boundItem(xfa.event. newText)== "SNDS") {
  DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.presence = "visible";
}

else  {  
  DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.presence = "hidden";
  DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkDosage.rawValue = "No";
  DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkUse.rawValue = "No";
  DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkFormulation = "No";
  
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <subform w="203.2mm" minH="6mm" layout="lr-tb" name="sOptions" presence="hidden">
                  <draw name="txtTitle" w="203.2mm" minH="5.233mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>Please check at least one of the following*</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                     <margin topInset="2.54mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  </draw>
                  <field name="chkFormulation" w="43.39mm" h="7.62mm">
                     <ui>
                        <checkButton>
                           <border>
                              <?templateDesigner StyleID apcb2?>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="36.39mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Change in Formulation</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">


var cTypeChecker = script.core.util.TypeChecker;
var cTypeEnforcer = script.core.util.TypeEnforcer;

var cFormNodeManager=			script.core.model.FormNodeManager;
var sfDNFAddress_NODE =	cFormNodeManager.getFormNodeForKey("sOptions");

var sfDNFAddress_NODE_INST =	sfDNFAddress_NODE.getNodeInstance();
var radioButtonList = sfDNFAddress_NODE_INST.nodes;


				
for (var i = 0; i &lt; radioButtonList.length; i++)
{
	//There are more nodes than the radio buttons here
	if (cTypeChecker.isSpecificCustomObject(
					 radioButtonList.item(i),
					 cTypeEnforcer.FIELD_CLASS))
	{
					//cLog.info("setColor-radioButton: " 
					//		  + radioButtonList.item(i).somExpression + " : "
					//		  + cObjectUtil.asString(radioButtonList.item(i)));
					if (radioButtonList.item(i).fillColor != "255,255,255") {
						radioButtonList.item(i).fillColor = "255,255,255";
					}
							
	}
}
</script>
                     </event>
                  </field>
                  <field name="chkDosage" w="47.36mm" h="7.62mm">
                     <ui>
                        <checkButton>
                           <border>
                              <?templateDesigner StyleID apcb2?>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="40.36mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Change in Dosage Form</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">


var cTypeChecker = script.core.util.TypeChecker;
var cTypeEnforcer = script.core.util.TypeEnforcer;

var cFormNodeManager=			script.core.model.FormNodeManager;
var sfDNFAddress_NODE =	cFormNodeManager.getFormNodeForKey("sOptions");

var sfDNFAddress_NODE_INST =	sfDNFAddress_NODE.getNodeInstance();
var radioButtonList = sfDNFAddress_NODE_INST.nodes;


				
for (var i = 0; i &lt; radioButtonList.length; i++)
{
	//There are more nodes than the radio buttons here
	if (cTypeChecker.isSpecificCustomObject(
					 radioButtonList.item(i),
					 cTypeEnforcer.FIELD_CLASS))
	{
					//cLog.info("setColor-radioButton: " 
					//		  + radioButtonList.item(i).somExpression + " : "
					//		  + cObjectUtil.asString(radioButtonList.item(i)));
					if (radioButtonList.item(i).fillColor != "255,255,255") {
						radioButtonList.item(i).fillColor = "255,255,255";
					}
							
	}
}
</script>
                     </event>
                  </field>
                  <field name="chkUse" w="47.1mm" h="7.62mm">
                     <ui>
                        <checkButton>
                           <border>
                              <?templateDesigner StyleID apcb2?>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="40.1mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Change in Use</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">


var cTypeChecker = script.core.util.TypeChecker;
var cTypeEnforcer = script.core.util.TypeEnforcer;

var cFormNodeManager=			script.core.model.FormNodeManager;
var sfDNFAddress_NODE =	cFormNodeManager.getFormNodeForKey("sOptions");

var sfDNFAddress_NODE_INST =	sfDNFAddress_NODE.getNodeInstance();
var radioButtonList = sfDNFAddress_NODE_INST.nodes;


				
for (var i = 0; i &lt; radioButtonList.length; i++)
{
	//There are more nodes than the radio buttons here
	if (cTypeChecker.isSpecificCustomObject(
					 radioButtonList.item(i),
					 cTypeEnforcer.FIELD_CLASS))
	{
					//cLog.info("setColor-radioButton: " 
					//		  + radioButtonList.item(i).somExpression + " : "
					//		  + cObjectUtil.asString(radioButtonList.item(i)));
					if (radioButtonList.item(i).fillColor != "255,255,255") {
						radioButtonList.item(i).fillColor = "255,255,255";
					}
							
	}
}
</script>
                     </event>
                  </field>
                  <?templateDesigner expand 0?></subform>
               <draw h="5.578mm" name="blank" w="202.569mm">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <?renderCache.bounds 571377 12978 0 0 1417 1417 0 0?></draw>
               <draw h="5.578mm" name="lblNewIssued" w="202.569mm" presence="hidden">
                  <assist role="H1"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>Newly issued patent must be submitted within 30 days of grant in accordance with subsection 4(6).</text>
                  </value>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
               </draw>
               <margin leftInset="0.254mm" rightInset="0.508mm"/>
               <keep intact="contentArea"/>
               <?templateDesigner expand 1?></subform>
            <draw h="7.62mm" name="lblPart200" w="167.858mm">
               <assist role="H1"/>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
               <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <value>
                  <text>Part 2 - DRUG INFORMATION</text>
               </value>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <color value="255,255,153"/>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                  </fill>
               </border>
               <?renderCache.bounds 472984 18766 0 0 1417 1417 0 0?>
               <?renderCache.textRun 25 Part 2 - DRUG INFORMATION 0 1417 13800 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <field h="7.62mm" name="btnAddIngredient" w="35.138mm" relevant="-print">
               <border hand="right">
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
                  <?templateDesigner StyleID apbx2?></border>
               <caption>
                  <para hAlign="center" vAlign="middle"/>
                  <value>
                     <text>Add an Ingredient*</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin leftInset="0mm"/>
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">/*this.resolveNode('sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.btnIngredHeader._ingredientSubForm').addInstance(1);
if (xfa.host.version &lt; 8) {
	xfa.form.recalculate(1);
}*/

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cDrugFormHandler = script.DrugAppl.control.Part2.DrugFormulationHandler;

try
{
	// set up event object
	var actionName = cDrugFormHandler.ADD_ACTIVE_INGREDIENT_ACTION;
	//pass the parent subform in the action
	var anActionEvent = cActionEvent.createInstance(actionName, this);
	// deploy event to controller
	cDrugFormHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with Add an active ingredient button::click", exception);
}
</script>
               </event>
            </field>
            <?templateDesigner expand 0?></subform>
         <variables>
            <script contentType="application/x-javascript" name="countryScript">
// This script object controls the interaction between the country and state/province Drop-down lists.

// The array contains the country and the corresponding states/provinces.

var myCountries = new Array(new Array(2), new Array(14), new Array(52)); // Create a two-dimensional array.
														   				 // For each country, add a 'new Array(number of state/province +1)'.

// Define the country and the corresponding states/provinces.
// The array syntax is arrayName[index][index].
// The first index number represents the country,
// the second index number is the actual data value.

myCountries[0][0] = " ";		// The first items in the Drop-dowm Lists should be blank.
myCountries[0][1] = " ";
myCountries[1][0] = "Canada";	// The first data value is the country name,
myCountries[1][1] = "Alberta";	// the rest are states/provinces.
myCountries[1][2] = "British Columbia";
myCountries[1][3] = "Manitoba";
myCountries[1][4] = "New Brunswick";
myCountries[1][5] = "Newfoundland and Labrador";
myCountries[1][6] = "Northwest Territories";
myCountries[1][7] = "Nova Scotia";
myCountries[1][8] = "Nunavut";
myCountries[1][9] = "Ontario";
myCountries[1][10] = "Prince Edward Island";
myCountries[1][11] = "Quebec";
myCountries[1][12] = "Saskatchewan";
myCountries[1][13] = "Yukon";
myCountries[2][0] = "United States";	// This is a new country, see how the first number is now [1].
myCountries[2][1] = "Alabama";
myCountries[2][2] = "Alaska";
myCountries[2][3] = "Arizona";
myCountries[2][4] = "Arkansas";
myCountries[2][5] = "California";
myCountries[2][6] = "Colorado";
myCountries[2][7] = "Connecticut";
myCountries[2][8] = "Delaware";
myCountries[2][9] = "District of Columbia";
myCountries[2][10] = "Florida";
myCountries[2][11] = "Georgia";
myCountries[2][12] = "Hawaii";
myCountries[2][13] = "Idaho";
myCountries[2][14] = "Illinois";
myCountries[2][15] = "Indiana";
myCountries[2][16] = "Iowa";
myCountries[2][17] = "Kansas";
myCountries[2][18] = "Kentucky";
myCountries[2][19] = "Louisiana";
myCountries[2][20] = "Maine";
myCountries[2][21] = "Maryland";
myCountries[2][22] = "Massachusetts";
myCountries[2][23] = "Michigan";
myCountries[2][24] = "Minnesota";
myCountries[2][25] = "Mississippi";
myCountries[2][26] = "Missouri";
myCountries[2][27] = "Montana";
myCountries[2][28] = "Nebraska";
myCountries[2][29] = "Nevada";
myCountries[2][30] = "New Hampshire";
myCountries[2][31] = "New Jersey";
myCountries[2][32] = "New Mexico";
myCountries[2][33] = "New York";
myCountries[2][34] = "North Carolina";
myCountries[2][35] = "North Dakota";
myCountries[2][36] = "Ohio";
myCountries[2][37] = "Oklahoma";
myCountries[2][38] = "Oregon";
myCountries[2][39] = "Pennsylvania";
myCountries[2][40] = "Rhode Island";
myCountries[2][41] = "South Carolina";
myCountries[2][42] = "South Dakota";
myCountries[2][43] = "Tennessee";
myCountries[2][44] = "Texas";
myCountries[2][45] = "Utah";
myCountries[2][46] = "Vermont";
myCountries[2][47] = "Virginia";
myCountries[2][48] = "Washington";
myCountries[2][49] = "West Virginia";
myCountries[2][50] = "Wisconsin";
myCountries[2][51] = "Wyoming";


// This function will populate the country Drop-down List.
// This function is called from the initialize event of the country Drop-down List.

function getCountries(dropdownField)
{
   dropdownField.clearItems();
   for (var i=0; i &lt; myCountries.length; i++)
      dropdownField.addItem(myCountries[i][0]);
}

// This function will populate the state/province Drop-down List for any event EXCEPT the change event. 
// This function is called by the initialize event of the state/province Drop-down List.

function getStates(countryField, dropdownField)
{                                              
   dropdownField.clearItems(); 							// Clear the items of the Drop-down List.
   for (var i=0; i &lt; myCountries.length; i++) 			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == countryField.rawValue) 	// Check to see if they match.
      {
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
	  	 }
	  }
}

// This function will populate the state/province Drop-down List for the change event. 
// This function is called by the change event of the country Drop-down List.
// The first parameter is simply a pointer to the xfa object model.

function getStatesOther(myXfa, dropdownField) 
{                                              
   dropdownField.clearItems();							// Clear the items of the Drop-down list.
   for (var i=0; i &lt; myCountries.length; i++)			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == myXfa.event.newText)		// Check to see if they match. Note: we have to use the event.newText in this case because
	  {                                            		// the change hasn't been committed yet.
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
 		 }
	  }
}
</script>
            <?templateDesigner expand 1?></variables>
         <subform y="573.979mm" w="203.2mm" minH="152.309mm" layout="lr-tb" name="sfFormulationList">
            <subform w="202.569mm" name="sfPart2" layout="tb">
               <subform w="202.034mm" minH="173.555mm" layout="tb" name="sfPart2Body">
                  <subform w="203.286mm" name="sfActiveIngredients" layout="tb">
                     <margin topInset="0mm" leftInset="0mm"/>
                     <subform w="201.317mm" minH="8.363mm" layout="lr-tb" name="part2Header">
                        <margin topInset="1.27mm" bottomInset="1.27mm" leftInset="1.016mm" rightInset="1.016mm"/>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <subform w="191.913mm" minH="6.985mm" layout="lr-tb" name="btnIngredHeader">
                           <margin topInset="2.54mm" bottomInset="1.27mm"/>
                           <subform w="192.264mm" layout="lr-tb" name="ingredientSubForm">
                              <occur max="30"/>
                              <draw name="lblMedIngredients_en" w="45.72mm" h="8.89mm">
                                 <ui>
                                    <textEdit/>
                                 </ui>
                                 <value>
                                    <text>Medicinal Ingredients</text>
                                 </value>
                                 <font size="8pt" typeface="Myriad Pro"/>
                                 <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                                 <para vAlign="middle"/>
                                 <?renderCache.bounds 123926 22366 0 0 2837 1417 0 0?>
                                 <?renderCache.textRun 21 Medicinal Ingredients 0 2837 14600 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                              <draw name="lblMedIngredients_fr" w="45.72mm" h="8.89mm" presence="hidden">
                                 <ui>
                                    <textEdit/>
                                 </ui>
                                 <value>
                                    <exData contentType="text/html">
                                       <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="tab-interval:0.5in;tab-stops:left 0.333in left 0.667in left 1in left 1.333in left 1.667in left 2in left 2.333in left 2.667in left 3in left 3.333in left 3.667in left 4in left 4.333in left 4.667in left 5in left 5.333in left 5.667in left 6in left 6.333in left 6.667in left 7in left 7.333in left 7.667in left 8in left 8.333in left 8.667in left 9in left 9.333in left 9.667in left 10in left 10.333in;text-decoration:none;letter-spacing:0in">Ingrédients médicinaux</p></body>
                                    </exData>
                                 </value>
                                 <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                                 <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                                 <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              </draw>
                              <field name="txtMedIngredient1" w="137.552mm" minH="8.89mm">
                                 <ui>
                                    <textEdit multiLine="1">
                                       <border>
                                          <edge stroke="lowered"/>
                                          <?templateDesigner StyleID aped3?></border>
                                       <margin/>
                                    </textEdit>
                                 </ui>
                                 <font typeface="Myriad Pro" size="8pt"/>
                                 <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                                 <para vAlign="middle"/>
                                 <border>
                                    <corner thickness="0.175mm"/>
                                    <edge/>
                                 </border>
                                 <format>
                                    <picture>num{zzzzzzz9}</picture>
                                 </format>
                                 <validate nullTest="error"/>
                                 <event activity="change" name="event__change">
                                    <script contentType="application/x-javascript">//this.resolveNode("").rawValue = xfa.event.newText;

//if (xfa.event.newText &gt; 9999999999999999999999999999999999999999999999999) {

//		xfa.event.change = "";
//}

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 480) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}

</script>
                                 </event>
                                 <value>
                                    <text maxChars="480"/>
                                 </value>
                                 <event activity="exit" name="event__exit">
                                    <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                                 </event>
                                 <event activity="ready" ref="$layout" name="event__layout_ready">
                                    <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
if (language == "en") {
 	this.resolveNode("parent.lblMedIngredients_en").presence = "visible";
 	this.resolveNode("parent.lblMedIngredients_fr").presence = "hidden";
}else{
	this.resolveNode("parent.lblMedIngredients_en").presence = "hidden";
	this.resolveNode("parent.lblMedIngredients_fr").presence = "visible";
}
</script>
                                 </event>
                              </field>
                              <field h="8.89mm" name="btnDelete" w="8.89mm" relevant="-print">
                                 <border hand="right">
                                    <edge stroke="raised"/>
                                    <fill>
                                       <color value="212,208,200"/>
                                    </fill>
                                    <?templateDesigner StyleID apbx2?></border>
                                 <caption>
                                    <para hAlign="center" vAlign="middle"/>
                                    <value>
                                       <text>x</text>
                                    </value>
                                    <font typeface="Myriad Pro" weight="bold"/>
                                 </caption>
                                 <font typeface="Myriad Pro"/>
                                 <margin leftInset="0mm"/>
                                 <ui>
                                    <button highlight="inverted"/>
                                 </ui>
                                 <bind match="none"/>
                                 <event activity="click" name="event__click">
                                    <script contentType="application/x-javascript">

this.parent.instanceManager.removeInstance(this.parent.index);
</script>
                                 </event>
                              </field>
                              <?templateDesigner expand 1?></subform>
                           <?templateDesigner expand 1?></subform>
                        <draw h="6.35mm" name="lblEmptyOne" w="200.6mm" presence="invisible">
                           <ui>
                              <textEdit>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font baselineShift="0pt" typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="0.5mm" leftInset="1.27mm" rightInset="0.5mm" topInset="1.27mm"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt"/>
                           <assist role="H2"/>
                        </draw>
                        <keep intact="contentArea"/>
                        <field name="numDIN" w="81.28mm" h="8.89mm">
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border hand="right">
                                    <?templateDesigner StyleID aped2?>
                                    <edge/>
                                 </border>
                                 <margin/>
                                 <comb numberOfCells="8"/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1.0008mm"/>
                           <para vAlign="middle" marginLeft="0pt"/>
                           <caption reserve="45.5987mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>DIN</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <assist>
                              <toolTip>DIN must be 8 digits.  If your DIN has only 7 digits, please enter the number 0 as the first digit.</toolTip>
                           </assist>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if(this.rawValue !=null){
if (this.rawValue.toString().length  &lt; 8) {
	if (language == "en") {
      	xfa.host.messageBox ("The DIN must contain 8 digits.");
	}
	else {
      	xfa.host.messageBox ("Le DIN doit avoir 8 chiffres.");
	}
		
	xfa.host.setFocus(this);
		
		
}else{

 var regExp = /\D/;

          if (regExp.test(this.rawValue.toString())) {
  			 if (language == "en") {
                 app.alert("The field must only contain numbers.");
             } else {
                 app.alert("Le champs ne peut contenir que des chiffres.");
             }
             xfa.host.setFocus(this);
          }

}
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <format>
                              <picture>zero{}|text{99999999}</picture>
                           </format>
                           <validate>
                              <picture>num.integer{}</picture>
                           </validate>
                        </field>
                        <field name="txtBrandName1" w="201.317mm" h="8.89mm">
                           <ui>
                              <textEdit>
                                 <border>
                                    <edge stroke="lowered"/>
                                    <?templateDesigner StyleID aped3?></border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="45.4429mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Brand Name</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <value>
                              <text maxChars="255"/>
                           </value>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 100) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                           </event>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlHumanVetSecond" w="201.168mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="45.6565mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Human/Veterinary*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <items save="1"/>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <draw name="Text4" w="1.477mm" h="5.2331mm" presence="invisible">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>Text</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                           <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        </draw>
                        <field name="txtOther" w="201.14mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <edge stroke="lowered"/>
                                    <?templateDesigner StyleID aped3?></border>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                           <border>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <validate nullTest="error">
                              <message>
                                 <text name="nullTest"/>
                              </message>
                           </validate>
                           <caption reserve="40.1924mm">
                              <value>
                                 <text>Dosage Form Details*</text>
                              </value>
                              <para vAlign="middle"/>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <value>
                              <text maxChars="50000"> </text>
                           </value>
                           <para vAlign="middle"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="txtStrength" w="201.168mm" minH="8.89mm">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="46.3568mm">
                              <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Strength per Unit*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <value>
                              <text maxChars="255"/>
                           </value>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlDosageForm" w="201.168mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="46.0921mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Dosage Form*</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <items save="1"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue == "Other") {
    cLog.trace ("Dos Details Raw value == VIND " );
    
    // show Dosage Details text box if 'Other' is selected
	txtDosFormDetails.presence = "visible";
	
	// reset to blank
	txtDosFormDetails.rawValue = " ";
	
	if (language == "en") {
	    //this.rawValue = "Enter the specific dosage form in this box";
	    cLog.trace ("otherDosageIsSelected is set to 1" );
	    
	    // keep track if 'Other' is selected
	    cDrugApplModel.setDosageIsSelected(1);
	       
	}
	else {
	    //this.rawValue = "Saisir la forme posologique précise dans cette case";
	    
	    // keep track if 'Other' is selected
	    cDrugApplModel.setDosageIsSelected(1);
	    cLog.trace ("otherDosageIsSelected is set to 1" );
	       
    }
		
	
} 

// if dosage details has the default text, then do nothing
else if (this.rawValue == "Enter the specific dosage form in this box" || this.rawValue == "Saisir la forme posologique précise dans cette case") {
	cDrugApplModel.setDosageIsSelected(0);
    cLog.trace ("Do nothing");
}

// in this case, 'Other' is not selected, so hide the text field
else {
    cLog.trace ("Dos Details Raw value == " + this.rawValue);
    cDrugApplModel.setDosageIsSelected(0);
    cLog.trace ("otherDosageIsSelected is set to 1" );
	txtDosFormDetails.presence = "hidden";
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
//cLog.trace("dosageValueChanged   = true");
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setDosageValueChanged (true);
</script>
                           </event>
                        </field>
                        <field name="txtDosFormDetails" w="201.135mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <caption reserve="41.7118mm">
                              <value>
                                 <text>Dosage Form Details* </text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <value>
                              <text maxChars="50000"/>
                           </value>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <field name="ddlROA" w="201.168mm" h="8.89mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1.0008mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="45.8784mm">
                              <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Route(s) of Administration*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <items save="1"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if(this.rawValue =="Other"){
//if (this.rawValue == "OTHER") {
  
    // if 'Other' is selected, show the text field and reset it.
	txtRoutesDetails.presence = "visible";
	txtRoutesDetails.rawValue = " ";
	
	if (language == "en") {
	   // this.rawValue = "Enter the specific route of administration in this box";
	    cLog.trace ("otherRouteIsSelected is set to 1" );
	    
	    
	     // keep track if 'Other' is selected
	    cDrugApplModel.setRouteIsSelected(1);
	       
	}
	else {
	
	   // this.rawValue = "Saisir la voie d'administration précise dans cette case";
	    
	    // keep track when 'Other' is selected
	     cDrugApplModel.setRouteIsSelected(1);
	    cLog.trace ("otherRouteIsSelected is set to 1" );
	       
	}
		
	
} 

// if the text field, displays the default string, do nothing.
else if (this.rawValue == "Enter the specific route of administration in this box" || this.rawValue == "Saisir la voie d'administration précise dans cette case") {
	 cDrugApplModel.setRouteIsSelected(0);
    cLog.trace ("Do nothing");
}

// if 'Other' is not selected, hide the text field.
else {
    cLog.trace ("Dos Details Raw value == " + this.rawValue);
     cDrugApplModel.setRouteIsSelected(0);
    cLog.trace ("otherRoutesIsSelected is set to 0" );
	txtRoutesDetails.presence = "hidden";
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);

</script>
                           </event>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setRouteValueChanged (true);

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
cDrugApplModel.setRouteValueChanged (true);

if (xfa.event.newText &gt; 9999999999999999999999999999999) {

		xfa.event.change = "";
}
</script>
                           </event>
                        </field>
                        <draw name="Text5" w="1.936mm" h="5.2331mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <font typeface="Myriad Pro" size="8pt"/>
                           <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <?renderCache.bounds 2654 12000 0 0 1417 1417 0 0?></draw>
                        <field name="txtRoutesDetails" w="201.135mm" minH="8.89mm" presence="hidden">
                           <ui>
                              <textEdit>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <caption reserve="41.7118mm">
                              <value>
                                 <text>Routes of Administration Details* </text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <value>
                              <text maxChars="50000"/>
                           </value>
                        </field>
                        <field name="txtUses" w="201.168mm" minH="15.24mm">
                           <ui>
                              <textEdit multiLine="1">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <caption reserve="45.8784mm">
                              <value>
                                 <text>Use(s) of Medicinal Ingredient(s)* </text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                           </event>
                        </field>
                        <?templateDesigner expand 1?></subform>
                     <subform w="200.059mm" layout="lr-tb" name="sfTitles">
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <margin leftInset="6.096mm"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 0?></subform>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.928mm" layout="lr-tb" name="sfNonMedIngredients">
                     <?templateDesigner expand 0?></subform>
                  <subform w="203.2mm" minH="31.326mm" name="sfAnimalHuman" layout="lr-tb">
                     <margin topInset="0mm" leftInset="0mm" bottomInset="0mm"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <draw h="6.35mm" name="lblPart3Title2" w="202.569mm">
                        <assist role="H1"/>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <margin/>
                           </textEdit>
                        </ui>
                        <value>
                           <text>Part 3 - Patent Information</text>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <color value="255,255,153"/>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                           </fill>
                        </border>
                        <?renderCache.bounds 571377 15166 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 27 Part 3 - Patent Information 0 1417 12000 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <field name="txtOther" w="202.822mm" minH="6.985mm" presence="hidden">
                        <ui>
                           <textEdit multiLine="1">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
                        <border>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <validate nullTest="error">
                           <message>
                              <text name="nullTest"/>
                           </message>
                        </validate>
                        <caption reserve="40.3543mm">
                           <value>
                              <text>Dosage Form Details*</text>
                           </value>
                           <para vAlign="middle"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <value>
                           <text> </text>
                        </value>
                        <para vAlign="middle"/>
                     </field>
                     <subform name="Table1" layout="table" columnWidths="40.64mm 40.575mm 40.64mm 40.64mm 40.115mm">
                        <border>
                           <edge/>
                        </border>
                        <subform layout="row" name="HeaderRow" id="HeaderRow_ID" y="0mm">
                           <assist role="TH"/>
                           <draw h="11.579mm" name="lblPatentNo">
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>Patent Number*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                           </draw>
                           <draw h="11.579mm" name="lblCode">
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>Code*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                           </draw>
                           <draw h="11.579mm" name="lblFiling">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                              <value>
                                 <text>Canadian Filing Date of Patent Application (YYYY-MM-DD)*</text>
                              </value>
                           </draw>
                           <draw h="11.579mm" name="lblGranted">
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>Date Granted(YYYY-MM-DD)*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                           </draw>
                           <draw h="11.579mm" name="lblExpiry">
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>Expiration Date(YYYY-MM-DD)*</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                           </draw>
                           <border>
                              <edge presence="hidden"/>
                           </border>
                           <occur max="-1"/>
                           <?templateDesigner expand 1?></subform>
                        <subform layout="row" name="Row1" y="0mm">
                           <assist role="TR"/>
                           <field name="txtPatentNumber" w="37mm" h="8.89mm">
                              <ui>
                                 <numericEdit hScrollPolicy="off">
                                    <border hand="right">
                                       <?templateDesigner StyleID aped2?>
                                       <edge/>
                                    </border>
                                    <margin/>
                                    <comb numberOfCells="7"/>
                                 </numericEdit>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <format>
                                 <picture>text{9999999}</picture>
                              </format>
                              <validate nullTest="error">
                                 <picture>num.integer{}</picture>
                              </validate>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue.toString().length  &lt; 7) {
	
	xfa.host.setFocus(this);
		
	if (language == "en") {
		xfa.host.messageBox ("The Patent Number must contain 7 digits.");
	}
	else {
      	xfa.host.messageBox ("Le Numéro de brevet doit avoir 7 chiffres." );
	}
      	
	
		
		
}else{
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
}
</script>
                              </event>
                           </field>
                           <subform w="42.6mm" layout="lr-tb" name="sCode">
                              <field name="chkA" w="16.002mm" h="8.382mm">
                                 <ui>
                                    <checkButton>
                                       <border>
                                          <?templateDesigner StyleID apcb2?>
                                          <edge stroke="lowered"/>
                                          <fill/>
                                       </border>
                                    </checkButton>
                                 </ui>
                                 <font typeface="Myriad Pro"/>
                                 <margin leftInset="3.302mm" rightInset="1mm"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <integer>0</integer>
                                 </value>
                                 <caption placement="right" reserve="7.3958mm">
                                    <para vAlign="middle"/>
                                    <value>
                                       <text>A</text>
                                    </value>
                                    <font typeface="Myriad Pro" size="8pt"/>
                                 </caption>
                                 <items>
                                    <integer>1</integer>
                                    <integer>0</integer>
                                    <integer>2</integer>
                                 </items>
                                 <assist>
                                    <toolTip>A = Applicant is the owner of the patent</toolTip>
                                 </assist>
                                 <event activity="exit" name="event__exit">
                                    <script contentType="application/x-javascript">

if (this.rawValue){
	chkB.rawValue = 0;
	chkC.rawValue = 0;
	
	if ((this.fillColor != "255,250,250") &amp;&amp; (this.fillColor != "255,255,255")) {
			this.fillColor = "255,250,250";
			chkB.fillColor = "255,250,250";
			chkC.fillColor = "255,250,250";
	}
}
</script>
                                 </event>
                              </field>
                              <field name="chkB" w="13.316mm" h="8.382mm">
                                 <ui>
                                    <checkButton>
                                       <border>
                                          <?templateDesigner StyleID apcb2?>
                                          <edge stroke="lowered"/>
                                          <fill/>
                                       </border>
                                    </checkButton>
                                 </ui>
                                 <font typeface="Myriad Pro"/>
                                 <margin leftInset="1mm" rightInset="1mm"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <integer>0</integer>
                                 </value>
                                 <caption placement="right" reserve="6.316mm">
                                    <para vAlign="middle"/>
                                    <value>
                                       <text>B</text>
                                    </value>
                                    <font typeface="Myriad Pro" size="8pt"/>
                                 </caption>
                                 <items>
                                    <integer>1</integer>
                                    <integer>0</integer>
                                    <integer>2</integer>
                                 </items>
                                 <assist>
                                    <toolTip>B = Applicant has an exclusive licence</toolTip>
                                 </assist>
                                 <event activity="exit" name="event__exit">
                                    <script contentType="application/x-javascript">

if (this.rawValue){
	chkA.rawValue = 0;
	
	if ((this.fillColor != "255,250,250") &amp;&amp; (this.fillColor != "255,255,255")) {
			this.fillColor = "255,250,250";
			chkA.fillColor = "255,250,250";
			chkC.fillColor = "255,250,250";
	}
}
</script>
                                 </event>
                              </field>
                              <field name="chkC" w="10.16mm" h="8.382mm">
                                 <ui>
                                    <checkButton>
                                       <border>
                                          <?templateDesigner StyleID apcb2?>
                                          <edge stroke="lowered"/>
                                          <fill/>
                                       </border>
                                    </checkButton>
                                 </ui>
                                 <font typeface="Myriad Pro"/>
                                 <margin leftInset="1mm" rightInset="1mm"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <integer>0</integer>
                                 </value>
                                 <caption placement="right" reserve="3.16mm">
                                    <para vAlign="middle"/>
                                    <value>
                                       <text>C</text>
                                    </value>
                                    <font typeface="Myriad Pro" size="8pt"/>
                                 </caption>
                                 <items>
                                    <integer>1</integer>
                                    <integer>0</integer>
                                    <integer>2</integer>
                                 </items>
                                 <assist>
                                    <toolTip>C = Applicant has obtained the consent of the owner of the patent for the inclusion of the patent on the above patent list</toolTip>
                                 </assist>
                                 <event activity="exit" name="event__exit">
                                    <script contentType="application/x-javascript">if (this.rawValue){
	chkA.rawValue = 0;
	
	if ((this.fillColor != "255,250,250") &amp;&amp; (this.fillColor != "255,255,255")) {
			this.fillColor = "255,250,250";
			chkA.fillColor = "255,250,250";
			chkB.fillColor = "255,250,250";
	}
}
</script>
                                 </event>
                              </field>
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <margin leftInset="0.508mm" topInset="0.508mm"/>
                              <?templateDesigner expand 1?></subform>
                           <field name="dtfFiling" w="40.64mm" h="8.89mm">
                              <ui>
                                 <dateTimeEdit>
                                    <border>
                                       <edge stroke="lowered"/>
                                       <?templateDesigner StyleID aped3?></border>
                                    <margin/>
                                 </dateTimeEdit>
                                 <picture>date{YYYY-MM-DD}</picture>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="5.08mm" rightInset="5.08mm"/>
                              <para vAlign="middle" hAlign="center"/>
                              <value>
                                 <date/>
                              </value>
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <validate nullTest="error">
                                 <picture>date{YYYY-MM-DD}</picture>
                              </validate>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (this.rawValue != null) {

	//this.resolveNode ("DrugAppl.#variables[0].Globals").filingDate = new Date();
	this.resolveNode ("DrugAppl.#variables[0].Globals").filingDate = this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);
	this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
	
}
</script>
                              </event>
                              <format>
                                 <picture>date{YYYY-MM-DD}</picture>
                              </format>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

cLog.trace ("CHANGE IS EXECUTED!!!!!!!!!!!!!!!!!!!!!!!");
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

cDrugApplModel.setFilingDateChanged(1);
</script>
                              </event>
                           </field>
                           <field name="dtfGranted" w="37mm" h="8.89mm">
                              <ui>
                                 <dateTimeEdit>
                                    <border>
                                       <edge stroke="lowered"/>
                                       <?templateDesigner StyleID aped3?></border>
                                    <margin/>
                                 </dateTimeEdit>
                                 <picture>date{YYYY-MM-DD}</picture>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="5.08mm" rightInset="5.08mm"/>
                              <para vAlign="middle" hAlign="center"/>
                              <value>
                                 <date/>
                              </value>
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <validate nullTest="error">
                                 <picture>date{YYYY-MM-DD}</picture>
                              </validate>
                              <format>
                                 <picture>date{YYYY-MM-DD}</picture>
                              </format>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">
if (this.rawValue != null) {

	//this.resolveNode ("DrugAppl.#variables[0].Globals").grantedDate  = new Date();
	this.resolveNode ("DrugAppl.#variables[0].Globals").grantedDate = this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);
	this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);

}
</script>
                              </event>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

cDrugApplModel.setDateGrantedChanged(1);
</script>
                              </event>
                           </field>
                           <field name="dtfExpiration" w="37mm" h="8.89mm">
                              <ui>
                                 <dateTimeEdit>
                                    <border>
                                       <edge stroke="lowered"/>
                                       <?templateDesigner StyleID aped3?></border>
                                    <margin/>
                                 </dateTimeEdit>
                                 <picture>date{YYYY-MM-DD}</picture>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="5.08mm" rightInset="5.08mm"/>
                              <para vAlign="middle" hAlign="center"/>
                              <value>
                                 <date/>
                              </value>
                              <border>
                                 <edge/>
                                 <corner thickness="0.1778mm"/>
                              </border>
                              <validate nullTest="error">
                                 <picture>date{YYYY-MM-DD}</picture>
                              </validate>
                              <format>
                                 <picture>date{YYYY-MM-DD}</picture>
                              </format>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">

if (this.rawValue != null) {

	//this.resolveNode ("DrugAppl.#variables[0].Globals").expirationDate = new Date();
	this.resolveNode ("DrugAppl.#variables[0].Globals").expirationDate = this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
}
</script>
                              </event>
                              <event activity="change" name="event__change">
                                 <script contentType="application/x-javascript">

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

cDrugApplModel.setExpirationDateChanged(1);
</script>
                              </event>
                           </field>
                           <border>
                              <edge presence="hidden"/>
                           </border>
                           <?templateDesigner expand 1?></subform>
                        <keep intact="contentArea"/>
                        <?templateDesigner rowpattern first:1, next:1, firstcolor:f0f0f0, nextcolor:ffffff, apply:0?>
                        <overflow leader="HeaderRow"/>
                        <?templateDesigner expand 1?></subform>
                     <?templateDesigner expand 0?>
                     <keep intact="contentArea"/>
                  </subform>
                  <?templateDesigner expand 1?></subform>
               <margin topInset="0mm"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <occur max="-1"/>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 1?></subform>
         <subform name="sfAuthSignOfficial" layout="tb" w="203.2mm">
            <subform w="203.2mm" name="sPart4" layout="lr-tb">
               <margin topInset="0mm" bottomInset="0mm"/>
               <draw name="lblTitle" w="203.2mm" h="7.62mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Part 4 - Service in Canada</text>
                  </value>
                  <font size="12pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
                  <margin topInset="0.5002mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                     <fill>
                        <color value="255,255,153"/>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                     </fill>
                  </border>
                  <?renderCache.bounds 573166 18765 0 0 1417 1418 0 0?>
                  <?renderCache.textRun 26 Part 4 - Service in Canada 0 1417 13800 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <draw h="5.08mm" name="lblContactAddress" w="203.2mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                     <fill>
                        <color value="228,228,228"/>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                     </fill>
                  </border>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>NAME &amp; ADDRESS  (For Service in Canada)</text>
                  </value>
                  <assist role="H2"/>
                  <?renderCache.bounds 573166 11566 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 39 NAME & ADDRESS  (For Service in Canada) 0 1417 9200 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <subform layout="lr-tb" name="Address_Block" w="203.2mm">
                  <bind match="none"/>
                  <subform layout="lr-tb" minH="28.575mm" name="sPart1BCompanyDetail" w="203.2mm" y="6.35mm">
                     <margin bottomInset="0mm"/>
                     <field name="txtCompanyName" w="203.148mm" minH="11.43mm">
                        <border>
                           <corner thickness="0.175mm"/>
                           <edge/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Name*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit multiLine="1">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <value>
                           <text maxChars="255"/>
                        </value>
                        <event activity="change" name="event__change">
                           <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 100) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                        </event>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                        </event>
                     </field>
                     <field h="11.43mm" name="txtAddress" w="203.2mm">
                        <border>
                           <corner thickness="0.1753mm"/>
                           <edge/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Street/Suite*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <value>
                           <text maxChars="255"/>
                        </value>
                        <event activity="change" name="event__change">
                           <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                        </event>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                        </event>
                     </field>
                     <field h="11.43mm" name="txtCity" w="50.8mm">
                        <assist>
                           <speak priority="toolTip"/>
                        </assist>
                        <border>
                           <corner thickness="0.1753mm"/>
                           <edge/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>City - Town*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <value>
                           <text maxChars="255"/>
                        </value>
                        <event activity="change" name="event__change">
                           <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 21) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                        </event>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                        </event>
                     </field>
                     <field name="ddlCountry" w="50.8mm" h="11.43mm" access="protected">
                        <ui>
                           <textEdit>
                              <border>
                                 <?templateDesigner StyleID aped0?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Country*</text>
                           </value>
                        </caption>
                        <border>
                           <corner thickness="0.1753mm"/>
                           <edge/>
                        </border>
                        <value>
                           <text>Canada</text>
                        </value>
                     </field>
                     <field h="11.43mm" name="ddlProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm"/>
                           <edge/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Province*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <items/>
                        <items save="1" presence="hidden"/>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">var keypressed = xfa.event.commitKey;

if (keypressed == 3){
	//app.alert("You exited this field by using a Tab")
} 
if (keypressed == 1){
	//app.alert("You exited the field by using the mouse") 
}
else {
	this.resolveNode ("DrugAppl.#variables[0].Globals").canadaProvinceSelectedIndex = this.selectedIndex;
}

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                        </event>
                     </field>
                     <field h="11.43mm" name="txtPostalCode" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm"/>
                           <edge/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Postal Code*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit>
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <value>
                           <text maxChars="255"/>
                        </value>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPostalcodeValid(this, "CA");

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
cLog.info("txtPostalCode::exit, actionName: " + fieldType );
cLog.info("txtPostalCode::exit, sourceNode: " + this );
cLog.info("txtPostalCode::exit, this.rawValue: " + this.rawValue);
cLog.info("txtPostalCode::exit, country ddl: " + sPart1BCompanyDetail.ddlCountry.rawValue );

try
{
	// set up event object
	cLog.info( "txtPostalCode::exit, invoking ActionEvent.exit" );	
	var aValidator = cFormatValidator.createInstance();
	var validationResult;
	if( this.rawValue != null ) {
	
	    cLog.trace ("sPart1BCompanyDetail.ddlCountry.rawValue: " + sPart1BCompanyDetail.ddlCountry.rawValue);
		if( sPart1BCompanyDetail.ddlCountry.rawValue == "Canada" )
			fieldType = cFormatValidator.POSTAL_CODE;
		if( sPart1BCompanyDetail.ddlCountry.rawValue == "US" )
			fieldType  = cFormatValidator.ZIP_CODE;
		
		if( fieldType != null ) {
			validationResult = aValidator.validateFieldFormat(this,fieldType);
			cLog.info( "txtPostalCode::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
		}
		else {
		    cLog.trace ("fieldType is NULL");
		}
		   
		if( validationResult != null ) {
			xfa.host.setFocus(this);
			if (language == "en") {
				app.alert( "Please enter a valid postal code. (A1A 1A1)"); 
			}
			else {
				app.alert( "SVP entrer un code postal valide. (A1A 1A1)"); 
			}
			
			
		}
	}
}
catch(exception)
{
	cLog.warn("Problem with Email ::exit", exception);
}
*/
</script>
                        </event>
                     </field>
                     <?templateDesigner expand 0?></subform>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 0?>
               <keep intact="contentArea"/>
               <breakBefore targetType="contentArea" startNew="1"/>
            </subform>
            <subform w="203.2mm" layout="lr-tb" name="sfPart1ACompanyDetail">
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <subform w="203.088mm" name="sPart5Title" h="11.43mm">
                  <draw h="11.43mm" name="lblPart4Title1" w="202.735mm">
                     <assist role="H1"/>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                     <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <ui>
                        <textEdit>
                           <margin/>
                        </textEdit>
                     </ui>
                     <value>
                        <text>Part 5 - Manufacturer Information and Certification</text>
                     </value>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <edge presence="hidden"/>
                        <edge presence="hidden"/>
                        <edge/>
                        <corner thickness="0.175mm" presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <?renderCache.bounds 571848 29566 0 0 1417 1417 0 0?>
                     <?renderCache.textRun 51 Part 5 - Manufacturer Information and Certification 0 1417 19200 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                     <fill>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                        <color value="255,255,153"/>
                     </fill>
                  </border>
                  <?templateDesigner expand 0?></subform>
               <subform w="203.224mm" minH="40.533mm" layout="lr-tb" name="sNameAndAddress">
                  <field name="txtCompanyName" w="203.224mm" minH="11.43mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.176mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Company Name*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit multiLine="1">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <value>
                        <text maxChars="100"/>
                     </value>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 100) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                     </event>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtAddress" w="203.224mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Street/Suite/PO Box*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <value>
                        <text maxChars="50"/>
                     </value>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 49) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                     </event>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtCity" w="50.8mm">
                     <assist>
                        <speak priority="toolTip"/>
                     </assist>
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>City - Town*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <value>
                        <text maxChars="50"/>
                     </value>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 21) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                     </event>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="ddlCountry" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Country*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.RegulatoryAddresses.control.RegulatoryAddressHandler;
var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;
var cFormNodeManager = script.core.model.FormNodeManager;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var mousePressedOnFirstCountrySelection = false;
 
var keypressed = xfa.event.commitKey;


if (changedEvent == false &amp;&amp; this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime == true) {

	//cLog.trace ("SALUUUUUUUUUUUUUUUUUT");
	if (keypressed  == 1) {
	
		mousePressedOnFirstCountrySelection = true;
		
	}
} 


else if ( DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.rawValue != null || 
		  DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvinceFr.rawValue != null) {
		  
		  if ( keypressed == 3 || mousePressedOnFirstCountrySelection){
			//app.alert("You exited this field by using a Tab")
		  }

		  // first time 	 
		  else if (this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedChanged == false) {
		  
		  	if (changedEvent == true) {
					 
					 	//cLog.trace ("CHANGE is CHOSEN");
						//cLog.trace ("jvksdjfgkdfgkfdjdlhdlgldgdlhgldirhelfdgfdkl");
						try
						{
							// set up event object
							var actionName =  cAddressHandler.PART1A_COUNTRY_CHANGED_ACTION;
							var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
							// deploy event to controller
							cAddressHandler.actionPerformed(anActionEvent);
						}
						catch(exception)
						{
							cLog.warn("Problem with Manufacturer Country selection ::exit", exception);
						}
						
						
						
						if (this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime == false) {
						
							if (this.rawValue == "CA" || this.rawValue == "US") {
								if (language == "fr") {
									copyAndSortProvince();
								}
							}
							
						}
					}
					
		  	 else if (keypressed == 1) {
				//cLog.trace ("hittin11111111111111g !!!!!!!!!!!!!!!!!!");
		  	 } 
		  }			
		  else {
		  
		  		cLog.trace ("BEFORE: " + this.resolveNode ("DrugAppl.#variables[0].Globals").countryBoundItemBefore );
		  		cLog.trace ("AFTER: " + this.resolveNode ("DrugAppl.#variables[0].Globals").countryBoundItemAfter );
		  		
		  		if (this.resolveNode ("DrugAppl.#variables[0].Globals").countryBoundItemBefore != this.resolveNode ("DrugAppl.#variables[0].Globals").countryBoundItemAfter) {
		  			
					 if (changedEvent == true) {
					 
					 	cLog.trace ("CHANGE is CHOSEN");
						cLog.trace ("jvksdjfgkdfgkfdjdlhdlgldgdlhgldirhelfdgfdkl");
						try
						{
							// set up event object
							var actionName =  cAddressHandler.PART1A_COUNTRY_CHANGED_ACTION;
							var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
							// deploy event to controller
							cAddressHandler.actionPerformed(anActionEvent);
						}
						catch(exception)
						{
							cLog.warn("Problem with Manufacturer Country selection ::exit", exception);
						}
						
						if (this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime == false) {
						
							if (this.rawValue == "CA" || this.rawValue == "US") {
								if (language == "fr") {
									copyAndSortProvince();
								}
							}
							
						}
					}
				}
			}
}
else {
	
	cLog.trace ("SALUUUUUUUUUUUUUUUUUT43535353546544574");
	try
	{
		// set up event object
		var actionName =  cAddressHandler.PART1A_COUNTRY_CHANGED_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
		
		 
	
	 
	}
	catch(exception)
	{
		cLog.warn("Problem with Manufacturer Country selection ::exit", exception);
	}
	
	
	
	if (this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime == false) {
	
		if (this.rawValue == "CA" || this.rawValue == "US") {
			if (language == "fr") {
				copyAndSortProvince();
			}
		}
		
	}
}	 
function copyAndSortProvince() {
			
		this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime = true;
		cLog.trace ("Executing copyAndSortProvince ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^");
		var provinceList = xfa.resolveNodes("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.items[*]");
		
		var displayItems = provinceList.item(0).nodes ;//Node Set containing the display text values
		var boundItems = provinceList.item(1).nodes; //Nodes Set containing the bound values.
		
		//cLog.trace ("Provinces size: " + displayItems.length)
		var displayItemArray = new Array();
		var boundItemArray = new Array();
		var multiDimArray = new Array();
		
		// construct multi dimensional array
		for (var i = 0; i &lt; displayItems .length; i++){
		
			displayItemArray[i] = displayItems.item(i).value;
			boundItemArray[i] = boundItems.item(i).value;
			
			if (displayItemArray[i] == "L'état de washington") {
				multiDimArray["L'état de Washington"] = boundItemArray[i];
			}
			else if (displayItemArray[i]  == "Ile-du-prince-édouard") {
				multiDimArray["L’Île-du-Prince-Édouard"] = boundItemArray[i];
			}
			else {
				multiDimArray[displayItemArray[i]] =  boundItemArray[i];
			}   	
		}
		
		var a = {
		  keys : new Array(),
		  hash : new Object(),
		  set : function(key, value) {
		    if (typeof(this.hash[key]) == "undefined") { this.keys.push(key); }
		    this.hash[key] = value;
		  },
		  get : function(key) {
		    return this.hash[key];
		  },
		  getSortedKeys : function() {
		    this.keys.sort();
		    return this.keys;
		  }
		};

		
		for (var key in multiDimArray) {
			a.set(key,multiDimArray[key]); 
		}
		
		var bigArray = [];
		
		// sort the keys - countries
		var sortedKeys = a.getSortedKeys();
		
		
		var filteredSortedKeys = [];
		
		// remove unneeded keys
		for (var i in sortedKeys) {
			//if (i &lt; 13) {
			
			
				//cLog.trace ("sorted key: " + sortedKeys[i]);
				filteredSortedKeys [i] = sortedKeys[i];
			//}
		}
		
		for (var z in filteredSortedKeys ) { 
					for (var j in multiDimArray) {
						if (filteredSortedKeys [z]  == j) {
							bigArray[filteredSortedKeys [z]] = multiDimArray[j];
							break;
						}
					}			
		}
	
		// construct the array keys -- countries - values bound values - AB for Alberta
		
		    
		DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvinceFr.clearItems();
		
		for (var i in bigArray) {
				//cLog.trace ("bigArrayKEY: " + i + " VALUE: " + bigArray[i]);
				
				// add only good keys
				if ((i.length != 4) &amp;&amp; (i.length != 10) &amp;&amp; (i != null) &amp;&amp; (i != " ") &amp;&amp; (i != "")) {
				
					DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvinceFr.addItem(i, bigArray[i]);
				}
				
				
		}
		
		DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvinceFr.presence = "visible";
		DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvinceFr.mandatory = "error";
		DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.presence = "hidden";
		DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.mandatory = "disabled";
		DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.rawValue = null;
		cLog.trace ("Set the current value of Province DDL to NUL@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
		
 }

changedEvent = false;
this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedFirstTime = false;
</script>
                     </event>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.RegulatoryAddresses.control.RegulatoryAddressHandler;
var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;
var cFormNodeManager = script.core.model.FormNodeManager;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();

this.resolveNode ("DrugAppl.#variables[0].Globals").countryBoundItemAfter =  ($.boundItem(xfa.event.newText));
this.resolveNode ("DrugAppl.#variables[0].Globals").countryBoundItemBefore = ($.boundItem(xfa.event.prevText));

if (!($.boundItem(xfa.event.newText)== "CA") &amp;&amp;  !($.boundItem(xfa.event.newText)== "US")) {
  
  this.resolveNode("ddlProvince").presence = "hidden";
  this.resolveNode("ddlProvince").rawValue = null;
  this.resolveNode("ddlProvince").mandatory = "disabled";
  this.resolveNode("ddlProvinceFr").presence = "hidden";
  this.resolveNode("ddlProvinceFr").rawValue = null;
  this.resolveNode("ddlProvinceFr").mandatory = "disabled";
  this.resolveNode("txtProvince").rawValue = " ";
  this.resolveNode("txtProvince").presence = "visible";
  
}
else {

  this.resolveNode("ddlProvince").presence = "visible";
  this.resolveNode("ddlProvince").mandatory = "error";
  this.resolveNode("ddlProvinceFr").presence = "hidden";
  this.resolveNode("ddlProvinceFr").mandatory = "disabled";
  this.resolveNode("ddlProvinceFr").rawValue = null;
  this.resolveNode("txtProvince").presence = "hidden";
}

cLog.trace ("setting isCountrySelectedChanged  to true");

this.resolveNode ("DrugAppl.#variables[0].Globals").isCountrySelectedChanged = true;
	
changedEvent = true;

 
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
 
 
 
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="ddlProvince" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Province - State*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList commitOn="select">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                     <items save="1">
                        <text>  </text>
                     </items>
                     <value>
                        <text>  </text>
                     </value>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript"> 
var keypressed = xfa.event.commitKey;
if (keypressed == 3){
	//app.alert("You exited this field by using a Tab")
} 
if (keypressed == 1){
	//app.alert("You exited the field by using the mouse") 
}
else {
	this.resolveNode ("DrugAppl.#variables[0].Globals").provinceSelectedIndex = this.selectedIndex;
}

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="ddlProvinceFr" w="50.8mm" presence="hidden">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Province - State*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList commitOn="select">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                     <items save="1">
                        <text>  </text>
                     </items>
                     <value>
                        <text>  </text>
                     </value>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.RegulatoryAddresses.control.RegulatoryAddressHandler;
var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;
var cFormNodeManager = script.core.model.FormNodeManager;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();

if (language == "fr") {

	cLog.trace ("1111111111111111111111111111111");
	// get the nodes of this
	var provinceListFr = xfa.resolveNodes("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvinceFr.items[*]");
		
	var provinceFrDisplay = provinceListFr.item(0).nodes ;//Node Set containing the display text values
	var provinceFrBound = provinceListFr.item(1).nodes; //Nodes Set containing the bound values.
	cLog.trace ("222222222222222222222222222222222");
	// get the nodes of the original
	var provinceList = xfa.resolveNodes("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.items[*]");
		
	var provinceOrigDisplay = provinceList.item(0).nodes ;//Node Set containing the display text values
	var provinceOrigBound = provinceList.item(1).nodes; //Nodes Set containing the bound values.
		
	cLog.trace ("French raw Value: " + this.rawValue);	
	var oItems = xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.#items"); 
	for (var i = 0; i &lt; provinceOrigBound.length; i++){
		cLog.trace ("BOUND VALUE: " + provinceOrigBound.item(i).value );
		if (provinceOrigBound.item(i).value == this.rawValue) {
			
			if (provinceOrigBound.item(i).value == "WA") {
				cLog.trace ("WASHINGTON@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
				oItems.nodes.item(i).value = "L'état de Washington";
			}
			else if (provinceOrigBound.item(i).value == "PEI" || provinceOrigBound.item(i).value == "PE") {
				oItems.nodes.item(i).value = "L’Île-du-Prince-Édouard";
			
			}			
		}
		
		
		
	}		
	xfa.resolveNode("DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince").rawValue = this.rawValue;	
				  
	this.presence = "hidden";
	this.rawValue = null;
	DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.presence = "visible";
	DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlProvince.mandatory = "error";
	
	
}
this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);

</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtProvince" w="50.8mm" presence="hidden">
                     <assist>
                        <speak priority="toolTip"/>
                     </assist>
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Province</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <value>
                        <text maxChars="50"/>
                     </value>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtPostalCode" w="50.704mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Postal/ZIP Code*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <value>
                        <text maxChars="50"/>
                     </value>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var selectedCountry =   DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlCountry;
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPostalcodeValid(this, selectedCountry.rawValue);

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;
var zipCodeStr = this.rawValue.toString();
var country = sfPart1ACompanyDetail.sNameAndAddress.ddlCountry.rawValue;
var endsWithHyphen = false;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

cLog.info("txtPostalCode::exit, actionName: " + fieldType );
cLog.info("txtPostalCode::exit, sourceNode: " + this );
cLog.info("txtPostalCode::exit, this.rawValue: " + this.rawValue);
cLog.info("txtPostalCode::exit, country ddl: " + country  );

try
{
	// set up event object
	cLog.info( "txtPostalCode::exit, invoking ActionEvent.exit" );	
	var aValidator = cFormatValidator.createInstance();
	var validationResult;
	if( this.rawValue != null ) {
	
	    cLog.trace ("sfPart1ACompanyDetail.ddlCountry.rawValue: " + country );
		if( country  == "CA" )
			fieldType = cFormatValidator.POSTAL_CODE;
			
		if( country  == "US" ) {
			fieldType  = cFormatValidator.ZIP_CODE;
			
			
			if (zipCodeStr.charAt(zipCodeStr.length - 1) == '-') {
			
			    endsWithHyphen  = true;
				var oldValue = this.rawValue;
				
				this.rawValue = "NOTGOOD";
				validationResult = aValidator.validateFieldFormat(this,fieldType);
				this.rawValue = oldValue ;
				xfa.host.setFocus(this);
				app.alert( validationResult + "(ex. 12345)");
				
				
			}
			else {
				cLog.trace ("Not Equalllllllllllllllllllllllllll");
				
			
			}
		}
		if (!endsWithHyphen  ) {
		
			if( fieldType != null ) {
				validationResult = aValidator.validateFieldFormat(this,fieldType);
				cLog.info( "txtPostalCode::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
			}
			else {
		  	  cLog.trace ("fieldType is NULL");
			}
		   
			if( validationResult != null ) {
		
		  	  if (fieldType == cFormatValidator.POSTAL_CODE) {
		  	  		xfa.host.setFocus(this);
		 		   	if (language == "en") {
						app.alert( "Please enter a valid postal code. (A1A 1A1)"); 
					}
					else {
						app.alert( "SVP entrer un code postal valide. (A1A 1A1)"); 
					}
		 	   }
		 	   else if (fieldType == cFormatValidator.ZIP_CODE) {
		 	   		xfa.host.setFocus(this);
		    		//app.alert( validationResult + "(ex. 12345)");
		    		 	if (language == "en") {
						app.alert( "Please enter a valid zip code. (12345)"); 
					}
					else {
						app.alert( "Entrer un code zip valide. (12345)"); 
					}
		  		}
			
				
			}
		
		}
		
	}
}
catch(exception)
{
	cLog.warn("Problem with Email ::exit", exception);
}
*/
</script>
                     </event>
                  </field>
                  <?templateDesigner expand 1?></subform>
               <draw h="7.62mm" name="lblContactPersonMS" w="203.2mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                     <fill>
                        <color value="255,255,153"/>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                     </fill>
                  </border>
                  <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>MANUFACTURER CONTACT</text>
                  </value>
                  <assist role="H2"/>
                  <?renderCache.bounds 573166 18766 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 20 MANUFACTURER CONTACT 0 1417 13800 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <field h="11.43mm" name="ddlSalutation" w="30.48mm">
                  <caption placement="top" reserve="3.175mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Salutation *</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items save="1">
                     <text>Mr</text>
                     <text>Ms</text>
                     <text>Mrs</text>
                     <text>Dr</text>
                  </items>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtGivenName" w="46.99mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Given Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 25) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtInitials" w="10.16mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.175mm" placement="top">
                     <para vAlign="middle"/>
                     <value>
                        <text>Initials</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <value>
                     <text maxChars="50"/>
                  </value>
               </field>
               <field h="11.43mm" name="txtSurname" w="57.15mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Surname*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <value>
                     <text maxChars="50"/>
                  </value>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtTitle" minH="11.43mm" minW="58.244mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Title*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit multiLine="1">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 100) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtTelephone" w="38.1067mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Telephone Number*</text>
                     </value>
                  </caption>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <validate nullTest="error">
                     <script contentType="application/x-javascript">


// if the country is "Canada" or "United States", verify the telephone number
/*var countrySel = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.ddlCountry.rawValue;

if (countrySel  == "CA" || countrySel == "US") {
	if ( this.resolveNode("DrugAppl.#variables.countryScript").isValidPhoneNo(txtTelephone, true) == false) {
		xfa.host.setFocus(txtTelephone);
	}
}*/


</script>
                  </validate>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var selectedCountry =   DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlCountry;
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPhoneValid(this, selectedCountry.rawValue);

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
	var cLog = script.core.util.Log;
	var fieldType = null;
		
	var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
	
	var language = cDrugApplModel.getLanguage();	
	
	var counter = countDigits (this.rawValue.toString());



	var country =  DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlCountry.rawValue;
	
	var text = xfa.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.btnViewInstructions").value;
	


	if (country  == "CA" || country  == "US") {
		if (validate_north_american_phone_number(this.rawValue)) {
			//xfa.host.messageBox("GOOD NORTH AMERICAN NUMBER: " + this.rawValue);
		}
		else {
		
			xfa.host.setFocus (this);
			
			if (language == "en") {
				xfa.host.messageBox("Please enter a valid phone number. (1-888-888-8888 or 888-888-8888)");		
			}
			else {
				xfa.host.messageBox("SVP entrer un numéro de téléphone valide. (1-888-888-8888 ou 888-888-8888)");
			}
			
		}
	}
	else {
		if (validate_non_north_american_phone_number(this.rawValue)) {
			//xfa.host.messageBox("GOOD NON NORTH AMERICAN NUMBER: " + this.rawValue);
		}
		else {
		
			xfa.host.setFocus (this);
			
			if (language == "en") {
				xfa.host.messageBox("Please enter a valid phone number.");
			}
			else {
				xfa.host.messageBox("SVP entrer un numéro de téléphone valide.");
			}
			
		}
	}
	
	
	

function allDigits(str) {
	return /^\d+$/.test(str);
}

function countDigits (str) {

	var chr = ""
	var nDigits = 0

	for (position = 0; position &lt; str.length; position++){
   		chr = str.charAt(position)
   		if (chr &gt;= "0" &amp;&amp; chr &lt;= "9") nDigits++;
	}

	
	
	return nDigits;

}

// helper function. Returns true if the number is a Digit

function isDigit(number)
{
  if (/(^\d+$)/.test(number)) {
    return true;
   }
  else {
    return false;
   }
}



// validate the phone number if it meets the criteria 888-888-8888 or 1-888-888-8888

function validate_north_american_phone_number (number)
{
  result = "";
 
  // if the phone number contains letters, return false
  for (i=0;i&lt;number.length;i++) {
    if (isLetter(number.charAt(i))) {
      return false;
     }
    
 }
  
// concat all digit numbers
 for (i=0;i&lt;number.length;i++) {
    if (isDigit(number.charAt(i))) {
      result += number.charAt(i);
     }
    
 }
     

// if result is less than 10 numbers, return false
  if (result.length&lt;10)
    return false; 
  else 
  {

    // if result is 10 numbers, return true. We're nut returning the num since we're keeping to the user to specifiy '-' or '(' etc....
    if (result.length==10) {
      num= result.substr(0,3) +  "-" +  result.substr(3,3) + "-" + result.substr(6);
      return true;
    }



    // if 11 numbers starting with '1' return true
    else if (result.length==11 &amp;&amp; result.charAt(0)=="1") {
      num="1-" + result.substr(1,3) + "- " + result.substr(4,3) + "-" + result.substr(7);
     return true;
    }
    
  }
 
  return false;
}

function validate_non_north_american_phone_number (number)
{
  // if the phone number contains letters, return false
  for (i=0;i&lt;number.length;i++) {
    if (isLetter(number.charAt(i))) {
      return false;
     }
    
  }
 
  return true;
}


function isLetter(str) {
  return str.length === 1 &amp;&amp; str.match(/[a-z]/i);
}

var HelloDlg =
{
 initialize: function (dialog)
 {
 var todayDate = dialog.store()["date"];
 todayDate = "Date: " + util.printd("mmmm dd, yyyy", new Date());
 dialog.load({ "date": todayDate });
 },
 description:
 {
 elements:
 [
 {
 type: "view",
 elements:
 [
 {
  item_id: "str1",
 name: "Hello, this is a demo box.",
 type: "static_text",
 font: "dialog",
 bold: true,
 alignment: "align_center",
 char_width: 30,
 height: 20,
 },
 {
 type: "gap",
 },
 {
 type: "view",
 align_children: "align_row",
 elements:
 [
 {
 item_id: "str2",
 name: "Your text:",
  type: "static_text",
 },
 {
 item_id: "str3",
 name: text,
 type: "static_text",
  font: "dialog",
 bold: true,
 } 
 ]
 },
 {
 item_id: "date",
 name: "Date: ",
 type: "static_text",
 char_width: 25,
 }
 ]
 },
 {
 type: "ok",
 ok_name: "Ok!",
 alignment: "align_right",
 }
 ]
 }
}; */
</script>
                  </event>
               </field>
               <field name="txtExtension" w="22.893mm" h="11.43mm">
                  <ui>
                     <numericEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </numericEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Ext.</text>
                     </value>
                  </caption>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <validate>
                     <picture>zero{}|num.integer{}</picture>
                  </validate>
                  <format>
                     <picture>num{zzzzzzzzzzzz9}</picture>
                  </format>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field name="txtFax" w="43.948mm" h="11.43mm">
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Fax Number*</text>
                     </value>
                  </caption>
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
	/*var cFormatValidator = script.core.validation.BasicFormatValidator;
	var cLog = script.core.util.Log;
	var fieldType = null;
		
	var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
	
	var language = cDrugApplModel.getLanguage();	
	
	var counter = countDigits (this.rawValue.toString());



	var country =  DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlCountry.rawValue;
	
	if (country  == "CA" || country  == "US") {
		if (validate_north_american_phone_number(this.rawValue)) {
			//xfa.host.messageBox("GOOD NORTH AMERICAN NUMBER: " + this.rawValue);
		}
		else {
		
			xfa.host.setFocus (this);
			
			if (language == "en") {
				cLog.trace ("RAW VALUE BEFORe: " + this.rawValue);
				app.alert("Please enter a valid fax number. (1-888-888-8888 or 888-888-8888)");
				cLog.trace ("RAW VALUE after: " + this.rawValue);
				
			}
			else {
				xfa.host.messageBox("SVP entrer un numéro de télécopieur valide. (1-888-888-8888 ou 888-888-8888)");
			}
			
		}
	}
	else {
		if (validate_non_north_american_phone_number(this.rawValue)) {
			//xfa.host.messageBox("GOOD NON NORTH AMERICAN NUMBER: " + this.rawValue);
		}
		else {
			xfa.host.setFocus (this);
			
			if (language == "en") {
			
				xfa.host.messageBox("Please enter a valid fax number.");
				
			}
			else {
				xfa.host.messageBox("SVP entrer un numéro de télécopieur valide.");
			}
			
		}
	}
	
	
	

function allDigits(str) {
	return /^\d+$/.test(str);
}

function countDigits (str) {

	var chr = ""
	var nDigits = 0

	for (position = 0; position &lt; str.length; position++){
   		chr = str.charAt(position)
   		if (chr &gt;= "0" &amp;&amp; chr &lt;= "9") nDigits++;
	}

	
	
	return nDigits;

}

// helper function. Returns true if the number is a Digit

function isDigit(number)
{
  if (/(^\d+$)/.test(number)) {
    return true;
   }
  else {
    return false;
   }
}



// validate the phone number if it meets the criteria 888-888-8888 or 1-888-888-8888

function validate_north_american_phone_number (number)
{
  result = "";
 
  // if the phone number contains letters, return false
  for (i=0;i&lt;number.length;i++) {
    if (isLetter(number.charAt(i))) {
      return false;
     }
    
 }
  
// concat all digit numbers
 for (i=0;i&lt;number.length;i++) {
    if (isDigit(number.charAt(i))) {
      result += number.charAt(i);
     }
    
 }
     

// if result is less than 10 numbers, return false
  if (result.length&lt;10)
    return false; 
  else 
  {

    // if result is 10 numbers, return true. We're nut returning the num since we're keeping to the user to specifiy '-' or '(' etc....
    if (result.length==10) {
      num= result.substr(0,3) +  "-" +  result.substr(3,3) + "-" + result.substr(6);
      return true;
    }



    // if 11 numbers starting with '1' return true
    else if (result.length==11 &amp;&amp; result.charAt(0)=="1") {
      num="1-" + result.substr(1,3) + "- " + result.substr(4,3) + "-" + result.substr(7);
     return true;
    }
    
  }
 
  return false;
}

function validate_non_north_american_phone_number (number)
{
  // if the phone number contains letters, return false
  for (i=0;i&lt;number.length;i++) {
    if (isLetter(number.charAt(i))) {
      return false;
     }
    
  }
 
  return true;
}


function isLetter(str) {
  return str.length === 1 &amp;&amp; str.match(/[a-z]/i);
}*/

var selectedCountry =   DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlCountry;
 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isPhoneValid(this, selectedCountry.rawValue);
</script>
                  </event>
                  <validate nullTest="error"/>
               </field>
               <field h="11.43mm" name="txtEmail" w="98.135mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Email</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

 
var cGlobalRequirement = script.core.validation.GlobalRequirement; 

cGlobalRequirement.isEmailValid(this);

/*var cFormatValidator = script.core.validation.BasicFormatValidator;
var cLog = script.core.util.Log;
var fieldType = null;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

cLog.info("txtEmail::exit, actionName: " + fieldType );
cLog.info("txtEmail::exit, sourceNode: " + this );
cLog.info("txtEmail::exit, this.rawValue: " + this.rawValue);

try
{
	// set up event object
	cLog.info( "txtEmail::exit, invoking ActionEvent.exit" );	
	var aValidator = cFormatValidator.createInstance();
	var validationResult;
	if( this.rawValue != null ) {
	
	    cLog.trace ("sfPart1ACompanyDetail.txtEmail.rawValue: " + sfPart1ACompanyDetail.txtEmail.rawValue);
		
		fieldType = cFormatValidator.EMAIL;
		
		if( fieldType != null ) {
			validationResult = aValidator.validateFieldFormat(this,fieldType);
			cLog.info( "txtEmail::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
		}
		else {
		    cLog.trace ("fieldType is NULL");
		}
		
		if( validationResult != null ) {
			xfa.host.setFocus(this);
			
			if (language == "en") {
				app.alert("Please enter a valid email. (smith@company.com)"); 
				
			}
			else {
				app.alert("SVP entrer un courriel valid. (smith@company.com)");
			} 
			
			 
			//app.alert( validationResult + "(ex. ananana@ananan.com)");
		}
		
		
	}
}
catch(exception)
{
	cLog.warn("Problem with Email ::exit", exception);
}*/
</script>
                  </event>
               </field>
               <draw h="7.62mm" name="lblCertification" w="8in">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                     <fill>
                        <color value="255,255,153"/>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                     </fill>
                  </border>
                  <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>CERTIFICATION</text>
                  </value>
                  <?renderCache.bounds 573166 18765 0 0 1417 1418 0 0?>
                  <?renderCache.textRun 13 CERTIFICATION 0 1417 13800 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
               <draw name="lblCertificationRationale" w="8in" minH="6.35mm">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                  </border>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <margin/>
                     </textEdit>
                  </ui>
                  <value>
                     <text>I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.    </text>
                  </value>
               </draw>
               <field h="11.43mm" name="ddlCertSalutation" w="30.48mm">
                  <caption placement="top" reserve="3.476mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Salutation</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items save="1">
                     <text>Mr</text>
                     <text>Ms</text>
                     <text>Mrs</text>
                     <text>Dr</text>
                  </items>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
               </field>
               <field h="11.43mm" name="txtCertGivenName" w="46.99mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Given Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 25) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCertSurname" w="56.642mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Surname*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="posTitle" minW="68.623mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Position Title*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">
var cLog = script.core.util.Log;

if (xfa.event.newText != null) {

    cLog.trace ("RAWVALUE LENGTH: " + xfa.event.newText.toString().length);
	if (xfa.event.newText.toString().length &gt; 100) {
		xfa.event.change = "";
	}

}
else {
	cLog.trace ("RAWVALUE IS NULLLLLLLL");
}
</script>
                  </event>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

this.resolveNode("DrugAppl.#variables[0].countryScript").isDataEntered(this);
</script>
                  </event>
               </field>
               <breakBefore/>
               <?templateDesigner expand 0?></subform>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <margin topInset="0mm"/>
            <subform w="100.778mm" minH="99.762mm" layout="lr-tb" name="sfSignatureDetails" presence="hidden">
               <subform w="203.2mm" layout="lr-tb" name="sfSigOption">
                  <exclGroup name="signatureOption" layout="lr-tb">
                     <field w="38.976mm" h="6mm" name="chkDigitalID">
                        <ui>
                           <checkButton shape="round">
                              <border>
                                 <?templateDesigner StyleID apcb4?>
                                 <edge stroke="lowered"/>
                                 <fill/>
                              </border>
                           </checkButton>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption placement="right" reserve="32.976mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Digital ID</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <value>
                           <text>Digital ID</text>
                        </value>
                        <event activity="click" name="event__click">
                           <script contentType="application/x-javascript">



DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sigSignature.presence = "visible";
DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.sfImgSignature.presence = "hidden";
</script>
                        </event>
                        <items>
                           <text>Digital ID</text>
                        </items>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                     </field>
                     <field w="42.838mm" h="6mm" name="chkDigitalImage">
                        <ui>
                           <checkButton shape="round">
                              <border>
                                 <?templateDesigner StyleID apcb4?>
                                 <edge stroke="lowered"/>
                                 <fill/>
                              </border>
                           </checkButton>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption placement="right" reserve="36.838mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Image Signature</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <event activity="click" name="event__click">
                           <script contentType="application/x-javascript">

DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sigSignature.presence = "hidden";
DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.sfImgSignature.presence = "visible";
</script>
                        </event>
                        <items>
                           <text>Image Signature</text>
                        </items>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                     </field>
                     <border hand="right">
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <?templateDesigner expand 1?></exclGroup>
                  <border>
                     <edge presence="hidden"/>
                     <corner presence="hidden" thickness="0.175mm"/>
                  </border>
                  <?templateDesigner expand 1?></subform>
               <subform w="114.3mm" name="sfSignature" layout="tb">
                  <subform w="115.275mm" h="8.938mm" name="sfImgSignature">
                     <field name="imgSignature" w="114.3mm" h="8.938mm" y="0mm">
                        <ui>
                           <imageEdit data="embed"/>
                        </ui>
                        <caption reserve="18.0746mm">
                           <font typeface="Myriad Pro" size="8pt"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>Signature</text>
                           </value>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <desc>
                           <text name="embeddedHref">Unknown Embedded URI</text>
                        </desc>
                        <event activity="change" name="event__change">
                           <script contentType="application/x-javascript">if (this.rawValue != null) {

	//DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "open";
	//DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245";
	//DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";
	
	var cFormNodeManager = script.core.model.FormNodeManager;
	
	var baseNode=cFormNodeManager.getBaseNode();
	
	DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.ddtSignedOn.rawValue = util.printd("yyyy-mm-dd", new Date());
	
	baseNode.lock();
	
	app.execMenuItem("SaveAs");
	
}

</script>
                        </event>
                        <event activity="ready" ref="$layout" name="event__layout_ready">
                           <script contentType="application/x-javascript">if(this.rawValue !=null){
var img = this.value.resolveNode("#image").contentType;

var imgType = img.substr(img.length -3).toLowerCase();


var imgFormatSplit = img.split("/");
var imgFormat = imgFormatSplit[imgFormatSplit.length - 1].toLowerCase();

if (imgFormat != "bmp" &amp;&amp; imgFormat != "gif" &amp;&amp; imgFormat != "jpg" &amp;&amp; imgFormat != "png" &amp;&amp; imgFormat != "jpeg") {
	app.alert("Plese insert suported image file only: \n\n'bmp', 'gif', 'jpg', 'png', 'jpeg'");
	this.rawValue = null;
}
}

</script>
                        </event>
                     </field>
                     <draw name="rctSignature" y="0mm" x="18.075mm" w="96.225mm" h="8.938mm">
                        <value>
                           <rectangle>
                              <edge/>
                              <corner radius="5.08mm"/>
                           </rectangle>
                        </value>
                     </draw>
                     <?templateDesigner expand 1?></subform>
                  <?templateDesigner expand 1?></subform>
               <field name="sigSignature" w="100.778mm" h="9.395mm">
                  <ui>
                     <signature type="PDF1.6">
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                        <manifest action="all"/>
                     </signature>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="26.8657mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Signature*</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <bind match="none"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">

if (this.rawValue != null) {

	////DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "open";
	////DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245";
	//DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";
	
	var cFormNodeManager = script.core.model.FormNodeManager;
	
	var baseNode=cFormNodeManager.getBaseNode();
	
	
	DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.ddtSignedOn.rawValue = util.printd("yyyy-mm-dd", new Date());
	
	baseNode.lock();
	
	app.execMenuItem("SaveAs");
}
</script>
                  </event>
                  <event activity="preSign" name="event__preSign">
                     <script contentType="application/x-javascript">
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";

DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.ddtSignedOn.rawValue = util.printd("yyyy-mm-dd", new Date());
</script>
                  </event>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "245,245,245";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "readOnly";
</script>
                  </event>
               </field>
               <field name="ddtSignedOn" w="75.106mm" h="9.205mm" access="readOnly">
                  <ui>
                     <dateTimeEdit hScrollPolicy="off">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </dateTimeEdit>
                     <picture>date{YYYY-MM-DD}</picture>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1.0008mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle" hAlign="center"/>
                  <value>
                     <date/>
                  </value>
                  <caption reserve="33.6933mm">
                     <para vAlign="middle" hAlign="center"/>
                     <value>
                        <text>Date (YYYY-MM-DD)*</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <format>
                     <picture>date{YYYY-MM-DD}</picture>
                  </format>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate>
                     <picture>date{YYYY-MM-DD}</picture>
                  </validate>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">

if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);
	//this.resolveNode("DrugAppl.#variables.countryScript").check_date(this);

}
</script>
                  </event>
                  <bind>
                     <picture>date{YYYY-MM-DD}</picture>
                  </bind>
               </field>
               <?templateDesigner expand 0?>
            </subform>
            <subform w="196.85mm" layout="lr-tb" name="sfFinalizeButton">
               <field name="btnFinalize" w="28.575mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Finalize</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var date = new Date();
var cLog = script.core.util.Log;
var telephone = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtTelephone;
var fax = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.txtFax;

var cFailureReporter = script.core.validation.FailureReporter;
var cFormNodeManager = script.core.model.FormNodeManager;

var baseNode = cFormNodeManager.getBaseNode();

var validationFailures = baseNode.validateNode(baseNode.getNodeInstance(), true);
var cDrugApplModel = script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();
var cGlobalRequirement = script.core.validation.GlobalRequirement;

var chrnologicalBool = false;
var chrnologicalMsg = null;
var part1CheckedMsg = null;
var part1CheckedMsgBool = false;
var part3CheckedMsg = null;
var part3CheckBool = false;
var finalMessage = null;
var elseBool = false;
var elseBool2 = false;
var chronoBool = false;
var bool1 = false;
var chronoPart1NotChecked = false;


if (validationFailures != null) {

    cLog.trace("@@@@@@@@@@@@@@@@@1@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    // finalMessage  = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red" + "\n" + cFailureReporter.getFailureSummary(validationFailures) + "\n";
    if (language == "en") {
        finalMessage = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red." + "\n";
    }
    else {
        finalMessage = "Le formulaire n'a pas pu être finalisé car il manque de l'information obligatoire. Les champs manquants sont surlignés en rouge." + "\n";
    }
}
if (isPart1CheckBoxChecked() == false) {

    cLog.trace("@@@@@@@@@@@@@@@@@2@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    if (language == "en") {
        part1CheckedMsg = "At least one of the change options in Part 1 must be checked.\n\n";
    }
    else {
        part1CheckedMsg = "Au moins l'une des options de changement dans la Partie 1 doit être vérifiée.\n\n";
    }
}

if (isPart3CheckBoxChecked() == false) {

    cLog.trace("@@@@@@@@@@@@@@@@@3@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    if (language == "en") {
        part3CheckedMsg = "At least one of the Code options in Part 3 must be checked.\n\n";
    }
    else {
        part3CheckedMsg = "Au moins l'une des options de code dans la partie 3 doit être vérifiée.\n\n";
    }


}

var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);



function isChronological() {

    cLog.trace("@@@@@@@@@@@@@@@@@4@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfFiling.execEvent("exit");
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfExpiration.execEvent("exit");
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfGranted.execEvent("exit");

    if ((this.resolveNode("DrugAppl.#variables[0].Globals").expirationDate.getTime() &gt; this.resolveNode("DrugAppl.#variables[0].Globals").grantedDate.getTime()) &amp;&amp;
        (this.resolveNode("DrugAppl.#variables[0].Globals").grantedDate.getTime() &gt; this.resolveNode("DrugAppl.#variables[0].Globals").filingDate.getTime())) {

        cLog.trace("CHRONOLOGICAL2222222222222222222222222222222222");
        chrnologicalBool = true;

    }
    else {
        cLog.trace("@@@@@@@@@@@@@@@@@5@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        cLog.trace("NOOOOOOOTTTTTT CHRONOLOGICAL2222222222222222222222222222222");

        if (language == "en") {
            cLog.trace("@@@@@@@@@@@@@@@@@6@@@@@@@@@@@@@@@@@@@@@@@@@@@");
            chrnologicalMsg = "Filing Date, Grant Date and Expiry Date must be in chronological order.\n\n";
            chrnologicalBool = false;


        }
        else {
            cLog.trace("@@@@@@@@@@@@@@@@@7@@@@@@@@@@@@@@@@@@@@@@@@@@@");
            chrnologicalMsg = "La date de dépôt de la demande de brevet au Canada, la Date d'obtention et la Date d'expiration doivent être en ordre chronologique.\n\n";
            chrnologicalBool = false;


        }
    }

    cLog.trace("chrnologicalBool is!!!!!!!!!!!!!!: " + chrnologicalBool);
    return chrnologicalBool;
}

function isAllVisibleAndCompleted() {

    cLog.trace("@@@@@@@@@@@@@@@@@8@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {

            if (oFields.item(nNodeCount).presence == "visible") {
                if (oFields.item(nNodeCount).mandatory == "error") {
                    if (oFields.item(nNodeCount).rawValue == null || oFields.item(nNodeCount).rawValue == "") {
                        cLog.trace("oFields.item " + oFields.item(nNodeCount));
                        cLog.trace("isAllVisibleAndCompleted is FALSE!!!!!!!!!!!!!!!");
                        return false;

                    }

                }

            }
        }
    }

    if (isPart1CheckBoxChecked() == false || isPart3CheckBoxChecked() == false) {
        return false;

    }

    return true;
}

function isPart1CheckBoxChecked() {

    cLog.trace("@@@@@@@@@@@@@@@@@9@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    if (DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.presence == "visible") {
        cLog.trace("@@@@@@@@@@@@@@@@@10@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        if (!((DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkFormulation.rawValue == 1) ||
            (DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkDosage.rawValue == 1) ||
            (DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkUse.rawValue == 1))) {

            DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkFormulation.fillColor = "230,125,125";
            DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkDosage.fillColor = "230,125,125";
            DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkUse.fillColor = "230,125,125";


            return false;
        }
        else {
            cLog.trace("@@@@@@@@@@@@@@@@@11@@@@@@@@@@@@@@@@@@@@@@@@@@@");
            DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkFormulation.fillColor = "250,250,250";
            DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkDosage.fillColor = "250,250,250";
            DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkUse.fillColor = "250,250,250";


            return true;


        }
    }

    return true;

}

function isPart3CheckBoxChecked() {
    cLog.trace("@@@@@@@@@@@@@@@@@12@@@@@@@@@@@@@@@@@@@@@@@@@@@");

    if (!((DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkA.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkB.rawValue == 1) ||
        (DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkC.rawValue == 1))) {

        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkA.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkB.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkC.fillColor = "230,125,125";

        return false;
    }
    else {
        cLog.trace("@@@@@@@@@@@@@@@@@13@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkA.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkB.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkC.fillColor = "255,250,250";

        return true;
    }


    return true;

}


if (isAllVisibleAndCompleted()) {

    cLog.trace("@@@@@@@@@@@@@@@@@14@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    // this means all mandatory fields are filled. nullify the finalMessage 
    finalMessage = null;
    cLog.trace("Message is nullified!!!!");

    if (isChronological()) {

        cLog.trace("@@@@@@@@@@@@@@@@@15@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        			if (language == "en") {
	   					finalMessage = "The form has been validated and locked for editing. It can now be printed and sent to Health Canada. In order to modify the form, press the 'Modify' button." + "\n"; 
	   				}
	   				else {
	   					finalMessage = "Le formulaire a été validé et verrouillé contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton 'Modifier'." + "\n"; 
	   				}        
        //if (language == "en") {
        //    finalMessage = "Le formulaire a été validé et verrouillé contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton 'Modifier'." + "\n";
        //}
        //else {
        //    finalMessage = "Nous vous encourageons fortement à sauvegarder le formulaire à ce point-ci. Une fois que le formulaire est signé électroniquement, vous serez incapable de le corriger et vous aurez à entrer à nouveau toute l'information. Veuillez procéder à la signature du formulaire une fois que vous l'avez sauvegardé." + "\n";
        //}

        baseNode.lock();
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "211,211,211";
        cLog.trace("@@@@@@@@@@@@@@@@@16@@@@@@@@@@@@@@@@@@@@@@@@@@@");


        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sigSignature.presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalID.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSigOption.signatureOption.chkDigitalImage.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.sfImgSignature.presence = "hidden";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.sfImgSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sfSignature.sfImgSignature.imgSignature.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.sigSignature.access = "open";
        this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtSignatureOpen").caption.value.text.value = "OPEN";

        cLog.trace("@@@@@@@@@@@@@@@@@17@@@@@@@@@@@@@@@@@@@@@@@@@@@");

        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.presence = "visible";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtSubmissionNo.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtSubFormIdNumber.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfSubmission.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfNOC.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfAdded.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfAmended.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfReceived.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtSubFormIdNumber.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtFormIdNumber.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtDrugIdNumber.access = "open";
        DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtNotes.access = "open";
        cLog.trace("@@@@@@@@@@@@@@@@@18@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").rawValue = "FORM IV-000" + this.resolveNode("DrugAppl.#variables.Globals").genUniqueID();
        //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").fillColor = "211,211,211";
        //this.resolveNode("#pageSet.Page1.txtTrackingNumber1").font.weight = "bold";
        this.resolveNode("DrugAppl.#variables[0].Globals").isFinalized = true;
        this.resolveNode("DrugAppl.#variables[0].Globals").finalizedDate = date;
        cLog.trace("@@@@@@@@@@@@@@@@@19@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        if (language == "en") {
            this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date Finalized: " + util.printd("yyyy-mm-dd", date);
        }
        else {
            this.resolveNode("#pageSet.Page1.ddtFinalized").rawValue = "Date finalisée: " + util.printd("yyyy-mm-dd", date);
        }

        this.resolveNode("DrugAppl.sfPage1.sfInstructions.sButtons.txtLocked").caption.value.text.value = "LOCKED";
        cLog.trace("@@@@@@@@@@@@@@@@@20@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkFormulation.fillColor = "250,250,250";
        DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkDosage.fillColor = "250,250,250";
        DrugAppl.sfPage1.sfSubmission.part1Sub.sOptions.chkUse.fillColor = "250,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkA.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkB.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.sCode.chkC.fillColor = "255,250,250";

        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfFiling.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfExpiration.fillColor = "255,250,250";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfGranted.fillColor = "255,250,250";
        cLog.trace("@@@@@@@@@@@@@@@@@21@@@@@@@@@@@@@@@@@@@@@@@@@@@");


        //cGlobalRequirement.finalizedSuccessMessage();

        xfa.host.messageBox(finalMessage);

        if (language == "en") {
            xfa.host.messageBox("We strongly encourage you to save the form at this point. \nOnce the form is digitally signed, you will not be able to correct it \nand you will need to re-input all the information again. \nPlease proceed to signing the form after saving it.");
        }
        else {
            xfa.host.messageBox("Nous vous encourageons fortement à sauvegarder le formulaire à ce point-ci. Une fois que le formulaire est signé électroniquement, vous serez incapable de le corriger et vous aurez à entrer à nouveau toute l'information. Veuillez procéder à la signature du formulaire une fois que vous l'avez sauvegardé.");
        }
        cLog.trace("@@@@@@@@@@@@@@@@@22@@@@@@@@@@@@@@@@@@@@@@@@@@@");

        //cGlobalRequirement.finalizedSuccessMessage();
    } // if isAllVisibleAndCompleted close
    //if (elseBool2 == false) {
    else {
        cLog.trace("NOT ALL MANDATORY ARE COMPLETED !!!!!!!!!!!!!");

        /*if (language == "en") {
         finalMessage  = "The form could not be finalized due to missing mandatory information. The missing fields are highlighted in red." + "\n";
         }
         else {
         finalMessage  = "Le formulaire n'a pas pu être finalisé car il manque de l'information obligatoire. Les champs manquants sont surlignés en rouge."  + "\n";
         } */

        cLog.trace("@@@@@@@@@@@@@@@@@23@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfFiling.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfExpiration.fillColor = "230,125,125";
        DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.Table1.Row1.dtfGranted.fillColor = "230,125,125";

        finalMessage = null;
        checkErrorMessages();

        cLog.trace("NOT ALL MANDATORY ARE COMPLETED !!!!!!!!!!!!!");
        cLog.trace("FINAL MESSAGE: " + finalMessage);
        xfa.host.messageBox(finalMessage);
        cLog.trace("@@@@@@@@@@@@@@@@@24@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    }// else
}
else {
    cLog.trace("@@@@@@@@@@@@@@@@@25@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    isChronological();

    checkErrorMessages();

    cLog.trace("NOT ALL MANDATORY ARE COMPLETED !!!!!!!!!!!!!");
    cLog.trace("FINAL MESSAGE: " + finalMessage);
    xfa.host.messageBox(finalMessage);


}
var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("DrugAppl.script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);




function checkErrorMessages() {


    cLog.trace("@@@@@@@@@@@@@@@@@26@@@@@@@@@@@@@@@@@@@@@@@@@@@");
    if (part1CheckedMsg != null) {

        cLog.trace("@@@@@@@@@@@@@@@@@27@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        cLog.trace("PART1 IS NOT COMPLETED !!!!!!!!!!!!!");

        if (finalMessage == null) {
            finalMessage = part1CheckedMsg;
        }
        else {

            finalMessage = finalMessage + part1CheckedMsg;
        }

    }//if close
    if (part3CheckedMsg != null) {
        cLog.trace("@@@@@@@@@@@@@@@@@28@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        if (finalMessage == null) {
            finalMessage = part3CheckedMsg;
        }
        else {
            finalMessage = finalMessage + part3CheckedMsg;
        }

    }//if close
    if (chrnologicalMsg != null) {
        cLog.trace("@@@@@@@@@@@@@@@@@29@@@@@@@@@@@@@@@@@@@@@@@@@@@");

        cLog.trace("CHRONOLOGICAL IS NOT GOOOD !!!!!!!!!!!!!");
        if (finalMessage == null) {
            finalMessage = chrnologicalMsg;
        }
        else {
            finalMessage = finalMessage + chrnologicalMsg;
        }

    }//if close

    cLog.trace("@@@@@@@@@@@@@@@@@30@@@@@@@@@@@@@@@@@@@@@@@@@@@");


}
</script>
                  </event>
               </field>
               <draw name="Text2" w="4.616mm" h="5.2331mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <?renderCache.bounds 10251 12000 0 0 1417 1417 0 0?></draw>
               <field name="btnModify" w="28.575mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Modify</text>
                     </value>
                     <para vAlign="middle" hAlign="center"/>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cFormNodeManager = script.core.model.FormNodeManager;

var baseNode=cFormNodeManager.getBaseNode();
baseNode.unLock();
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.presence = "hidden";
DrugAppl.sfPage1.sfInstructions.sButtons.txtLocked.caption.value.text.value = "UNLOCKED";
DrugAppl.sfPage1.sfInstructions.sButtons.txtSignatureOpen.caption.value.text.value = "OPEN";

DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtSubmissionNo.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtSubFormIdNumber.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfSubmission.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfNOC.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfAdded.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfAmended.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.dtfReceived.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtSubFormIdNumber.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtFormIdNumber.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtDrugIdNumber.rawValue = "";
DrugAppl.sfPage1.sfAuthSignOfficial.sfFinalizeButton.sHCOnly.sBody.txtNotes.rawValue = "";

DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.presence = "hidden";

</script>
                  </event>
                  <event activity="ready" ref="$layout" name="event__layout_ready">
                     <script contentType="application/x-javascript">

if(DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.ddtSignedOn.rawValue==null){

if(btnFinalize.access == "open"){
this.access = "readOnly";
this.fillColor = "230,230,230";
//btnFinalizeAndLock.fillColor = "212,208,200";
}

if(btnFinalize.access == "readOnly"){
this.access = "open";
this.fillColor = "212,208,200";
//btnFinalizeAndLock.fillColor = "230,230,230";
}
}
</script>
                  </event>
               </field>
               <margin topInset="5.08mm"/>
               <subform name="sHCOnly" layout="tb" w="203.2mm" presence="hidden">
                  <margin topInset="12.7mm" bottomInset="0mm"/>
                  <draw name="lblTitle" w="203.2mm" h="5.334mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>Health Canada Use Only</text>
                     </value>
                     <font size="8pt" typeface="Myriad Pro" baselineShift="0pt">
                        <fill>
                           <color value="255,255,255"/>
                        </fill>
                     </font>
                     <margin topInset="0.5002mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <fill>
                           <color value="0,0,0"/>
                           <linear>
                              <color value="192,192,192"/>
                           </linear>
                        </fill>
                     </border>
                  </draw>
                  <subform w="203.2mm" layout="lr-tb" name="sBody">
                     <field name="txtSubmissionNo" w="66.04mm" h="11.12mm">
                        <ui>
                           <numericEdit hScrollPolicy="off">
                              <border hand="right">
                                 <?templateDesigner StyleID aped2?>
                                 <edge/>
                              </border>
                              <margin/>
                              <comb numberOfCells="6"/>
                           </numericEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="32.7095mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Submission Number</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <keep intact="contentArea"/>
                        <validate>
                           <picture>num.integer{}</picture>
                        </validate>
                        <format>
                           <picture>text{999999}</picture>
                        </format>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

var language = cDrugApplModel.getLanguage();

if (this.rawValue.toString().length  &lt; 6) {
	if (language == "en") {
      	xfa.host.messageBox ("Submission Number must be 6 numbers.");
	}
	else {
      	xfa.host.messageBox ("Numéro de la présentation doit être de 6 numéros.");
	}
		
	xfa.host.setFocus(this);
		
		
}
</script>
                        </event>
                     </field>
                     <field name="dtfSubmission" w="128.682mm" h="11.593mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="10.16mm" rightInset="1mm"/>
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <date/>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.1778mm"/>
                        </border>
                        <validate>
                           <picture>date{YYYY-MM-DD}</picture>
                        </validate>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <caption reserve="63.7227mm">
                           <value>
                              <text>Date of Filing Submission (YYYYMMDD)</text>
                           </value>
                           <para vAlign="middle"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);

}
</script>
                        </event>
                     </field>
                     <field name="dtfNOC" w="88.9mm" h="10.903mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <date/>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.1778mm"/>
                        </border>
                        <validate>
                           <picture>date{YYYY-MM-DD}</picture>
                        </validate>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <caption reserve="40.1618mm">
                           <value>
                              <text>NOC Date (YYYYMMDD)</text>
                           </value>
                           <para vAlign="middle"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">

if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);

}
</script>
                        </event>
                     </field>
                     <field name="dtfAdded" w="105.518mm" h="10.903mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="10.16mm" rightInset="1mm"/>
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <date/>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.1778mm"/>
                        </border>
                        <validate>
                           <picture>date{YYYY-MM-DD}</picture>
                        </validate>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <caption reserve="49.6626mm">
                           <value>
                              <text>Date Originally Added (YYYMMDD)</text>
                           </value>
                           <para vAlign="middle"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);

}
</script>
                        </event>
                     </field>
                     <field name="dtfAmended" w="88.9mm" h="11.03mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <date/>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.1778mm"/>
                        </border>
                        <validate>
                           <picture>date{YYYY-MM-DD}</picture>
                        </validate>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <caption reserve="40.48mm">
                           <value>
                              <text>Date Amended (YYYYMMDD)</text>
                           </value>
                           <para vAlign="middle"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">

if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);

}
</script>
                        </event>
                     </field>
                     <field name="dtfReceived" w="105.518mm" h="10.76mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                                 <?templateDesigner StyleID aped3?></border>
                              <margin/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1.0008mm" bottomInset="1.0008mm" leftInset="10.16mm" rightInset="1mm"/>
                        <para vAlign="middle" hAlign="center"/>
                        <value>
                           <date/>
                        </value>
                        <border>
                           <edge/>
                           <corner thickness="0.1778mm"/>
                        </border>
                        <validate>
                           <picture>date{YYYY-MM-DD}</picture>
                        </validate>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <caption reserve="49.3916mm">
                           <value>
                              <text>Form IV Date Received (YYYYMMDD)</text>
                           </value>
                           <para vAlign="middle"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">

if (this.rawValue != null) {

	this.resolveNode("DrugAppl.#variables.countryScript").validateDateValue(this);

}
</script>
                        </event>
                     </field>
                     <field name="txtDrugIdNumber" w="68.768mm" h="14.003mm">
                        <ui>
                           <numericEdit hScrollPolicy="off">
                              <border hand="right">
                                 <?templateDesigner StyleID aped2?>
                                 <edge/>
                              </border>
                              <margin/>
                              <comb numberOfCells="5"/>
                           </numericEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="29.292mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Drug ID</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <validate>
                           <picture>num.integer{}</picture>
                        </validate>
                        <format>
                           <picture>text{99999}</picture>
                        </format>
                     </field>
                     <field name="txtSubFormIdNumber" w="65.218mm" h="14.245mm">
                        <ui>
                           <numericEdit hScrollPolicy="off">
                              <border hand="right">
                                 <?templateDesigner StyleID aped2?>
                                 <edge/>
                              </border>
                              <margin/>
                              <comb numberOfCells="5"/>
                           </numericEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="28.8189mm">
                           <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" hAlign="center"/>
                           <value>
                              <text>Sub-Form ID</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <validate>
                           <picture>num.integer{}</picture>
                        </validate>
                        <format>
                           <picture>text{99999}</picture>
                        </format>
                     </field>
                     <field name="txtFormIdNumber" w="60.45mm" h="14.476mm">
                        <ui>
                           <numericEdit hScrollPolicy="off">
                              <border hand="right">
                                 <?templateDesigner StyleID aped2?>
                                 <edge/>
                              </border>
                              <margin/>
                              <comb numberOfCells="5"/>
                           </numericEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="28.5778mm">
                           <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                           <value>
                              <text>Form ID</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <validate>
                           <picture>num.integer{}</picture>
                        </validate>
                        <format>
                           <picture>text{99999}</picture>
                        </format>
                     </field>
                     <field name="txtNotes" w="203.2mm" minH="29.333mm">
                        <ui>
                           <textEdit multiLine="1">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm"/>
                        <caption reserve="11.11mm">
                           <value>
                              <text>Notes</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                        </border>
                        <value>
                           <text maxChars="500"/>
                        </value>
                     </field>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <fill>
                           <color value="192,192,192"/>
                        </fill>
                     </border>
                     <?templateDesigner expand 1?></subform>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <keep intact="contentArea"/>
                  <?templateDesigner expand 0?></subform>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 1?>
         </subform>
         <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
         <event activity="ready" ref="$layout" name="event__layout_ready">
            <script contentType="application/x-javascript">
var date = new Date();
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var language = cDrugApplModel.getLanguage();
var lblMan = this.resolveNode("lblMandatory");

if (language == "en") {
    lblMan.rawValue = "* denotes a mandatory field\n+ denotes a field with validation error or missing data";
} else {
    lblMan.rawValue = "* démontre un champ obligatoire\n+ démontre un champ avec une erreur de validation ou des données manquantes";
}

var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);
</script>
         </event>
         <?templateDesigner expand 0?>
      </subform>
      <subform w="100mm" name="script" layout="tb" presence="hidden">
         <bind match="none"/>
         <subform usehref=".\Fragments\CoreJavaScript.xdp#som($template.form1.core)">
            <bind/>
            <?templateDesigner expand 0?>
         </subform>
         <subform usehref=".\From Pranith\1.3\fragments\RegulatoryAddresses.xdp#som($template.form1.RegulatoryAddresses)">
            <?templateDesigner expand 0?>
         </subform>
         <subform h="50mm" name="DrugAppl" w="100mm">
            <subform layout="tb" name="config" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="general">
var cLog = script.core.util.Log;


var content = { 

formType: "DrugAppl",
formVersion: "00.01.00",

//Overrides
//NodeValidator_formatValidator: "",
Log_logLevel: cLog.LEVEL_TRACE,
Log_showExceptionDetail: true,
Log_writeToFile: false,


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform layout="tb" name="control" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="FormHandler">

/** Global Variables **/
var cLog = script.core.util.Log;
var cFormNodeManager = script.core.model.FormNodeManager;
var cResourceManager = script.core.lang.ResourceManager;
var cDrugApplModel=script.DrugAppl.model.DrugApplMain;
var cAddressHandler=script.DrugAppl.control.Part1.RegulatoryAddressHandler;
var cDrugFormulationHandler=script.DrugAppl.control.Part2.DrugFormulationHandler;



//action Global
var LANGUAGE_CHANGE="language_change";


var SCRIPT_OBJECT_NAME="FormHandler";

/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case LANGUAGE_CHANGE:
			
			//do stuff
			 cDrugApplModel.setLanguage(anEvent.getSource().rawValue);
			_updateFormLanguage();
			break;
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}



/*
* Initializes the form to it's default state
*
*
*
*/
function initialize(){

    // Check to see if the form flag is locked.

    var TRACKING_NUMBR_2 =cFormNodeManager.getFormNodeForKey("txtLocked");
    
    var TRACKING_NUMBR_2_INSTANCE = TRACKING_NUMBR_2.getNodeInstance();
    
    
    if (TRACKING_NUMBR_2_INSTANCE == null) {
      	cLog.trace ("TRACKING_NUMBR_2_INSTANCE == null");
    
    }
    else if(TRACKING_NUMBR_2_INSTANCE.caption.value.text.value == "LOCKED") {
    
    		cLog.trace ("TRACKING_NUMBR_2_INSTANCE == LOCKED");
    		

		var baseNode=cFormNodeManager.getBaseNode();
		var MODIFY_FN =cFormNodeManager.getFormNodeForKey("btnModify");
		var MODIFY_FN_INST = MODIFY_FN.getNodeInstance();
		
		var SIGNATURE_OPEN =cFormNodeManager.getFormNodeForKey("txtSignatureOpen");
    	var SIGNATURE_OPEN_INSTANCE = SIGNATURE_OPEN.getNodeInstance();
		
		var SIGNTAURE_FN = cFormNodeManager.getFormNodeForKey("sfSignatureDetails");
		var SIGNTAURE_FN_INST = SIGNTAURE_FN.getNodeInstance();
		
		var SIGNTAURE_OPTION_FN = cFormNodeManager.getFormNodeForKey("sfSigOption");
		var SIGNTAURE_OPTION_INST = SIGNTAURE_FN.getNodeInstance();
		
		var SIGNTAURE_OPTION1_FN= cFormNodeManager.getFormNodeForKey("signatureOption");
		var SIGNTAURE_OPTION1_INST = SIGNTAURE_OPTION1_FN.getNodeInstance();
		
		var CHECK_DIGITAL_ID_FN = cFormNodeManager.getFormNodeForKey("chkDigitalID");
		var CHECK_DIGITAL_ID_INST = CHECK_DIGITAL_ID_FN.getNodeInstance();
		
		var CHECK_DIGITAL_IMG_FN = cFormNodeManager.getFormNodeForKey("chkDigitalImage");
		var CHECK_DIGITAL_IMG_INST = CHECK_DIGITAL_IMG_FN.getNodeInstance();
		
		var SF_IMAGE_SIGNATURE_FN = cFormNodeManager.getFormNodeForKey("sfImgSignature");
		var SF_IMAGE_SIGNATURE_INST = SF_IMAGE_SIGNATURE_FN.getNodeInstance();
		
		var IMG_SIGNATURE_FN = cFormNodeManager.getFormNodeForKey("imgSignature");
		var IMG_SIGNATURE_INST = IMG_SIGNATURE_FN.getNodeInstance();
		
		var SIG_SIGNATURE_FN = cFormNodeManager.getFormNodeForKey("sigSignature");
		var SIG_SIGNATURE_INST = SIG_SIGNATURE_FN.getNodeInstance();
		
		
			
		// lock the form
		baseNode.lock();
		
		// unlock the Modify button
		MODIFY_FN_INST.access = "open";
		MODIFY_FN_INST.fillColor = "211,211,211";
		
		
		
		// if signature block enabled, enable
		if(SIGNATURE_OPEN_INSTANCE.caption.value.text.value == "OPEN"){
			cLog.trace ("SIGNATURE_OPEN_INSTANCE == OPEN");
			SIGNTAURE_FN_INST.access = "open";
			
			SIGNTAURE_OPTION_INST.access = "open";
			SIGNTAURE_OPTION1_INST.access = "open";
			CHECK_DIGITAL_ID_INST.access = "open";
			CHECK_DIGITAL_IMG_INST.access = "open";
			SF_IMAGE_SIGNATURE_INST.access = "open";
			IMG_SIGNATURE_INST.access = "open";
			SIG_SIGNATURE_INST.access = "open";
			
				
			
			
		}
		else {
			cLog.trace ("SIGNATURE_OPEN_INSTANCE == CLOSED");
		}		
    
    }
    
    
    cDrugApplModel.setDosageIsSelected(0);
    cDrugApplModel.setRouteIsSelected(0);
    //cLog.trace ("initialize otherDosageIsSelected : " + otherDosageIsSelected );
    cDrugApplModel.setDosageValueChanged (false);
    cDrugApplModel.setRouteValueChanged (false);
	
	var cInstructHandler=DrugAppl.control.InstructionsHandler;
	
	//DrugAppl.control.initialize();
	//cInstructHandler.initialize();
	//cAddressHandler.intialize();
	//cDrugFormulationHandler.initialize();
	_updateFormLanguage();
	cLog.trace ("initialize is ecexuted !!!!!!!!!!!!!!!!!!!");	
	
}








/********* Private functions *****/
function _updateFormLanguage()
{
    cLog.trace ("_updateFormLanguage is called !!!!!!!!!!!!!!!!!!!!!!!!!!!");
	cResourceManager.setCurrentLanguage(cDrugApplModel.getLanguage());
	cFormNodeManager.getBaseNode().updateUI();
}
</script>
                  <script contentType="application/x-javascript" name="SubmissionTypeHandler">
//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;

//Handlers
var cRegulatoryAddressHandler=script.DrugAppl.control.Part1.RegulatoryAddressHandler;
var cPart2GeneralHandler= script.DrugAppl.control.Part2.GeneralHandler; 
var cAppendix3Handler=script.DrugAppl.control.Appendix3.Appendix3Handler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;


var SCRIPT_OBJECT_NAME="SubmissionTypeHandler";


//action Global variables

var SUBMISSION_TYPE_ACTION="sub_type_selection";

//submission Type Global Variables
var CTA_TYPE="CTA";
var CTAA_TYPE="CTAA";
var NDS_TYPE="NDS";
var SNDS_TYPE="SNDS";
var ANDS_TYPE="ANDS";
var SANDS_TYPE="SANDS";
var NC_TYPE="NC";
var DIN_TYPE="DIN";
var PDC_TYPE="PDC";
var ADMIN_TYPE="ADMIN";
var VIND_TYPE="VIND";
var VINDAM_TYPE="VINDAM";
var VNDS_TYPE="VNDS";
var VSNDS_TYPE="VSNDS";
var VANDS_TYPE="VANDS";
var VSANDS_TYPE="VSANDS";
var VNC_TYPE="VNC";
var VDIN_TYPE="VDIN";
var VPDC_TYPE="VPDC";
var NB_TYPE="NB";
var OTHER_TYPE="OTHER";
var OTHER1_TYPE="OTHER";


//FORM NODES (FN)






/*
* actionPerformed- central event handler for the Header functionality in the form (Pre Part 1)
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SUBMISSION_TYPE_ACTION:
				updateSubmissionType(anEvent.getValue());
		break;	
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}




function updateSubmissionType(subTypeID){

	 
	 cApplicationModel.setSubType(subTypeID);
	 cRegulatoryAddressHandler.updateSubmissionType();
	 cPart2GeneralHandler.updateSubmissionType();
	 cAppendix3Handler.updateSubmissionType();
	
}//end function

/**
Rules
-----------------------------------------------------------------------
if CTA or CTAA or VIND or VINDAM

Visible:
	sPart1CCompanyHeader.chkNotApplicable
	sPart2Body.sCountriesManufacture.chkManufSponsor

hidden:
	sPart2Body.sCountriesManufacture.sCountries

else

hidden:
	sPart1C.sPart1CCompanyHeader.chkNotApplicable
	sPart2.sPart2Body.sCountriesManufacture.chkManufSponsor
	
 Dec 2 Done!!	

-----------------------------------------------------------------------
Q70 is only visible when the following is true

if (SNDS or SANDS or VSNDS or VSANDS) or DIN and sDrugProduct.sOptions.chkBiologic == "1" ///

visible:
	sPart2.sPart2Body.sRationale

else hidden
	sPart2.sPart2Body.sRationale

------------------------------------------------------------------------------------------
 Q71 visibility

if NC or VNC

visbile:
	sPart2.sPart2Body.sTypeOfNC

else hidden:
	sPart2.sPart2Body.sTypeOfNC

--------------------------------------------------------------------------------------------------------
// Q72 and Q73 only visible for vet submissions
if VIND or VINDAM or VNDS or VANDS or VSANDS or VNC or VDIN or VPDC

Visible
sPart2.sPart2Body.sSpeciesSubtype
sPart2.sPart2Body.ddlFoodProducing

else hidden
sPart2.sPart2Body.sSpeciesSubtype
sPart2.sPart2Body.ddlFoodProducing


-----------------------------------------------------------------------------------------------------------------
 Appendix 1 is only visible when CTA or CTA-A

if (CTAA or CTAA) AND sPart1A.sPart1ACompanyDetail.ddlCountry.rawValue == "2"

Visbile: Appendix 1

else Appendix 1 hidden

-------------------------------------------------------------
Appendix 3

if (CTAA or CTAA)

Appendix 3 visible

else
appendix3 hidden

**/

/*
*	updates the UI states for clinical trials 
*	@param isClinicalTrial- a boolean, true if setting to clinical trial state	
*
*
**/
/*function clinicalTrialUIUpdate(isClinicalTrial){


		
				
	if(isClinicalTrial){
		cUiUtil.show(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		//cUiUtil.show(PART2_MANUFACT_SPONSER_FN.getNodeInstance());
		cUiUtil.hide(MANUFACT_COUNTRIES_SF_FN.getInstance());
		xfa.host.resetData(MANUFACT_COUNTRIES_SF_FN.getFullSomExpression());
	}else{
		
		cUiUtil.hide(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		//cUiUtil.hide(PART2_MANUFACT_SPONSER_FN.getNodeInstance());
		cUiUtil.show(MANUFACT_COUNTRIES_SF_FN.getInstance());
		//could just null it
		xfa.host.resetData(PART1C_NOTAPPLICABLE_FN.getFullSomExpression());
		//xfa.host.resetData(PART2_MANUFACT_SPONSER_FN.getFullSomExpression());
	}
		
}*/
/*
* Updates the UI for vet specific submission Q72,73 only visible for these submissions
*
*
*
*
*/



/***PRIVATE**/

</script>
                  <script contentType="application/x-javascript" name="InstructionsHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
//var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
//var cStringUtil=script.core.util.StringUtil;


var SCRIPT_OBJECT_NAME="InstructionsHandler";


//action Global variables
var HIDE_INSTRUCTIONS="instruct_hide";
var SHOW_INSTRUCTIONS="instruct_show";


//FORM NODES

var INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent");

_initialize();



/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SHOW_INSTRUCTIONS:
		case HIDE_INSTRUCTIONS:	
				
			toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;
					
		default:
			throw cException.createInstance("InstructionsHandler"
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/*
* Called during form initialization. By Default instructions are hidden
*
*
*
*/
function initialize(){
	//always hide instructions on open
	toggleInstructionsVisiblity(HIDE_INSTRUCTIONS);

}



/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=INSTRUCTIONS_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_INSTRUCTIONS){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_INSTRUCTIONS){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

/***Private functionality ***/
function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(INSTRUCTIONS_SF_FN, SCRIPT_OBJECT_NAME ,"INSTRUCTIONS_SF_FN");
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <subform layout="tb" name="Part1" w="100mm">
                  <keep intact="contentArea"/>
                  <variables>
                     <script contentType="application/x-javascript" name="RegulatoryAddressHandler">
//imports
var cLog = script.core.util.Log;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;

var cFormUtil=script.DrugAppl.util.General;

var cApplicationModel=script.DrugAppl.model.DrugApplMain;

//Globals
var YES="Yes";
var NO="No";
var COUNTRY_CANADA="CA";


//Handler name
var SCRIPT_OBJECT_NAME="RegulatoryAddressHandler";

//Action Globals
var PART1A_COUNTRY_CHANGED_ACTION="parta_country_changed";
var PART1B_COUNTRY_CHANGED_ACTION="partb_country_changed";
var PART1C_COUNTRY_CHANGED_ACTION="partc_country_changed";
var SAME_AS_ACTION="same_as_above";
var ADDRESS_NA_ACTION="address_na";
var REGULATORY_CONTACT_SAMEAS_ACTION="same_as_reg_contact";
var COMPANYNAME_SAMEAS_ACTION="company_name_sameas";
var COMPANYCONTACT_SAMEAS_ACTION="company_contact_sameas";
var IMPORTER_ADDRESS_SAMEAS_ACTION="importer_sameas";




//FORM NODES (FN)

//Part A Form Nodes
var PART1A_MANUFACT_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("manufactCountry");
var PART1A_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("manufactProvince");
var PART1A_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("manufactPostalCode");

//PartB FormNoes
var PART1B_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("companyProvince");
var PART1B_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("companyPostalCode");

var PART1C_NOTAPPLICABLE_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var PART1C_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("mailingProvince");
var PART1C_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("mailingPostalCode");

//Company nodes
var COMPANY_CONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyContactSameAsManufact");
var COMPANY_ADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("companyAddressSameAsManufact");
var COMPANYADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BCompanyDetail"); //TODO PROBLEM
var COMPANYCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1BContactDetail");

//regulatory address nodes (1C)
var REG_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1CCompanyDetail");
var REGMAIL_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("mailingCountry");
var REGADDRESS_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regAddressSameAsManufacturer");
//reg mailing address contact
var NOTAPPL_CHK_FN=cFormNodeManager.getFormNodeForKey("part1CNotApplicable");
var REGCONTACT_SF_FN=cFormNodeManager.getFormNodeForKey("part1CContactDetail");
var REGCONTACT_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("regContactSameAs");
//Importer address nodes
//var PART1D_IMPORTER_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1D");
var IMPORTER_ADDRESS_SF_FN=cFormNodeManager.getFormNodeForKey("sfPart1DCompanyDetail");
var IMPORTER_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("importerSameRegulatory");   




_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
		case PART1A_COUNTRY_CHANGED_ACTION:
				_manufacturerCountryChanged(PART1A_PROVINCE_FN,PART1A_POSTAL_CODE_FN);					
			break;
		case PART1B_COUNTRY_CHANGED_ACTION:
				_applicantCountryChanged(PART1B_PROVINCE_FN,PART1B_POSTAL_CODE_FN);		
			break;
			
		case PART1C_COUNTRY_CHANGED_ACTION:
				_regulatoryAddressCountryChanged(PART1C_PROVINCE_FN,PART1C_POSTAL_CODE_FN);
			break;			
		case SAME_AS_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),NOTAPPL_CHK_FN);
			break;
		case ADDRESS_NA_ACTION:
				_regulatoryAddressStatusChanged(anEvent.getValue(),REGADDRESS_SAMEAS_CHK_FN);
			break;
		case REGULATORY_CONTACT_SAMEAS_ACTION:		
				_contactStatusChanged(anEvent.getValue(),REGCONTACT_SF_FN);		
			break;
		case COMPANYNAME_SAMEAS_ACTION:
			 	_contactStatusChanged(anEvent.getValue(),COMPANYADDRESS_SF_FN);
			 break;	
			 
		case COMPANYCONTACT_SAMEAS_ACTION:
				
				_contactStatusChanged(anEvent.getValue(),COMPANYCONTACT_SF_FN);
			 break;	
			 
		case IMPORTER_ADDRESS_SAMEAS_ACTION:
		
				_contactStatusChanged(anEvent.getValue(),IMPORTER_ADDRESS_SF_FN);
			break;	 	 
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


/*
* updates the UI based on the submission type that has been selected
*
*
*
*
*/

function updateSubmissionType(){
	var subType=cApplicationModel.getSubType();
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
			cUiUtil.show(PART1C_NOTAPPLICABLE_FN.getNodeInstance());	
			break;
		default:
			cUiUtil.hide(PART1C_NOTAPPLICABLE_FN.getNodeInstance());
		
	}//swtich

}//updateSubmissionType


function intialize(){
	
	cLog.trace("Starting initialize of adddress");
	//Company Address
	_contactStatusChanged(COMPANY_ADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue, COMPANYADDRESS_SF_FN);
	//company Address contact
	_contactStatusChanged(COMPANY_CONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue,COMPANYCONTACT_SF_FN);
	
	
	//initialize the regulatory contact
	_contactStatusChanged(REGCONTACT_SAMEAS_CHK_FN.getNodeInstance().rawValue, REGCONTACT_SF_FN);
	
	//initialize the regulatory Mailing address, need to check for NA or same as values

	var sameAsValue=REGADDRESS_SAMEAS_CHK_FN.getNodeInstance().rawValue;
	if( sameAsValue===YES){
		//clear out
		_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);	
	}else{
		_contactStatusChanged(NOTAPPL_CHK_FN.getNodeInstance().rawValue,REG_ADDRESS_SF_FN);
	}
	
}

//process the rules for importer address
/*function updateImporterAddressState(){

	//check Manufacturer address
	var manufact_country_node=PART1A_MANUFACT_COUNTRY_DDL_FN.getNodeInstance();
	var instManager=PART1D_IMPORTER_SF_FN.getInstanceManager();
	if(manufact_country_node.rawValue.toUpperCase()!=COUNTRY_CANADA){		
		if(instManager.count&lt;instManager.max || instManager.max&lt;0){
			cInstanceManagerUtil.addInstance(instManager);	
			cLog.trace("add an instance");
			_updateImporterSameAsState();
		}
	}else{
		
		cInstanceManagerUtil.clearInstances(instManager);		
	}
	if(instManager.count&gt;0){
		//check if the regulatory country has changed
		var regCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
			if(regCountry_node.rawValue===COUNTRY_CANADA){
			_updateImporterSameAsState();	
		}else{
			//force the form to show by forcing the status to NO
			cLog.trace("beforeContactStatusChanged");
			_contactStatusChanged(NO,IMPORTER_ADDRESS_SF_FN);	
			cLog.trace("after ContactStatusChanged")
		}
	}


}*/




/************ Private functions ***************************************/

function _initialize(){

	try{
	
		/*cControllerUtil.checkFormNode(PART1A_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1A_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1A_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1A_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(PART1A_MANUFACT_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"PART1A_MANUFACT_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PART1C_NOTAPPLICABLE_FN, SCRIPT_OBJECT_NAME ,"PART1C_NOTAPPLICABLE_FN");
		cControllerUtil.checkFormNode(PART1C_PROVINCE_FN, SCRIPT_OBJECT_NAME ,"PART1C_PROVINCE_FN");
		cControllerUtil.checkFormNode(PART1C_POSTAL_CODE_FN, SCRIPT_OBJECT_NAME ,"PART1C_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(REG_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"REG_ADDRESS_SF_FN");	
		cControllerUtil.checkFormNode(REGADDRESS_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGADDRESS_SAMEAS_CHK_FN");	
		cControllerUtil.checkFormNode(NOTAPPL_CHK_FN, SCRIPT_OBJECT_NAME ,"NOTAPPL_CHK_FN");	
		cControllerUtil.checkFormNode(REGCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANYADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYADDRESS_SF_FN");
		cControllerUtil.checkFormNode(REGCONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"REGCONTACT_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(COMPANYCONTACT_SF_FN, SCRIPT_OBJECT_NAME ,"COMPANYCONTACT_SF_FN");
		cControllerUtil.checkFormNode(COMPANY_CONTACT_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"COMPANY_CONTACT_SAMEAS_CHK_FN");  
		cControllerUtil.checkFormNode(IMPORTER_ADDRESS_SF_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_ADDRESS_SF_FN"); 
		cControllerUtil.checkFormNode(PART1D_IMPORTER_SF_FN, SCRIPT_OBJECT_NAME ,"PART1D_IMPORTER_SF_FN");
		cControllerUtil.checkFormNode(IMPORTER_SAMEAS_CHK_FN, SCRIPT_OBJECT_NAME ,"IMPORTER_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(REGMAIL_COUNTRY_DDL_FN, SCRIPT_OBJECT_NAME ,"REGMAIL_COUNTRY_DDL_FN");*/
		
					
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}


/*
*	relies on core delegate for updating address and state based on County
*	@param province_formNode- the province droplist to update
*	@param postal_formNode- the postal code textbox to update
*	@returns null
*
*
*
**/
function _applicantCountryChanged(province_formNode,postal_formNode){
	// Update correct labels to province/state and postal/state code and
	// clear the value entered in the postal/state code field
	province_formNode.updateUI();
	postal_formNode.updateUI();
	postal_formNode.getNodeInstance().rawValue = null;	
	
}//end fun



function _manufacturerCountryChanged(province_formNode,postal_formNode){

	//update the province, postal code labels
	_applicantCountryChanged(province_formNode,postal_formNode);
	//todelete
	//updateImporterAddressState();		
}//end fn




/*
*	updates the regulatory mailing address 
*	@param sameAs- if yes (Y) the mailing address is deleted, if No the mailing address is added
					Any other values are ignored
*
*
**/

function _regulatoryAddressStatusChanged(sameAsValue,checkbox_formNode){

	checkbox_formNode.getNodeInstance().rawValue=NO;
	_contactStatusChanged(sameAsValue,REG_ADDRESS_SF_FN);
	
	
}//end fn

/*
*	Updates the regulatory addres country
*
*
*/
function _regulatoryAddressCountryChanged(province_formNode,postal_formNode){

	cLog.trace("starting _regulatoryAddressCountryChanged");
	_applicantCountryChanged(province_formNode,postal_formNode);
	cLog.trace("after _applicantCountryChanged")
	_updateImporterSameAsState();
	cLog.trace("after _updateImporter");
	var regCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
	//updateImporterAddressState();
	
}

/*
* For the Importer same As 1D checkbox make it hidden if iC country is not canada
*
*
*
**/

function _updateImporterSameAsState(){

	var regMailCountry_node=REGMAIL_COUNTRY_DDL_FN.getNodeInstance();
	var importerSameAs_node=IMPORTER_SAMEAS_CHK_FN.getNodeInstance();
	
	//if node does not exist do not proceed
	if(!cTypeChecker.isNode(importerSameAs_node)){
		return;	}
	
	if(regMailCountry_node.rawValue!==COUNTRY_CANADA){
		importerSameAs_node.rawValue=NO; //clear the value
		cUiUtil.hide(importerSameAs_node);
	}else{
		cUiUtil.show(importerSameAs_node);
	}
}



/*
* Updates the passed node, if sameAsValue is yes, removes the subform, otherwise addit
*
*
*
*
**/
function _contactStatusChanged(sameAsValue,src_FormNode){

	cLog.trace("starting ContactStatusChanged "+src_FormNode.getSomExpression());
	var sfInstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(src_FormNode.getFullSomExpression());
	cLog.trace("Same as value is: "+sameAsValue);
	if(sameAsValue===YES){
		
		if(sfInstanceManager.count&gt;sfInstanceManager.min){
			cInstanceManagerUtil.clearInstances(sfInstanceManager);
		}
	}
	else if(sameAsValue===NO){
	
		cLog.trace("count: "+sfInstanceManager.count+"max: "+sfInstanceManager.max)
		if(sfInstanceManager.count&lt;sfInstanceManager.max || sfInstanceManager.max&lt;0){
			var temp=cInstanceManagerUtil.addInstance(sfInstanceManager);
			cLog.trace(temp);
		}
	}	
	//TO DO add a log message?
}//end fn






</script>
                     <script contentType="application/x-javascript" name="RelatedSubmissionsHandler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cStringUtil=script.core.util.StringUtil;


var SCRIPT_OBJECT_NAME="RelatedSubmissionsHandler";


//action globals

var ADD_RELATED_SUBMISSION_ACTION=		"add_related_Sub";
var REMOVE_RELATED_SUBMISSION_ACTION=	"remove_related_Sub";
var ADD_DIN_ACTION=						"add_din";
var REMOVE_DIN_ACTION=					"remove_din";


//form nodes (FN)
RELATED_SUBMISSION_SF_FN=	cFormNodeManager.getFormNodeForKey("relatedSubmissionsBody");
DIN_SF_FN=					cFormNodeManager.getFormNodeForKey("sfDIN");
relatedSubSequence

_initialize();


/* Action Handler
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_RELATED_SUBMISSION_ACTION:
				_addRelatedSubmission();		
			break;
			
		case REMOVE_RELATED_SUBMISSION_ACTION:
			_removeRelatedSubmission(anEvent.getValue());		
			break;	
			
		case	 ADD_DIN_ACTION:
			_addDIN();
		break;
		case REMOVE_DIN_ACTION:
			_removeDIN(anEvent.getValue());			
		break;
				 						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn





/****** PRIVATE FUNCTIONS *****/



/*
*  adds the related submission subform
*
**/

function _addRelatedSubmission(){
				
	var instManager=RELATED_SUBMISSION_SF_FN.getInstanceManager();
	var anInstance=cInstanceManagerUtil.addInstance(instManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeRelatedSubmission(currentInstance){

	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(instManager.count&gt;instManager.min){	
		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}
	
}//end fn


function _addDIN(){
	cLog.trace("in the add din");			
	var instManager=DIN_SF_FN.getInstanceManager();
	var anInstance=cInstanceManagerUtil.addInstance(instManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeDIN(currentInstance){

	var instManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	if(instManager.count&gt;instManager.min){	
		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	}
	
}//end fn


function _relatedSubmissionsIncrementer(){

	var count = _sfRelatedSubmissionsBody.count;
	var indexNum = sfRelatedSubmissionsBody.index + 1;

	if (indexNum &lt; 10) {
		this.rawValue = "53.0" + indexNum;
	} else { 
		this.rawValue = "53." + indexNum;
	}



}



/*** private functions ****/

function _initialize(){

	try{
		cControllerUtil.checkFormNode(RELATED_SUBMISSION_SF_FN, SCRIPT_OBJECT_NAME ,"RELATED_SUBMISSION_SF_FN");
		cControllerUtil.checkFormNode(DIN_SF_FN, SCRIPT_OBJECT_NAME ,"DIN_SF_FN");
			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}





</script>
                     <script contentType="application/x-javascript" name="DrugNotificationHandler">//imports
var cLog = script.core.util.Log;
var cAppendix3Handler=script.DrugAppl.control.Appendix3Handler;
var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;



var SCRIPT_OBJECT_NAME="DrugNotificationHandler";



var THIRD_PARTY_ACTION="1e_third_party";





function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case  THIRD_PARTY_ACTION:
				_thirdPartyChanged(anEvent.getValue());		
			break;
			
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn






/******* Private functions ****/



//simple wrapper to appendix 3 code
function _thirdPartyChanged(thirdPartyValue){

		
		cAppendix3Handler.updateAppendix2State(thirdPartyValue);
		
		
}//end fn
</script>
                     <?templateDesigner expand 1?></variables>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform h="50mm" name="Part2" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="GeneralHandler">

//imports
var cDrugFormulationHandler=script.DrugAppl.control.Part2.DrugFormulationHandler;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

//Handler name
var SCRIPT_OBJECT_NAME="Part2GeneralHandler";



//Action Globals
var ADD_SPECIES_ACTION="add_species";
var REMOVE_SPECIES_ACTION="remove_species";



//Form Nodes (FN)
//var SPECIES_QUESTION_SF_FN=cFormNodeManager.getFormNodeForKey("sfSpeciesSubtype"); //Question 72
//var SPECIES_SUBTYPE_SF_FN=cFormNodeManager.getFormNodeForKey("sfSpeciesBody");	//subform for multiple question 2



//sfSpeciesSubtype
_initialize();


/**** Public Functions ****/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_SPECIES_ACTION:
				
				//_addSpecies();
				break;
		case REMOVE_SPECIES_ACTION:
				 //_removeSpecies(anEvent.getValue());
				break;
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}





/*
* updateSubmissionType overall controller for part 2 for form visiblity based on sub type input
*
*
*
*
*/
function updateSubmissionType(){

	cDrugFormulationHandler.updateSubmissionType();
	//_updateSpeciesSubType();	
	
}//end fn


//working on Dec 5

function _updateSpeciesSubType(){
	var subType=cApplicationModel.getSubType();

	switch(subType){
		case cSubmissionTypeHandler.VIND_TYPE:
		case cSubmissionTypeHandler.VINDAM_TYPE:
		case cSubmissionTypeHandler.VNDS_TYPE:
		case cSubmissionTypeHandler.VSNDS_TYPE:
		case cSubmissionTypeHandler.VANDS_TYPE:
		case cSubmissionTypeHandler.VSANDS_TYPE:
		case cSubmissionTypeHandler.VDIN_TYPE:
		case cSubmissionTypeHandler.VPDC_TYPE:
			//_addSpeciesSubTypeQuestion();
		
		break;
		//create a subform
		default:
		////clear instances
		//_removeSpeciesSubTypeQuestion();
	
	}//end switch

}//end fn


/** Private Functions**/



function _initialize(){

	try{
	
		//cControllerUtil.checkFormNode(SPECIES_SUBTYPE_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_SUBTYPE_SF_FN");
		cControllerUtil.checkFormNode(SPECIES_QUESTION_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_QUESTION_SF_FN");
		
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}

/* Makes Q72 and Q73 visible on the form
*
*
*
*/
function _addSpeciesSubTypeQuestion(){

	
	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_QUESTION_SF_FN.getFullSomExpression());
	//if(speciesInstManager.count&lt;speciesInstManager.max){
	//	cInstanceManagerUtil.addInstance(speciesInstManager);	
	//}
}
/*
*	removes all instances of the speciesSubTypeQuestion
*	@returns -null
*
*
*
*
*/

function _removeSpeciesSubTypeQuestion(){
	//should only be one instance of this subform
	//var instManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_QUESTION_SF_FN.getFullSomExpression())
	//if(instManager.count&gt;instManager.min){
	//	cInstanceManagerUtil.clearInstances(instManager);
	//}

}//end _removeSpeciesSubTypeQuestion



function _addSpecies(){

	//TO DO handle exception?
	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_SUBTYPE_SF_FN.getFullSomExpression());
	//var anInstance=cInstanceManagerUtil.addInstance(speciesInstManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function  _removeSpecies(currentInstance){

	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	//if(speciesInstManager.count&gt;speciesInstManager.min){	
	//		cInstanceManagerUtil.removeSpecificInstance(currentInstance);
	//}else{
	
		//to do throw exception/warning?
	//}
}//end fn







</script>
                     <script contentType="application/x-javascript" name="DrugFormulationHandler">	//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cResourceManager = script.core.lang.ResourceManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;
var cSharedAppendix4Model=script.DrugAppl.model.SharedAppendix4;
var cAppendix4Handler=script.DrugAppl.control.Appendix4.Appendix4Handler;


var cNodeUtil=script.core.util.NodeUtil;
var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cFormUtil=script.DrugAppl.util.General;
///script object name
var SCRIPT_OBJECT_NAME="DrugFormulationHandler";

//action events
var ADD_FORMULATION_ACTION=					"add_formulation";
var REMOVE_FORMULATION_ACTION=				"remove_formulation";
var ADD_MANUFACT_COUNTRY_ACTION=			"add_country_manufact";
var REMOVE_MANUFACT_COUNTRY_ACTION=			"remove_country_manufact";
var ADD_ACTIVE_INGREDIENT_ACTION=			"add_active";
var REMOVE_ACTIVE_INGREDIENT_ACTION=		"remove_active";
var ADD_FORMULATION_VARIANT_ACTION=			"add_formulation_variant";
var REMOVE_FORMULATION_VARIANT_ACTION=		"remove_formulation_variant";
var ADD_NONMEDICINAL_INGREDIENT_ACTION=		"add_nonmedicinal_ingred";
var REMOVE_NONMEDICINAL_INGREDIENT_ACTION=	"remove_nonmedicinal_ingred";
var ADD_SPECIES_ACTION=						"add_species";
var REMOVE_SPECIES_ACTION=					"remove_species";
var ADD_SOURCED_MATERIAL_ACTION=			"add_sourced_material";
var REMOVE_SOURCED_MATERIAL_ACTION=			"remove_sourced_material";
var ANIMAL_HUMAN_SRC_CHANGED_ACTION=		"animal_human_source_change";


//Form Nodes (FN)
var FORMULATION_CONTAINER_FN=		cFormNodeManager.getFormNodeForKey("sfPart2");
//var MANUFACT_SPONSER_CHK_FN=			cFormNodeManager.getFormNodeForKey("chkManufSponsor");
//var MANUFACT_COUNTRIES_SF_FN=		cFormNodeManager.getFormNodeForKey("formulationCountriesManufacture");
//var A_MANUFACT_COUNTRY_SF_FN=		cFormNodeManager.getFormNodeForKey("countryManSF");
var ACTIVE_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("ingredientSubForm");
//var VARIANT_SF_FN=					cFormNodeManager.getFormNodeForKey("sfVariant");
//var NONMED_INGRED_SF_FN=				cFormNodeManager.getFormNodeForKey("sfNonMedIngredientsTbl");
//var SPECIES_SUBTYPE_SF_FN=			cFormNodeManager.getFormNodeForKey("sfSpeciesBody");	//subform for multiple question 2
//var MANUFACTURE_MATERIAL_SF_FN=		cFormNodeManager.getFormNodeForKey("sfAnimalHumanTbl");
//var SOURCED_MATERIAL_HEADER_SF_FN=	cFormNodeManager.getFormNodeForKey("materialSourceTblTitlesSF");
//var ACTIVE_INGREDIENT_NAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("activeIngredientName");	
var APPENDIX4_TXT_FN=				cFormNodeManager.getFormNodeForKey("txtAppendixID");	
							

_initialize();


/*
* function to handle all the actions for formulations
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case ADD_FORMULATION_ACTION:
				
					//_addDrugFormulation(anEvent.getValue());
				break;
		case REMOVE_FORMULATION_ACTION:
					//_removeDrugFormulation(anEvent.getValue());
				break;
		case ADD_MANUFACT_COUNTRY_ACTION:		
					//_addManufactCountry(anEvent.getValue());	
				break;
				
		case REMOVE_MANUFACT_COUNTRY_ACTION:		
					//_removeManufactCountry(anEvent.getValue());	
				break;
		case ADD_ACTIVE_INGREDIENT_ACTION:
			_addMedicinalIngredient();
			break;
		
		case REMOVE_ACTIVE_INGREDIENT_ACTION:
			//_removeMedicinalIngredient(anEvent.getValue());
			break;		
					
		case ADD_FORMULATION_VARIANT_ACTION:
			//_addFormulationVariant();
			break;			
		
		case REMOVE_FORMULATION_VARIANT_ACTION:
			//_removeFormulationVariant(anEvent.getValue());
			break;
								
		case ADD_NONMEDICINAL_INGREDIENT_ACTION:
			// _addNonMedicinalIngredient();	
			break;
		
		case REMOVE_NONMEDICINAL_INGREDIENT_ACTION:
			 //_removeNonMedicinalIngredient(anEvent.getValue());	
			break;
			
		case ADD_SPECIES_ACTION:
				//_addSpecies();
				break;
		case REMOVE_SPECIES_ACTION:
				// _removeSpecies(anEvent.getValue());
				break;			
		case ADD_SOURCED_MATERIAL_ACTION:
				//_addSourcedMaterial(anEvent.getValue());
				break;
		case REMOVE_SOURCED_MATERIAL_ACTION:
				//_removeSourcedMaterial(anEvent.getValue());
				break;
				
		case ANIMAL_HUMAN_SRC_CHANGED_ACTION:
			//_ingredientSourceChanged(anEvent.getSource(),anEvent.getValue());
			break ;			
															
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/* updates all drug formulations based on the submissionType
* right now just calls the private functions,being used as a wrapper
*
*
*
*/

function updateSubmissionType(){

	_updateAllFormulationInstances();	
	
}


function initialize(){

	//_initializeSourcedMaterialHeader();



}



/**Private Functions****/


/*
* Checks that all the global form nodes are not null
*
*
*
*/

function _initialize(){

	try{
	
		//cControllerUtil.checkFormNode(FORMULATION_CONTAINER_FN, SCRIPT_OBJECT_NAME ,"FORMULATION_CONTAINER_FN");
		//cControllerUtil.checkFormNode(MANUFACT_SPONSER_CHK_FN, SCRIPT_OBJECT_NAME ,"MANUFACT_SPONSER_CHK_FN");
		//cControllerUtil.checkFormNode(MANUFACT_COUNTRIES_SF_FN, SCRIPT_OBJECT_NAME ,"MANUFACT_COUNTRIES_SF_FN");
		//cControllerUtil.checkFormNode(A_MANUFACT_COUNTRY_SF_FN, SCRIPT_OBJECT_NAME ,"A_MANUFACT_COUNTRY_SF_FN");
		//cControllerUtil.checkFormNode(ACTIVE_INGRED_SF_FN, SCRIPT_OBJECT_NAME ,"ACTIVE_INGRED_SF_FN");
		//cControllerUtil.checkFormNode(VARIANT_SF_FN, SCRIPT_OBJECT_NAME ,"VARIANT_SF_FN");
		//cControllerUtil.checkFormNode(NONMED_INGRED_SF_FN, SCRIPT_OBJECT_NAME ,"NONMED_INGRED_SF_FN");
		//cControllerUtil.checkFormNode(SPECIES_SUBTYPE_SF_FN, SCRIPT_OBJECT_NAME ,"SPECIES_SUBTYPE_SF_FN");
		//cControllerUtil.checkFormNode(MANUFACTURE_MATERIAL_SF_FN, SCRIPT_OBJECT_NAME ,"MANUFACTURE_MATERIAL_SF_FN");
		//cControllerUtil.checkFormNode(SOURCED_MATERIAL_HEADER_SF_FN, SCRIPT_OBJECT_NAME ,"SOURCED_MATERIAL_HEADER_SF_FN");
		//cControllerUtil.checkFormNode(ACTIVE_INGREDIENT_NAME_TXT_FN, SCRIPT_OBJECT_NAME ,"ACTIVE_INGREDIENT_NAME_TXT_FN");
		//cControllerUtil.checkFormNode(APPENDIX4_TXT_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_TXT_FN");
		
				
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}


/*
*	Add a Drug formulation instance in the form
*	@param currentInstance- the current (calling) instance of a formulation object
*	@returns- null
*
*/
function _addDrugFormulation(currentInstance){

	//TO DO add code to check instance
	//var formulationInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	//var anInstance=cInstanceManagerUtil.addInstance(formulationInstManager);
	//_updateFormulationInstance(anInstance);		
	

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function _removeDrugFormulation(currentInstance){

	var formulationInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	
	cFormUtil.removeSpecificSubformInstance(formulationInstManager,currentInstance);

}//end fn



/* Updates all the formulation instances based the subType that was selected
*
*
*
*
*/

function _updateAllFormulationInstances() {

	var formulationList=FORMULATION_CONTAINER_FN.getNodeInstances();

	for(var i=0;i&lt;formulationList.length;i++){
		var oneFormulation=formulationList.item(i);
		_updateFormulationInstance(oneFormulation);
		//_updateSpeciesSubType(oneFormulation);
					
	}

}

/* Updates the state of a single formulation instance
*	
*	@formulationInstance- a single instance of the formulation subform
*
*/

function _updateFormulationInstance(formulationInstance){
	//TO DO check subform is being passed in
	//var subType= cApplicationModel.getSubType();
	//var sfCountry_an= MANUFACT_COUNTRIES_SF_FN.getNodeInstance(formulationInstance);
	//var chkSponser_an=MANUFACT_SPONSER_CHK_FN.getNodeInstance(formulationInstance);
	/*var manufactCountry_InstanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACT_COUNTRIES_SF_FN.getFullSomExpression());
	
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
			//cUiUtil.show(chkSponser_an);
			cInstanceManagerUtil.clearInstances(manufactCountry_InstanceManager);	
			break;
		default:
			//var chkSponser_an=MANUFACT_SPONSER_CHK_FN.getNodeInstance(formulationInstance);
			//cUiUtil.hide(chkSponser_an);
			chkSponser_an.rawValue=null;
			cFormUtil.addSubformInstance(manufactCountry_InstanceManager);	
			//cInstanceManagerUtil.addInstance(manufactCountry_InstanceManager);			
	}
	_updateSpeciesSubType(formulationInstance);*/
}//end fn


function _addManufactCountry(manufactCountryInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(manufactCountryInstance.somExpression);
	cFormUtil.addSubformInstance(instanceManager);
}
function _removeManufactCountry(manufactCountryInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(manufactCountryInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,manufactCountryInstance);

}


function _addMedicinalIngredient(){
	
	var instanceManager=ACTIVE_INGRED_SF_FN.getInstanceManager();
	cFormUtil.addSubformInstance(instanceManager);
}

function _removeMedicinalIngredient(ingredientInstance){
	
	//var instanceManager=ACTIVE_INGRED_SF_FN.getInstanceManager();
	//cFormUtil.removeSpecificSubformInstance(instanceManager,ingredientInstance);
}


function _addFormulationVariant(){
	//TO DO add error checking for parameter
	//var instanceManager=VARIANT_SF_FN.getInstanceManager();
	//cFormUtil.addSubformInstance(instanceManager);
}



function _removeFormulationVariant(variantInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(variantInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,variantInstance);
}



function _addNonMedicinalIngredient(){
	
	//var instanceManager=NONMED_INGRED_SF_FN.getInstanceManager();
	//cFormUtil.addSubformInstance(instanceManager);

}


function _removeNonMedicinalIngredient(nonMedInstance){
	//TO DO add error checking for parameter
	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(nonMedInstance.somExpression);
	cFormUtil.removeSpecificSubformInstance(instanceManager,nonMedInstance);
}

function _updateSpeciesSubType(formulationInstance_adobeNode){
	
	var subType=cApplicationModel.getSubType();

	switch(subType){
		case cSubmissionTypeHandler.VIND_TYPE:
		case cSubmissionTypeHandler.VINDAM_TYPE:
		case cSubmissionTypeHandler.VNDS_TYPE:
		case cSubmissionTypeHandler.VSNDS_TYPE:
		case cSubmissionTypeHandler.VANDS_TYPE:
		case cSubmissionTypeHandler.VSANDS_TYPE:
		case cSubmissionTypeHandler.VDIN_TYPE:
		case cSubmissionTypeHandler.VPDC_TYPE:
		
			cLog.trace("going to add an species instance");
			//_addSpeciesSubTypeQuestion(formulationInstance_adobeNode);
			
		break;
		//create a subform
		default:
		////clear instances
		//_removeSpeciesSubTypeQuestion(formulationInstance_adobeNode);
	
	}//end switch

}//end fn


//Adds the subspecies questions Q72
function _addSpeciesSubTypeQuestion(subformInstance_adobeNode){
	
	//to do replace instance manager directAccess
	/*var part2Body_AN=cNodeUtil.getChildNode(subformInstance_adobeNode,"sfPart2Body");
	
	var PART2_FN=cFormNodeManager.getFormNodeForSom(part2Body_AN.somExpression);
	
	var species_AN=cNodeUtil.getChildNode(part2Body_AN,"sfSpeciesSubtype");
	
	cLog.trace("part2 body "+part2Body_AN.somExpression);
	//TO DO type checking
	if(!species_AN){
		//TODO fix this if possible, should not have to hard code instance manager 
		cFormUtil.addSubformInstance(part2Body_AN._sfSpeciesSubtype);			
	}*/
	
}



function _removeSpeciesSubTypeQuestion(subformInstance_adobeNode){
	//TO DO -do not directly access the instanceManager	
	
	//var part2Body_AN=cNodeUtil.getChildNode(subformInstance_adobeNode,"sfPart2Body");
		
	//cInstanceManagerUtil.clearInstances(part2Body_AN._sfSpeciesSubtype);
		
}//end _removeSpeciesSubTypeQuestion


function _addSpecies(){

	//TO DO handle exception?
	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(SPECIES_SUBTYPE_SF_FN.getFullSomExpression());
	//cFormUtil.addSubformInstance(speciesInstManager);

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function  _removeSpecies(currentInstance){

	//var speciesInstManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);	
	//cFormUtil.removeSpecificSubformInstance(speciesInstManager,currentInstance);
}//end fn


function _initializeSourcedMaterialHeader(parentSourceMaterial_adobeNode){

	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACTURE_MATERIAL_SF_FN.getFullSomExpression());
	
		var children=parentSourceMaterial_adobeNode.nodes;
		var nodeName=SOURCED_MATERIAL_HEADER_SF_FN.getSomExpression();
		
		
		for(var i=0;i&lt;children.length;i++){
			//find the appropriate child based on the name
			var oneChild=children.item(i);
			if(oneChild.name===nodeName){
				if(instanceManager.count===0){
					cUiUtil.hide(oneChild);
				}else{
					cUiUtil.show(oneChild);
				}	
			}		
		}
	
	
	if(instanceManager.count&gt;0){
		cUiUtil.show(SOURCED_MATERIAL_HEADER_SF_FN.getNodeInstance());
	}else{
	
		cUiUtil.hide(SOURCED_MATERIAL_HEADER_SF_FN.getNodeInstance());
	}

}


function _addSourcedMaterial(parentAdobeNode){

	//var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(MANUFACTURE_MATERIAL_SF_FN.getFullSomExpression());
	//cFormUtil.addSubformInstance(instanceManager);
	//_initializeSourcedMaterialHeader(parentAdobeNode);
}//end fn


/*
*	removes the animal human source material question for drug manufacture
*	@param currentInstance- current instance of the source material subform
*	@returns- null
*
*/
function  _removeSourcedMaterial(currentInstance){

	var instanceManager=cInstanceManagerUtil.getInstanceManagerForSom(currentInstance.somExpression);
	var parentSourceMaterial_adobeNode=currentInstance.parent; //remember the parent container
	cFormUtil.removeSpecificSubformInstance(instanceManager,currentInstance);
	_initializeSourcedMaterialHeader(parentSourceMaterial_adobeNode);
}//end fn

/*
*	Updates the ingredient appendix 4 association. If animal/human sourced looks for an existing Appendix 4
*	If no appendix 4 is found it creates one. If changing to not human sourced, decrements or deletes appendix4 association 
*
*	@param- valueSrce_adobeNode- the source node that contains the new user selected value
*	@param- ingredientSrcSubform_adobeNode- the subform (ie ingredient record) for which this applies
*
**/
function _ingredientSourceChanged(valueSrce_adobeNode,ingredientSrcSubform_adobeNode){

	var humanAnimalSrcValue=valueSrce_adobeNode.rawValue;
	var ingredientName=null;
	var appendixId_adobeNode;
	//TO DO type checking
	
	var	ingredient_sf_fn=cFormNodeManager.getFormNodeForSom(ingredientSrcSubform_adobeNode.somExpression);
	var ingredientChildren=ingredient_sf_fn.getChildren();
	//find the appropriate children 
	for(var i=0;i&lt;ingredientChildren.length;i++){
		var singleIngredient_adobeNode=ingredientChildren[i].getNodeInstance();
				
		//if(ACTIVE_INGREDIENT_NAME_TXT_FN.getSomExpression()===singleIngredient_adobeNode.name){
		//	ingredientName=singleIngredient_adobeNode.rawValue;
		//}
		//if(APPENDIX4_TXT_FN.getSomExpression()===singleIngredient_adobeNode.name){
		//	appendixId_adobeNode=singleIngredient_adobeNode;
		
		//}
	}//end for
	cLog.trace(ingredientName);
	cLog.trace(cSharedAppendix4Model.entryExists(ingredientName));
	
	//1) Check if this ingredient was already assigned an appendix
		if(!appendixId_adobeNode.isNull){
			cLog.trace("decrementing an entry");
			var appendixIndex=cSharedAppendix4Model.findAppendix(appendixID);
			var entryMatch=cSharedAppendix4Model.getEntryByIndex(appendixIndex);
			//decrement the entry
			 var instances=cSharedAppendix4Model.decrementWithEntry(entryMatch[cSharedAppendix4Model.ITEM_NAME]);
			 if(instances==0){
			 
			 	cAppendix4Handler.removeAppendix4(appendixID);
			 }
			 
			//to do error handling
		}
		
	
	if(cSharedAppendix4Model.entryExists(ingredientName)&gt;-1){
		cSharedAppendix4Model.incrementWithEntry(ingredientName);
	}else{
		//create appendix4. Update the entries
		cLog.trace("ID is "+cSharedAppendix4Model.getNextAppendix4ID());
		var entry=new Array(3);
		var uniqueAppendix4ID=cAppendix4Handler.createAppendix4(ingredientName);
		entry[cSharedAppendix4Model.ITEM_NAME]=ingredientName;
		entry[cSharedAppendix4Model.INDEX_ID]=cSharedAppendix4Model.getNextAppendix4ID();
		entry[cSharedAppendix4Model.NUMBER_INSTANCES]=1;
		cSharedAppendix4Model.addEntry(entry);
	}
}



</script>
                     <script contentType="application/x-javascript" name="IDGenerator"/>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <subform h="50mm" name="Appendix2" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="Appendix2Handler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;

///script object name
var SCRIPT_OBJECT_NAME="Appendix2Handler";


var YES="Y" //to do make as a resource


var APPENDIX2_SF_FN=cFormNodeManager.getFormNodeForKey("sfAppendix2");


_initialize()


function updateAppendix2State(stateValue){

	var sfInstanceManager=APPENDIX2_SF_FN.getInstanceManager();
	if(stateValue===YES){
					
		if(sfInstanceManager.count&lt;sfInstanceManager.max || sfInstanceManager.max&lt;0){
			var temp=cInstanceManagerUtil.addInstance(sfInstanceManager);
			cLog.trace(temp);
		}	
	}
	else {
	
		if(sfInstanceManager.count&gt;sfInstanceManager.min){
			cInstanceManagerUtil.clearInstances(sfInstanceManager);
		}
	}
		

}//end fn



/**Private functions ***/


function _initialize(){

	try{
		cControllerUtil.checkFormNode(APPENDIX2_SF_FN, SCRIPT_OBJECT_NAME ,"APPENDIX2_SF_FN");
			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}

}//end fn



</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 0?></subform>
               <subform h="50mm" name="Appendix3" w="100mm">
                  <variables>
                     <script contentType="application/x-javascript" name="Appendix3Handler">//imports
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;

var cSubmissionTypeHandler=script.DrugAppl.control.SubmissionTypeHandler;
var cApplicationModel=script.DrugAppl.model.DrugApplMain;

///script object name
var SCRIPT_OBJECT_NAME="Appendix3Handler";

//Form Nodes (FN)
//var APPENDIX3_SF_FN=cFormNodeManager.getFormNodeForKey("sfAppendix3");

_initialize();



function updateSubmissionType(){

	var subType=cApplicationModel.getSubType();
	switch(subType){
		case cSubmissionTypeHandler.CTA_TYPE:
		case cSubmissionTypeHandler.CTAA_TYPE:
				//addAppendix3();			
			break;
		
		default:
			//removeAppendix3();
	}

}



function addAppendix3(){

	//TO DO check that current instance is an adobe Form Node
	//var appendix3InstManager=cInstanceManagerUtil.getInstanceManagerForSom(APPENDIX3_SF_FN.getSomExpression());
	//if(appendix3InstManager.count&lt;appendix3InstManager.max){
	//	cInstanceManagerUtil.addInstance(appendix3InstManager);
	//}

}//end fn


/*
*	Remove a Drug formulation instance in the form
*	@param currentInstance- the  instance of a formulation object to be deleted
*	@returns- null
*
*/
function removeAppendix3(){

	//TO DO check that current instance is an adobe Form Node
	//var appendix3InstManager=cInstanceManagerUtil.getInstanceManagerForSom(APPENDIX3_SF_FN.getSomExpression());

	//if(appendix3InstManager.count&gt;appendix3InstManager.min){	
	//	cInstanceManagerUtil.removeInstance(appendix3InstManager,0); //only one instance of this subform
	}
	
}//end fn




/*********************Private Functions****************************************/


function _initialize(){

	try{
	//	cControllerUtil.checkFormNode(APPENDIX3_SF_FN, SCRIPT_OBJECT_NAME ,"APPENDIX3_SF_FN");				
	}
	catch (exception)
	{
	//	cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}//end initialize
</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 0?></subform>
               <subform w="100mm" h="50mm" name="Appendix4">
                  <variables>
                     <script contentType="application/x-javascript" name="temp">
var cLog = script.core.util.Log;
//cLog.trace("Log ran");

//_initialize();
//cLog.trace("Log ran again");
//var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
//var cResourceManager = script.core.lang.ResourceManager;
//var cTypeEnforcer=script.core.util.TypeEnforcer;
//var cUiUtil=script.core.util.UiUtil;
//var cStringUtil=script.core.util.StringUtil;


//var SCRIPT_OBJECT_NAME="InstructionsHandler";


//action Global variables
var HIDE_INSTRUCTIONS="instruct_hide";
var SHOW_INSTRUCTIONS="instruct_show";

//cLog.trace("Log ran again");

var INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent");
_initialize();






function initialize(){
	//always hide instructions on open
	cLog.trace("value is in Temp:"+	INSTRUCTIONS_SF_FN);
	INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent")
	cLog.trace("value is in Temp after :"+	INSTRUCTIONS_SF_FN);
}

function _initialize(){

	try{
	
		cControllerUtil.checkFormNode(INSTRUCTIONS_SF_FN, SCRIPT_OBJECT_NAME ,"INSTRUCTIONS_SF_FN");
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                     <script contentType="application/x-javascript" name="Appendix4Handler">
var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cFormNodeManager = script.core.model.FormNodeManager; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;
var cSharedAppendix4Model=script.DrugAppl.model.SharedAppendix4;

var cFormUtil=script.DrugAppl.util.General;




//var APPENDIX4_SF_FN=					cFormNodeManager.getFormNodeForKey("sfAppendix4");	 
//var APPENDIX4_ID_TXT_FN=				cFormNodeManager.getFormNodeForKey("Appendix4ID");
//var APPENDIX4_MATERIALNAME_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtIngMatName");

///script object name
var SCRIPT_OBJECT_NAME="DrugFormulationHandler";


_initialize();

function createAppendix4(ingredientName){

	/*var instanceManager= 			cInstanceManagerUtil.getInstanceManagerForSom(APPENDIX4_SF_FN.getFullSomExpression());
	var createdAppendix4_adobeNode=	cFormUtil.addSubformInstance(instanceManager);
	var appendixID=					cSharedAppendix4Model.getNextAppendix4ID();
	
	var numberOfChildren=			createdAppendix4_adobeNode.nodes.length;
	var appendix4Children= 			createdAppendix4_adobeNode.nodes;
	var appendix4IDSom=				APPENDIX4_ID_TXT_FN.getSomExpression();
	var appendix4MaterialSom= 		APPENDIX4_MATERIALNAME_TXT_FN.getSomExpression();
	cLog.trace(appendix4MaterialSom);
	cLog.trace(ingredientName);
	
	for(var i=0;i&lt;numberOfChildren;i++){
		 if(appendix4Children.item(i).name &amp;&amp; appendix4Children.item(i).name===appendix4IDSom){
		 	appendix4Children.item(i).rawValue=appendixID; 	
		 }
		if(appendix4Children.item(i).name &amp;&amp; appendix4Children.item(i).name===appendix4MaterialSom){
		 	appendix4Children.item(i).rawValue=ingredientName;	
		 }
		
	}
	//update	*/

}



function getCurrentIDs(){
	/*var result=						new Array();
	var appendix4_array_adobeNode=	APPENDIX4_SF_FN.getNodeInstances();
	
	for(var i=0;i&lt;appendix4_array_adobeNode.length;i++){
		var appendix4ID_AdobeNode=APPENDIX4_ID_TXT_FN.getNodeInstance(appendix4_array_adobeNode);
		result.push(appendix4ID_AdobeNode.rawValue);		
	}
	return(result);*/
}


function removeAppendix4(appendixID){

	/*var appendix4_array_adobeNode=	APPENDIX4_SF_FN.getNodeInstances(null,true);
	var appendix4_array_length=		appendix4_array_adobeNode.length;
	cLog.trace( "Starting removeAppendix");
	cLog.trace("length of array"+ appendix4_array_length);
	cLog.trace(appendix4_array_adobeNode);*/
	
		//bad performance but inner loop is short
	//get all the appendixes
	/*for(var i=0;i&lt;appendix4_array_length;i++){
		var oneAppendix4=appendix4_array.item(i);		
		
		
		for(var j=0;j&lt;
		
			
	}*/


}



/**** Private Functions *****/


function _initialize(){

	/*try{
	
		cControllerUtil.checkFormNode(APPENDIX4_SF_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_SF_FN");
		cControllerUtil.checkFormNode(APPENDIX4_ID_TXT_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_ID_TXT_FN");
		cControllerUtil.checkFormNode(APPENDIX4_MATERIALNAME_TXT_FN, SCRIPT_OBJECT_NAME ,"APPENDIX4_MATERIALNAME_TXT_FN");
						
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}*/
}







</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 0?></subform>
               <?templateDesigner expand 0?></subform>
            <subform h="50mm" name="model" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="DrugApplMain">
var cLog = script.core.util.Log;
var cFormNodeManager = script.core.model.FormNodeManager;
var cResourceManager = script.core.lang.ResourceManager;
var cConfigManager=script.core.util.ConfigurationManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cControllerUtil = script.core.util.ControllerUtil;
var cDateUtil = script.core.util.DateUtil;

var initialized = false;


var LANGUAGE_NODE;
var FINALIZED_FORM_NODE;
var SUBMISSION_TYPE_NODE;
var YES="Y";


var SCRIPT_OBJECT_NAME="InstructionsHandler";

var otherDosageIsSelected = 0;
var otherRouteIsSelected = 0;
var dosageValueChanged = false;
var routeValueChanged = false;
var locked = false;
var dateString = "";
var filingDateChanged = 0;
var dateGrantedChanged = 0;
var expirationDateChanged = 0;

function setDosageIsSelected(value)
{
	
	otherDosageIsSelected = value;
	
	cLog.trace("setDosageFlag: counter: " + otherDosageIsSelected );
	
	return this.counter;
}

function getDosageIsSelected()
{
	
	return otherDosageIsSelected ;
}

function setRouteIsSelected(value)
{
	
	otherRouteIsSelected = value;
	
	cLog.trace("setRouteFlag: counter: " + otherRouteIsSelected );
	
	return this.counter;
}

function getRouteIsSelected()
{
	
	return otherRouteIsSelected ;
}

function setDosageValueChanged(value)
{
	
	dosageValueChanged = value;
	
}

function getDosageValueChanged()
{
	
	return dosageValueChanged;
	
}

function setRouteValueChanged(value)
{
	
	routeValueChanged = value;
	
}

function getRouteValueChanged()
{
	
	return routeValueChanged;
	
}

function setLocked(value)
{
	
	locked = value;
	
}

function getLocked()
{
	
	return locked;
	
}

function setDateString(dateStr){

   dateString = dateStr;
   
}

function getDateString () {
  
   return dateString;

}

function getFilingDateChanged() {

	return filingDateChanged;

}

function setFilingDateChanged(value) {

	filingDateChanged = value;

}

function getDateGrantedChanged() {

	return dateGrantedChanged;

}

function setDateGrantedChanged(value) {

	dateGrantedChanged = value;

}

function getExpirationDateChanged() {

	return expirationDateChanged;

}

function setExpirationDateChanged(value) {

	expirationDateChanged = value;

}


function getLanguage()
{
	if (!initialized)
	{
		_initialize();
	}
	return LANGUAGE_NODE.rawValue;
}

function setLanguage(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
	LANGUAGE_NODE.rawValue=langValue;
}

function getSubType()
{
	if (!initialized)
	{
		_initialize();
	}
	return  SUBMISSION_TYPE_NODE.rawValue;
}

function setSubType(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
		//TO DO Check for valid submission type values?
	 SUBMISSION_TYPE_NODE.rawValue=langValue;
}



/*Function to determine if the form has been finalized or not
*
*	@returns- boolean, true if the form has been finalized
*
*/
function isFinalized(){
	if (!initialized)
	{
		_initialize();
	}
	 //if(FINALIZED_FORM_NODE.getNodeInstance().rawValue===YES){
	 
	 //	return true;
	 //}
	 return false;
}



/**
 * Describes this object. This is implemented in all objects since their
 * toString() cannot be overridden!
 * @return the description of this object.
 */
function asString()
{		
	var bufferArray = []; // Array used to simplify comma delimiting.

	bufferArray[bufferArray.length] = "language = " + getLanguage();
	bufferArray[bufferArray.length] = "finalized = " + isFinalized();
	bufferArray[bufferArray.length] = "submission Type = " +  getSubType();
			
	return "DrugAppl[" + bufferArray.join(", ") + "]";		
}





/********PRIVATE METHODS START HERE*****/

/*
* Private function to initalize model values for the form
*
*/

function _initialize(){

    var date = new Date();

	
		
	setDateString(cDateUtil.toDateString(date));
	
	 var languageFormNode=cFormNodeManager.getFormNodeForKey("languageChoice");
	 //FINALIZED_FORM_NODE = cFormNodeManager.getFormNodeForKey("chkIsFinalized");
	 var subTypeFormNode=cFormNodeManager.getFormNodeForKey("submissionType");
	 
	  cControllerUtil.checkFormNode( subTypeFormNode,SCRIPT_OBJECT_NAME,
									  "subTypeFormNode");
									  
	 cControllerUtil.checkFormNode(languageFormNode,"form",
									  "languageFormNode");
	
	 //cControllerUtil.checkFormNode(FINALIZED_FORM_NODE,"form",
	//								  "FINALIZED_FORM_NODE");								  
									  
	 
	 LANGUAGE_NODE=languageFormNode.getNodeInstance();
	 cTypeEnforcer.checkNode(LANGUAGE_NODE, SCRIPT_OBJECT_NAME,
								"_initialize", "LANGUAGE_NODE");
								
								
	 SUBMISSION_TYPE_NODE=subTypeFormNode.getNodeInstance();
	  cTypeEnforcer.checkNode( SUBMISSION_TYPE_NODE, SCRIPT_OBJECT_NAME,
								"_initialize", " SUBMISSION_TYPE_NODE");							
								
	initialized=true;
	
	
	
	cLog.trace("initialized is executed ????????!!!!!!!");
}//end _initialize
</script>
                  <script contentType="application/x-javascript" name="AddressType"/>
                  <script contentType="application/x-javascript" name="SharedAppendix4">
var cLog = script.core.util.Log;
var cTypeChecker=script.core.util.TypeChecker;
var cAppendix4Handler=script.DrugAppl.control.Appendix4.Appendix4Handler; 


var NUMBER_INSTANCES=2;
var ITEM_NAME=0;
var INDEX_ID=1;
var APPENDIX4_PREFIX="APPENDIX_FOUR_";
var _currentAppendixNumber=0;


var _appendix4Mapping=new Array();







function intialize(){


 //TO DO
 // need to regen the mapping on open

}



/*
*  looks for an entry in the array of entries based on the ingredient Name
*	Using the ingredient name as the key to look for
*	@param itemToFind - the ingredient name string to search for
*	@returns- number -1, if value is not found, index in the array otherwise
*/

function entryExists(itemToFind){

	return (_findAppendixItem(itemToFind,ITEM_NAME));
}

/*
*  looks for an entry in the array of entries based on the appendix ID
*	
*	@param appendixID - the appendixID string to search for
*	@returns- number -1, if value is not found, index in the array otherwise
*/
function findAppendix(appendixID){

	return (_findAppendixItem(itemToFind,APPENDIX4_PREFIX));
}



function getNumberInstances(index){

	if(index&lt;_appendix4Mapping.length){
	
		return (_appendix4Mapping[index][NUMBER_INSTANCES]);
	}

	return -1;
}

/*
* Checks if there is only one instance of the mapping
*
*
*
*/
function isLastInstance(index){
	if(index&lt;_appendix4Mapping.length){
	
		var numInstance= _appendix4Mapping[index];
		if(numInstance===1){
			return true;
		}
	}
	return false;
}


function decrementWithEntry(itemToUpdate){

	var numberInstances=-1;
	var index;
	if(index=entryExists(itemToUpdate)&gt;-1){
	
			
		if(getNumberInstances(index)===1){
				_appendix4Mapping.splice(index,1);
				numberInstances=0;					
		}
		else{
				numberInstances=_appendix4Mapping[index][NUMBER_INSTANCES]--;
		}
	
	}	
	return(numberInstances);
}
//to fix

function incrementWithEntry(itemToUpdate){
	var numberInstances=-1;
	var index=entryExists(itemToUpdate);
			
	if(index&gt;-1){
		cLog.trace("IncrementEntry index"+index)
			numberInstances=_appendix4Mapping[index][NUMBER_INSTANCES]++;	
	}
	
	return(numberInstances);
}

function addEntry(entry_to_add){

	//check if an array and length is 3
	if(cTypeChecker.isArray(entry_to_add) &amp;&amp; entry_to_add.length==3 ){
		 _appendix4Mapping.push(entry_to_add);
	
	}else{
		cLog.trace("Entry not addded")
		//to do throw exception		
	}

}//end fn

function getEntryByIndex(entryIndex){

	if(entryIndex&lt; _appendix4Mapping.length){
	
		return( _appendix4Mapping[entryIndex]);
	}
	return (null);
}





/*
* Gets the next unique identifier for the appendix 4
*
*
*
**/
function getNextAppendix4ID(){
	if(!_currentAppendixNumber){	
		_initializeID();		
	}
	return(APPENDIX4_PREFIX+ _currentAppendixNumber++);
}


function parseAppendix4Number(anID){
	
	var index=anID.indexOf(APPENDIX4_PREFIX);
	if(index&gt;-1){
		var idNumber=parseInt(adID.substring(index+APPENDIX4_PREFIX.length));
		return idNumber
	}else{
	//TO DO error? handling
	}
	return(-1);
}



/****** Private functionality *****/



function _initializeID(){

	var id_array= cAppendix4Handler.getCurrentIDs();
	
	for(var i=0;i&lt;id_array.length;i++){
		var anID=id_array[i];
		var idNumber=_parseAppendix4Number(anID);
		if(anID&gt;_currentAppendixNumber){
			_currentAppendixNumber=anID;
		}
	}//endfor	
	
}//function

function _findAppendixItem(itemToFind,itemType){

	for(var index=0;index&lt;_appendix4Mapping.length;index++){
		var oneEntry=_appendix4Mapping[index];
		if(oneEntry[itemType]===itemToFind){
			cLog.trace("entry exists index"+index);
			return(index);
		}	
	}
	return(-1);

}

</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="general_en">
var content={

	lbApplTitle : 		"FORM IV PATENT LIST\nPATENTED MEDICINES (NOTICE OF COMPLIANCE) REGULATIONS\nCOMPLETE ONE FORM PER PATENT PER SUBMISSION",	
	lbHideInstruct:		"Hide Instructions",
	lbShowInstruct:		"Show Instructions",
	lbGuideDoc:         "Guidance Document",
	lbHumanH:           "Human Drugs:",
	lbVetH:             "Veterinary Drugs:",
//	lbVetBody:          "All veterinary drug submissions (including Veterinary Investigational New Drug Submissions and Amendments) are to be sent to: \n\n          Veterinary Drugs Directorate\n          Holland Cross Complex\n          11 Holland Avenue, Suite 14\n          Address Locator: 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Fax: (613) 946-1125",
//	lbInstruct:         "This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the 'Finalize' button at the bottom of the form before printing and signing.\n\nOnce finalized, the fields in the form become 'locked' (i.e. fields cannot be modified). In order to modify fields after finalizing, you must press the 'Modify' button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the 'Finalize' button again to re-validate entries.\n\nThe Guidance Document provides instructions on each field of the form. Please read it in its entirety prior to completing the form. In addition, help text will appear when you place the cursor over a field. Information for a submission already filed need only be accompanied by a copy of the letter from Health Canada requesting additional information.",lbInstructTitle:    "Where to send Drug Submission Application",
//  lbHumanBody:        "Clinical Trial Applications and Amendments must be sent directly to the applicable Directorate (see Guidance Document for addresses)\nAll other drug submission types are to be sent to:\n\n          Office of Submissions and Intellectual Property, Therapeutic Products Directorate\n          Health Canada\n          Finance Building\n          101 Tunney's Pasture Driveway\n          Address Locator: 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Fax: (613) 941-0825",
	lbVetBody:          "All veterinary drug submissions (including Veterinary Investigational New Drug Submissions and Amendments) are to be sent to: \n\n          Veterinary Drugs Directorate\n          Health Canada\n          Holland Cross Complex\n          11 Holland Avenue, Suite 14\n          Address Locator: 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Fax: (613) 946-1125",
	lbInstruct:         "This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the 'Finalize' button at the bottom of the form before printing and signing.\n\nOnce finalized, the fields in the form become 'locked' (i.e. fields cannot be modified). In order to modify fields after finalizing, you must press the 'Modify' button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the 'Finalize' button again to re-validate entries.\n\n"
	+ "Alternatively: \n\n" 
	+ "-Save, print, sign and date the completed form;\n" 
	+ "-Scan the signed form, and \n"
	+ "-Send to Health Canada in electronic format.\n\nThe Guidance Document: Patented Medicines (Notice of Compliance) Regulations provides instructions on each field of the form. Please read it in its entirety prior to completing the form. Information for a submission already filed need only be accompanied by a copy of the letter from Health Canada requesting additional information.\n\n",
    lbHumanBody:        "Clinical Trial Applications and Amendments must be sent directly to the applicable Directorate (see Guidance for Industry: Management of Drug Submissions for addresses)\nAll other drug submission types are to be sent to:\n\n          Office of Submissions and Intellectual Property, Therapeutic Products Directorate\n          Health Canada\n          Finance Building\n          101 Tunney's Pasture Driveway\n          Address Locator: 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Fax: (613) 941-0825",   
    lbInstructTitle:    "Where to send Drug Submission Application",  
   
   //lbInstruct: "DFDSFDSF"
	//add comma
	
	txtCompanyName:			"Company Name",
	txtAddress:	"Street/Suite/PO Box",
	txtCity:				"City/Town",
	ddlCountry:	"Country",
	ddlProvince:			"Province/State",
	txtPostalCode:			"Postal/ZIP Code",
	
	lblContactPersonMS:	"MANUFACTURER CONTACT",
	
	ddlSalutation:	"Salutation",
	txtGivenName:	"Given Name",
	txtInitials:	"Initials",
	txtSurname:	"Surname",
	txtTitle:	"Title",
	txtTelephone:				"Telephone No.",
	txtExtension:				"Ext.",
	txtFax:				"Fax No.",
	txtEmail:					"Email",
				
	chkSameManufacturer: "Same as Manufacturer",
	
	lblCertification:   "CERTIFICATION",
	//lblRationale:       "I certify that the information included in this Declaration is accurate and relevant to the Patented Medicines (Notice of Compliance) Regulations.",
	lblCertificationRationale:       "In accordance with paragraph 4(4)(f), I certify that the information included in this Patent List is accurate and that the patent on the list meets the eligibility requirements of subsection 4(2) or 4(3) of the Patented Medicines (Notice of Compliance) Regulations.",
	//ddlCertSalutation:   "Salutation",
	//txtCertGivenName:    "Given Name",
	//txtCertSurname:       "Surname",
	posTitle:            "Position Title",
	sigSignature:        "Signature",
	ddtSignedOn:         "Date (YYYY-MM-DD)",
}
</script>
                  <script contentType="application/x-javascript" name="general_fr">
var content={
 
	lbApplTitle : 		"FORMULAIRE IV: LISTE DES BREVETS \nRÈGLEMENT SUR LES MÉDICAMENTS BREVETÉS (AVIS DE CONFORMITÉ)\nREMPLIR UN FORMULAIRE PAR BREVET PAR DIN",
	lbHideInstruct:		"Masquer les instructions",
	lbShowInstruct:		"Afficher les instructions",
	lbGuideDoc:         "Ligne directrice",
	lbHumanH:           "Médicaments pour usage humain:",
	lbVetH:             "Médicaments pour usage vétérinaire:",
//	lbVetBody:          "Toutes les présentations de médicaments pour usage vétérinaire (y compris les présentations de drogues nouvelles de recherche pour usage vétérinaire et modifications) doivent être envoyées à l'adresse suivante: \n\n          Direction des médicaments vétérinaires\n          Complexe Holland Cross\n          11, avenue Holland, bureau 14, Indice de l'adresse : 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Télécopieur : 613-946-1125",
//	lbInstruct:         "Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton 'Finalisation' au bas du formulaire avant de l'imprimer et de le signer.\n\nUne fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton 'Modification' au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton 'Finalisation' à nouveau afin de valider les entrées.\n\nLe document d'orientation contient des directives relatives à chaque champ du formulaire. Veuillez le lire en entier avant de remplir le formulaire. De plus, du texte d'aide s'affiche lorsque vous placez le curseur sur un champ. Les renseignements relatifs à une présentation déjà déposée ne doivent être accompagnées que d'une lettre de Santé Canada demandant des renseignements supplémentaires.",
    lbInstructTitle:    "Où envoyer la demande de présentation de médicament",
//    lbHumanBody:        "Les demandes d'essai clinique et les modifications doivent être envoyées directement à la direction concernée (consulter la liste d'adresses figurant dans le document d'orientation). Tous les autres types de présentations de médicaments doivent être envoyés à:\n\n          Bureau des présentations et de la propriété intellectuelle (BPPI), Direction des produits thérapeutiques\n          Santé Canada\n          Immeuble des finances\n          101, promenade du pré Tunney\n          Indice de l’adresse : 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Télécopieur : 613-941-0825",

	lbVetBody:          "Toutes les présentations de médicaments pour usage vétérinaire (y compris les présentations de drogues nouvelles de recherche pour usage vétérinaire et modifications) doivent être envoyées à l'adresse : \n\n          Direction des médicaments vétérinaires\n          Santé Canada\n          Complexe Holland Cross\n          11, avenue Holland, bureau 14\n          Indice de l'adresse : 3000A\n          Ottawa, Ontario, Canada K1A 0K9\n          Télécopieur : 613-946-1125",
	lbInstruct:         "Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton 'Finalisation' au bas du formulaire avant de l'imprimer et de le signer.\n\nUne fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton 'Modification' au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton 'Finalisation' à nouveau afin de valider les entrées.\n\n"
	+ "Alternativement: \n\n"
	+ "-Enregistrez, imprimez, signez et datez le formulaire rempli; \n"
	+ "-Scannez le formulaire signé et \n"
	+ "-Envoyer à Santé Canada en format électronique. \n\nLa ligne directrice : Règlement sur les médicaments brevetés (avis de conformité) contient des directives relatives à chaque champ du formulaire. Veuillez le lire en entier avant de remplir le formulaire. Les renseignements relatifs à une présentation déjà déposée ne doivent être accompagnées que d'une lettre de Santé Canada demandant des renseignements supplémentaires.\n\n",
    lbHumanBody:        "Les demandes et modifications d'essais cliniques doivent être envoyées directement à la Direction applicable (voir le Guide pour l'industrie: Gestion des présentations de drogues pour les adresses). Tous les autres types de présentations de médicaments doivent être envoyés à:\n\n          Bureau des présentations et de la propriété intellectuelle (BPPI), Direction des produits thérapeutiques\n          Santé Canada\n          Immeuble des finances\n          101, promenade du pré Tunney\n          Indice de l’adresse : 0201A1\n          Ottawa, Ontario, Canada  K1A 0K9\n          Télécopieur : 613-941-0825",

	txtCompanyName:			"Nom de l'entreprise",
	txtAddress:	"Rue / bureau / C. P.",
	txtCity:				"Ville",
	ddlCountry:	"Pays",
	ddlProvince:			"Province", //"Province / État",
	txtPostalCode:			"Code postal",
	
	lblContactPersonMS:	"PERSONNE-RESSOURCE DU MANUFACTURIER",
	
	ddlSalutation:	"Le titre de civilité",
	txtGivenName:	"Prénom",
	txtInitials:	"Initiales",
	txtSurname:	"Nom",
	txtTitle:	"Titre",
	txtTelephone:				"Nº de téléphone",
	txtExtension:				"Poste",
	txtFax:				"Nº de fax",
	txtEmail:					"Courriel",
	
	chkSameManufacturer: "Même en tant que fabricant",
	
	lblCertification:   "CERTIFICATION",
	//lblRationale:       "Je certifie que les informations contenues dans cette déclaration sont exacts et pertinents sur les médicaments brevetés (avis de conformité).",
	lblCertificationRationale:       "En vertu de l'alinéa 4(4)(f), j'atteste que les renseignements inclus dans la Liste de brevets sont exacts et que le brevet décrit est admissible et conforme aux paragraphes 4(2) et 4(3) du Règlement sur les médicaments brevetés (avis de conformité). ",
	ddlCertSalutation:   "Le titre",
	//txtCertGivenName:    "Given Name",
	//txtCertSurname:       "Surname",
	posTitle:            "Titre du poste",
	sigSignature:        "Signature",
	ddtSignedOn:         "Date (AAAA-MM-JJ)",	
}
</script>
                  <script contentType="application/x-javascript" name="part1Label_en">

var content={


	lbCompanyName:		"Company Name",
	lbSubType:			"Patent List Filing Option",
	lbDIN:				"DIN",
	lbPart100:			"PART 1: PATENT FILING INFORMATION",
	lbPart200:			"PART 2: DRUG INFORMATION",
	lbSubNumber:        "Submission Number",
    lbDDLCDSA:          "Related Submission",
    lbBtnAddIngred: 	"Add an Ingredient",
    txtMedIngredient1: 	"Medicinal Ingredients",
    lbBrandName:        "Brand Name",
    lbHumanVet:         "Human/Veterinary",
    lbStrength:			"Strength per Unit",
    lbRoutes:			"Route(s) of Administration",
    lbDosage:			"Dosage Form",
    lbUses:				"Uses(s) of Medicinal Ingredient(s)",
    lbUsesReferenced:   "Uses(s) of Medicinal Ingredient(s) (for referenced product)",
    lbUses2:            "Name of Manufacturer (of referenced product)",
    lbPart3Title:       "PART 3: PATENT INFORMATION",
    lbPart3ActIngred:   "Under subsection 5(1) and 5(2) of the Regulations, address each patent listed in respect of the drug to which you directly or indirectly compare, or make reference.",
    lbPart31Title:      "Part 3.1",
    lbPart32Title:      "Part 3.2",
    lbPatentNumber:     "Patent Number (of referenced product)",
    lbExpDate:          "Referenced Patent Expiration Date (YYYYMMDD)",
    lbPart3Check:       "Check at least one of the following as approporiate:",
    lbSecPerson:        "The Second Person has obtained consent from the patent owner to the making, constructing, using or selling of the drug in Canada.",
    lbScanCopy:         "A scanned copy of the statement of consent from the patent owner is included with this submission.",
    lbSecPersonAlleg:   "The Second Person alleges that:",
    lbComply:           "Note: If you have checked any of the allegations above, you are required to comply with subsection 5(3) of the regulations.",
    lbSecPerson2:       "The Second Person accepts that the Notice of Compliance will not be issued until the declared expiration date for the above patent number.",
    lbStatMade:			"The statement made by the First Person pursuant to paragraph 4(4)(d)) is false;",
    lbPatExp:           "The patent has expired;",
	lbPatNotValid:		"The patent is not valid;",
	lbNoClaim:          "No claim for the medicinal ingredient, no claim for the formulation., no claim for the dosage form and no claim for the use of the medicinal ingredient would be infringed by the second person making, constructing, using or selling the drug for which the submission is filed.",
	lbPart4Title1:      "PART 5: MANUFACTURER INFORMATION AND CERTIFICATION",
	lbPart4Title2:      "A) MANUFACTURER INFORMATION AND CERTIFICATION",
	lbOfficeUseTitle:   "HEALTH CANADA USE ONLY",
	lbddtSignedOnOfficeUse: "Filing Date (YYYYMMDD)",
	lbnotesOfficeUse:   "Notes",
	lbFinalize:         "Finalize",
	lbModify:           "Modify",
	lbDosageDetails:    "Dosage Form Details",
	lbSelect:           "Please select from the Patent List Filing Option below, and then enter the required information.",
	lbNewIssued:        "Newly issued patent must be submitted within 30 days of grant in accordance with subsection 4(6).",
	lbCheck:            "Please check at least one of the following:*",
    lbCheckForm:        "Change in Formulation",
    lbCheckDosage:      "Change in Dosage Form",
    lbCheckUse:         "Change in Use",
    lbPatentNo:         "Patent Number*",
    lbCode:             "Code*",
    lbFiling:           "Canadian Filing Date of Patent Application (YYYY-MM-DD)*",
    lbGranted:          "Date Granted\n(YYYY-MM-DD)*",
    lbExpiration:       "Expiration Date\n(YYYY-MM-DD)*",
    lbPart4Title:       "PART 4: SERVICE IN CANADA",
    lbPart4ContactAddress: "NAME &amp; ADDRESS (FOR SERVICE IN CANADA)",
    lbPart4CompanyName: "Name",
    lbPart4StreetAddress: "Street/Suite",
    lbPart4City:        "City - Town",
    lbPart4Country:     "Country*",
    lbPart4Province:    "Province",
	lbPart4PostalCode:  "Postal Code",
	lbDateOfFilingSubmission: "Date of Filing Submission (YYYY-MM-DD)",
	lbNOCDate:          "NOC Date (YYYY-MM-DD)",
	lbDateAdded:        "Date Originally Added (YYYY-MM-DD)",
	lbDateAmended:      "Date Amended (YYYY-MM-DD)",
	lbDateReceived:     "Form IV Date Received (YYYY-MM-DD)",
	lbFormIDNumber:     "Form ID",
	lbDrugIDNumber:     "Drug ID",
	lbSubFormIdNumber:  "Sub-Form ID",
	lbDosFormDetails:   "Dosage Form Details",
	lbRoutesDetails:    "Routes Details",
	lbSameAs:           "Same Name and Address as Service in Canada",
	lbDigitalID:        "Digital ID",
	lbDigitalImg:       "Image Signature"
	
	
	
	
	
	
	
	


	
	//add comma if adding more


}
</script>
                  <script contentType="application/x-javascript" name="part1Label_fr">

var content={


	lbCompanyName:		"Nom de l'entreprise",
	lbSubType:			"Option de dépôt de demande liée à la liste de brevets",
	lbPart100:			"PARTIE  1 - RENSEIGNEMENTS SUR LA DEMANDE DE BREVET",
	lbPart200:			"PARTIE  2 - RENSEIGNEMENTS SUR LE MÉDICAMENT",
	lbSubNumber:        "Numéro de la présentation",
    lbDDLCDSA:          "Présentation connexe",
    lbBtnAddIngred: 	"Ajouter un ingrédient", 
    txtMedIngredient1: 	"Ingrédients médicinaux",
    lbBrandName:        "Marque nominative",
    lbHumanVet:         "Usage humain/Usage vétérinaire",
    lbStrength:			"Concentration par unité",
    lbRoutes:			"Voie(s) d’administration",
    lbDosage:			"Forme posologique",
    lbUses:				"Utilisation de l'ingrédient médicinal ou des ingrédients médicinaux",
    lbUsesReferenced:   "fr-Uses(s) of Medicinal Ingredient(s) (for referenced product)",
    lbUses2:            "fr-Name of Manufacturer (of referenced product)",
    lbPart3Title:       "PARTIE 3: RENSEIGNEMENTS SUR LE BREVET",
    lbPart3ActIngred:   "fr-Under subsection 5(1) and 5(2) of the Regulations, address each patent listed in respect of the drug to which you directly or indirectly compare, or make reference.",
    lbPart31Title:      "fr-Part 3.1",
    lbPart32Title:      "fr-Part 3.2",
    lbPatentNumber:     "fr-Patent Number (of referenced product)",
    lbExpDate:          "fr-Referenced Patent Expiration Date (YYYYMMDD)",
    lbPart3Check:       "fr-Check at least one of the following as approporiate:",
    lbSecPerson:        "fr-The Second Person has obtained consent from the patent owner to the making, constructing, using or selling of the drug in Canada.",
    lbScanCopy:         "fr-A scanned copy of the statement of consent from the patent owner is included with this submission.",
    lbSecPersonAlleg:   "fr-The Second Person alleges that:",
    lbComply:           "fr-Note: If you have checked any of the allegations above, you are required to comply with subsection 5(3) of the regulations.",
    lbSecPerson2:       "fr-The Second Person accepts that the Notice of Compliance will not be issued until the declared expiration date for the above patent number.",
    lbStatMade:			"fr-The statement made by the First Person pursuant to paragraph 4(4)(d)) is false;",
    lbPatExp:           "fr-The patent has expired;",
	lbPatNotValid:		"fr-The patent is not valid;",
	lbNoClaim:          "fr-No claim for the medicinal ingredient, no claim for the formulation., no claim for the dosage form and no claim for the use of the medicinal ingredient would be infringed by the second person making, constructing, using or selling the drug for which the submission is filed.",
	lbPart4Title1:      "PARTIE 5: RENSEIGNEMENTS SUR LE FABRICANT ET ATTESTATION",
	lbPart4Title2:      "A) RENSEIGNEMENTS SUR LE FABRICANT ET ATTESTATION",
	lbOfficeUseTitle:   "RÉSERVÉ À SANTÉ CANADA",
	lbddtSignedOnOfficeUse: "Date de dépôt de la demande (AAAA-MM-JJ)",
	lbnotesOfficeUse:   "Notes",
	lbFinalize:         "Finaliser",
	lbModify:           "Modifier",
	lbDosageDetails:    "Détails de la forme posologique",
	lbSelect:           "Veuillez sélectionner ci-dessous l'option de présentation d'une demande dans la liste des brevets, et entrer ensuite les renseignements demandés.",
	lbNewIssued:        "Tout brevet nouvellement délivré doit être soumis dans les trente jours suivant l'obtention de celui-ci, conformément au paragraphe 4(6).",
	lbCheck:            "Veuillez cocher au moins l'un des points suivants:*",
    lbCheckForm:        "Changement de formulation",
    lbCheckDosage:      "Changement de forme posologique",
    lbCheckUse:         "Changement d'utilisation",
    lbPatentNo:         "Numéro de brevet*",
    lbCode:             "Code*",
    lbFiling:           "Date du dépôt de la demande de brevet au Canda (AAAA-MM-JJ)*",
    lbGranted:          "Date d'obtention\n(AAAA-MM-JJ)*",
    lbExpiration:       "Date d'expiration\n(AAAA-MM-JJ)*",
    lbPart4Title:       "PARTIE 4 : SERVICE AU CANADA",
    lbPart4ContactAddress: "NOM ET ADRESSE (SERVICE AU CANADA)",
    lbPart4CompanyName: "Nom",
    lbPart4StreetAddress: "Rue/Bureau",
    lbPart4City:        "Ville",
    lbPart4Country:     "Pays*",
    lbPart4Province:    "Province", //Province / État",
	lbPart4PostalCode:  "Code postal",
	lbDateOfFilingSubmission: "La liste des brevets est déposée avec la présentation (AAAA-MM-JJ)",
	lbNOCDate:          "Date de l'avis de conformité (AC) (AAAA-MM-JJ)",
	lbDateAdded:        "Date ajoutée au début (AAAA-MM-JJ)",
	lbDateAmended:      "Date modifiée (AAAA-MM-JJ)",
	lbDateReceived:     "Date de réception du formulaire IV (AAAA-MM-JJ)",
	lbFormIDNumber:     "Numéro d'identification du formulaire",
	lbDrugIDNumber:     "Numéro d'identification du médicament (DIN)",
	lbSubFormIdNumber:  "Numéro d'identification du sous-formulaire",
	lbDosFormDetails:   "Détails de la forme posologique",
	lbRoutesDetails:    "Précédemment déposé",
	lbSameAs:           "Même nom et adresse que celle au Canada",
	lbDigitalID:        "ID électronique",
	lbDigitalImg:       "Image de signature"
	
	//add comma if adding more


}
</script>
                  <script contentType="application/x-javascript" name="pickList_en">//picklists for the form. Save value first, followed by display value
var content={

	listSubType:	[
				["CTA","Patent List is being filed with submission"],
				["CTAA","Newly issued patent for listing against previously filed submission"],
	
	],	
    
    listAmendType:	[
				["NDS","New Drug Submission (NDS)"],
				["SNDS","Supplemental New Drug Submission (SNDS)"],
				["VINDAM","Carry forward, in accordance with section 4.1(2)"],
	
	],
	
	   
	listHumanVet:	[
				["ANDS","Human"],
				["SANDS","Veterinary"],
	
	],








    listRoutes:	[
				["BLOCK_INFILTRATION","Block/Infiltration"],
				["BUCCAL","Buccal"],
				["DENTAL","Dental"],
				["DIALYSIS","Dialysis"],
				["EPIDURAL","Epidural"],
				["INHALATION","Inhalation"],
				["INTRA-ARTERIAL","Intra-Arterial"],
				["INTRA-ARTICULAR","Intra-Articular"],
				["INTRABURSAL","Intrabursal"],
				["INTRADERMAL","Intradermal"],
				["INTRAMAMMARY","Intramammary"],
				["INTRAMUSCULAR","Intramuscular"],
				["INTRAOCULAR","Intraocular"],
				["INTRAPERITONEAL","Intraperitoneal"],
				["INTRATHECAL","Intrathecal"],
				["INTRATRACHEAL","Intratracheal"],
				["INTRAVASCULAR","Intravascular"],
				["INTRAVENOUS","Intravenous"],
				["INTRAVITREAL","Intravitreal"],
				["IRRIGATION","Irrigation"],
				["NASAL","Nasal"],
				["OPHTHALMIC","Ophthalmic"],
				["ORAL","Oral"],
				["OTIC","Otic"],
				["RECTAL","Rectal"],
				["SUBCUTANEOUS","Subcutaneous"],
				["SUBLINGUAL","Sublingual"],
				["TOPICAL","Topical"],
				["TRANSDERMAL","Transdermal"],
				["URETHRAL","Urethral"],
				["VAGINAL","Vaginal"],
				["Other","Other"],	
	],
	
    listDosage:	[
					["AEROSOL","Aerosol"],
					["BOLUS","Bolus"],
					["CAPSULE","Capsule"],
					["CAPSULE_DELAYED_RELEASE","Capsule\, Delayed Release"],
					["CAPSULE_EXTENDED_RELEASE","Capsule\, Extended Release"],
					["CON","Concentrate for Solution for Injection"],
					["CREAM","Cream"],
					["EMULSION","Emulsion"],
					["GAS","Gas"],
					["GEL","Gel"],
					["IMPLANT","Implant"],
					["LOTION","Lotion"],
					["LOZENGE","Lozenge"],
					["OINTMENT","Ointment"],
					["PATCH","Patch"],
					["PATCH_EXTENDED_RELEASE","Patch\, Extended-Release"],
					["POWDER","Powder"],
					["POWDER_FOR_SOLUTION","Powder For Solution"],
					["POWDER_FOR_SUSPENSION","Powder For Suspension"],
					["SHAMPOO","Shampoo"],
					["SOLUTION","Solution"],
					["SPRAY","Spray"],
					["SPRAY_BAG-ON-VALVE","Spray\, Bag-On-Valve"],
					["SPRAY, METERED DOSE","Spray\, Metered Dose"],
					["STICK","Stick"],
					["STRIP","Strip"],
					["SUPPOSITORY","Suppository"],
					["SUSPENSION","Suspension"],
					["SYRUP","Syrup"],
					["TABLET","Tablet"],
					["TABLET_CHEWABLE","Tablet\, Chewable"],
					["TABLET_DELAYED_RELEASE","Tablet\, Delayed Release"],
					["TABLET_EXTENDED_RELEASE","Tablet\, Extended Release"],
					["TABLET_ORALLY_DISINTEGRATING","Tablet\, Orally Disintegrating"],
					["WIPE","Wipe"],
					["Other","Other"]
	],
	
	listProvince: [
	 ["","Alberta"],	
     ["VDPC","British Columbia"],
     ["","Manitoba"],
     ["NB","New Brunswick"],
     ["NFL","Newfoundland and Labrador"],
     ["NT","Northwest Territories"],
     ["NS","Nova Scotia"],
     ["","Nunavut"],
     ["","Ontario"],
     ["PEI","Prince Edward Island"],
     ["QC","Quebec"],
     ["","Saskatchewan"],
     ["","Yukon"],
	],

}//end content
</script>
                  <script contentType="application/x-javascript" name="pickList_fr">
var content={

	listSubType:	[
				["CTA","La liste des brevets est déposée avec la présentation"],
				["CTAA","Brevet nouvellement délivré en vue de l'établissement de la liste par rapport à la demande présentée antérieurement"],
	
	],	

    listAmendType:	[
				["NDS","Présentation de drogue nouvelle (PDN)"],
				["SNDS","Supplément à une présentation de drogue nouvelle (SPDN)"],
				["VINDAM","Report, conformément à l'alinéa 4.1(2)"],
	
	],
	
	listHumanVet:	[
				["ANDS","Usage humain"],
				["SANDS","Usage vétérinaire"],
	
	],
	
	listRoutes:	[
				["BLOCK_INFILTRATION","Bloc/Infiltration"],
				["BUCCAL","Buccale"],
				["DENTAL","Dentaire"],
				["DIALYSIS","Dialyse"],
				["EPIDURAL","Épidurale"],
				["INHALATION","Inhalation"],
				["INTRA-ARTERIAL","Intra-artérielle"],
				["INTRA-ARTICULAR","Intra-articulaire"],
				["INTRABURSAL","Intrabursique"],
				["INTRADERMAL","Intradermique"],
				["INTRAMAMMARY","Intramammaire"],
				["INTRAMUSCULAR","Intramusculaire"],
				["INTRAOCULAR","Intraoculaire"],
				["INTRAPERITONEAL","Intrapéritonéale"],
				["INTRATHECAL","Intrathécale"],
				["INTRATRACHEAL","Intratrachéale"],
				["INTRAVASCULAR","Intravasculaire"],
				["INTRAVENOUS","Intraveineuse"],
				["INTRAVITREAL","Intravitreuse"],
				["IRRIGATION","Irrigation"],
				["NASAL","Nasale"],
				["OPHTHALMIC","Ophtalmique"],
				["ORAL","Orale"],
				["OTIC","Otique"],
				["RECTAL","Rectale"],
				["SUBCUTANEOUS","Sous-cutanée"],
				["SUBLINGUAL","Sublinguale"],
				["TOPICAL","Topique"],
				["TRANSDERMAL ", "Transdermique"],
				["URETHRAL","Urétrale"],
				["VAGINAL","Vaginale"],
				["Other","Autre"],	
	],
	
	listDosage:	[
					["AEROSOL","Aérosol"],
					["BOLUS","Bol"],
					["CAPSULE","Capsule"],
					["CAPSULE_DELAYED_RELEASE","Capsule (à libération retardée)"],
					["CAPSULE_EXTENDED_RELEASE","Capsule (à libération prolongée)"],
					["CREAM","Crème"],
					["EMULSION","Émulsion"],
					["GAS","Gaz"],
					["GEL","Gel"],
					["IMPLANT","Implant"],
					["LOTION","Lotion"],
					["LOZENGE","Pastille"],
					["OINTMENT","Pommade"],
					["PATCH","Timbre"],
					["PATCH_EXTENDED_RELEASE","Timbre (à libération prolongée)"],
					["POWDER","Poudre"],
					["POWDER_FOR_SOLUTION","Poudre pour solution"],
					["POWDER_FOR_SUSPENSION","Poudre pour suspension"],
					["SHAMPOO","Shampoing"],
					["SOLUTION","Solution"],
					["CON","Solution concentrée pour injection"],
					["SPRAY","Pulvérisation"],
					["SPRAY_BAG-ON-VALVE","Pulvérisation\, sac-sur-valve"],
					["SPRAY, METERED DOSE","Pulvérisation\, à dose mesurée"],
					["STICK","Bâton"],
					["STRIP","Bandelette"],
					["SUPPOSITORY","Suppositoire"],
					["SUSPENSION","Suspension"],
					["SYRUP","Sirop"],
					["TABLET","Comprimé"],
					["TABLET_CHEWABLE","Comprimé (à croquer)"],
					["TABLET_DELAYED_RELEASE","Comprimé (à libération retardée)"],
					["TABLET_EXTENDED_RELEASE","Comprimé (à libération prolongée)"],
					["TABLET_ORALLY_DISINTEGRATING","Comprimé (à désintégration orale)"],
					["WIPE","Serviette"],
					["Other","Autre"]
				],
				
	
	listProvince: [
		 ["","Alberta"],	
	     ["VDPC","Colombie-britannique"],
	     ["","Manitoba"],
	     ["NB","Nouveau-brunswick"],
	     ["NFL","Terre-neuve-et-labrador"],
	     ["NT","Territoires du nord-ouest"],
	     ["NS","Nouvelle-écosse"],
	     ["","Nunavut"],
	     ["","Ontario"],
	     ["PEI","L'Île-du-Prince-Édouard"],
	     ["QC","Québec"],
	     ["","Saskatchewan"],
	     ["","Yukon"],
	],

}//end content
</script>
                  <script contentType="application/x-javascript" name="toolTip_en">

var content={

		ttSubType:				"The type of form being submitted to Health Canada.",
		ttNameManufacturer:		"Company Name: Name of the Manufacturer/Sponsor must match Item 11 in the Drug Submission Application form. It must be the full legal name with no abbreviations. ",
		ttAddIngredText:        "Ingredient Name",
		ttPatentNumber:         "Patent Number",
		ttFilingDate:           "Filing Date of Patent Application in Canada (YYYY-MM-DD)",
		ttDateGranted:			"Date Patent Granted in Canada (YYYY-MM-DD)",
		ttExpirationDate:       "Expiration Date of Patent in Canada (YYYY-MM-DD)",
		ttRelatedSubmission:    "Related Submission",
		ttACheck:               "A = Applicant is the owner of the patent",
		ttBCheck:               "B = Applicant has an exclusive licence",
		ttCCheck:				"C = Applicant has obtained the consent of the owner of the patent for the inclusion of the patent on the above patent list",
		ttDIN:					"DIN must be 8 digits.  If your DIN has only 7 digits, please enter the number 0 as the first digit.",

    ttPart4CompanyName:		"Name of company for service in Canada",
	ttPart4Street:			"Street address for service in Canada",
    ttPart4City:			"City/town for service in Canada",
    ttPart4Province:		"Province for service in Canada",
    ttPart4Postcode:		"Postal code for service in Canada",

    manufCompanyName_tt:     "Manufacturer's company name",
    manufAddress_tt:         "Manufacturer's street address",
    manufCity_tt:            "Manufacturer's city/town",
    manufCountry_tt:         "Manufacturer's country",
    manufProvince_tt:        "Manufacturer's province/state",
    manufPostalCode_tt:      "Manufacturer's postal/ZIP code",
    manufCntctSalutation_tt: "Manufacturer's contact's salutation",
    manufCntctGivenName_tt:  "Manufacturer's contact's given name",
    manufCntctInitials_tt:   "Manufacturer's contact's initials",
    manufCntctSurname_tt:    "Manufacturer's contact's surname",
    manufCntctTitle_tt:      "Manufacturer's contact's title",
    manufCntctLanguage_tt:   "Manufacturer's preferred language of communication",
    manufCntctTel_tt:        "Manufacturer's contact's telephone number",
    manufCntctTelExtn_tt:    "Manufacturer's contact's telephone extension",
    manufCntctFax_tt:        "Manufacturer's contact's fax number",
    manufCntctEmail_tt:      "Manufacturer's contact's email address",
    
    lbCertSalutation_tt: "Certifier's salutation",
    lbCertGivenName_tt: "Certifier's given name",
    lbCertInitials_tt: "Certifier's initials",
    lbCertSurname_tt: "Certifier's surname",
    lbCertTitle_tt: "Certifier's title"




}//content
</script>
                  <script contentType="application/x-javascript" name="toolTip_fr"> 

var content={

		ttSubType:				"Le type de dépôt a été présentée à Santé Canada.",
		ttNameManufacturer:		"fr-Company Name: Name of the Manufacturer/Sponsor must match Item 11 in the Drug Submission Application form. It must be the full legal name with no abbreviations. ",
		ttAddIngredText:        "Nom de l'ingrédient",
		ttPatentNumber:         "Numéro de brevet",
		ttFilingDate:           "Date du dépôt de la demande de brevet au Canda (AAAA-MM-JJ)",
		ttDateGranted:			"Date d'obtention du brevet au Canada (AAAA-MM-JJ)",
		ttExpirationDate:       "Date d'expiration du brevet au Canada (AAAA-MM-JJ)",
		ttRelatedSubmission:    "Présentation connexe",
		ttACheck:               "A = Le requérant est le propriétaire du brevet",
		ttBCheck:               "B = Le demandeur dispose d'une licence exclusive",
		ttCCheck:				"C = Demandeur a obtenu le consentement du propriétaire du brevet pour l'inclusion du brevet sur ​​la liste de brevets ci-dessus",
		ttDIN:					"DIN doit être de 8 chiffres. Si votre DIN ne dispose que de 7 chiffres, s'il vous plaît entrez le numéro 0 comme premier chiffre.",

		ttPart4CompanyName:		"Nom du fabricant pour service au Canada",
		ttPart4Street:			"Rue/bureau pour service au Canada",
        ttPart4City:			"Ville pour service au Canada",
        ttPart4Province:		"Province pour service au Canada",
        ttPart4Postcode:		"Code postal pour service au Canada",
        
    manufCompanyName_tt: "Nom de l'entreprise du fabricant",
    manufAddress_tt: "Rue/bureau du fabricant",
    manufCity_tt: "Ville/village du fabricant",
    manufCountry_tt: "Pays du fabricant",
    manufProvince_tt: "Province/état du fabricant",
    manufPostalCode_tt: "Code postal/code de zone du fabricant",
    manufCntctSalutation_tt: "Le titre de civilité de la personne-ressource du fabricant",
    manufCntctGivenName_tt: "Le prénom de la personne-ressource du fabricant",
    manufCntctInitials_tt: "Les initiales de la personne-ressource du fabricant",
    manufCntctSurname_tt: "Le nom de la personne-ressource du fabricant",
    manufCntctTitle_tt: "Le titre de la personne-ressource du fabricant",
    manufCntctLanguage_tt: "La langue de communication préférée de la personne-ressource du fabricant",
    manufCntctTel_tt: "Le numéro de téléphone de la personne-ressource du fabricant",
    manufCntctTelExtn_tt: "Le numéro de poste de la personne-ressource du fabricant",
    manufCntctFax_tt: "Le numéro de télécopieur de la personne-ressource du fabricant",
    manufCntctEmail_tt: "Le courriel de la personne-ressource du fabricant",
    		
    lbCertSalutation_tt: "Le titre de civilité du certificateur",
    lbCertGivenName_tt: "Le prénom du certificateur",
    lbCertInitials_tt: "Les initiales du certificateur",
    lbCertSurname_tt: "Le nom du certificateur",
    lbCertTitle_tt: "Le titre du certificateur"	  



}//content
</script>
                  <script contentType="application/x-javascript" name="part2Label_en">

var content={

		lbFoodAnimal:			"Is this used for the treatment of food-producing animals?",
		lbCountriesManufacture:	"Please indicate the country(ies) of manufacture for this drug product.",
						

}//content
</script>
                  <script contentType="application/x-javascript" name="part2Label_fr">

var content={

		lbFoodAnimal:	"FR_Is this used for the treatment of food-producing animals?",
		lbCountriesManufacture:	"fr_Please indicate the country(ies) of manufacture for this drug product."
		

}//content

</script>
                  <script contentType="application/x-javascript" name="part2_DrugForm_en">var content={


	lbCountryManufacture:		"Please indicate the country(ies) of manufacture for this drug product."




}

</script>
                  <script contentType="application/x-javascript" name="part2_DrugForm_fr">var content={


	lbCountryManufacture:		"fr_Please indicate the country(ies) of manufacture for this drug product."




}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="util" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="General">
//globals
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;




/*
*	Generic Instance manager checker. Core does not check if it allowed to add an instance
*	This should really be part of core
*	@param instanceManager- the instanceManager to check
*
*/

function addSubformInstance(instanceManager){
	var createdInstance=null;
	//TO DO check if instance manager exists and is an instanceManager
	if((instanceManager.count&lt;instanceManager.max) || instanceManager.max&lt;0){
		 createdInstance=cInstanceManagerUtil.addInstance(instanceManager);

	}
	return(createdInstance);
}

function removeSpecificSubformInstance(instanceManager,sfInstance){
	
	//TO DO check if instance manager exists and is an instanceManager
	if(instanceManager.count&gt;instanceManager.min){
				cInstanceManagerUtil.removeSpecificInstance(sfInstance);

	}

}



</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform w="100mm" h="50mm" name="nodeDefinitions">
               <variables>
                  <script contentType="application/x-javascript" name="Page1">
var content={

root: {
	somExpression: "xfa.form.DrugAppl",
},

sfPage1: {
	somExpression: "sfPage1",
	parentNodeKey: "root"},

sfMainHeader: {
	somExpression: "sfMainHeader",
	parentNodeKey: "sfPage1"},

lblFormTitle: {
	somExpression: "lblFormTitle",
	parentNodeKey: "sfMainHeader",
	labelKey:	   "lbApplTitle"},

languageChoice: {
	somExpression: "pageLanguage",
	parentNodeKey: "sfMainHeader"},

chkEnglish: {
	somExpression: "chkEnglish",
	parentNodeKey: "languageChoice"},

chkFrancais: {
	somExpression: "chkFrancais",
	parentNodeKey: "languageChoice"},

sfHCOnly: {
	somExpression: "sfHCOnly",
	parentNodeKey: "sfPage1"},

lblHCOnly: {
	somExpression: "lblHCOnly",
	parentNodeKey: "sfHCOnly"},

txtSAPInvoice: {
	somExpression: "txtSAPInvoice",
	parentNodeKey: "sfHCOnly"},

txtFileNumber: {
	somExpression: "txtFileNumber",
	parentNodeKey: "sfHCOnly"},

txtScreenedBy: {
	somExpression: "txtScreenedBy",
	parentNodeKey: "sfHCOnly"},

txtSAPOrder: {
	somExpression: "txtSAPOrder",
	parentNodeKey: "sfHCOnly"},

sfInstructions: {
	somExpression: "sfInstructions",
	parentNodeKey: "sfPage1"},

sButtons: {
	somExpression: "sButtons",
	parentNodeKey: "sfInstructions"},

btnViewInstructions: {
	somExpression: "btnViewInstructions",
	parentNodeKey: "sButtons",
	labelKey:		"lbShowInstruct"},
	
txtGuideDoc: {
	somExpression: "txtGuideDoc",
	parentNodeKey: "sButtons",
	labelKey:		"lbGuideDoc"},
	
txtLocked: {
	somExpression: "txtLocked",
	parentNodeKey: "sButtons"},
	

txtSignatureOpen: {
	somExpression: "txtSignatureOpen",
	parentNodeKey: "sButtons"},

btnHideInstructions: {
	somExpression: "btnHideInstructions",
	parentNodeKey: "sButtons",
	labelKey: "lbHideInstruct"},

sfInstructionsContent: {
	somExpression: "sfInstructionsContent",
	parentNodeKey: "sfInstructions"},

lblInstructions: {
	somExpression: "lblInstructions",
	parentNodeKey: "sfInstructionsContent",
	labelKey:      "lbInstruct"},

lblInstructTitle: {
	somExpression: "lblInstructTitle",
	parentNodeKey: "sfInstructionsContent",
	labelKey:      "lbInstructTitle"},

lblInstructHumanHeading: {
	somExpression: "lblInstructHumanHeading",
	parentNodeKey: "sfInstructionsContent",
	labelKey:     "lbHumanH"},

lblInstructHumanBody: {
	somExpression: "lblInstructHumanBody",
	parentNodeKey: "sfInstructionsContent",
	labelKey:      "lbHumanBody"},

lblInstructVetHeading: {
	somExpression: "lblInstructVetHeading",
	parentNodeKey: "sfInstructionsContent",
	labelKey:     "lbVetH"},

lblInstructVetBody: {
	somExpression: "lblInstructVetBody",
	parentNodeKey: "sfInstructionsContent",
	labelKey:      "lbVetBody"},

sfSubmission: {
	somExpression: "sfSubmission",
	parentNodeKey: "sfPage1"},
	
	
part1Sub: {
	somExpression: "part1Sub",
	parentNodeKey: "sfSubmission"},

lblPart100: {
	somExpression: "lblPart100",
	parentNodeKey: "part1Sub",
	labelKey:      "lbPart100"},

lblSelect: {
	somExpression: "lblSelect",
	parentNodeKey: "part1Sub",
	labelKey:      "lbSelect"},

submissionType: {
			somExpression:	"ddlSubmissionFilingStatus",
			parentNodeKey:	"part1Sub",
			labelKey:		"lbSubType",
			toolTipKey:		"ttSubType",
			pickListKey:	"listSubType"	
			},

lblSubNumber: {
	somExpression: "lblSubNumber",
	parentNodeKey: "part1Sub",
	labelKey:      "lbSubNumber"},

ddlCDSA: {
	somExpression: "ddlCDSA",
	parentNodeKey: "part1Sub",
	labelKey:      "lbDDLCDSA",
	pickListKey:   "listAmendType",
	toolTipKey:    "ttRelatedSubmission"},
	
sOptions: {
	somExpression: "sOptions",
	parentNodeKey: "part1Sub"},

txtCheckTitle: {
	somExpression: "txtTitle",
	parentNodeKey: "sOptions",
	labelKey:      "lbCheck"},

chkFormulation: {
	somExpression: "chkFormulation",
	parentNodeKey: "sOptions",
	labelKey:      "lbCheckForm"},

chkDosage: {
	somExpression: "chkDosage",
	parentNodeKey: "sOptions",
	labelKey:      "lbCheckDosage"},

chkUse: {
	somExpression: "chkUse",
	parentNodeKey: "sOptions",
	labelKey:      "lbCheckUse"},
	
lblNewIssued: {
	somExpression: "lblNewIssued",
	parentNodeKey: "part1Sub",
	labelKey:      "lbNewIssued"},

lblPart200: {
	somExpression: "lblPart200",
	parentNodeKey: "sfSubmission",
	labelKey: "lbPart200"},

sfFormulationList: {
	somExpression: "sfFormulationList",
	parentNodeKey: "sfPage1"},

sfPart2: {
	somExpression: "sfPart2",
	parentNodeKey: "sfFormulationList"},

sfPart2Body: {
	somExpression: "sfPart2Body",
	parentNodeKey: "sfPart2"},

sfActiveIngredients: {
	somExpression: "sfActiveIngredients",
	parentNodeKey: "sfPart2Body"},

part2Header: {
	somExpression: "part2Header",
	parentNodeKey: "sfActiveIngredients"},

/*blAct: {
	somExpression: "lblAct",
	parentNodeKey: "part2Header",
	labelKey: "lbAct"},*/

btnIngredHeader: {
	somExpression: "btnIngredHeader",
	parentNodeKey: "part2Header"},

btnAddIngredient: {
	somExpression: "btnAddIngredient",
	parentNodeKey: "sfSubmission",
	labelKey: "lbBtnAddIngred"},

lblEmptyOne: {
	somExpression: "lblEmptyOne",
	parentNodeKey: "part2Header"},

ingredientSubForm: {
	somExpression: "ingredientSubForm",
	parentNodeKey: "btnIngredHeader"},

txtMedIngredient1: {
	somExpression: "txtMedIngredient1",
	parentNodeKey: "ingredientSubForm",
	toolTipKey:    "ttAddIngredText"},
		
btnDelete: {
	somExpression: "btnDelete",
	parentNodeKey: "ingredientSubForm"},


lblEmpty2: {
	somExpression: "lblEmpty2",
	parentNodeKey: "part2Header"},

txtDosFormDetails: {
	somExpression: "txtDosFormDetails",
	parentNodeKey: "part2Header",
	labelKey:      "lbDosFormDetails"},


txtRoutesDetails: {
	somExpression: "txtRoutesDetails",
	parentNodeKey: "part2Header",
	labelKey:      "lbRoutesDetails"},
	
txtBrandName1: {
	somExpression: "txtBrandName1",
	parentNodeKey: "part2Header",
	labelKey: "lbBrandName"},

ddlHumanVetSecond: {
	somExpression: "ddlHumanVetSecond",
	parentNodeKey: "part2Header",
	pickListKey:   "listHumanVet",
	labelKey:      "lbHumanVet"},

txtStrength: {
	somExpression: "txtStrength",
	parentNodeKey: "part2Header",
	labelKey:      "lbStrength"},

ddlROA: {
	somExpression: "ddlROA",
	parentNodeKey: "part2Header",
	labelKey:      "lbRoutes",
	pickListKey:   "listRoutes"},

ddlDosageForm: {
	somExpression: "ddlDosageForm",
	parentNodeKey: "part2Header",
	labelKey:      "lbDosage",
	pickListKey:   "listDosage"},

txtDosageOther1: {
	somExpression: "txtOther",
	parentNodeKey: "part2Header",
	labelKey:      "lbDosageDetails"},
	
txtUses: {
	somExpression: "txtUses",
	parentNodeKey: "part2Header",
	labelKey:      "lbUses"},

sfTitles: {
	somExpression: "sfTitles",
	parentNodeKey: "sfActiveIngredients"},
	
sfNonMedIngredients: {
	somExpression: "sfNonMedIngredients",
	parentNodeKey: "sfPart2Body"},

lblPart3Title1: {
	somExpression: "lblPart3Title1",
	parentNodeKey: "sfNonMedIngredients",
	labelKey:      "lbPart3Title"},

sfAnimalHuman: {
	somExpression: "sfAnimalHuman",
	parentNodeKey: "sfPart2Body"},

lblPart3Title2: {
	somExpression: "lblPart3Title2",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbPart3Title"},

Table1: {
	somExpression: "Table1",
	parentNodeKey: "sfAnimalHuman"},

HeaderRow: {
	somExpression: "HeaderRow",
	parentNodeKey: "Table1"},

lblPatentNo: {
	somExpression: "lblPatentNo",
	parentNodeKey: "HeaderRow",
	labelKey:      "lbPatentNo"},

lblCode: {
	somExpression: "lblCode",
	parentNodeKey: "HeaderRow",
	labelKey:      "lbCode"},

lblFiling: {
	somExpression: "lblFiling",
	parentNodeKey: "HeaderRow",
	labelKey:      "lbFiling"},

lblGranted: {
	somExpression: "lblGranted",
	parentNodeKey: "HeaderRow",
	labelKey:      "lbGranted"},

lblExpiry: {
	somExpression: "lblExpiry",
	parentNodeKey: "HeaderRow",
	labelKey:      "lbExpiration"},

Row1: {
	somExpression: "Row1",
	parentNodeKey: "Table1"},

txtPatentNumber: {
	somExpression: "txtPatentNumber",
	parentNodeKey: "Row1",
	toolTipKey:    "ttPatentNumber"},

sCode: {
	somExpression: "sCode",
	parentNodeKey: "Row1"},

chkA: {
	somExpression: "chkA",
	parentNodeKey: "sCode",
	toolTipKey:    "ttACheck"},

chkB: {
	somExpression: "chkB",
	parentNodeKey: "sCode",
	toolTipKey:    "ttBCheck"},

chkC: {
	somExpression: "chkC",
	parentNodeKey: "sCode",
	toolTipKey:    "ttCCheck"},

dtfFiling: {
	somExpression: "dtfFiling",
	parentNodeKey: "Row1",
	toolTipKey:    "ttFilingDate"},

dtfGranted: {
	somExpression: "dtfGranted",
	parentNodeKey: "Row1",
	toolTipKey:    "ttDateGranted"},

dtfExpiration: {
	somExpression: "dtfExpiration",
	parentNodeKey: "Row1",
	toolTipKey:    "ttExpirationDate"},

	
lblPart3ActiveIngredients1: {
	somExpression: "lblPart3ActiveIngredients1",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbPart3ActIngred"},

lblPart3ActiveIngredients2: {
	somExpression: "lblPart3ActiveIngredients2",
	parentNodeKey: "sfAnimalHuman",
	labelKey: "lbAct"},

part3Header: {
	somExpression: "part3Header",
	parentNodeKey: "sfAnimalHuman"},

ingredHeader2: {
	somExpression: "ingredHeader2",
	parentNodeKey: "part3Header"},

btn2AddIngredient: {
	somExpression: "btn2AddIngredient",
	parentNodeKey: "ingredHeader2",
	labelKey:      "lbBtnAddIngred"},

lblActiveIngredients: {
	somExpression: "lblActiveIngredients",
	parentNodeKey: "part3Header"},

part3IngredientSubForm: {
	somExpression: "part3IngredientSubForm",
	parentNodeKey: "part3Header"},

btnDelete: {
	somExpression: "btnDelete",
	parentNodeKey: "part3IngredientSubForm"},

txtIngredient: {
	somExpression: "txtIngredient",
	parentNodeKey: "part3IngredientSubForm",
	toolTipKey:    "ttAddIngredText"},

lblActiveIngredients: {
	somExpression: "lblActiveIngredients",
	parentNodeKey: "part3Header"},
	
txtBrandName: {
	somExpression: "txtBrandName",
	parentNodeKey: "part3Header",
	labelKey: "lbBrandName"},
	
ddlHumanVetFirst: {
	somExpression: "ddlHumanVetFirst",
	parentNodeKey: "part3Header",
	pickListKey:   "listHumanVet",
	labelKey:      "lbHumanVet"},


txtStrength1: {
	somExpression: "txtStrength1",
	parentNodeKey: "part3Header",
	labelKey:      "lbStrength"},

numDIN: {
	somExpression: "numDIN",
	parentNodeKey: "part2Header",
	toolTipKey:    "ttDIN"},

ddlDosageForm1: {
	somExpression: "ddlDosageForm1",
	parentNodeKey: "part3Header",
	labelKey:      "lbDosage",
	pickListKey:   "listDosage"},

ddlROA1: {
	somExpression: "ddlROA1",
	parentNodeKey: "part3Header",
	labelKey:      "lbRoutes",
	pickListKey:   "listRoutes"},

txtDosageOther2: {
	somExpression: "txtOther",
	parentNodeKey: "part3Header",
	labelKey:      "lbDosageDetails"},
	
txtUses1: {
	somExpression: "txtUses1",
	parentNodeKey: "part3Header",
	labelKey:      "lbUsesReferenced"},

txtUses2: {
	somExpression: "txtUses2",
	parentNodeKey: "part3Header",
	labelKey:      "lbUses2"},
	
sfTitles: {
	somExpression: "sfTitles",
	parentNodeKey: "sfAnimalHuman"},

sfPart3ActiveIngredientsTbl: {
	somExpression: "sfPart3ActiveIngredientsTbl",
	parentNodeKey: "sfAnimalHuman"},

txtAppendixID: {
	somExpression: "txtAppendixID",
	parentNodeKey: "sfPart3ActiveIngredientsTbl"},
	
lblPart31Title: {
	somExpression: "lblPart31Title",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbPart31Title"},

lblPatentNumber: {
	somExpression: "lblPatentNumber",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbPatentNumber"},

ddtRefPatExpDate: {
	somExpression: "ddtRefPatExpDate",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbExpDate"},

lblPart32Title: {
	somExpression: "lblPart32Title",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbPart32Title"},

lblPart3Check: {
	somExpression: "lblPart3Check",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbPart3Check"},

sfDrugUse: {
	somExpression: "sfDrugUse",
	parentNodeKey: "sfAnimalHuman"},

part3sfOptions1: {
	somExpression: "part3sfOptions1",
	parentNodeKey: "sfDrugUse"},

chkSecPerson: {
	somExpression: "chkSecPerson",
	parentNodeKey: "part3sfOptions1",
	labelKey:      "lbSecPerson"},

sfHuman: {
	somExpression: "sfHuman",
	parentNodeKey: "part3sfOptions1"},

chkScanCopy: {
	somExpression: "chkScanCopy",
	parentNodeKey: "sfHuman",
	labelKey:      "lbScanCopy"},

chkSecPerson2: {
	somExpression: "chkSecPerson2",
	parentNodeKey: "part3sfOptions1",
	labelKey:      "lbSecPerson2"},

sfDisinfectant: {
	somExpression: "sfDisinfectant",
	parentNodeKey: "part3sfOptions1"},
	
lblSecPersonAlleg: {
	somExpression: "lblSecPersonAlleg",
	parentNodeKey: "sfAnimalHuman",
	labelKey:      "lbSecPersonAlleg"},

sfPart3Second: {
	somExpression: "sfPart3Second",
	parentNodeKey: "sfAnimalHuman"},

part3sfOptions2: {
	somExpression: "part3sfOptions2",
	parentNodeKey: "sfPart3Second"},

chkStatMade: {
	somExpression: "chkStatMade",
	parentNodeKey: "part3sfOptions2",
	labelKey:      "lbStatMade"},

chkPatentExp: {
	somExpression: "chkPatentExp",
	parentNodeKey: "part3sfOptions2",
	labelKey:      "lbPatExp"},

chkPatentNotValid: {
	somExpression: "chkPatentNotValid",
	parentNodeKey: "part3sfOptions2",
	labelKey:      "lbPatNotValid"},

chkNoClaim: {
	somExpression: "chkNoClaim",
	parentNodeKey: "part3sfOptions2",
	labelKey:      "lbNoClaim"},

txtOther: {
	somExpression: "txtOther",
	parentNodeKey: "part3sfOptions2"},

sfTypeOfNC: {
	somExpression: "sfTypeOfNC",
	parentNodeKey: "sfAnimalHuman"},

sfOptions: {
	somExpression: "sfOptions",
	parentNodeKey: "sfTypeOfNC"},

lblComply: {
	somExpression: "lblComply",
	parentNodeKey: "sfTypeOfNC",
	labelKey:      "lbComply"},

sfDosageForm: {
	somExpression: "sfDosageForm",
	parentNodeKey: "sfPart2Body"},

txtOther: {
	somExpression: "txtOther",
	parentNodeKey: "sfDosageForm"},

sfContainer: {
	somExpression: "sfContainer",
	parentNodeKey: "sfPart2Body"},

sfRouteofAdmin: {
	somExpression: "sfRouteofAdmin",
	parentNodeKey: "sfPart2Body"},

txtOther: {
	somExpression: "txtOther",
	parentNodeKey: "sfRouteofAdmin"},

sfScheduleA: {
	somExpression: "sfScheduleA",
	parentNodeKey: "sfPart2Body"},

sfIndicDosage: {
	somExpression: "sfIndicDosage",
	parentNodeKey: "sfPart2Body"},

sfLabels: {
	somExpression: "sfLabels",
	parentNodeKey: "sfPart2Body"},

sfAuthSignOfficial: {
	somExpression: "sfAuthSignOfficial",
	parentNodeKey: "sfPage1"},

sPart4: {
	somExpression: "sPart4",
	parentNodeKey: "sfAuthSignOfficial"},

lblTitle: {
	somExpression: "lblTitle",
	parentNodeKey: "sPart4",
	labelKey:      "lbPart4Title"},

///sBody: {
//	somExpression: "sBody",
//	parentNodeKey: "sPart4"},

Address_Block: {
	somExpression: "Address_Block",
	parentNodeKey: "sPart4"},

sPart1BCompanyHeader: {
	somExpression: "sPart1BCompanyHeader",
	parentNodeKey: "Address_Block"},

lblContactAddress: {
	somExpression: "lblContactAddress",
	parentNodeKey: "sPart4",
	labelKey:     "lbPart4ContactAddress"},

sPart1BCompanyDetail: {
	somExpression: "sPart1BCompanyDetail",
	parentNodeKey: "Address_Block"},

txtCompanyNamePart4: {
	somExpression: "txtCompanyName",
	parentNodeKey: "sPart1BCompanyDetail",
	labelKey:      "lbPart4CompanyName",
	toolTipKey:		"ttPart4CompanyName"},

txtAddressPart4: {
	somExpression: "txtAddress",
	parentNodeKey: "sPart1BCompanyDetail",
	labelKey:      "lbPart4StreetAddress",
	toolTipKey:		"ttPart4Street"},

txtCityPart4: {
	somExpression: "txtCity",
	parentNodeKey: "sPart1BCompanyDetail",
	labelKey:      "lbPart4City",
	toolTipKey:		"ttPart4City"},

ddlCountryPart4: {
	somExpression: "ddlCountry",
	parentNodeKey: "sPart1BCompanyDetail",
	labelKey:      "lbPart4Country"},

ddlProvincePart4: {
	somExpression: "ddlProvince",
	parentNodeKey: "sPart1BCompanyDetail",
	labelKey:      "lbPart4Province",
	pickListKey:   "listProvince",
	toolTipKey:		"ttPart4Province"},

txtPostalCodePart4: {
	somExpression: "txtPostalCode",
	parentNodeKey: "sPart1BCompanyDetail",
	labelKey:      "lbPart4PostalCode",
	toolTipKey:		"ttPart4Postcode"},
	
sPart5Title: {
	somExpression: "sPart5Title",
	parentNodeKey: "sfPart1ACompanyDetail"},
	
lblPart4Title1: {
	somExpression: "lblPart4Title1",
	parentNodeKey: "sPart5Title",
	labelKey:      "lbPart4Title1"},

chkSameManufacturer: {
	somExpression: "chkSameManufacturer",
	parentNodeKey: "sPart5Title",
	labelKey:      "lbSameAs"},

lblPart4Title2: {
	somExpression: "lblPart4Title2",
	parentNodeKey: "sfAuthSignOfficial",
	labelKey:      "lbPart4Title2"},

sfPart1ACompanyDetail: {
	somExpression: "sfPart1ACompanyDetail",
	parentNodeKey: "sfAuthSignOfficial"},
	
sNameAndAddress: {
	somExpression: "sNameAndAddress",
	parentNodeKey: "sfPart1ACompanyDetail"},

txtCompanyName: {
	somExpression: "txtCompanyName",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "txtCompanyName",
	toolTipKey:	   "manufCompanyName_tt"},

txtAddress: {
	somExpression: "txtAddress",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "txtAddress",
	toolTipKey:    "manufAddress_tt"},

txtCity: {
	somExpression: "txtCity",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "txtCity",
	toolTipKey:    "manufCity_tt"},

Country: {
	somExpression: "ddlCountry",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "ddlCountry",
	toolTipKey:    "manufCountry_tt"},

ddlProvince: {
	somExpression: "ddlProvince",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "ddlProvince",
	toolTipKey:    "manufProvince_tt"},

ddlProvinceFr: {
	somExpression: "ddlProvinceFr",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "lbPart4Province"},
	
txtPostalCode: {
	somExpression: "txtPostalCode",
	parentNodeKey: "sNameAndAddress",
	labelKey:      "txtPostalCode",
	toolTipKey: "manufPostalCode_tt"},

lblContactPersonMS: {
	somExpression: "lblContactPersonMS",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "lblContactPersonMS"},

ddlSalutation: {
	somExpression: "ddlSalutation",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "ddlSalutation",
	toolTipKey:	   "manufCntctSalutation_tt"},

txtGivenName: {
	somExpression: "txtGivenName",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtGivenName",
	toolTipKey:    "manufCntctGivenName_tt"},

txtInitials: {
	somExpression: "txtInitials",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtInitials",
	toolTipKey:    "manufCntctInitials_tt"},

txtSurname: {
	somExpression: "txtSurname",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtSurname",
	toolTipKey:    "manufCntctSurname_tt"},

txtTitle: {
	somExpression: "txtTitle",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtTitle",
	toolTipKey:    "manufCntctTitle_tt"},

ddlLangPref: {
	somExpression: "ddlLangPref",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "ddlLangPref",
	toolTipKey:    "manufCntctLanguage_tt"},

txtTelephone: {
	somExpression: "txtTelephone",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtTelephone",
    toolTipKey:    "manufCntctTel_tt"},

txtExtension: {
	somExpression: "txtExtension",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtExtension",
    toolTipKey:    "manufCntctTelExtn_tt"},

txtFax: {
	somExpression: "txtFax",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtFax",
    toolTipKey:    "manufCntctFax_tt"},

txtEmail: {
	somExpression: "txtEmail",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtEmail",
    toolTipKey:    "manufCntctEmail_tt"},

lblCertification: {
	somExpression: "lblCertification",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "lblCertification"},

lblCertificationRationale: {
	somExpression: "lblCertificationRationale",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "lblCertificationRationale"},

ddlCertSalutation: {
	somExpression: "ddlCertSalutation",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "ddlSalutation",
	toolTipKey:	   "lbCertSalutation_tt"},

txtCertGivenName: {
	somExpression: "txtCertGivenName",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtGivenName",
	toolTipKey:    "lbCertGivenName_tt"},

txtCertSurname: {
	somExpression: "txtCertSurname",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "txtSurname",
	toolTipKey:    "lbCertSurname_tt"},

posTitle: {
	somExpression: "posTitle",
	parentNodeKey: "sfPart1ACompanyDetail",
	labelKey:      "posTitle",
	toolTipKey:    "lbCertTitle_tt"},
	
sfSignatureDetails: {
	somExpression: "sfSignatureDetails",
	parentNodeKey: "sfAuthSignOfficial"},

sfSigOption: {
	somExpression: "sfSigOption",
	parentNodeKey: "sfSignatureDetails"},

signatureOption: {
	somExpression: "signatureOption",
	parentNodeKey: "sfSigOption"},

chkDigitalID: {
	somExpression: "chkDigitalID",
	parentNodeKey: "signatureOption",
	labelKey:      "lbDigitalID"},

chkDigitalImage: {
	somExpression: "chkDigitalImage",
	parentNodeKey: "signatureOption",
	labelKey:      "lbDigitalImg"},

sfSignature: {
	somExpression: "sfSignature",
	parentNodeKey: "sfSignatureDetails"},

sfImgSignature: {
	somExpression: "sfImgSignature",
	parentNodeKey: "sfSignature"},

imgSignature: {
	somExpression: "imgSignature",
	parentNodeKey: "sfImgSignature",
	labelKey:      "sigSignature"},

rctSignature: {
	somExpression: "rctSignature",
	parentNodeKey: "sfImgSignature"},

sigSignature: {
	somExpression: "sigSignature",
	parentNodeKey: "sfSignatureDetails",
	labelKey:      "sigSignature"},

ddtSignedOn: {
	somExpression: "ddtSignedOn",
	parentNodeKey: "sfSignatureDetails",
	labelKey:      "ddtSignedOn"},
			
sfFinalizeButton: {
	somExpression: "sfFinalizeButton",
	parentNodeKey: "sfAuthSignOfficial"},
	
btnFinalize: {
	somExpression: "btnFinalize",
	parentNodeKey: "sfFinalizeButton",
	labelKey:      "lbFinalize"},

Text2: {
	somExpression: "Text2",
	parentNodeKey: "sfFinalizeButton"},

btnModify: {
	somExpression: "btnModify",
	parentNodeKey: "sfFinalizeButton",
	labelKey:      "lbModify"},
	
lblEmptySpace: {
	somExpression: "lblEmptySpace",
	parentNodeKey: "sfFinalizeButton"},
	
officeUseOnly: {
	somExpression: "officeUseOnly",
	parentNodeKey: "sfFinalizeButton"},

lblOfficeUseTitle: {
	somExpression: "lblOfficeUseTitle",
	parentNodeKey: "officeUseOnly",
	labelKey:      "lbOfficeUseTitle"},

lblSubNumberOfficeUse: {
	somExpression: "lblSubNumberOfficeUse",
	parentNodeKey: "officeUseOnly",
	labelKey:      "lbSubNumber"},

ddtSignedOnOfficeUse: {
	somExpression: "ddtSignedOnOfficeUse",
	parentNodeKey: "officeUseOnly",
	labelKey:     "lbddtSignedOnOfficeUse"},

notesOfficeUse: {
	somExpression: "notesOfficeUse",
	parentNodeKey: "officeUseOnly",
	labelKey:      "lbnotesOfficeUse"},
	
	sHCOnly: {
	somExpression: "sHCOnly",
	parentNodeKey: "sfFinalizeButton"},

lblHCTitle: {
	somExpression: "lblTitle",
	parentNodeKey: "sHCOnly",
	labelKey:      "lbOfficeUseTitle"},

sBody: {
	somExpression: "sBody",
	parentNodeKey: "sHCOnly"},

txtSubmissionNo: {
	somExpression: "txtSubmissionNo",
	parentNodeKey: "sBody",
	labelKey:      "lbSubNumber"},

dtfSubmission: {
	somExpression: "dtfSubmission",
	parentNodeKey: "sBody",
	labelKey:      "lbDateOfFilingSubmission"},

dtfNOC: {
	somExpression: "dtfNOC",
	parentNodeKey: "sBody",
	labelKey:      "lbNOCDate"},

dtfAdded: {
	somExpression: "dtfAdded",
	parentNodeKey: "sBody",
	labelKey:      "lbDateAdded"},

dtfAmended: {
	somExpression: "dtfAmended",
	parentNodeKey: "sBody",
	labelKey:      "lbDateAmended"},

dtfReceived: {
	somExpression: "dtfReceived",
	parentNodeKey: "sBody",
	labelKey:      "lbDateReceived"},

txtFormIdNumber: {
	somExpression: "txtFormIdNumber",
	parentNodeKey: "sBody",
	labelKey:      "lbFormIDNumber"},

txtDrugIdNumber: {
	somExpression: "txtDrugIdNumber",
	parentNodeKey: "sBody",
	labelKey:      "lbDrugIDNumber"},

txtSubFormIdNumber: {
	somExpression: "txtSubFormIdNumber",
	parentNodeKey: "sBody",
	labelKey:      "lbSubFormIdNumber"},

txtNotes: {
	somExpression: "txtNotes",
	parentNodeKey: "sBody",
	labelKey:      "lbnotesOfficeUse"},
	
script: {
	somExpression: "script",
	parentNodeKey: "root"},

core: {
	somExpression: "core",
	parentNodeKey: "script"},

config: {
	somExpression: "config",
	parentNodeKey: "core"},

encode: {
	somExpression: "encode",
	parentNodeKey: "core"},

event: {
	somExpression: "event",
	parentNodeKey: "core"},

lang: {
	somExpression: "lang",
	parentNodeKey: "core"},

model: {
	somExpression: "model",
	parentNodeKey: "core"},

delegate: {
	somExpression: "delegate",
	parentNodeKey: "model"},

factory: {
	somExpression: "factory",
	parentNodeKey: "model"},

resources: {
	somExpression: "resources",
	parentNodeKey: "core"},

service: {
	somExpression: "service",
	parentNodeKey: "core"},

test: {
	somExpression: "test",
	parentNodeKey: "core"},

util: {
	somExpression: "util",
	parentNodeKey: "core"},

validation: {
	somExpression: "validation",
	parentNodeKey: "core"},

zip: {
	somExpression: "zip",
	parentNodeKey: "core"},

RegulatoryAddresses: {
	somExpression: "RegulatoryAddresses",
	parentNodeKey: "script"},

control: {
	somExpression: "control",
	parentNodeKey: "RegulatoryAddresses"},

nodeDefinitions: {
	somExpression: "nodeDefinitions",
	parentNodeKey: "RegulatoryAddresses"},

resources: {
	somExpression: "resources",
	parentNodeKey: "RegulatoryAddresses"},

DrugAppl: {
	somExpression: "DrugAppl",
	parentNodeKey: "script"},

config: {
	somExpression: "config",
	parentNodeKey: "DrugAppl"},

control: {
	somExpression: "control",
	parentNodeKey: "DrugAppl"},

Part1: {
	somExpression: "Part1",
	parentNodeKey: "control"},

Part2: {
	somExpression: "Part2",
	parentNodeKey: "control"},

Appendix2: {
	somExpression: "Appendix2",
	parentNodeKey: "control"},

Appendix3: {
	somExpression: "Appendix3",
	parentNodeKey: "control"},

Appendix4: {
	somExpression: "Appendix4",
	parentNodeKey: "control"},

model: {
	somExpression: "model",
	parentNodeKey: "DrugAppl"},

nodeDefinitions: {
	somExpression: "nodeDefinitions",
	parentNodeKey: "DrugAppl"},

resources: {
	somExpression: "resources",
	parentNodeKey: "DrugAppl"},

util: {
	somExpression: "util",
	parentNodeKey: "DrugAppl"}
	
	}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <variables>
               <script contentType="application/x-javascript" name="validation">

 
 function countDigits (str) {

	var chr = ""
	var nDigits = 0

	for (position = 0; position &lt; str.length; position++){
   		chr = str.charAt(position)
   		if (chr &gt;= "0" &amp;&amp; chr &lt;= "9") nDigits++;
	}

	
	
	return nDigits;

}

 
 
</script>
               <?templateDesigner expand 1?></variables>
            <?templateDesigner expand 1?></subform>
         <variables>
            <script usehref=".\Fragments\Accessibility.xdp#som($template.form1.script.#variables.Accessibility)"/>
            <?templateDesigner expand 1?></variables>
         <?templateDesigner expand 1?></subform>
      <variables>
         <script contentType="application/x-javascript" name="Globals">var txtCountry = "";
var txtSubType = "";

var cLog = script.core.util.Log;

var isFinalized = false;

var finalizedDate = new Date();

var filingDate = new Date();
var grantedDate = new Date();
var expirationDate = new Date();

var isCountrySelectedFirstTime = false;
var isCountrySelectedChanged = false;
var countryBoundItemBefore = "";
var countryBoundItemAfter = "";
var changedEvent = false;


var provinceSelectedIndex = -1;
var canadaProvinceSelectedIndex = -1;
var isSignatureOpen = false;

function genUniqueID()
{
	if(!this.counter) this.counter = 0;
	this.counter++;
	//cLog.trace(this.counter);
	
	return this.counter;
}
</script>
         <script contentType="application/x-javascript" name="countryScript">
// This script object controls the interaction between the country and state/province Drop-down lists.

// The array contains the country and the corresponding states/provinces.


//var country_arr = new Array("Afghanistan", "Albania", "Algeria", "American Samoa", "Angola", "Anguilla", "Antartica", "Antigua and Barbuda", "Argentina", "Armenia", "Aruba", "Ashmore and Cartier Island", "Australia", "Austria", "Azerbaijan", "Bahamas", "Bahrain", "Bangladesh", "Barbados", "Belarus", "Belgium", "Belize", "Benin", "Bermuda", "Bhutan", "Bolivia", "Bosnia and Herzegovina", "Botswana", "Brazil", "British Virgin Islands", "Brunei", "Bulgaria", "Burkina Faso", "Burma", "Burundi", "Cambodia", "Cameroon", "Canada", "Cape Verde", "Cayman Islands", "Central African Republic", "Chad", "Chile", "China", "Christmas Island", "Clipperton Island", "Cocos (Keeling) Islands", "Colombia", "Comoros", "Congo, Democratic Republic of the", "Congo, Republic of the", "Cook Islands", "Costa Rica", "Cote d'Ivoire", "Croatia", "Cuba", "Cyprus", "Czeck Republic", "Denmark", "Djibouti", "Dominica", "Dominican Republic", "Ecuador", "Egypt", "El Salvador", "Equatorial Guinea", "Eritrea", "Estonia", "Ethiopia", "Europa Island", "Falkland Islands (Islas Malvinas)", "Faroe Islands", "Fiji", "Finland", "France", "French Guiana", "French Polynesia", "French Southern and Antarctic Lands", "Gabon", "Gambia, The", "Gaza Strip", "Georgia", "Germany", "Ghana", "Gibraltar", "Glorioso Islands", "Greece", "Greenland", "Grenada", "Guadeloupe", "Guam", "Guatemala", "Guernsey", "Guinea", "Guinea-Bissau", "Guyana", "Haiti", "Heard Island and McDonald Islands", "Holy See (Vatican City)", "Honduras", "Hong Kong", "Howland Island", "Hungary", "Iceland", "India", "Indonesia", "Iran", "Iraq", "Ireland", "Ireland, Northern", "Israel", "Italy", "Jamaica", "Jan Mayen", "Japan", "Jarvis Island", "Jersey", "Johnston Atoll", "Jordan", "Juan de Nova Island", "Kazakhstan", "Kenya", "Kiribati", "Korea, North", "Korea, South", "Kuwait", "Kyrgyzstan", "Laos", "Latvia", "Lebanon", "Lesotho", "Liberia", "Libya", "Liechtenstein", "Lithuania", "Luxembourg", "Macau", "Macedonia, Former Yugoslav Republic of", "Madagascar", "Malawi", "Malaysia", "Maldives", "Mali", "Malta", "Man, Isle of", "Marshall Islands", "Martinique", "Mauritania", "Mauritius", "Mayotte", "Mexico", "Micronesia, Federated States of", "Midway Islands", "Moldova", "Monaco", "Mongolia", "Montserrat", "Morocco", "Mozambique", "Namibia", "Nauru", "Nepal", "Netherlands", "Netherlands Antilles", "New Caledonia", "New Zealand", "Nicaragua", "Niger", "Nigeria", "Niue", "Norfolk Island", "Northern Mariana Islands", "Norway", "Oman", "Pakistan", "Palau", "Panama", "Papua New Guinea", "Paraguay", "Peru", "Philippines", "Pitcaim Islands", "Poland", "Portugal", "Puerto Rico", "Qatar", "Reunion", "Romainia", "Russia", "Rwanda", "Saint Helena", "Saint Kitts and Nevis", "Saint Lucia", "Saint Pierre and Miquelon", "Saint Vincent and the Grenadines", "Samoa", "San Marino", "Sao Tome and Principe", "Saudi Arabia", "Scotland", "Senegal", "Seychelles", "Sierra Leone", "Singapore", "Slovakia", "Slovenia", "Solomon Islands", "Somalia", "South Africa", "South Georgia and South Sandwich Islands", "Spain", "Spratly Islands", "Sri Lanka", "Sudan", "Suriname", "Svalbard", "Swaziland", "Sweden", "Switzerland", "Syria", "Taiwan", "Tajikistan", "Tanzania", "Thailand", "Tobago", "Toga", "Tokelau", "Tonga", "Trinidad", "Tunisia", "Turkey", "Turkmenistan", "Tuvalu", "Uganda", "Ukraine", "United Arab Emirates", "United Kingdom", "Uruguay", "USA", "Uzbekistan", "Vanuatu", "Venezuela", "Vietnam", "Virgin Islands", "Wales", "Wallis and Futuna", "West Bank", "Western Sahara", "Yemen", "Yugoslavia", "Zambia", "Zimbabwe");
var myCountries = new Array(new Array(2), new Array(14), new Array(52)); // Create a two-dimensional array.

var cLog = script.core.util.Log;

var cDrugApplModel=script.DrugAppl.model.DrugApplMain;

													   				 // For each country, add a 'new Array(number of state/province +1)'.

// Define the country and the corresponding states/provinces.
// The array syntax is arrayName[index][index].
// The first index number represents the country,
// the second index number is the actual data value.

myCountries[0][0] = " ";		// The first items in the Drop-dowm Lists should be blank.
myCountries[0][1] = " ";
myCountries[1][0] = "Canada";	// The first data value is the country name,
myCountries[1][1] = "Alberta";	// the rest are states/provinces.
myCountries[1][2] = "British Columbia";
myCountries[1][3] = "Manitoba";
myCountries[1][4] = "New Brunswick";
myCountries[1][5] = "Newfoundland and Labrador";
myCountries[1][6] = "Northwest Territories";
myCountries[1][7] = "Nova Scotia";
myCountries[1][8] = "Nunavut";
myCountries[1][9] = "Ontario";
myCountries[1][10] = "Prince Edward Island";
myCountries[1][11] = "Quebec";
myCountries[1][12] = "Saskatchewan";
myCountries[1][13] = "Yukon";
myCountries[2][0] = "United States";	// This is a new country, see how the first number is now [1].
myCountries[2][1] = "Alabama";
myCountries[2][2] = "Alaska";
myCountries[2][3] = "Arizona";
myCountries[2][4] = "Arkansas";
myCountries[2][5] = "California";
myCountries[2][6] = "Colorado";
myCountries[2][7] = "Connecticut";
myCountries[2][8] = "Delaware";
myCountries[2][9] = "District of Columbia";
myCountries[2][10] = "Florida";
myCountries[2][11] = "Georgia";
myCountries[2][12] = "Hawaii";
myCountries[2][13] = "Idaho";
myCountries[2][14] = "Illinois";
myCountries[2][15] = "Indiana";
myCountries[2][16] = "Iowa";
myCountries[2][17] = "Kansas";
myCountries[2][18] = "Kentucky";
myCountries[2][19] = "Louisiana";
myCountries[2][20] = "Maine";
myCountries[2][21] = "Maryland";
myCountries[2][22] = "Massachusetts";
myCountries[2][23] = "Michigan";
myCountries[2][24] = "Minnesota";
myCountries[2][25] = "Mississippi";
myCountries[2][26] = "Missouri";
myCountries[2][27] = "Montana";
myCountries[2][28] = "Nebraska";
myCountries[2][29] = "Nevada";
myCountries[2][30] = "New Hampshire";
myCountries[2][31] = "New Jersey";
myCountries[2][32] = "New Mexico";
myCountries[2][33] = "New York";
myCountries[2][34] = "North Carolina";
myCountries[2][35] = "North Dakota";
myCountries[2][36] = "Ohio";
myCountries[2][37] = "Oklahoma";
myCountries[2][38] = "Oregon";
myCountries[2][39] = "Pennsylvania";
myCountries[2][40] = "Rhode Island";
myCountries[2][41] = "South Carolina";
myCountries[2][42] = "South Dakota";
myCountries[2][43] = "Tennessee";
myCountries[2][44] = "Texas";
myCountries[2][45] = "Utah";
myCountries[2][46] = "Vermont";
myCountries[2][47] = "Virginia";
myCountries[2][48] = "Washington";
myCountries[2][49] = "West Virginia";
myCountries[2][50] = "Wisconsin";
myCountries[2][51] = "Wyoming";


// This function will populate the country Drop-down List.
// This function is called from the initialize event of the country Drop-down List.

function getCountries(dropdownField)
{
   dropdownField.clearItems();
   for (var i=0; i &lt; myCountries.length; i++)
      dropdownField.addItem(myCountries[i][0]);
}


// This function will populate the state/province Drop-down List for any event EXCEPT the change event. 
// This function is called by the initialize event of the state/province Drop-down List.
function getStates(countryField, dropdownField)
{   
    		
    dropdownField.clearItems();							// Clear the items of the Drop-down List.
    dropdownField.rawValue = ""; 						// Clear the selection in the drop down list.
    
    for (var i=0; i &lt; myCountries.length; i++) 			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == countryField) 			// Check to see if they match.
      {
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
	  	 }
	  }
	  
	dropdownField.Items.Insert(0, new ListItem("", String.Empty)); // Insert a blank entry at the top
	  
}


function clearItems(dropdownField)
{   

    dropdownField.clearItems();										// Clear the items of the Drop-down List.
    dropdownField.rawValue = "";  									// Clear the selection in the Drop-down List.
    dropdownField.items.Insert(0, new ListItem("", String.Empty));  // Insert a blank entry at the top
   
}

// This function will populate the state/province Drop-down List for the change event. 
// This function is called by the change event of the country Drop-down List.
// The first parameter is simply a pointer to the xfa object model.

function getStatesOther(myXfa, dropdownField) 
{                                              
   dropdownField.clearItems();							// Clear the items of the Drop-down list.
   for (var i=0; i &lt; myCountries.length; i++)			// Look through all the countries until we find the one that matches the country selected.
      if(myCountries[i][0] == myXfa.event.newText)		// Check to see if they match. Note: we have to use the event.newText in this case because
	  {                                            		// the change hasn't been committed yet.
	     for (var j=1; j &lt; myCountries[i].length; j++) 	// When they match, add the states/provinces to the Drop-down List.
		 {
		    dropdownField.addItem(myCountries[i][j]);
 		 }
	  }
}

function isValidEmail(strEmail){
  validRegExp = /^[^@]+@[^@]+.[a-z]{2,}$/i;
  
   // search email text for regular exp matches
    if (strEmail.rawValue.search(validRegExp) == -1) 
   {
      //console.println("A valid e-mail address is required.\nPlease amend and retry!");
      //xfa.host.messageBox("A valid e-mail address is required. Please amend and retry!");
      //xfa.host.messageBox("A valid e-mail address is required. Please amend and retry! ", "Invalid Email Address", 3, 1);

      return false;
    } 
    return true; 
}

function isValidPhoneNo(strPhone, isPhone){
 
   validRegExp = /^[0-9]+$/;

  
   // search email text for regular exp matches
    if (strPhone.rawValue.search(validRegExp) == -1) 
   {
      if (isPhone) {
         xfa.host.messageBox("A valid phone number is required (6131234567). Please amend and retry! ", "Invalid Phone Number", 3, 1);
      }
      else {
      	 xfa.host.messageBox("A valid fax number is required (6131234567). Please amend and retry! ", "Invalid Fax Number", 3, 1);
      }
      
      //xfa.host.messageBox("This is a message", "This is a title", 3, 1);


      return false;
    } 
    
    if (strPhone.rawValue.length &lt; 10) {
        if (isPhone) {
        	xfa.host.messageBox("A valid phone number is required (6131234567). Please amend and retry! ", "Invalid Phone Number", 3, 1);
        }
        else {
        	xfa.host.messageBox("A valid fax number is required (6131234567). Please amend and retry! ", "Invalid Fax Number", 3, 1);
        }
    	
    	return false;
    }
    
    return true; 
}

function checkForFieldValidity(strField){
  
  if (strField.rawValue == "") {
      xfa.host.messageBox("This field is mandatory!");

      return false;
    } 
    return true; 
}

function isPart2Completed() {

 
  if (!DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtBrandName1.isNull &amp;&amp;
  	  !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtIngredient1.isNull &amp;&amp;
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlHumanVetSecond.isNull &amp;&amp; 
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtStrength.isNull &amp;&amp;
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlROA.isNull      &amp;&amp;
      ((!DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.ddlDosageForm.isNull ) || (!DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtOther.isNull)) &amp;&amp;
      !DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfActiveIngredients.part2Header.txtUses.isNull) {
  
 	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.presence = "visible";
 	 DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfNonMedIngredients.lblPart3Title1.presence = "hidden"
  	 //xfa.host.messageBox("ddlHumanVet is not null!");
  }
  else {
    DrugAppl.sfPage1.sfFormulationList.sfPart2.sfPart2Body.sfAnimalHuman.presence = "hidden";
  	xfa.host.messageBox("ddlHumanVet is null!");
  }
}
   
//shuffle = function(o){ //v1.0
//	for(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
//	return o;
//};

function randomize() {
	var ran_number=Math.floor(Math.random()*100); 

	//You can also use two steps if it seems to make more sense: 

	//var ran_unrounded=Math.random()*5;
	//var ran_number=Math.floor(ran_unrounded); 
	
	return ran_number;
}

function addLeadingZeroes(num){
	if (num&lt;10) num="000"+num;
	else if (num&lt;100) num="00"+num;
	else if (num&lt;1000) num="0"+num;
	return num;
}

function generateTrackingNumber(i) {

	var x = new Array(9999);
	var zeros = '000';
	for (var i=1; i&lt;=9999; ++i) x[i] = zeros.substring(String(i).length - 1) + i;
	return x;
}

function countMyself() {     

	// Check to see if the counter has been initialized     

	if ( typeof countMyself.counter == 'undefined' ) {         
	 
		// It has not... perform the initilization         
		
		countMyself.counter = 0;    	
	}     
	
	// Do something stupid to indicate the value     
	 

	
	xfa.host.messageBox (++countMyself.counter);
	 
}  

function isValidDate (value) {

  
  var dateRegExp = new RegExp("^([0-9]{4})-([0-9]{2})-([0-9]{2})$");
  
  var isMatch = dateRegExp.exec(value.rawValue);
  
  if (!isMatch) { 
  
       return false;
  }
  
  return true;
  
} 

function populateDate(value) {

    var language = cDrugApplModel.getLanguage();	
    
	if (!(value.isNull || value.rawValue == "")) {
	
		if (value.resolveNode("DrugAppl.#variables.countryScript").isValidDate(value) == false)  {
	
	   		if (language == "en") {
	   		
	   		  xfa.host.messageBox("Date must be in this format: YYYY-MM-DD", "Invalid Date Format", 3, 1);
	   		}
	   		
	   		else {
	   		  xfa.host.messageBox("La date doit être au format suivant: AAAA-MM-JJ", "Format de date invalide", 3, 1);
	   		}
	   		xfa.host.setFocus(value);
	   	
		}
		else {
		
		   var year  = value.rawValue.split("-")[0] ;
	    	var month = value.rawValue.split("-")[1] ;
	    	var day   = value.rawValue.split("-")[2] ;
	    	var date  = new Date(year, month - 1, day) ;
	    
	    	if ((date.getMonth()+1 != month) ||
	    	    (date.getDate()    != day )  ||
	    	    (date.getFullYear()!= year)) {
	        
	             if (language == "en") {
	             	xfa.host.messageBox("Invalid Day, Month, or Year range. Please correct and submit again.", "Invalid Date", 3, 1); 
	             }
	             else {
	                xfa.host.messageBox ("Journée Blancs, Mois, ou Année gamme. S'il vous plaît corriger et soumettre à nouveau", "Date non Valide", 3, 1);
	             }
	      	      
				xfa.host.setFocus(value);	
	       }
			else { 
	 	 	  cLog.trace("Correct date"); 
			 } 
		
		}
		
		
	}
	
	}
	
	function validateDateValue(field) {
	
		cLog.info("... date rawValue: "+field.rawValue);
		
		var language = cDrugApplModel.getLanguage();
		
		var regExp1 = /^(0?[1-9]|[12][0-9]|3[01])[\/\-](0?[1-9]|1[012])[\/\-]\d{4}$/; // DD/MM/YYYY(DD-MM-YYYY)
		var regExp2 = /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/; // YYYY/MM/DD(YYYY-MM-DD)
		var regExpA = /^\d+\-\d+\-\d+$/; 
		var regExpB = /^\d+\/\d+\/\d+$/; 
		var regExpC = /^(0[1-9]|[12]\d|3[01])(0[1-9]|1[012])\d{4}$/;
		var regExpD = /^\d{4}(0?[1-9]|1[012])(0?[1-9]|[12][0-9]|3[01])$/;
		var regExpE = /(\d{2})/ig;

		var noChars = false;
		
		var year = null;
	    var month = null;
	    var day   = null;
	    var date = null;
		
		//if (this.rawValue != null) {
		if (field.rawValue.toString().length &lt; 8) {
			cLog.trace ("yymmdd");
			xfa.host.setFocus(field);
			if (language == "en") {
		      noChars = true;
		      //cLog.trace ("EXECUTE IF 1 english...........................");
		       
		      xfa.host.messageBox ( "Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date Format", 3, 1);
		     
		    }
		    else {
		       noChars = true;
		       //cLog.trace ("EXECUTE IF 2 english...........................");
		       xfa.host.messageBox( "Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Format de date invalide", 3, 1);
		       
		    }
			return;
		}
		
		if ( regExpD.test(field.rawValue) ) {
			cLog.trace ("yyyymmdd");
			
			var dateStr = field.rawValue.toString();
			
			year = dateStr .substr(0,4);
			month = dateStr .substr(4,2);
			day = dateStr .substr(6,2);
			
			cLog.trace ("year: "  + year);
			cLog.trace ("month: " + month);
			cLog.trace ("day: "   + day);
			
			if (parseInt(year) &lt; 1900) {
			
				if (noChars == false) {
				
					xfa.host.setFocus(field);
		           if (language == "en") {
		              cLog.trace("INCORRECT date!!!!!!!!!!!!!!!!");
		              xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)", "Invalid Date", 3, 1); 
		             	
		           }
		           else {
		              xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Date non Valide", 3, 1);
		              
		           }
		         }
			
			}
			
			if (! (year.isNull || month.isNull || day.isNull) ) {
		    date  = new Date(year, month - 1, day) ;
		    
		    cLog.trace ("Expression 3: year: " + year + " month: " + month + " day: " + day);
		    
		    if ((date.getMonth()+1 != month) ||
		        (date.getDate()    != day )  ||
		        (date.getFullYear()!= year)) {	
		        
		        if (noChars == false) {
		        
		        	 xfa.host.setFocus(field);
		           if (language == "en") {
		              cLog.trace("INCORRECT date!!!!!!!!!!!!!!!!");
		              xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)" , "Invalid Date", 3, 1); 	
		             
		           }
		           else {
		              xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Date non Valide", 3, 1);
		              
		           }
		         }
		            		
				}
			else { 
		 	   cLog.trace("Correct date");
		 	   return date;
			} 
		} else {
			xfa.host.messageBox ("Error: Date is NULL.");
		}
			return;
		} 
		
		
		
		if ( regExpC.test(field.rawValue) ) {
			cLog.trace ("ddmmyyyy");
			
			 xfa.host.setFocus(field);
			if (language == "en") {
		      //noChars = true;
		      //cLog.trace ("EXECUTE IF 1 english...........................");
		      xfa.host.messageBox ( "Please enter valid date. (ex. YYYY-MM-DD)" , "Invalid Date Format", 3, 1);
		     
		    }
		    else {
		       //noChars = true;
		       //cLog.trace ("EXECUTE IF 2 english...........................");
		       xfa.host.messageBox( "Veuillez entrer une date valide. (ex. AAAA-MM-JJ)", "Format de date invalide", 3, 1);
		      
		    }
			return;
		} 
		else {
			cLog.trace ("BNOPPSPSPPSPSPSPSPSP");
		
		}
		var splitChar = "-";
		if ( regExpA.test(field.rawValue) ) {
			splitChar = "-";
			cLog.trace ("char -");
		} else if ( regExpB.test(field.rawValue) ){
			splitChar = "/";
			cLog.trace ("char /");
		} else {
			 xfa.host.setFocus(field);
		    if (language == "en") {
		      noChars = true;
		      cLog.trace ("EXECUTE IF 1 english...........................");
		      xfa.host.messageBox ( "Please enter valid date. (ex. YYYY-MM-DD)" , "Invalid Date Format", 3, 1);
		      
		    }
		    else {
		       noChars = true;
		       cLog.trace ("EXECUTE IF 2 english...........................");
		       xfa.host.messageBox( "Veuillez entrer une date valide. (ex. AAAA-MM-JJ)" , "Format de date invalide", 3, 1);
		       
		    }
			
		}
		
		year = null;
	    month = null;
	    day   = null;
	
		if ( regExp1.test(field.rawValue) )	{ //(DD-MM-YYYY)
			if (!(field.isNull || field.rawValue == "")) {
				year  = field.rawValue.split(splitChar)[2] ;
			    month = field.rawValue.split(splitChar)[1] ;
			    day   = field.rawValue.split(splitChar)[0] ;
			    
			    cLog.trace ("Expression 1: year: " + year + " month: " + month + " day: " + day);
			}
		} else if ( regExp2.test(field.rawValue) ) { //(YYYY-MM-DD)
			if (!(field.isNull || field.rawValue == "")) {
				year  = field.rawValue.split(splitChar)[0] ;
			    month = field.rawValue.split(splitChar)[1] ;
			    day   = field.rawValue.split(splitChar)[2] ;
			    
			    cLog.trace ("Expression 2: year: " + year + " month: " + month + " day: " + day);
			}	
		} else {
		
		   if (noChars == false) {
		        cLog.trace ("EXECUTE IF 2...........................");
		         xfa.host.setFocus(field);
		     	if (language == "en") {
		        	xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)" , "Invalid Date", 3, 1);
		        	
		        
		     	}
		     
		     	else {
		       		xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)"  , "Date non Valide", 3, 1);
		       		
		        
		     	}
		   }
				
		}
		
			    
		if (! (year.isNull || month.isNull || day.isNull) ) {
		
		    date  = new Date(year, month - 1, day) ;
		    
		    cLog.trace ("Expression 3: year: " + year + " month: " + month + " day: " + day);
		    
		    if ((date.getMonth()+1 != month) ||
		        (date.getDate()    != day )  ||
		        (date.getFullYear()!= year)) {	
		        
		        if (noChars == false) {
		        	 xfa.host.setFocus(field);
		           if (language == "en") {
		              cLog.trace("INCORRECT date!!!!!!!!!!!!!!!!");
		              xfa.host.messageBox("Please enter valid date. (ex. YYYY-MM-DD)" , "Invalid Date", 3, 1); 	
		              
		           }
		           else {
		              xfa.host.messageBox ("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)" , "Date non Valide", 3, 1);
		              
		           }
		         }
		            		
				}
			else { 
		 	   cLog.trace("Correct date");
		 	   return date;
			} 
		} else {
			xfa.host.messageBox ("Error: Date is NULL.");
		}
		//}
		return date  ;
}
	
	function validatePhoneNumber ( phone) {
	
		var countrySel = DrugAppl.sfPage1.sfAuthSignOfficial.sfPart1ACompanyDetail.sNameAndAddress.ddlCountry.rawValue;


		if (countrySel  == "CA" || countrySel == "US") {
			var cFormatValidator = script.core.validation.BasicFormatValidator;
			var cLog = script.core.util.Log;
			var fieldType = null;
			
			//cLog.info("txtEmail::exit, actionName: " + fieldType );
			//cLog.info("txtEmail::exit, sourceNode: " + this );
			//cLog.info("txtEmail::exit, this.rawValue: " + this.rawValue);
			
			try
			{
				// set up event object
				cLog.info( phone.rawValue + " ::exit, invoking ActionEvent.exit" );	
				var aValidator = cFormatValidator.createInstance();
				var validationResult;
				if( phone.rawValue != null ) {
				
				    //cLog.trace ("sfPart1ACompanyDetail.txtEmail.rawValue: " + txtTelephone.rawValue);
					
					fieldType = cFormatValidator.TELEPHONE;
					
					if( fieldType != null ) {
						validationResult = aValidator.validateFieldFormat(phone,fieldType);
						cLog.info( phone.rawValue + "::exit, invoking BasicFormatValidator.validateFieldFormat, result: " + validationResult );
					}
					else {
					    cLog.trace ("fieldType is NULL");
					}
					   
					if( validationResult != null ) {
						app.alert( validationResult + " (6131234567)");
						xfa.host.setFocus(phone);
						return 1;
					}
				}
			}
			catch(exception)
			{
				cLog.warn("Problem with Phone ::exit", exception);
			}
		}
	
	    return 0;
	}
	
	function check_date(field){
var checkstr = "0123456789";
var DateField = field;
var Datevalue = "";
var DateTemp = "";
var seperator = ".";
var day;
var month;
var year;
var leap = 0;
var err = 0;
var i;
   err = 0;
   DateValue = DateField.value;
   /* Delete all chars except 0..9 */
   for (i = 0; i &lt; DateValue.toString().length; i++) {
	  if (checkstr.indexOf(DateValue.substring(i,1)) &gt;= 0) {
	     DateTemp = DateTemp + DateValue.substring(i,1);
	  }
   }
   DateValue = DateTemp;
   /* Always change date to 8 digits - string*/
   /* if year is entered as 2-digit / always assume 20xx */
   if (DateValue.length == 6) {
      DateValue = DateValue.substring(0,4) + '20' + DateValue.substring(4,2); }
   if (DateValue.length != 8) {
      err = 19;}
   /* year is wrong if year = 0000 */
   year = DateValue.substring(4,4);
   if (year == 0) {
      err = 20;
   }
   /* Validation of month*/
   month = DateValue.substring(2,2);
   if ((month &lt; 1) || (month &gt; 12)) {
      err = 21;
   }
   /* Validation of day*/
   day = DateValue.substring(0,2);
   if (day &lt; 1) {
     err = 22;
   }
   /* Validation leap-year / february / day */
   if ((year % 4 == 0) || (year % 100 == 0) || (year % 400 == 0)) {
      leap = 1;
   }
   if ((month == 2) &amp;&amp; (leap == 1) &amp;&amp; (day &gt; 29)) {
      err = 23;
   }
   if ((month == 2) &amp;&amp; (leap != 1) &amp;&amp; (day &gt; 28)) {
      err = 24;
   }
   /* Validation of other months */
   if ((day &gt; 31) &amp;&amp; ((month == "01") || (month == "03") || (month == "05") || (month == "07") || (month == "08") || (month == "10") || (month == "12"))) {
      err = 25;
   }
   if ((day &gt; 30) &amp;&amp; ((month == "04") || (month == "06") || (month == "09") || (month == "11"))) {
      err = 26;
   }
   /* if 00 ist entered, no error, deleting the entry */
   if ((day == 0) &amp;&amp; (month == 0) &amp;&amp; (year == 00)) {
      err = 0; day = ""; month = ""; year = ""; seperator = "";
   }
   /* if no error, write the completed date to Input-Field (e.g. 13.12.2001) */
   if (err == 0) {
      DateField.value = day + seperator + month + seperator + year;
   }
   /* Error-message if err != 0 */
   else {
      alert("Date is incorrect!");
      DateField.select();
	  DateField.focus();
   }
}
function isDataEntered(field) {

	if ((field.rawValue != null) &amp;&amp; (field.rawValue != "") &amp;&amp; (field.rawValue != " ")) {
	
		cLog.trace ("FIELD COLOR: " + field.fillColor);
		if ((field.fillColor != "255,250,250") &amp;&amp; (field.fillColor != "255,255,255")) {
			field.fillColor = "255,250,250";
		}
		
		return true;
	}
	
	return false;
}
</script>
         <?templateDesigner expand 1?></variables>
      <subform w="203.2mm" minH="6.985mm" layout="tb" name="sfRouteofAdmin" presence="hidden">
         <field name="txtOther" minH="6.985mm" w="177.802mm" presence="hidden">
            <ui>
               <textEdit multiLine="1"/>
            </ui>
            <font typeface="Myriad Pro"/>
            <margin leftInset="1.0008mm" rightInset="1.0008mm" topInset="1.0008mm" bottomInset="1.0008mm"/>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <validate nullTest="error" scriptTest="warning">
               <message>
                  <text name="nullTest"/>
               </message>
            </validate>
            <caption reserve="42.76mm">
               <value>
                  <text>Route of Administration Details*</text>
               </value>
               <para vAlign="middle"/>
               <font size="8pt" typeface="Myriad Pro"/>
            </caption>
            <value>
               <text> </text>
            </value>
            <para vAlign="middle"/>
         </field>
         <border>
            <edge/>
            <corner thickness="0.175mm"/>
         </border>
         <?templateDesigner expand 1?></subform>
      <proto/>
      <desc>
         <text name="version">$Revision: 2.21$</text>
         <text name="department">Health Canada - Sante Canada</text>
         <text name="creator">$Author: bandreescu$</text>
         <text name="issued">$Date: 2015-09-21$</text>
         <text name="title">FORM IV: PATENT LIST Patented Medicines (Notice of Compliance) Regulations </text>
         <text name="contact">Bianca Andreescu</text>
         <text name="created">$Creation date:$</text>
      </desc>
      <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
      <event activity="initialize" name="event__initialize">
         <script contentType="application/x-javascript">

var cFormHandler=script.DrugAppl.control.FormHandler;
if(DrugAppl.sfPage1.sfAuthSignOfficial.sfSignatureDetails.ddtSignedOn.rawValue==null)
cFormHandler.initialize();
</script>
      </event>
      <event activity="docReady" ref="$host" name="event__docReady">
         <script contentType="application/x-javascript">
if (xfa.host.name != "XFAPresentationAgent") {
  event.target.zoomType = zoomtype.fitP;
}
</script>
      </event>
      <?templateDesigner Hyphenation excludeInitialCap:1, excludeAllCaps:1, wordCharCnt:7, remainCharCnt:3, pushCharCnt:3?>
      <?templateDesigner expand 1?>
      <?renderCache.subset "Myriad Pro" 0 0 ISO-8859-1 4 240 62 00010001000400070009000A000B000D000E000F001000220023002400250026002700280029002A002C002D002E002F0030003100330034003500360037003A003B00420043004400450046004700480049004A004D004E004F0050005100520053005400550056005700580059005A005B005C005E00CE  #&()*,-./ABCDEFGHIKLMNOPRSTUVYZabcdefghilmnopqrstuvwxyz{}ç?>
      <?renderCache.subset "Myriad Pro" 1 0 ISO-8859-1 4 184 46 00010009000A000E00120013001400150016001B0022002300240025002600270028002A002D002E002F0030003100330034003500360037004200440045004600470048004A004D004E004F00500051005300540055005600570059 ()-12345:ABCDEFGILMNOPRSTUVacdefgilmnoprstuvx?>
   </subform>
   <?templateDesigner DefaultPreviewDynamic 1?>
   <?originalXFAVersion http://www.xfa.org/schema/xfa-template/2.8/?>
   <?templateDesigner Grid show:0, snap:0, units:0, color:ff8080, origin:(0,0), interval:(125000,125000), objsnap:0, guidesnap:0, pagecentersnap:653384659?>
   <?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?>
   <?templateDesigner Zoom 127?>
   <?templateDesigner FormTargetVersion 30?>
   <?templateDesigner DefaultLanguage JavaScript?>
   <?templateDesigner DefaultRunAt client?>
   <?acrobat JavaScript strictScoping?>
   <?PDFPrintOptions embedViewerPrefs 0?>
   <?PDFPrintOptions embedPrintOnFormOpen 0?>
   <?PDFPrintOptions scalingPrefs 0?>
   <?PDFPrintOptions enforceScalingPrefs 0?>
   <?PDFPrintOptions paperSource 0?>
   <?PDFPrintOptions duplexMode 0?>
   <?templateDesigner DefaultPreviewType interactive?>
   <?templateDesigner DefaultPreviewPagination simplex?>
   <?templateDesigner XDPPreviewFormat 20?>
   <?templateDesigner DefaultCaptionFontSettings face:Myriad Pro;size:8;weight:normal;style:normal?>
   <?templateDesigner DefaultValueFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner ValidationMessaging noMessages?>
   <?templateDesigner SaveTaggedPDF 0?>
   <?templateDesigner SavePDFWithEmbeddedFonts 0?>
   <?templateDesigner SavePDFWithLog 0?></template>
<config xmlns="http://www.xfa.org/schema/xci/3.0/">
   <agent name="designer">
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo/>
      </pdf>
   </agent>
   <present>
      <!--  [0..n]  -->
      <pdf>
         <!--  [0..n]  -->
         <fontInfo>
            <embed>0</embed>
         </fontInfo>
         <tagged>0</tagged>
         <version>1.7</version>
         <adobeExtensionLevel>5</adobeExtensionLevel>
      </pdf>
      <common/>
      <script>
         <runScripts>server</runScripts>
      </script>
      <cache>
         <macroCache/>
      </cache>
      <xdp>
         <packets>*</packets>
      </xdp>
   </present>
   <psMap>
      <font typeface="Nimrod" psName="Nimrod-Bold" weight="bold" posture="normal"/>
      <font typeface="SymbolPS" psName="Symbol" weight="normal" posture="normal"/>
   </psMap>
   <acrobat>
      <common>
         <validationMessaging>noMessages</validationMessaging>
      </common>
   </acrobat>
</config>
<localeSet xmlns="http://www.xfa.org/schema/xfa-locale-set/2.7/">
   <locale name="en_CA" desc="English (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">D-MMM-YY</datePattern>
         <datePattern name="short">DD/MM/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="fr_CA" desc="French (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>janvier</month>
            <month>février</month>
            <month>mars</month>
            <month>avril</month>
            <month>mai</month>
            <month>juin</month>
            <month>juillet</month>
            <month>août</month>
            <month>septembre</month>
            <month>octobre</month>
            <month>novembre</month>
            <month>décembre</month>
         </monthNames>
         <monthNames abbr="1">
            <month>janv.</month>
            <month>févr.</month>
            <month>mars</month>
            <month>avr.</month>
            <month>mai</month>
            <month>juin</month>
            <month>juil.</month>
            <month>août</month>
            <month>sept.</month>
            <month>oct.</month>
            <month>nov.</month>
            <month>déc.</month>
         </monthNames>
         <dayNames>
            <day>dimanche</day>
            <day>lundi</day>
            <day>mardi</day>
            <day>mercredi</day>
            <day>jeudi</day>
            <day>vendredi</day>
            <day>samedi</day>
         </dayNames>
         <dayNames abbr="1">
            <day>dim.</day>
            <day>lun.</day>
            <day>mar.</day>
            <day>mer.</day>
            <day>jeu.</day>
            <day>ven.</day>
            <day>sam.</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>av. J.-C.</era>
            <era>ap. J.-C.</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE D MMMM YYYY</datePattern>
         <datePattern name="long">D MMMM YYYY</datePattern>
         <datePattern name="med">YY-MM-DD</datePattern>
         <datePattern name="short">YY-MM-DD</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">HH' h 'MM' min 'SS' s 'Z</timePattern>
         <timePattern name="long">HH:MM:SS Z</timePattern>
         <timePattern name="med">HH:MM:SS</timePattern>
         <timePattern name="short">HH:MM</timePattern>
      </timePatterns>
      <dateTimeSymbols>GaMjkHmsSEDFwWxhKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">z,zz9.99 $|(z,zz9.99$)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">,</numberSymbol>
         <numberSymbol name="grouping"> </numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">,</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="en_US" desc="English (United States)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">MMM D, YYYY</datePattern>
         <datePattern name="short">M/D/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99|($z,zz9.99)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">USD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
</localeSet>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
   <xfa:data xfa:dataNode="dataGroup"/>
</xfa:datasets>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2011/06/07-10:39:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about="">
         <xmp:MetadataDate>2015-09-21T19:51:03Z</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe LiveCycle Designer ES 10.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about="">
         <pdf:Producer>Adobe LiveCycle Designer ES 10.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" rdf:about="">
         <xmpMM:DocumentID>uuid:245e72c5-2151-49d6-af77-2df97d73226e</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:3f462098-da2d-48af-9736-1b4f31b7f16b</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about="">
         <dc:format>application/pdf</dc:format>
         <dc:date>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Creation date:$</rdf:value>
                  <dc:element-refinement>dc:created</dc:element-refinement>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Date: 2015-09-21$</rdf:value>
                  <dc:element-refinement>dc:issued</dc:element-refinement>
               </rdf:li>
            </rdf:Seq>
         </dc:date>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>$Author: bandreescu$</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">FORM IV: PATENT LIST Patented Medicines (Notice of Compliance) Regulations </rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description xmlns:desc="http://ns.adobe.com/xfa/promoted-desc/" rdf:about="">
         <desc:version rdf:parseType="Resource">
            <rdf:value>$Revision: 2.21$</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:version>
         <desc:department rdf:parseType="Resource">
            <rdf:value>Health Canada - Sante Canada</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:department>
         <desc:contact rdf:parseType="Resource">
            <rdf:value>Bianca Andreescu</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:contact>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
   <annots/>
</xfdf></xdp:xdp>
