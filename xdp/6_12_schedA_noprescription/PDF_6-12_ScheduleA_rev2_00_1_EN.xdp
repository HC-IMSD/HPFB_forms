<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="AdobeLiveCycleDesignerES_V10.0.2.20120224.1.869952" APIVersion="3.5.12002.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2016-05-18T19:46:35Z" uuid="2fe67f18-53d3-4f1f-af76-3bad638519f3">
<template xmlns="http://www.xfa.org/schema/xfa-template/3.0/">
   <?formServer defaultPDFRenderFormat acrobat9.1dynamic?>
   <?formServer allowRenderCaching 0?>
   <?formServer formModel client?>
   <subform name="QIU" layout="tb" locale="en_CA" restoreState="auto">
      <pageSet>
         <pageArea name="Page1" id="Page1">
            <contentArea w="203.2mm" h="249.476mm" x="6.351mm" y="16.198mm" name="contentArea"/>
            <medium stock="default" short="612pt" long="792pt"/>
            <subform x="6.35mm" y="6.35mm" w="47.625mm" name="sfLogo_en" layout="tb">
               <bind match="none"/>
               <draw h="6.35mm" name="imgHCLogo" w="47.625mm">
                  <ui>
                     <imageEdit/>
                  </ui>
                  <value>
                     <image contentType="image/jpeg" href="O:\HPFB_forms\FIP logos\HC-SC.jpg"/>
                  </value>
                  <?templateDesigner expand 1?>
                  <assist>
                     <speak priority="toolTip"/>
                  </assist>
                  <traversal>
                     <traverse ref="sfLogo_fr[0]"/>
                  </traversal>
               </draw>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

var cFormHandler=script.HCeForm.control.FormHandler;
var cConfigManager=script.core.util.ConfigurationManager;

var FRENCH=			cConfigManager.get("FRENCH");

if(cFormHandler.getCurrentLanguage()===FRENCH){
	this.presence="hidden";
}else{
	this.presence="visible";
}
</script>
               </event>
               <traversal>
                  <traverse ref="sfLogo_fr[0]"/>
               </traversal>
               <?templateDesigner expand 1?></subform>
            <subform x="6.35mm" y="6.35mm" w="47.625mm" name="sfLogo_fr" layout="tb">
               <bind match="none"/>
               <draw name="imgHCLogo_fr" w="47.625mm" h="6.35mm">
                  <value>
                     <image href="O:\HPFB_forms\FIP logos\SC-HC.jpg" contentType="image/jpeg"/>
                  </value>
                  <ui>
                     <imageEdit/>
                  </ui>
                  <assist>
                     <speak priority="toolTip"/>
                  </assist>
               </draw>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

var cFormHandler=script.HCeForm.control.FormHandler;
var cConfigManager=script.core.util.ConfigurationManager;

var FRENCH=			cConfigManager.get("FRENCH");

if(cFormHandler.getCurrentLanguage()===FRENCH){
	this.presence="visible";
}else{
	this.presence="hidden";
}

</script>
               </event>
               <traversal>
                  <traverse operation="first" ref="imgHCLogo_fr[0]"/>
               </traversal>
               <?templateDesigner expand 1?></subform>
            <draw h="6.352mm" name="imgCanada" w="20.744mm" y="268.392mm" x="6.136mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/gif" href="O:\HPFB_forms\Images\wordmark.gif"/>
               </value>
               <assist>
                  <speak disable="1"/>
               </assist>
               <traversal>
                  <traverse ref="eventHandler[0]"/>
               </traversal>
            </draw>
            <field name="eventHandler" y="269.349mm" x="61.309mm" w="10.54mm" h="6.35mm" access="protected" presence="invisible">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <bind match="none"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">
/*******************************************************************************
 * This updates the FormPage's language when a new instance is created. This is
 * here because there is nowhere to put it on the master page itself.
 */

//imports
var cActionEvent = script.core.event.ActionEvent;
var cMasterPageHandler = script.HCeForm.control.MasterPageHandler;
var cSystem = script.core.System;

try
{
	// set up event object
	var actionName = cMasterPageHandler.INITIALIZE_MASTER_PAGE;
	var anActionEvent = cActionEvent.createInstance(actionName,this, this.parent);

	// deploy event to controller
	cMasterPageHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cSystem.processUnhandledException(exception);
}


</script>
               </event>
            </field>
            <field access="protected" name="Pages" x="93.955mm" y="267.931mm" minW="27.99mm" minH="5.588mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="none"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
var cResourceManager = 		script.core.lang.ResourceManager;

var textVal="";
textVal="Page "+xfa.layout.page(this)+" "+cResourceManager.get("lbOfLCText")+" " + xfa.layout.pageCount();
this.rawValue=textVal;
</script>
               </event>
               <assist>
                  <speak disable="1"/>
               </assist>
               <traversal>
                  <traverse ref="lblMasterTitle[0]"/>
               </traversal>
            </field>
            <field name="txtFormVersion" y="267.931mm" x="28.722mm" w="28.707mm" h="5.588mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden"/>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="15.9508mm">
                  <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>Revision No:</text>
                  </value>
               </caption>
               <traversal>
                  <traverse ref="Pages[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.form_version"/>
            </field>
            <draw name="lblMasterTitle" y="267.931mm" x="123.143mm" w="85.581mm" h="5.588mm" hAlign="right">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>Title</text>
               </value>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para vAlign="middle" hAlign="right"/>
               <traversal>
                  <traverse ref="imgCanada[0]"/>
               </traversal>
               <?renderCache.bounds 239758 13006 0 0 1417 1417 0 0?>
               <?renderCache.textRun 5 Title 0 226783 9920 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
            <?templateDesigner expand 1?></pageArea>
         <?templateDesigner expand 0?></pageSet>
      <subform w="576pt" name="sfPage1" layout="lr-tb">
         <subform w="203.2mm" name="sfMainHeader" layout="lr-tb">
            <draw name="lblFormTitle" w="202.993mm" h="15.24mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>Schedule A Form for Nonprescription Productsâ€©(excluding Natural Health Products)</text>
               </value>
               <font size="12pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <assist role="H1"/>
               <traversal>
                  <traverse ref="pageLanguage[0]"/>
               </traversal>
               <?renderCache.bounds 572579 40366 0 0 1417 1417 0 0?>
               <?renderCache.textRun 45 Schedule A Form for Nonprescription Products  0 163724 17400 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?>
               <?renderCache.textRun 35 (excluding Natural Health Products) 0 192164 31800 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <exclGroup name="pageLanguage" layout="lr-tb" presence="hidden">
               <field h="6mm" name="chkEnglish" w="23.28mm" locale="en_CA" relevant="-print">
                  <caption placement="right" reserve="16.812mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>English</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>en</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</text>
                  </value>
               </field>
               <field h="6mm" name="chkFrancais" w="26.316mm" locale="fr_CA" relevant="-print">
                  <caption placement="right" reserve="19.81mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>FranÃ§ais</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>fr</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                  </value>
               </field>
               <?templateDesigner itemValuesSpecified 1?>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cMainHandler = script.HCeForm.control.FormHandler;

try
{
	// set up event object
	var actionName = cMainHandler.LANGUAGE_CHANGE;
	var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
	
	// deploy event to controller
	cMainHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with pageLanguage::change", exception);
}
</script>
               </event>
               <validate scriptTest="warning"/>
               <margin leftInset="50.8mm"/>
               <traversal>
                  <traverse ref="sfPreInstruct[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.form_lang"/>
               <?templateDesigner expand 1?></exclGroup>
            <bind match="none"/>
            <traversal>
               <traverse operation="first" ref="lblFormTitle[0]"/>
               <traverse ref="sfPreInstruct[0]"/>
            </traversal>
            <?templateDesigner expand 1?></subform>
         <subform y="15.42mm" w="203.307mm" layout="lr-tb" name="sfPreInstruct">
            <subform w="203.2mm" layout="lr-tb" name="sfPreInstruct1">
               <draw name="lblMandatory" w="8in" h="6.35mm" colSpan="2">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Asterisk (*) denotes a mandatory field.</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para vAlign="middle"/>
                  <assist>
                     <speak disable="1"/>
                  </assist>
                  <traversal>
                     <traverse ref="sfPreInstruct2[0]"/>
                  </traversal>
                  <?renderCache.bounds 573166 15166 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 39 Asterisk (*) denotes a mandatory field. 0 1417 11000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <assist role="LI"/>
               <bind match="none"/>
               <traversal>
                  <traverse operation="first" ref="lblMandatory[0]"/>
                  <traverse ref="sfPreInstruct2[0]"/>
               </traversal>
               <?templateDesigner expand 1?></subform>
            <subform y="6.35mm" w="203.307mm" layout="lr-tb" name="sfPreInstruct2">
               <draw name="lblValidation" w="203.307mm" h="6.35mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Plus (+) denotes a validation error or missing data.</text>
                  </value>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para vAlign="middle"/>
                  <traversal>
                     <traverse ref="Button1[0]"/>
                  </traversal>
                  <?renderCache.bounds 573469 15166 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 52 Plus (+) denotes a validation error or missing data. 0 1417 11000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <assist role="LI"/>
               <bind match="none"/>
               <traversal>
                  <traverse operation="first" ref="lblValidation[0]"/>
                  <traverse ref="Button1[0]"/>
               </traversal>
               <?templateDesigner expand 1?></subform>
            <assist role="UL"/>
            <margin bottomInset="2.54mm"/>
            <bind match="none"/>
            <field name="Button1" w="28.575mm" h="6mm" presence="hidden">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>create error</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
               </caption>
               <border hand="right">
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">

asdasds.asdasda=asd...asdas
</script>
               </event>
               <traversal>
                  <traverse ref="sfInstructions[0]"/>
               </traversal>
            </field>
            <traversal>
               <traverse operation="first" ref="sfPreInstruct1[0]"/>
               <traverse ref="sfInstructions[0]"/>
            </traversal>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" name="sfInstructions">
            <field name="btnViewInstructions" w="31.75mm" h="6.35mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Show Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cFormHandler.SHOW_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with show instructions ::click", exception);
}
</script>
               </event>
               <traversal>
                  <traverse ref="btnHideInstructions[0]"/>
               </traversal>
            </field>
            <field name="btnHideInstructions" w="31.75mm" h="6.35mm" relevant="-print" x="36.326mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Hide Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName =  cFormHandler.HIDE_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with hide instructions ::click", exception);
}

</script>
               </event>
               <traversal>
                  <traverse ref="sfInstructionsContent[0]"/>
               </traversal>
            </field>
            <border>
               <edge presence="hidden"/>
               <corner presence="hidden" thickness="0.175mm"/>
            </border>
            <margin bottomInset="5.08mm"/>
            <bind match="none"/>
            <traversal>
               <traverse operation="first" ref="btnViewInstructions[0]"/>
               <traverse ref="sfInstructionsContent[0]"/>
            </traversal>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" layout="lr-tb" name="sfInstructionsContent">
            <draw name="lblInstructionsHead" w="8in" h="6.249mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>INSTRUCTIONS</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="sfInstructList[0]"/>
               </traversal>
               <?renderCache.bounds 573166 16274 0 0 1417 720 0 0?>
               <?renderCache.textRun 12 INSTRUCTIONS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform y="6.249mm" w="203.199mm" minH="59.561mm" layout="lr-tb" name="sfInstructList">
               <subform w="203.199mm" name="sfInstruct1" layout="tb">
                  <draw name="lblInstruct1" w="7.999958in" minH="5.116mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the "Finalize" button at the bottom of the form before printing and signing. </text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <traversal>
                        <traverse ref="sfInstruct2[0]"/>
                     </traversal>
                  </draw>
                  <margin bottomInset="2.54mm" topInset="2.54mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <traversal>
                     <traverse operation="first" ref="lblInstruct1[0]"/>
                     <traverse ref="sfInstruct2[0]"/>
                  </traversal>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfInstruct2" layout="tb">
                  <draw name="lblInstruct2" w="7.999958in" minH="8.931mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>Once finalized, the fields in the form becomes "locked" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the "Modify" button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the "Finalize" button again to re-validate entries.â€© â€©Alternatively:</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <traversal>
                        <traverse ref="sfInstruct3[0]"/>
                     </traversal>
                  </draw>
                  <margin topInset="0mm" bottomInset="2.54mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <traversal>
                     <traverse operation="first" ref="lblInstruct2[0]"/>
                     <traverse ref="sfInstruct3[0]"/>
                  </traversal>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfInstruct3" layout="tb">
                  <draw name="lblInstruct3" w="7.999958in" h="4.366mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>-Save, print, sign and date the completed form;</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <traversal>
                        <traverse ref="sfInstruct4[0]"/>
                     </traversal>
                     <?renderCache.bounds 573163 9540 0 0 1417 1418 0 0?>
                     <?renderCache.textRun 47 -Save, print, sign and date the completed form; 0 1417 8438 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                  <margin topInset="0mm" bottomInset="0mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <traversal>
                     <traverse operation="first" ref="lblInstruct3[0]"/>
                     <traverse ref="sfInstruct4[0]"/>
                  </traversal>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfInstruct4" layout="tb">
                  <draw name="lblInstruct4" w="7.999958in" h="4.367mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>-Scan the signed form, and</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <traversal>
                        <traverse ref="sfInstruct5[0]"/>
                     </traversal>
                     <?renderCache.bounds 573163 9543 0 0 1417 1418 0 0?>
                     <?renderCache.textRun 26 -Scan the signed form, and 0 1417 8439 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                  <margin topInset="0mm" bottomInset="0mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <traversal>
                     <traverse operation="first" ref="lblInstruct4[0]"/>
                     <traverse ref="sfInstruct5[0]"/>
                  </traversal>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfInstruct5" layout="tb">
                  <draw name="lblInstruct5" w="7.999958in" h="4.366mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>-Send to Health Canada in electronic format.</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <traversal>
                        <traverse ref="sfInstruct6[0]"/>
                     </traversal>
                     <?renderCache.bounds 573163 9540 0 0 1417 1418 0 0?>
                     <?renderCache.textRun 44 -Send to Health Canada in electronic format. 0 1417 8438 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                  <margin topInset="0mm" bottomInset="0mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <traversal>
                     <traverse operation="first" ref="lblInstruct5[0]"/>
                     <traverse ref="sfInstruct6[0]"/>
                  </traversal>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" layout="tb" name="sfInstruct6">
                  <traversal>
                     <traverse operation="first" ref="lblInstruct6[0]"/>
                  </traversal>
                  <draw name="lblInstruct6" w="7.999958in" h="7.562mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>â€©Please note this form is to be only completed for non-prescription products that have associated Schedule A claims.</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <traversal>
                        <traverse ref="sfPartA[0]"/>
                     </traversal>
                     <?renderCache.bounds 573163 18600 0 0 1417 1418 0 0?>
                     <?renderCache.textRun 1   0 1417 7918 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?>
                     <?renderCache.textRun 115 Please note this form is to be only completed for non-prescription products that have associated Schedule A claims. 0 1417 18018 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                  <?templateDesigner expand 1?>
                  <bind match="none"/>
               </subform>
               <assist role="UL"/>
               <bind match="none"/>
               <traversal>
                  <traverse operation="first" ref="sfInstruct1[0]"/>
               </traversal>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <margin topInset="0mm" bottomInset="2.54mm"/>
            <bind match="none"/>
            <traversal>
               <traverse operation="first" ref="lblInstructionsHead[0]"/>
               <traverse ref="sfPartA[0]"/>
            </traversal>
            <?templateDesigner expand 0?></subform>
         <subform y="100.389mm" w="203.2mm" minH="42.663mm" layout="lr-tb" name="sfPartA">
            <draw name="lblPartAHead" w="8in" h="8.89mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>PART A - DRUG PRODUCT IDENTIFICATION</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="txtManufact[0]"/>
               </traversal>
               <?renderCache.bounds 573166 23760 0 0 1417 720 0 0?>
               <?renderCache.textRun 36 PART A - DRUG PRODUCT IDENTIFICATION 0 1417 15600 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <field name="txtManufact" w="203.2mm" h="12.7mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="3.81mm" placement="top">
                  <para vAlign="middle"/>
                  <value>
                     <text>Manufacturer/Sponsor*</text>
                  </value>
               </caption>
               <validate nullTest="error"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <traversal>
                  <traverse ref="txtProduct[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.drug_product_info.manufacturer"/>
            </field>
            <field name="txtProduct" w="203.2mm" h="12.7mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="3.81mm" placement="top">
                  <para vAlign="middle"/>
                  <value>
                     <text>Product Name*</text>
                  </value>
               </caption>
               <validate nullTest="error"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <traversal>
                  <traverse ref="txtDIN[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.drug_product_info.product_name"/>
            </field>
            <field name="txtDIN" w="203.2mm" h="8.89mm">
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border hand="right">
                        <edge/>
                     </border>
                     <margin/>
                     <comb numberOfCells="8"/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="26.4008mm"/>
               <para vAlign="middle"/>
               <caption reserve="88.9mm">
                  <para vAlign="middle"/>
                  <value>
                     <text>Drug Identification Number (DIN) if issued:</text>
                  </value>
               </caption>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <bind match="dataRef" ref="$.drug_product_info.product_din"/>
            </field>
            <traversal>
               <traverse operation="first" ref="lblPartAHead[0]"/>
            </traversal>
            <bind match="none"/>
            <?templateDesigner expand 0?></subform>
         <subform y="150.62mm" w="203.2mm" minH="23.78mm" layout="lr-tb" name="sfPartB">
            <draw name="lblPartBHead" w="8in" h="8.89mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>PART B - SCHEDULE A INFORMATION</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="lblCheckText[0]"/>
               </traversal>
               <?renderCache.bounds 573166 23760 0 0 1417 720 0 0?>
               <?renderCache.textRun 31 PART B - SCHEDULE A INFORMATION 0 1417 15600 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <draw name="lblCheckText" w="8in" h="8.89mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>Please check the disease(s)/disorder(s) that apply to the claims made:</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="sfDiseases[0].chkBoxG1[0]"/>
               </traversal>
               <?renderCache.bounds 573166 23760 0 0 1417 720 0 0?>
               <?renderCache.textRun 70 Please check the disease(s)/disorder(s) that apply to the claims made: 0 1417 15100 0 0 0 "Myriad Pro" 0 0 10000 ISO-8859-1?></draw>
            <subform y="-156.058mm" w="203.2mm" minH="242.418mm" layout="lr-tb" name="sfDiseases">
               <traversal>
                  <traverse operation="first" ref="chkBoxA1[0]"/>
               </traversal>
               <field name="chkBoxA1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                     <value>
                        <text>Acute alcoholism</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA2[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.alcoholism"/>
               </field>
               <field name="chkBoxG1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Gangrene</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxG2[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.gangrene"/>
               </field>
               <field name="chkBoxA2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Acute anxiety state</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA3[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.anxiety"/>
               </field>
               <field name="chkBoxG2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Glaucoma</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxH1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.glaucoma"/>
               </field>
               <field name="chkBoxA3" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Acute infectious respiratory syndromes</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA4[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.respiratory"/>
               </field>
               <field name="chkBoxH1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Haematologic bleeding disorders</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.bleeding"/>
               </field>
               <field name="chkBoxA4" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                     <value>
                        <text>Acute inflammatory and debilitating arthritis</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA5[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.arthritis"/>
               </field>
               <field name="chkBoxH2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Hepatitis</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxN1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.hepatitis"/>
               </field>
               <field name="chkBoxA5" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Acute psychotic conditions</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA6[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.psychotic"/>
               </field>
               <field name="chkBoxH3" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Hypertension</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt"/>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.hypertension"/>
               </field>
               <field name="chkBoxA6" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Addiction (except nicotine addiction)</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA7[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.addiction"/>
               </field>
               <field name="chkBoxN1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Nausea and vomiting of pregnancy</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.pregnancy_nausea"/>
               </field>
               <field name="chkBoxA7" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Appendicitis</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA8[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.appendicitis"/>
               </field>
               <field name="chkBoxO1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Obesity</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.obesity"/>
               </field>
               <field name="chkBoxA8" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Arteriosclerosis</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxA9[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.arteriosclerosis"/>
               </field>
               <field name="chkBoxR1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Rheumatic fever</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxH3[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.rheumatic_fever"/>
               </field>
               <field name="chkBoxA9" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Asthma</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxS1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.asthma"/>
               </field>
               <field name="chkBoxS1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Septicemia</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.septicemia"/>
               </field>
               <field name="chkBoxC1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Cancer</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxC2[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.cancer"/>
               </field>
               <field name="chkBoxS2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Sexually transmitted diseases</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.s_t_disease"/>
               </field>
               <field name="chkBoxC2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Congestive heart failure</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxG1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.heart_failure"/>
               </field>
               <field name="chkBoxS3" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Strangulated Hernia</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxT1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.hernia"/>
               </field>
               <field name="chkBoxC3" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Convulsions</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxD1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.convulsions"/>
               </field>
               <field name="chkBoxT1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Thrombotic and Embolic disorders</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxT2[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.thrombotic"/>
               </field>
               <field name="chkBoxD1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Dementia</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxD2[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.dementia"/>
               </field>
               <field name="chkBoxT2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Thyroid disease</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxU1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.thyroid_disease"/>
               </field>
               <field name="chkBoxD2" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Depression</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxS2[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.depression"/>
               </field>
               <field name="chkBoxU1" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Ulcer of the gastrointestinal</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="lblGuidance[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.ulcer"/>
               </field>
               <field name="chkBoxD3" w="101.6mm" h="7.62mm">
                  <ui>
                     <checkButton>
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="94.6mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Diabetes</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <traversal>
                     <traverse ref="chkBoxT1[0]"/>
                  </traversal>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <bind match="dataRef" ref="$.diabetes"/>
               </field>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <bind match="dataRef" ref="$.schedule_a_info"/>
               <?templateDesigner expand 0?></subform>
            <draw name="lblGuidance" w="8in" h="12.7mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>For further guidance and information please consult the Guidance Document: Schedule A and Section 3 to the Food and Drugs Act.</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="sfCertification[0]"/>
               </traversal>
               <?renderCache.bounds 573166 34560 0 0 1417 720 0 0?>
               <?renderCache.textRun 126 For further guidance and information please consult the Guidance Document: Schedule A and Section 3 to the Food and Drugs Act. 0 1417 20500 0 0 0 "Myriad Pro" 0 0 10000 ISO-8859-1?></draw>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <traversal>
               <traverse operation="first" ref="sfDiseases[0]"/>
            </traversal>
            <bind match="none"/>
            <?templateDesigner expand 0?></subform>
         <subform y="193.1mm" w="203.2mm" layout="lr-tb" name="sfCertification">
            <draw name="lblCertHead" w="8in" h="8.89mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>CERTIFICATION</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="lblCertText[0]"/>
               </traversal>
               <?renderCache.bounds 573166 23760 0 0 1417 720 0 0?>
               <?renderCache.textRun 13 CERTIFICATION 0 1417 15600 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <draw name="lblCertText" w="8in" h="12.7mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>I, the undersigned, certify that the information and material included in this Schedule A Form for Nonprescription Products is accurate and complete.</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <assist role="H2"/>
               <traversal>
                  <traverse ref="ddlSalutation[0]"/>
               </traversal>
               <?renderCache.bounds 573166 34560 0 0 1417 720 0 0?>
               <?renderCache.textRun 136 I, the undersigned, certify that the information and material included in this Schedule A Form for Nonprescription Products is accurate  0 1417 14500 0 0 0 "Myriad Pro" 0 0 10000 ISO-8859-1?>
               <?renderCache.textRun 13 and complete. 0 1417 26500 0 0 0 "Myriad Pro" 0 0 10000 ISO-8859-1?></draw>
            <field h="12.7mm" name="ddlSalutation" w="20.32mm">
               <border>
                  <corner thickness="0.175mm"/>
                  <edge/>
               </border>
               <caption placement="top" reserve="3.81mm">
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>Salutation*</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <choiceList>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </choiceList>
               </ui>
               <validate nullTest="error"/>
               <traversal>
                  <traverse ref="txtGivenName[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.official_salutation"/>
            </field>
            <field h="12.7mm" name="txtGivenName" w="45.72mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
               </border>
               <caption placement="top" reserve="3.81mm">
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text>Given Name*</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <validate nullTest="error"/>
               <traversal>
                  <traverse ref="txtSurname[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.official_given_name"/>
            </field>
            <field h="12.7mm" name="txtSurname" w="53.34mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
               </border>
               <caption placement="top" reserve="3.81mm">
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text>Surname*</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <validate nullTest="error"/>
               <traversal>
                  <traverse ref="txtTitle[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.official_surname"/>
            </field>
            <field h="12.7mm" name="txtTitle" w="83.82mm">
               <border>
                  <corner thickness="0.1753mm"/>
                  <edge/>
               </border>
               <caption placement="top" reserve="3.81mm">
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text>Position Title*</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <validate nullTest="error"/>
               <traversal>
                  <traverse ref="txtCompanyName[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.official_position_title"/>
            </field>
            <field h="12.7mm" name="txtCompanyName" w="203.2mm">
               <border>
                  <corner thickness="0.175mm"/>
                  <edge/>
               </border>
               <caption placement="top" reserve="3.81mm">
                  <font typeface="Myriad Pro" baselineShift="0pt"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text>Company Name (Full Name . No Abbreviations)</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit hScrollPolicy="off">
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <traversal>
                  <traverse ref="sfFinalizeButton[0]"/>
               </traversal>
               <bind match="dataRef" ref="$.company_name"/>
            </field>
            <traversal>
               <traverse operation="first" ref="lblCertHead[0]"/>
               <traverse ref="sfFinalizeButton[0]"/>
            </traversal>
            <keep intact="contentArea"/>
            <bind match="dataRef" ref="$.authorized_official_info"/>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" name="sfFinalizeButton" h="16.922mm">
            <margin topInset="5.08mm" bottomInset="2.54mm"/>
            <field name="btnFinalizeAndLock" w="28.575mm" h="6.35mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Finalize</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cFormHandler.LOCK_FORM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with finalize ::click", exception);
}

</script>
               </event>
               <traversal>
                  <traverse ref="btnModify[0]"/>
               </traversal>
            </field>
            <field name="btnModify" w="28.575mm" h="6.35mm" relevant="-print" x="31.175mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Modify</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler=	script.HCeForm.control.FormHandler;
var cSystem = script.core.System;


try{
		// set up event object
		var actionName = cHandler.UNLOCK_FORM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with  unlock button::click", exception);
}
</script>
               </event>
               <traversal>
                  <traverse ref="sfSignatureBlock[0]"/>
               </traversal>
            </field>
            <bind match="none"/>
            <?templateDesigner expand 0?>
            <traversal>
               <traverse operation="first" ref="btnFinalizeAndLock[0]"/>
               <traverse ref="sfSignatureBlock[0]"/>
            </traversal>
         </subform>
         <subform w="203.2mm" minH="23.878mm" layout="lr-tb" name="sfSignatureBlock">
            <exclGroup layout="lr-tb" name="signatureOption">
               <bind ref="$.attestation_info.signature_type" match="dataRef"/>
               <field h="6mm" name="chkDigitalID" w="28mm">
                  <caption placement="right" reserve="22mm">
                     <font typeface="Myriad Pro" size="8pt"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>Digital ID</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>DIG_SIG</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round">
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                           <?templateDesigner StyleID apcb4?></border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <border>
                     <edge/>
                     <edge presence="hidden"/>
                     <edge presence="hidden"/>
                     <edge/>
                     <corner/>
                  </border>
               </field>
               <field h="6mm" name="chkDigitalImage" w="50.8mm">
                  <caption placement="right" reserve="44.958mm">
                     <font typeface="Myriad Pro" size="8pt"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>Image Signature</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>IMG_SIG</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round">
                        <border>
                           <edge stroke="lowered"/>
                           <fill/>
                           <?templateDesigner StyleID apcb4?></border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <border>
                     <edge/>
                     <edge presence="hidden"/>
                     <edge presence="hidden"/>
                     <edge presence="hidden"/>
                     <corner/>
                  </border>
               </field>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">


var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.SignatureBlockHandler
var cSystem = script.core.System;

try
{
		// set up event object
		var actionName = cHandler.SIGNATURE_CHOICE_UI;
		var anActionEvent = cActionEvent.createInstance(actionName,this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with sig type::change", exception);
}
</script>
               </event>
               <?templateDesigner itemValuesSpecified 1?>
               <traversal>
                  <traverse ref="digSignature[0]"/>
               </traversal>
               <?templateDesigner expand 1?></exclGroup>
            <draw h="5.598mm" name="Rectangle1" w="124.399mm">
               <value>
                  <rectangle>
                     <corner presence="hidden" radius="5.08mm"/>
                     <edge presence="hidden"/>
                  </rectangle>
               </value>
               <ui>
                  <defaultUi/>
               </ui>
            </draw>
            <field h="8.939mm" name="digSignature" w="110.174mm">
               <border>
                  <corner thickness="0.175mm"/>
                  <edge/>
               </border>
               <caption reserve="25.4mm">
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="2pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>Signature*</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
               </caption>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0.508mm" leftInset="1mm" rightInset="0.508mm" topInset="0.508mm"/>
               <para vAlign="middle"/>
               <ui>
                  <signature>
                     <border>
                        <edge stroke="lowered"/>
                        <?templateDesigner StyleID aped3?></border>
                     <margin/>
                  </signature>
               </ui>
               <bind match="none"/>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =script.HCeForm.control.SignatureBlockHandler;
var cSystem = script.core.System;

try
{
		// set up event object
		var actionName = cHandler.DIG_SIG_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName,this,event.target);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with dig sig::change", exception);
}

</script>
               </event>
               <event activity="preSign" name="event__preSign">
                  <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =script.HCeForm.control.SignatureBlockHandler;
var cSystem = script.core.System;

try
{
		// set up event object
		var actionName = cHandler.SET_SIGNATURE_DATE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName,this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with dig sig::presign", exception);
}
</script>
               </event>
               <traversal>
                  <traverse ref="imgSignature[0]"/>
               </traversal>
            </field>
            <field h="8.938mm" name="imgSignature" w="110.174mm">
               <border>
                  <corner thickness="0.175mm"/>
                  <edge/>
               </border>
               <caption reserve="25.4mm">
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                  <value>
                     <text> Signature*</text>
                  </value>
               </caption>
               <margin bottomInset="0.381mm" leftInset="1.0008mm" rightInset="0.381mm" topInset="0.381mm"/>
               <ui>
                  <imageEdit data="embed">
                     <margin/>
                  </imageEdit>
               </ui>
               <bind ref="$.attestation_info.signature_image" match="dataRef"/>
               <desc>
                  <text name="embeddedHref">Unknown Embedded URI</text>
               </desc>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =script.HCeForm.control.SignatureBlockHandler;
var cSystem = script.core.System;

try
{

		// set up event object
		var actionName = cHandler.IMG_SIG_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName,this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with img sig::change", exception);
}
</script>
               </event>
               <traversal>
                  <traverse ref="ddtSignedOnAttestation[0]"/>
               </traversal>
            </field>
            <draw presence="hidden" h="8.938mm" name="Rectangle2" w="110.937mm">
               <value>
                  <rectangle>
                     <corner presence="hidden" radius="5.08mm"/>
                     <edge presence="hidden"/>
                  </rectangle>
               </value>
               <ui>
                  <defaultUi/>
               </ui>
            </draw>
            <field access="readOnly" h="8.939mm" name="ddtSignedOnAttestation" w="93.025mm">
               <border>
                  <corner thickness="0.175mm"/>
                  <corner thickness="0.175mm"/>
                  <corner thickness="0.175mm"/>
                  <edge/>
                  <corner presence="hidden" thickness="0.175mm"/>
               </border>
               <calculate override="error"/>
               <caption reserve="33.6933mm">
                  <font typeface="Myriad Pro" size="8pt"/>
                  <para vAlign="middle"/>
                  <value>
                     <text>Date (YYYY-MM-DD)*</text>
                  </value>
               </caption>
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="2.54mm" rightInset="1mm" topInset="1.0008mm"/>
               <para vAlign="middle"/>
               <ui>
                  <picture>date{YYYY-MM-DD}</picture>
                  <dateTimeEdit hScrollPolicy="off">
                     <border hand="right">
                        <edge/>
                        <?templateDesigner StyleID aped2?></border>
                     <comb numberOfCells="10"/>
                     <margin/>
                  </dateTimeEdit>
               </ui>
               <bind ref="$.attestation_info.attestation_sign_date" match="dataRef">
                  <picture>date{YYYY-MM-DD}</picture>
               </bind>
               <format>
                  <picture>date{YYYY-MM-DD}</picture>
               </format>
               <validate>
                  <picture>date{YYYY-MM-DD}</picture>
               </validate>
               <value>
                  <date/>
               </value>
            </field>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <bind match="none"/>
            <traversal>
               <traverse operation="first" ref="signatureOption[0]"/>
            </traversal>
            <?templateDesigner expand 0?>
         </subform>
         <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
         <traversal>
            <traverse operation="first" ref="sfPartB[0]"/>
         </traversal>
         <bind match="none"/>
         <?templateDesigner expand 1?>
      </subform>
      <subform w="100mm" name="script" layout="tb" presence="hidden">
         <bind match="none"/>
         <subform usehref="O:\HPFB_forms\fragments\CoreJavaScript.xdp#som($template.script.core)">
            <bind/>
            <?templateDesigner expand 0?>
         </subform>
         <subform h="50mm" name="HCeForm" w="100mm">
            <subform layout="tb" name="config" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="general">var cLog = script.core.util.Log;


var content = { 

formType: 					"SchedA",
errorInd:					"+",
formVersion: 				"2.00.01",
CANADA:						"CA",
USA:						"US",
DR_SALUT: 					"dr",
LabelStart: 				"labelStart",
LabelEnd:					"labelEnd",
DIGITAL_SIG:				"DIG_SIG",
IMAGE_SIG:					"IMG_SIG",
FRENCH:						"fr",
ENGLISH:					"en",
//Overrides
//NodeValidator_formatValidator: "",
Log_logLevel: cLog.LEVEL_TRACE,
Log_showExceptionDetail: true,
Log_writeToFile: false,


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform layout="tb" name="control" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="FormHandler">

/** Global Variables **/

var cFormNodeManager = 		script.core.model.FormNodeManager;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigManager	= 		script.core.util.ConfigurationManager

var cException = 			script.core.util.Exception;
var cLog = 					script.core.util.Log;
var cUiUtil=				script.core.util.UiUtil;
var cFailureReporter=		script.core.validation.FailureReporter;

//form specific
var cAccessibility=			script.HCeForm.util.Accessibility;
var cNumberUtil =			script.HCeForm.util.NumberFormat;
var cSignatureHandler =		script.HCeForm.control.SignatureBlockHandler;

var FRENCH=						cConfigManager.get("FRENCH");
var ENGLISH=					cConfigManager.get("ENGLISH");

	
	
//action Global
var LANGUAGE_CHANGE=			"language_change";
var INITIALIZE_FORM_ACTION=		"init_form";
var HIDE_INSTRUCTIONS=			"hideInstructions";
var SHOW_INSTRUCTIONS=			"showInstructions";
var LOCK_FORM=					"lockForm";
var UNLOCK_FORM=				"unlockForm";
var NUMBER_EIGHT_DIG_ACTION =	"eight_digits";
// FORM Nodes

//instructions
var INSTRUCTIONS_SF_FN=	cFormNodeManager.getFormNodeForKey("sfInstructionsContent");

var DIN_TXT_FN = 			cFormNodeManager.getFormNodeForKey("txtDIN");
 
var DISEASES_SF_FN = 		cFormNodeManager.getFormNodeForKey("sfDiseases");
var DISEASE1_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA1");
var DISEASE2_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA2");
var DISEASE3_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA3");
var DISEASE4_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA4");
var DISEASE5_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA5");
var DISEASE6_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA6");
var DISEASE7_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA7");
var DISEASE8_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA8");
var DISEASE9_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxA9");
var DISEASE10_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxC1");
var DISEASE11_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxC2");
var DISEASE12_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxC3");
var DISEASE13_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxD1");
var DISEASE14_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxD2");
var DISEASE15_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxD3");
var DISEASE16_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxG1");
var DISEASE17_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxG2");
var DISEASE18_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxH1");
var DISEASE19_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxH2");
var DISEASE20_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxH3");
var DISEASE21_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxN1");
var DISEASE22_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxO1");
var DISEASE23_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxR1");
var DISEASE24_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxS1");
var DISEASE25_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxS2");
var DISEASE26_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxS3");
var DISEASE27_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxT1");
var DISEASE28_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxT2");
var DISEASE29_CHK_FN = 		cFormNodeManager.getFormNodeForKey("chkBoxU1");

var SALUTATION_DDL_FN =		cFormNodeManager.getFormNodeForKey("ddlSalutation");
var GIVEN_NAME_FN =			cFormNodeManager.getFormNodeForKey("txtGivenName");
var SURNAME_FN =			cFormNodeManager.getFormNodeForKey("txtSurname");
var TITLE_FN =				cFormNodeManager.getFormNodeForKey("txtTitle");
var COMPANY_FN =			cFormNodeManager.getFormNodeForKey("txtCompanyName");

//buttons
var MODIFY_BTN_FN=		cFormNodeManager.getFormNodeForKey("btnModify");
var FINALIZE_BTN_FN=	cFormNodeManager.getFormNodeForKey("btnFinalizeAndLock");

//language Node
var LANGUAGE_CHOICE=	cFormNodeManager.getFormNodeForKey("languageChoice");

//SCRIPT NAME
var SCRIPT_OBJECT_NAME="FormHandler";



/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{

		case INITIALIZE_FORM_ACTION:
			 initializeForm();
			break;
		
		case LANGUAGE_CHANGE:
			_updateFormLanguage();
			initializeForm();
			break;
			
		case HIDE_INSTRUCTIONS:
		case SHOW_INSTRUCTIONS:	
				 toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;	
			
		case LOCK_FORM:
			var errors=validateForm();
			if(!errors){
					xfa.host.messageBox(cResourceManager.get("validation_pass"),cResourceManager.get("validation_title"));
					lockForm();
					//TODO: add form specific calls here. Example show signature block
					cSignatureHandler.setSignatureBlockState();		
			}		
			 break;
			 
		case UNLOCK_FORM:
				unlockForm();
				//TODO: add form specific calls here. Example initialize functionality, for elements that should be readonly

			break;
			
		case NUMBER_EIGHT_DIG_ACTION:
				cNumberUtil.digitTestYX(anEvent.getValue(),8,0);
			break;		 
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - initialize Form '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}



/*
* Initializes the form to it's default state
*
*
*
*/
function initializeForm(){
	
		_updateFormLanguage();	
		toggleInstructionsVisiblity(HIDE_INSTRUCTIONS);
		//initialize other controllers
		cSignatureHandler.initialiseHandler();
		//if not saving state, check if form is finalized
}


function unlockForm(form_node){
	if(!form_node){
		form_node=cFormNodeManager.getBaseNode();
	}
	form_node.unLock();
	initializeForm();
}//end fn


function lockForm(){
		var baseNode=cFormNodeManager.getBaseNode();	
		baseNode.lock();		
		MODIFY_BTN_FN.unLock(); //unlock modify button
	}//end fn


//bit of a hack,using the finalize button state
function isFinalized(){

	if(FINALIZE_BTN_FN.getNodeInstance().access!=="open"){
		return true;
	}
	return false;
}


/*
* Gets the language value for the user set language question
*@returns -a string, either en or fr
*
*/
function getCurrentLanguage(){ 

	var langNodeInstance=LANGUAGE_CHOICE.getNodeInstance();
	if(!langNodeInstance.rawValue){
		langNodeInstance.rawValue=ENGLISH;		
	}
	return(langNodeInstance.rawValue);
}//end fn


//bit of a hack,using the finalize button state. This only works if we automatically remember state, should be manual instaead
function isFinalized(){

	if(FINALIZE_BTN_FN.getNodeInstance().access!=="open"){
		return true;
	}
	return false;
}



/********* Private functions *****/

function _initializeFormNodes(){

	try{

		cControllerUtil.checkFormNode(INSTRUCTIONS_CONTENT_FN,SCRIPT_OBJECT_NAME,"INSTRUCTIONS_CONTENT_FN");	
		cControllerUtil.checkFormNode(MODIFY_BTN_FN,SCRIPT_OBJECT_NAME,"MODIFY_BTN_FN");
		cControllerUtil.checkFormNode(FINALIZE_BTN_FN,SCRIPT_OBJECT_NAME,"FINALIZE_BTN_FN");
		cControllerUtil.checkFormNode(LANGUAGE_CHOICE,SCRIPT_OBJECT_NAME,"LANGUAGE_CHOICE");
		cControllerUtil.checkFormNode(DIN_TXT_FN,SCRIPT_OBJECT_NAME,"DIN_TXT_FN");
		cControllerUtil.checkFormNode(SALUTATION_DDL_FN,SCRIPT_OBJECT_NAME,"SALUTATION_DDL_FN");	
		cControllerUtil.checkFormNode(GIVEN_NAME_FN,SCRIPT_OBJECT_NAME,"GIVEN_NAME_FN");
		cControllerUtil.checkFormNode(SURNAME_FN,SCRIPT_OBJECT_NAME,"SURNAME_FN");
		cControllerUtil.checkFormNode(TITLE_FN,SCRIPT_OBJECT_NAME,"TITLE_FN");
		cControllerUtil.checkFormNode(COMPANY_FN,SCRIPT_OBJECT_NAME,"COMPANY_FN");
		
		cControllerUtil.checkFormNode(DISEASES_SF_FN,SCRIPT_OBJECT_NAME,"DISEASES_SF_FN");
		cControllerUtil.checkFormNode(DISEASE1_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE1_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE2_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE2_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE3_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE3_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE4_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE4_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE5_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE5_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE6_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE6_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE7_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE7_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE8_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE8_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE9_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE9_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE10_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE10_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE11_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE11_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE12_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE12_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE13_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE13_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE14_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE14_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE15_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE15_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE16_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE16_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE17_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE17_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE18_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE18_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE19_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE19_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE20_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE20_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE21_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE21_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE22_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE22_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE23_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE23_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE24_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE24_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE25_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE25_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE26_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE26_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE27_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE27_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE28_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE28_CHK_FN");
		cControllerUtil.checkFormNode(DISEASE29_CHK_FN,SCRIPT_OBJECT_NAME,"DISEASE29_CHK_FN");
				
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+".initializeFormNodes()"), exception);
	}

}//end fn


function _updateFormLanguage()
{
	cResourceManager.setCurrentLanguage(getCurrentLanguage());
	cFormNodeManager.getBaseNode().updateUI();
	var rootInstance=xfa.form.nodes.item(0);
	if(FRENCH===getCurrentLanguage()){		
		rootInstance.locale="fr_CA";			
	}else{
		rootInstance.locale="en_CA";
	}
}


/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=INSTRUCTIONS_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_INSTRUCTIONS){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_INSTRUCTIONS){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

function validateForm(baseNode, nodeInstance){

	if(!baseNode){
		 baseNode=cFormNodeManager.getBaseNode();
	}
	if(!nodeInstance){
		nodeInstance=xfa.form.nodes.item(0);
	}
	
	var validationFailures=baseNode.validateNode(null,true);
	
	cAccessibility.updateColorErrorsForAccessibility(nodeInstance);
	if(validationFailures!==null){			
		xfa.host.messageBox(cFailureReporter.getFailureSummary(validationFailures),cResourceManager.get("validation_title")); 
	}
	return(validationFailures);
}//end fn

</script>
                  <script contentType="application/x-javascript" name="MasterPageHandler">

//Imports
var cLog                     = script.core.util.Log;
var cFormNodeManager         = script.core.model.FormNodeManager;
var cResourceManager         = script.core.lang.ResourceManager;
var cException               = script.core.util.Exception;
var cConfigManager=			script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cSystem = 				script.core.System;
var cUiUtil=				script.core.util.UiUtil;
var cFailureReporter=		script.core.validation.FailureReporter;

var cGeneralUtil=			script.HCeForm.util.General;
var cFormHandler=			script.HCeForm.control.FormHandler;


var INITIALIZE_MASTER_PAGE=		"intialize_masterPage";


var FORM_VERSION_TXT_FN=		cFormNodeManager.getFormNodeForKey("mp1Version");	
var TITLE_LBL_FN=				cFormNodeManager.getFormNodeForKey("mp1Title");	

var FRENCH=			cConfigManager.get("FRENCH");
var VERSION=		cConfigManager.get("formVersion");
_initializeFormNodes();


/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{


		case INITIALIZE_MASTER_PAGE:
			initialize(anEvent.getValue());
			break;
			
				
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}



function initialize(a_sfInstance){


	_setFormVersion(FORM_VERSION_TXT_FN.getNodeInstance(a_sfInstance));
	_setLabels(a_sfInstance);	
	
}


function _setFormVersion(a_versionField){
	a_versionField.rawValue=VERSION;
	cUiUtil.setCaption(a_versionField,cResourceManager.get(FORM_VERSION_TXT_FN.labelKey));//shouldnt have to do this
}

//sets the labels since this doesn't seem to work on the master page
function _setLabels(a_sfInstance){

	var titleInstance=TITLE_LBL_FN.getNodeInstance(a_sfInstance);
	cUiUtil.setCaption(titleInstance,cResourceManager.get(TITLE_LBL_FN.labelKey));	
}



/***Private functionality ***/
function _initializeFormNodes(){

	try{
	
		cControllerUtil.checkFormNode(FORM_VERSION_TXT_FN, SCRIPT_OBJECT_NAME ,"FORM_VERSION_TXT_FN");
		cControllerUtil.checkFormNode(TITLE_LBL_FN, SCRIPT_OBJECT_NAME ,"TITLE_LBL_FN");			
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                  <?templateDesigner expand 1?>
                  <script contentType="application/x-javascript" name="SignatureBlockHandler">
var cLog= 						script.core.util.Log;
var cFormNodeManager=			script.core.model.FormNodeManager;
var cResourceManager= 			script.core.lang.ResourceManager;
var cException=					script.core.util.Exception;
var cConfigManager=				script.core.util.ConfigurationManager;
var cUiUtil=					script.core.util.UiUtil;
var cControllerUtil = script.core.util.ControllerUtil;
var cGeneralUtil=				script.HCeForm.util.General;
var cFormHandler=				script.HCeForm.control.FormHandler;

var SCRIPT_OBJECT_NAME="SignatureBlockHandler";

var DIGITAL_SIG=	cConfigManager.get("DIGITAL_SIG");
var	IMAGE_SIG=		cConfigManager.get("IMAGE_SIG");

//action Global variables
var SIGNATURE_CHOICE_UI=  		"ui_sigtype"; 
var DIG_SIG_CHANGE=		 		"digSigChange";
var IMG_SIG_CHANGE=				"imgSigChange";
var SET_SIGNATURE_DATE_ACTION=	"sig_date";

//FORM NODES


//signature
var	SIG_SF_FN=					cFormNodeManager.getFormNodeForKey("sfSignatureBlock"); //signature block and attestation parent subform
var DATESIG_DTE_FN=				cFormNodeManager.getFormNodeForKey("ddtSignedOnAttestation");		//date of signature					
var DIGSIG_SIG_FN=				cFormNodeManager.getFormNodeForKey("digSignature");		//digital signature control
var IMGSIG_IMG_FN=				cFormNodeManager.getFormNodeForKey("imgSignature");		//image signature control
var SIGCHOICE_RDO_FN=			cFormNodeManager.getFormNodeForKey("signatureOption");
	



_initialiseFormNodes();


/* Action Handler
*
*
*
*/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SIGNATURE_CHOICE_UI:
				_setSignatureChoice(anEvent.getSource().rawValue);
		
			break;	
			
		case DIG_SIG_CHANGE:
		
			 	_digitalSignatureChanged(anEvent.getSource(),anEvent.getValue());
			 break;	
			
		case IMG_SIG_CHANGE:
				 _imgSignatureChanged();
			break;
		case  SET_SIGNATURE_DATE_ACTION:
				//used by presign as a way to set the date before the form is saved
				_setSignatureDate();
			break;	
			
					
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}





/*
* Called during form initialization. 
*
*
*
*/
function initialiseHandler(){

		 setSignatureBlockState();
	
}//end fn




function clearSignatures(){

	xfa.host.resetData(DIGSIG_SIG_FN.getNodeInstance().somExpression);
	xfa.host.resetData(IMGSIG_IMG_FN.getNodeInstance().somExpression);

}


/***Private functionality ***/
function _initialiseFormNodes(){

	try{
	
		cControllerUtil.checkFormNode(SIGCHOICE_RDO_FN, SCRIPT_OBJECT_NAME ,"SIGCHOICE_RDO_FN");
		cControllerUtil.checkFormNode(DIGSIG_SIG_FN, SCRIPT_OBJECT_NAME ,"DIGSIG_SIG_FN");
		cControllerUtil.checkFormNode(IMGSIG_IMG_FN, SCRIPT_OBJECT_NAME ,"IMGSIG_IMG_FN");
		cControllerUtil.checkFormNode(DATESIG_DTE_FN, SCRIPT_OBJECT_NAME ,"DATESIG_DTE_FN");
				
		cControllerUtil.checkFormNode(SIG_SF_FN,SCRIPT_OBJECT_NAME,"SIG_SF_FN");
		
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}




/* Updates the ui based on the Signature choice
* UI components are slightly awkward
*/
function _setSignatureChoice(choiceValue){

	var a_digSig=DIGSIG_SIG_FN.getNodeInstance();
	var a_imgSig=IMGSIG_IMG_FN.getNodeInstance();
	var a_dateSig=DATESIG_DTE_FN.getNodeInstance();
	//always clear date on a change
	a_dateSig.rawValue="";
	
	if(choiceValue===DIGITAL_SIG){
		cGeneralUtil.hideAndClearNodeInstance(a_imgSig);
		cUiUtil.show(a_digSig);
			
	}else if(choiceValue===IMAGE_SIG){
		cGeneralUtil.hideAndClearNodeInstance(a_digSig);
		cUiUtil.show(a_imgSig);
		
	}else{
		cGeneralUtil.hideAndClearNodeInstance(a_digSig);
		cGeneralUtil.hideAndClearNodeInstance(a_imgSig);
	}
}




function _digitalSignatureChanged(a_Sigfld,acroDoc){

var origSOM=a_Sigfld.somExpression;
var acroSignFld=acroDoc.getField(origSOM.substr(15)); 

	if(acroSignFld.type=="signature"){
		if(acroSignFld.signatureInfo().date){
			_setSignatureDate();
				
		}else{
		cLog.trace("clearing the date");
	 		_setSignatureDate(true);
	 	}
	 }

}
/** updates validation state for image signature**/
function _imgSignatureChanged(){

	var a_imgSig=IMGSIG_IMG_FN.getNodeInstance();
	
	if(a_imgSig.value.image.value){
		_setSignatureDate();
		//make it the same as digital signature.
		app.execMenuItem("SaveAs");
	}else{
		cFormHandler.unlockForm();
		_setSignatureDate(true);
	
	}	
	
}

// Sets the date of signature
function _setSignatureDate(clearValue){

	var a_dateSig=DATESIG_DTE_FN.getNodeInstance();
	if(clearValue===true){
		a_dateSig.rawValue="";
	}else{
		var today=new Date(Date.now());
		//since core util overrides Grr!
		a_dateSig.rawValue=today.getFullYear()+"-"
		+cGeneralUtil.pad(""+(today.getMonth()+1),2,'0')+"-"
		+cGeneralUtil.pad(""+today.getDate(),2,'0');
	}
}//end fn



function setSignatureBlockState(){

	var a_sigBlock=SIG_SF_FN.getNodeInstance();
	if(cFormHandler.isFinalized()){
		cUiUtil.show(a_sigBlock);
		SIG_SF_FN.unLock();
		DATESIG_DTE_FN.lock();
	}else{
		cGeneralUtil.hideAndClearNodeInstance(a_sigBlock);
	}

}//fn

/*
* TODO: needs to move to the general utiltities
*
*/
function createReportInstance(visualState,instanceManager){
	
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(newInstance){
		 	if(visualState!="visible"){
			cUiUtil.hide(newInstance);
		}
	 }
	return(newInstance);
}

               
               
               
</script>
               </variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="model" w="100mm">
               <subform w="100mm" h="50mm" name="delegate">
                  <bind match="none"/>
                  <variables>
                     <script contentType="application/x-javascript" name="DINLengthDelegate">
//imports
var cLog = 							script.core.util.Log;
var cDelegate=						script.HCeForm.model.delegate.FieldLengthDelegate;

/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=   cDelegate.createInstance();
	
	oDelegate.setErrorText("err_DINlength");
	oDelegate.setFieldLength(8);
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="FieldLengthDelegate">
//
/*******************************************************************************

 * An object that responds to information requests sent to an email FormNode.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cLog = script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;




/*******************************************************************************
 * Gets a new FieldLengthDelegate. Adobe does not allow object instances to be
 * created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new EmailDelegate instance
 */
function createInstance()
{
	return new FieldLengthDelegateClass();
}

/**
 * Class implementation
 */
function FieldLengthDelegateClass(somExpression)
{
	this.className = "FieldLengthDelegate";
	this.errorResourceAlias="";
//	this.errorResource2Alias="";	//gj
	this.fieldLength=8;
	this.formNode;	
	
	/**
	 * Sets custom error text 
	 *
	 * @param aliasName the resource alias to search for. Will be converted to localized text
	 */
	this.setErrorText = function(aliasName)
    {    	
    	this.errorResourceAlias=aliasName;
    }
//    this.setError2Text = function(alias2Name)	//gj
//  {    	
//	this.errorResource2Alias=alias2Name;		//gj
//    }
	
		/**
		 * Sets the field length to check for. If this value is not set
		 * use the maximum length of the field
		 * @param fldLength- the length to check for
		 */
		this.setFieldLength = function(fldSize)
	    {    	
	    	this.fieldLength=fldSize;
	    }
	
	
	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if the country is Canada or the US, false if it
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Dummy function stub so the interface requirements are met.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		if(!aNodeInstance.isNull){
				var temp=""+aNodeInstance.rawValue //force to a string
				var fldLength=temp.length;
				if(this.fieldLength!=fldLength){
				
					//error
					this.createError(aNodeInstance,updateDisplay,aValidationFailure)
				
				}else{
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed
			}		
			
		}			
		return aValidationFailure;
	}
	
	this.createError=function(aNodeInstance,updateDisplay,aValidationFailure)	{
	
		if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,
										cConfigurationManager.get("colourError"))
				}

//				var errorMsg=cResourceManager.get(this.errorResourceAlias) + ((aNodeInstance.parent.index)+1) + cResourceManager.get(this.errorResource2Alias);
				var errorMsg=cResourceManager.get(this.errorResourceAlias);

														
				var newValidationFailure = cValidationFailure.createInstance("FieldLengthValidation",errorMsg);
				
				if (aValidationFailure != null)
				{
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else
				{
					aValidationFailure = newValidationFailure;
				}				
	}
	
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}
}
</script>
                     <script contentType="application/x-javascript" name="CheckBoxMandatoryDelegate">
/*******************************************************************************
 * An object that validates if a field value is a number. Includes exponentials
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cConfigurationManager =			script.core.util.ConfigurationManager;
var cLog = 							script.core.util.Log;
var cObjectUtil = 					script.core.util.ObjectUtil;
var cResourceManager = 				script.core.lang.ResourceManager;
var cTypeChecker = 					script.core.util.TypeChecker;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;

//var NO=				cConfigurationManager.get("NO");

/*******************************************************************************
 * Gets a new  Delegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new Delegate instance
 */
function createInstance()
{
	return new CheckBoxMandatoryDelegateClass();
}



/**
 * Class implementation
 */
function CheckBoxMandatoryDelegateClass(somExpression)
{
	this.className = "CheckBoxMandDelegate";
	this.errorResourceAlias="error_CheckBoxMand";
	this.formNode;

	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if is mandatory*/
	this.isMandatory = function(aNode)
	{
    		return true;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}
	
	/**
	 * Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	this.setErrorText = function(aliasName)
    {
    	
    	this.errorResourceAlias=aliasName;
    }
    

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Performs custom validation. This also validates all child FormNodes if
	 * required. It may call the FormNode's _validateNode().
	 * @param aNodeInstance (optional) the instance of Adobe Node that should
	 *		  be validated. Required if this is below a collection of instances
	 *		  (e.g. a repeating subform). When unspecified, this may use the
	 *		  FormNode's getNodeInstances() to get all instances of this Node
	 *		  to validate.
	 * @param updateDisplay (optional) a boolean that indicates whether this
	 *		  should automatically update the colour of the node to reflect
	 *		  whether it passed validation. Defaults to true.
	 * @param aValidationFailure (optional) the ValidationFailure that this
	 *		  should append its validationFailures to. This is only used
	 *		  internally when this is called recursively.
	 * @return a ValidationFailure containing all failures that were
	 *		   encountered. Returns aValidationFailure if that parameter was
	 *		   used. Null if there were no failures.
	 * @throws an UnexpectedDataType Exception if aNodeInstance isn't an Adobe
	 *		   Node.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		
		// It must be called before the validation to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		var didFail=false;
		if(!aNodeInstance.isNull){
		
			if(aNodeInstance.rawValue===0){
				didFail=true;
			}	
		
			if(didFail){
				
				if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,
										cConfigurationManager.get("colourError"))
				}													
				var newValidationFailure = cValidationFailure.createInstance(
										"CheckBoxManadatoryValidation",
										cResourceManager.get(
										this.errorResourceAlias));
				if (aValidationFailure != null){
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else{
					aValidationFailure = newValidationFailure;
				}						
			}else{		
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed	
			}//end else	
		}//ifNull
				
		return aValidationFailure;
	}//validatenode
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}

}
</script>
                     <script contentType="application/x-javascript" name="CheckBoxGroupDelegate">
//
/*******************************************************************************
 * An object that responds to information requests sent to a set of check boxes
 * FormNode. This determines whether one of the children check boxes is checked
 * and responds accordingly.
 * Note that this assumes that the all check boxes are children to the same
 * parent.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cConfigurationManager = script.core.util.ConfigurationManager;
var cLog = script.core.util.Log;
var cObjectUtil = script.core.util.ObjectUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cTypeChecker = script.core.util.TypeChecker;
var cUiUtil = script.core.util.UiUtil;
var cValidationFailure = script.core.validation.ValidationFailure;


var NO=0;		//	cConfigurationManager.get("NO");
var YES=1;		//cConfigurationManager.get("YES");

/*******************************************************************************
 * Gets a new MandatoryCheckBoxDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new MandatoryCheckBoxDelegate instance
 */
function createInstance()
{
	return new CheckBoxGroupDelegateClass();
}

/**
 * Given a parent node which contains a set of checkBoxes in its
 * children, check if at least one of the checkboxes is checked.
 * @param aNode the parent Adobe Node instance that is being processed.
 * @return a boolean - true if at least one checkbox is checked.
 */
function isMandatoryCheckBoxPassed(aNode)
{
	var checkBoxArray = this._getCheckBoxNodeArray(aNode);
	return this._isOneCheckBoxChecked(checkBoxArray);
}

/**
 * Class implementation
 */
function CheckBoxGroupDelegateClass(somExpression)
{
	this.className = "MandatoryCheckBoxDelegate";
	this.errorResourceAlias="error_mandatoryCheckBoxSet";
	this.formNode;

	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - 
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
    	/*if (aNode != undefined)
    	{
    		var childrenNodes = this._getChildrenNodes(aNode);
    	}*/
		return true;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}
	
	/**
	 * Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	this.setErrorText = function(aliasName)
    {
    	
    	this.errorResourceAlias=aliasName;
    }
	

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Performs custom validation. This also validates all child FormNodes if
	 * required. It may call the FormNode's _validateNode().
	 * @param aNodeInstance (optional) the instance of Adobe Node that should
	 *		  be validated. Required if this is below a collection of instances
	 *		  (e.g. a repeating subform). When unspecified, this may use the
	 *		  FormNode's getNodeInstances() to get all instances of this Node
	 *		  to validate.
	 * @param updateDisplay (optional) a boolean that indicates whether this
	 *		  should automatically update the colour of the node to reflect
	 *		  whether it passed validation. Defaults to true.
	 * @param aValidationFailure (optional) the ValidationFailure that this
	 *		  should append its validationFailures to. This is only used
	 *		  internally when this is called recursively.
	 * @return a ValidationFailure containing all failures that were
	 *		   encountered. Returns aValidationFailure if that parameter was
	 *		   used. Null if there were no failures.
	 * @throws an UnexpectedDataType Exception if aNodeInstance isn't an Adobe
	 *		   Node.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// This is to perform all other validations beside the checkBoxes
		// It must be called before the checkBoxes validation to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);

		var checkBoxArray = this._getCheckBoxNodeArray(aNodeInstance);

		// Check if none of the checkBoxes is checked
		if (!this._isOneCheckBoxChecked(checkBoxArray))
		{
			for (var i=0; i &lt; checkBoxArray.length; i++)
			{
				cUiUtil.setColour(checkBoxArray[i],
									cConfigurationManager.get("colourError"));
			}
			var newValidationFailure = cValidationFailure.createInstance(
										"CheckBoxSet",
										cResourceManager.get(
										this.errorResourceAlias));
			if (aValidationFailure != null)
			{
				aValidationFailure.addNestedValidationFailure(newValidationFailure);
			}
			else
			{
				aValidationFailure = newValidationFailure;
			}
		}
		else
		{
			for (var i=0; i &lt; checkBoxArray.length; i++)
			{
				cUiUtil.resetColour(checkBoxArray[i]); //In case it previously failed
			}
		}
		
		return aValidationFailure;
	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}

	//===== PRIVATE ============================================================
	/**
	 * Gets the children nodes from the given parent node and collect the ones
	 * that are checkBoxes into a node array. Issues a warning if the no children
	 * nodes can be found.
	 * @param aNode the parent Adobe Node instance that is being processed.
	 * @return an array - contains children nodes that are checkBoxes.
	 */
	this._getCheckBoxNodeArray = function(aNode)
	{
		var childrenNodeList = aNode.nodes;
		var checkBoxArray = new Array();

		if (childrenNodeList != null)
		{
			for(var i=0; i &lt; childrenNodeList.length; i++)
			{
				if (cTypeChecker.isCheckBox(childrenNodeList.item(i)))
				{
					checkBoxArray.push(childrenNodeList.item(i));
				}
			}
			return checkBoxArray;
		}
		cLog.warn("CheckBoxGroupDelegate._getCheckBoxNodeArray(aNode)"
				  + " couldn't find any child node for " + aNode.somExpression);
		return null;
	}

	/**
	 * Verify if at least one of the checkBox is checked in a checkBox array.
	 * @param aNodeArray the Adobe Node Array instance that is being processed.
	 * @return a boolean -true if at least one checkBox is checked.
	 */
	this._isOneCheckBoxChecked = function(aNodeArray)
	{
		for (var i=0; i &lt; aNodeArray.length; i++)
		{
			if (aNodeArray[i].rawValue == YES)
			{
				return true;
			}
		}
		return false;
	}
}
</script>
                     <script contentType="application/x-javascript" name="DiseasesClaimedDelegate">
//imports
var cLog = 				script.core.util.Log;
var cDelegate=			script.HCeForm.model.delegate.CheckBoxGroupDelegate;
var cConfigManager=		script.core.util.ConfigurationManager;



//environment symptoms checkbox
function createInstance()
{
	var oDelegate=  cDelegate.createInstance();
	oDelegate.setErrorText("error_DiseasesClaimed");
	return oDelegate;
}
</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="nodeDefinitions" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="MasterPage1">
var content={

	masterPage: {
		somExpression: "#pageSet",
		parentNodeKey: "root"},

	//Master Page / Form Page
	mp1FormPage: {
		somExpression: "Page1",
		parentNodeKey: "masterPage"},
		
	mp1Version:{
		somExpression:	"txtFormVersion",
		parentNodeKey:	"mp1FormPage",
		labelKey:		"lbVersion"},		
		
	mp1SFEnLogo: {
		somExpression:	"sfLogo_en",
		parentNodeKey:	"mp1FormPage"},
					
	mp1HcLogo: {
		somExpression:	"imgHCLogo",
		parentNodeKey:	"mp1SFEnLogo",
		toolTipKey:		"lbHealthCanada"},
	
	mp1SFFrLogo: {
		somExpression:	"sfLogo_fr",
		parentNodeKey:	"mp1FormPage"},
	
	mp1HcLogoFr: {
		somExpression:	"imgHCLogo_fr",
		parentNodeKey:	"mp1SFFrLogo",
		toolTipKey:		"lbHealthCanada"},	

	
	mp1Title:  {
		somExpression:	"lblMasterTitle",
		parentNodeKey:	"mp1FormPage",
		labelKey:		"lbApplTitle"},				
			
}
</script>
                  <script contentType="application/x-javascript" name="General">	
var content={
		root: {
			somExpression: "xfa.form.SchedA", 
		},	
		sfPage1: {
			somExpression: "sfPage1",
			parentNodeKey: "root"},	
		
		sfMainHeader: {
			somExpression: "sfMainHeader",
			parentNodeKey: "sfPage1"},
				
		lblFormTitle: {
			somExpression: "lblFormTitle",
			parentNodeKey: "sfMainHeader",
			labelKey:		"lbApplTitle"},
			
		languageChoice: {
			somExpression: "pageLanguage",
			parentNodeKey: "sfMainHeader"},
			
		chkEnglish: {
			somExpression: "chkEnglish",
			parentNodeKey: "languageChoice"},
			
		chkFrancais: {
			somExpression: "chkFrancais",
			parentNodeKey: "languageChoice"},		
			
			
}
</script>
                  <script contentType="application/x-javascript" name="Instructions">

var content={

	sfPreInstruct: {
		somExpression: "sfPreInstruct",
		parentNodeKey: "sfPage1"},
		
	sfPreInstruct1: {
		somExpression: "sfPreInstruct1",
		parentNodeKey: "sfPreInstruct"},
	
	lblMandatory: {
		somExpression: "lblMandatory",
		parentNodeKey: "sfPreInstruct1",
		labelKey:		"lbMandatory"},
	
	sfPreInstruct2: {
		somExpression: "sfPreInstruct2",
		parentNodeKey: "sfPreInstruct"},
	
	lblValidation: {
		somExpression: "lblValidation",
		parentNodeKey: "sfPreInstruct2",
		labelKey:		"lbValidError"},
			
	sfInstructions: {
			somExpression: "sfInstructions",
			parentNodeKey: "sfPage1"},
		
	btnHideInstructions: {
			somExpression: "btnHideInstructions",
			parentNodeKey: "sfInstructions",
			labelKey:		"lbHideInstruct"},
		
	btnViewInstructions: {
			somExpression:	"btnViewInstructions",
			parentNodeKey:	"sfInstructions",
			labelKey:		"lbShowInstruct"},
	
	
	sfInstructionsContent: {
		somExpression: "sfInstructionsContent",
		parentNodeKey: "sfPage1"},

	lblInstructionsHead: {
		somExpression: "lblInstructionsHead",
		parentNodeKey: "sfInstructionsContent",
		labelKey:		"lbInstructionsHeading"
		},
	
	
	sfInstructList: {
		somExpression: "sfInstructList",
		parentNodeKey: "sfInstructionsContent"},
	
	sfInstruct1: {
		somExpression: "sfInstruct1",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct1: {
		somExpression: "lblInstruct1",
		parentNodeKey: "sfInstruct1",
		labelKey:		"lbInstruct1"},
	
	sfInstruct2: {
		somExpression: "sfInstruct2",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct2: {
		somExpression: "lblInstruct2",
		parentNodeKey: "sfInstruct2",
		labelKey:		"lbInstruct2"},
	
	sfInstruct3: {
		somExpression: "sfInstruct3",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct3: {
		somExpression: "lblInstruct3",
		parentNodeKey: "sfInstruct3",
		labelKey:		"lbInstruct3"},
	
	sfInstruct4: {
		somExpression: "sfInstruct4",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct4: {
		somExpression: "lblInstruct4",
		parentNodeKey: "sfInstruct4",
		labelKey:		"lbInstruct4"},
	
	sfInstruct5: {
		somExpression: "sfInstruct5",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct5: {
		somExpression: "lblInstruct5",
		parentNodeKey: "sfInstruct5",
		labelKey:		"lbInstruct5"},
		
	sfInstruct6: {
		somExpression: "sfInstruct6",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct6: {
		somExpression: "lblInstruct6",
		parentNodeKey: "sfInstruct6",
		labelKey:		"lbInstruct6"},
				
	//add more instructions here
}
</script>
                  <script contentType="application/x-javascript" name="PartA">
var content={

	sfPartA: {
		somExpression: "sfPartA",
		parentNodeKey: "sfPage1"},

	lblPartAHead: {
		somExpression: "lblPartAHead",
		parentNodeKey: "sfPartA",
		labelKey:		"lbPartAHead",
		},

	txtManufact: {
		somExpression: "txtManufact",
		parentNodeKey: "sfPartA",
		toolTipKey:		"ttManufact",
		labelKey:		"lbManufact",
		},

	txtProduct: {
		somExpression: "txtProduct",
		parentNodeKey: "sfPartA",
		labelKey:		"lbProduct",
		},

	txtDIN: {
		somExpression: "txtDIN",
		parentNodeKey: "sfPartA",
		labelKey:		"lbDIN",
		toolTipKey:		"ttDIN",
		delegate:		"script.HCeForm.model.delegate.DINLengthDelegate",
		},

}
</script>
                  <script contentType="application/x-javascript" name="PartB">
var content={

	sfPartB: {
		somExpression: "sfPartB",
		parentNodeKey: "sfPage1",
		},
	
	lblPartBHead: {
		somExpression: "lblPartBHead",
		parentNodeKey: "sfPartB",
		labelKey:		"lbPartBHead",
		},
	
	lblCheckText: {
		somExpression: "lblCheckText",
		parentNodeKey: "sfPartB",
		labelKey:		"lbCheckText",
		},

	sfDiseases: {
		somExpression: "sfDiseases",
		parentNodeKey: "sfPartB",
		delegate:		"script.HCeForm.model.delegate.DiseasesClaimedDelegate"
		},	
	
	chkBoxA1: {
		somExpression: "chkBoxA1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA1",
		toolTipKey:		"ttBoxA1",
		},
		
	chkBoxG1: {
		somExpression: "chkBoxG1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxG1",
		},
	
	chkBoxA2: {
		somExpression: "chkBoxA2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA2",
		},
	
	chkBoxG2: {
		somExpression: "chkBoxG2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxG2",
		},
	
	chkBoxA3: {
		somExpression: "chkBoxA3",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA3",
		},
	
	chkBoxH1: {
		somExpression: "chkBoxH1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxH1",
		},
	
	chkBoxA4: {
		somExpression: "chkBoxA4",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA4",
		},
	
	chkBoxH2: {
		somExpression: "chkBoxH2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxH2",
		},
	
	chkBoxA5: {
		somExpression: "chkBoxA5",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA5",
		},
	
	chkBoxH3: {
		somExpression: "chkBoxH3",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxH3",
		},
	
	chkBoxA6: {
		somExpression: "chkBoxA6",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA6",
		},
	
	chkBoxN1: {
		somExpression: "chkBoxN1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxN1",
		},
	
	chkBoxA7: {
		somExpression: "chkBoxA7",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA7",
		},
	
	chkBoxO1: {
		somExpression: "chkBoxO1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxO1",
		},
	
	chkBoxA8: {
		somExpression: "chkBoxA8",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA8",
		},
	
	chkBoxR1: {
		somExpression: "chkBoxR1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxR1",
		},
	
	chkBoxA9: {
		somExpression: "chkBoxA9",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxA9",
		},
	
	chkBoxS1: {
		somExpression: "chkBoxS1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxS1",
		},
	
	chkBoxC1: {
		somExpression: "chkBoxC1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxC1",
		},
	
	chkBoxS2: {
		somExpression: "chkBoxS2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxS2",
		},
	
	chkBoxC2: {
		somExpression: "chkBoxC2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxC2",
		},
	
	chkBoxS3: {
		somExpression: "chkBoxS3",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxS3",
		},
	
	chkBoxC3: {
		somExpression: "chkBoxC3",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxC3",
		},
	
	chkBoxT1: {
		somExpression: "chkBoxT1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxT1",
		},
	
	chkBoxD1: {
		somExpression: "chkBoxD1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxD1",
		},
	
	chkBoxT2: {
		somExpression: "chkBoxT2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxT2",
		},
	
	chkBoxD2: {
		somExpression: "chkBoxD2",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxD2",
		},
	
	chkBoxU1: {
		somExpression: "chkBoxU1",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxU1",
		},
	
	chkBoxD3: {
		somExpression: "chkBoxD3",
		parentNodeKey: "sfDiseases",
		labelKey:		"lbBoxD3",
		},
	
	lblGuidance: {
		somExpression: "lblGuidance",
		parentNodeKey: "sfPartB",
		labelKey:		"lbGuidance",
		},

}
</script>
                  <script contentType="application/x-javascript" name="Certification">
var content={

	sfCertification: {
		somExpression: "sfCertification",
		parentNodeKey: "sfPage1",
		},
	
	lblCertHead: {
		somExpression: "lblCertHead",
		parentNodeKey: "sfCertification",
		labelKey:		"lbCertHead",
		},
	
	lblCertText: {
		somExpression: "lblCertText",
		parentNodeKey: "sfCertification",
		labelKey:		"lbCertText",
		},
	
	ddlSalutation: {
		somExpression: "ddlSalutation",
		parentNodeKey: "sfCertification",
		labelKey:		"lbSalutation",
		pickListKey:	"listSalut",
		},
	
	txtGivenName: {
		somExpression: "txtGivenName",
		parentNodeKey: "sfCertification",
		labelKey:		"lbGivenName",
		},
	
	txtSurname: {
		somExpression: "txtSurname",
		parentNodeKey: "sfCertification",
		labelKey:		"lbSurname",
		},
	
	txtTitle: {
		somExpression: "txtTitle",
		parentNodeKey: "sfCertification",
		labelKey:		"lbTitle",
		},
	
	txtCompanyName: {
		somExpression: "txtCompanyName",
		parentNodeKey: "sfCertification",
		labelKey:		"lbCompanyName",
		},
		
}
	
</script>
                  <script contentType="application/x-javascript" name="Finalize">

var content={

	sfFinalizeButton: {
		somExpression: "sfFinalizeButton",
		parentNodeKey: "sfPage1"}, //TODO: reparent if needed
	
	btnFinalizeAndLock: {
		somExpression: "btnFinalizeAndLock",
		parentNodeKey: "sfFinalizeButton",
		labelKey: 		"lbFinalize"},
	
	btnModify: {
		somExpression: "btnModify",
		parentNodeKey: "sfFinalizeButton",
		labelKey: 		"lbModify"},

	sfSignatureBlock: {
		somExpression: "sfSignatureBlock",
		parentNodeKey: "sfPage1"},
	
	
	signatureOption: {
		somExpression: "signatureOption",
		parentNodeKey: "sfSignatureBlock"},
	
	chkDigitalID: {
		somExpression: "chkDigitalID",
		parentNodeKey: "signatureOption",
		labelKey: 		"lbDigitalID"},
	
	chkDigitalImage: {
		somExpression: "chkDigitalImage",
		parentNodeKey: "signatureOption",
		labelKey: 		"lbDigitalImage"},
	
	digSignature: {
		somExpression: "digSignature",
		parentNodeKey: "sfSignatureBlock",
		labelKey: "lbSignature"},
		
	imgSignature: {
		somExpression: "imgSignature",
		parentNodeKey: "sfSignatureBlock",
		labelKey: "lbSignature"},
	
	ddtSignedOnAttestation: {
		somExpression: "ddtSignedOnAttestation",
		parentNodeKey: "sfSignatureBlock",
		labelKey: "lbSigDate"},
		
}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="general_en">//nov2015
var content={
	
	lbHideInstruct:		"Hide Instructions",
	lbShowInstruct:		"Show Instructions",
	lbOfLCText:			"of",
	lbMandatory:		"Asterisk symbol (*) denotes a mandatory field.",
	lbValidError:		"Plus symbol (+) denotes a validation error or missing data.",
	lbVersion:			"Revision No.:",
	lbHealthCanada:		"Health Canada",
	lbFinalize:			"Finalize",
	lbModify:			"Modify",
	lbDigitalID:		"Digital ID",
	lbDigitalImage:		"Image Signature",
	lbSignature:		"Signature",
	lbSigDate:			"Date (YYYY-MM-DD)",
	validation_title:	"Validation Results",
	validation_pass:	"This form successfully validated and locked from editing. Please sign the form before submitting to Health Canada. In order to modify fields after finalizing, you must press the 'Modify' button.",  //override core
	message_saveAs: 	"This form has encountered a problem.", //override oore

	
}
</script>
                  <script contentType="application/x-javascript" name="general_fr">//nov2015
var content={

		
	lbHideInstruct:		"Masquer les instructions",
	lbShowInstruct:		"Afficher les instructions",
	lbOfLCText:			"sur",
	lbMandatory:		"AstÃ©risque (*)  dÃ©montre un champ obligatoire.",
	lbValidError:		"Symbole plus (+) dÃ©montre un champ avec une erreur de validation ou des donnÃ©es manquantes.",
	lbVersion:			"Revision No.:",
	lbHealthCanada:		"SantÃ©  Canada",
	lbFinalize:			"Finaliser",
	lbModify:			"Modifier",
	lbDigitalID:		"Digital ID",
	lbDigitalImage:		"Image Signature",
	lbSignature:		"Signature",
	lbSigDate:			"Date (AAAA-MM-JJ)",
	validation_title:	"RÃ©sultats de la validation",
	validation_pass:	"Le formulaire a Ã©tÃ© validÃ© et verrouiller contre l'Ã©dition. Il peut maintenant Ãªtre imprimÃ© et envoyÃ© Ã  SantÃ© Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton Modifier.",
	message_saveAs: 	"Ce formulaire a eu un problÃ¨me.",
	
	lbLockSuccess:		"Le formulaire a Ã©tÃ© validÃ© et verrouiller contre l'Ã©dition. Il peut maintenant Ãªtre imprimÃ© et envoyÃ© Ã  SantÃ© Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton Modifier.",
	
}
</script>
                  <script contentType="application/x-javascript" name="instruct_en">

var content={

	lbInstruct1:		"This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the \"Finalize\" button at the bottom of the form before printing and signing. ",
	lbInstruct2:		"Once finalized, the fields in the form becomes \"locked\" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the \"Modify\" button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the \"Finalize\" button again to re-validate entries.\n\nAlternatively:",  
	lbInstruct3:		"-Save, print, sign and date the completed form;", 
	lbInstruct4:		"-Scan the signed form, and", 
	lbInstruct5:		"-Send to Health Canada in electronic format.", 
	lbInstruct6:		"\nPlease note this form is to be only completed for non-prescription products that have associated Schedule A claims.",  
}
</script>
                  <script contentType="application/x-javascript" name="instruct_fr">

var content={

	lbInstruct1:		"Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriÃ©s, cliquez sur le bouton \"Finaliser\" au bas du formulaire avant de l'imprimer et de le signer.",
	lbInstruct2:		"Une fois finalise, les champs seront verrouiller (les champs ne peuvent plus etre modifie). Pour pouvoir modifier les champs apres la finalisation, vous devez cliquer sur le bouton \"Modification\" au bas du formulaire. Apres avoir modifie les champs desires et avant d'imprimer et de signer, cliquez sur le bouton \"Finalisation\" a nouveau afin de valider les entrees.\n\nAlternativement:",  
	lbInstruct3:		"-Enregistrez, imprimez, signez et datez le formulaire rempli;", 
	lbInstruct4:		"-Scannez le formulaire signe et", 
	lbInstruct5:		"-Envoyer a Sante Canada en format electronique.", 
	lbInstruct6:		"\nVeuillez noter que ce formulaire ne doit Ãªtre rempli que pour les produits sans ordonnance associÃ©s aux maladies Ã©noncÃ©es Ã  lâ€™annexe A.", 
	
}
</script>
                  <script contentType="application/x-javascript" name="heading_en">

var content={

		lbInstructionsHeading: 		"INSTRUCTIONS",		
		lbApplTitle : 				"Schedule A Form for Nonprescription Products\n(excluding Natural Health Products)",	//TODO: update form title	

}
</script>
                  <script contentType="application/x-javascript" name="heading_fr">

var content={

	lbInstructionsHeading: 		"INSTRUCTIONS",	
	lbApplTitle : 				"FORMULAIRE POUR LES MÃ‰DICAMENTS EN VENTE LIBRE POUR DES MALADIES RÃ‰PERTORIÃ‰ES Ã€\nLâ€™ANNEXE A\n( Ã€ L`EXCEPTION DES PRODUITS DE SANTÃ‰ NATURELS)", //TODO: update form title




}
</script>
                  <script contentType="application/x-javascript" name="partA_en">
var content={

	lbPartAHead:		"PART A - DRUG PRODUCT IDENTIFICATION",
	lbManufact:		"Manufacturer/Sponsor",
	lbProduct:		"Product Name",
	lbDIN:			"Drug Identification Number (DIN) if issued:",
	
	ttManufact:		"Manufacturer or Sponsor",
	ttDIN:			"Drug Identification Number (DIN) if issued. 8 digits",
	
	err_DINlength:	"Part A. The DIN must be 8 digits. If your DIN has only 7 digits, please enter the number zero as the first digit.",
	
}
</script>
                  <script contentType="application/x-javascript" name="partA_fr">
var content={

	lbPartAHead:		"PARTIE A - IDENTIFICATION DU MÃ‰DICAMENT",
	lbManufact:		"Fabricant/promoteur :",
	lbProduct:		"Nom du produit :",
	lbDIN:			"NumÃ©ro d'identification du mÃ©dicament (DIN), s'il y a lieu :",
	
	ttManufact:		"Nom du fabricant",
	ttDIN:			"NumÃ©ro d'identification du mÃ©dicament (DIN), s'il y a lieu. 8 chiffres",
	
	err_DINlength:	"Partie A. Le DIN doit avoir 8 chiffres. Si votre DIN a seulement 7 chiffres, entrer le numÃ©ro zÃ©ro comme premier chiffre.",
	
}
</script>
                  <script contentType="application/x-javascript" name="partB_en">
var content={

	lbPartBHead:		"PART B - SCHEDULE A INFORMATION",
	lbCheckText:	"Please check the disease(s)/disorder(s) that apply to the claims made:",
	lbBoxA1:		"Acute alcoholism",
	lbBoxA2:		"Acute anxiety state",
	lbBoxA3:		"Acute infectious respiratory syndromes",
	lbBoxA4:		"Acute inflammatory and debilitating arthritis",
	lbBoxA5:		"Acute psychotic conditions",
	lbBoxA6:		"Addiction (except nicotine addiction)",
	lbBoxA7:		"Appendicitis",
	lbBoxA8:		"Arteriosclerosis",
	lbBoxA9:		"Asthma",
	lbBoxC1:		"Cancer",
	lbBoxC2:		"Congestive heart failure",
	lbBoxC3:		"Convulsions",
	lbBoxD1:		"Dementia",
	lbBoxD2:		"Depression",
	lbBoxD3:		"Diabetes",
	lbBoxG1:		"Gangrene",
	lbBoxG2:		"Glaucoma",
	lbBoxH1:		"Haematologic bleeding disorders",
	lbBoxH2:		"Hepatitis",
	lbBoxH3:		"Hypertension",
	lbBoxN1:		"Nausea and vomiting of pregnancy",
	lbBoxO1:		"Obesity",
	lbBoxR1:		"Rheumatic fever",
	lbBoxS1:		"Septicemia",
	lbBoxS2:		"Sexually transmitted diseases",
	lbBoxS3:		"Strangulated hernia",
	lbBoxT1:		"Thrombotic and Embolic disorders",
	lbBoxT2:		"Thyroid disease",
	lbBoxU1:		"Ulcer of the gastrointestinal",
	lbGuidance:		"For further guidance and information please consult the Guidance Document: Schedule A and Section 3 to the Food and Drugs Act.",
	
	ttBoxA1:		"Acute alcoholism. Disease or disorder 1 of 29.",
	ttBoxA2:		"Acute anxiety state. 2 of 29.",
	ttBoxA3:		"Acute infectious respiratory syndromes. 3 of 29.",
	ttBoxA4:		"Acute inflammatory and debilitating arthritis. 4 of 29.",
	ttBoxA5:		"Acute psychotic conditions. 5 of 29.",
	ttBoxA6:		"Addiction (except nicotine addiction). 6 of 29.",
	ttBoxA7:		"Appendicitis. 7 of 29.",
	ttBoxA8:		"Arteriosclerosis. 8 of 29.",
	ttBoxA9:		"Asthma. 9 of 29.",
	ttBoxC1:		"Cancer. 10 of 29.",
	ttBoxC2:		"Congestive heart failure. 11 of 29.",
	ttBoxC3:		"Convulsions. 12 of 29.",
	ttBoxD1:		"Dementia. 13 of 29.",
	ttBoxD2:		"Depression. 14 of 29.",
	ttBoxD3:		"Diabetes. 15 of 29.",
	ttBoxG1:		"Gangrene. 16 of 29.",
	ttBoxG2:		"Glaucoma. 17 of 29.",
	ttBoxH1:		"Haematologic bleeding disorders. 18 of 29.",
	ttBoxH2:		"Hepatitis. 19 of 29.",
	ttBoxH3:		"Hypertension. 20 of 29.",
	ttBoxN1:		"Nausea and vomiting of pregnancy. 21 of 29.",
	ttBoxO1:		"Obesity. 22 of 29.",
	ttBoxR1:		"Rheumatic fever. 23 of 29.",
	ttBoxS1:		"Septicemia. 24 of 29.",
	ttBoxS2:		"Sexually transmitted diseases. 25 of 29.",
	ttBoxS3:		"Strangulated hernia. 26 of 29.",
	ttBoxT1:		"Thrombotic and Embolic disorders. 27 of 29.",
	ttBoxT2:		"Thyroid disease. 28 of 29.",
	ttBoxU1:		"Ulcer of the gastrointestinal. 29 of 29.",
	
	error_DiseasesClaimed:		"Part B. At least one disease or disorder must be selected.",
}
</script>
                  <script contentType="application/x-javascript" name="partB_fr">
var content={

	lbPartBHead:		"PARTIE B - INFORMATION SUR L'ANNEXE A",
	lbCheckText:	"Veuillez cocher la/le ou les maladie(s)/trouble(s) qui s'applique(nt) Ã  la demande soumise :",
	lbBoxA1:		"Alcoolisme aigu",
	lbBoxA2:		"AnxiÃ©tÃ© sÃ©vÃ¨re",
	lbBoxA3:		"Syndrome respiratoire aigu sÃ©vÃ¨re",
	lbBoxA4:		"Arthrite aiguÃ«, inflammatoire et dÃ©bilitante",
	lbBoxA5:		"Troubles psychotiques aigus",
	lbBoxA6:		"DÃ©pendance (sauf la dÃ©pendance Ã  la nicotine)",
	lbBoxA7:		"Appendicite",
	lbBoxA8:		"ArtÃ©riosclÃ©rose",
	lbBoxA9:		"Asthme",
	lbBoxC1:		"Cancer",
	lbBoxC2:		"Insuffisance cardiaque congestive",
	lbBoxC3:		"Convulsions",
	lbBoxD1:		"DÃ©mence",
	lbBoxD2:		"DÃ©pression",
	lbBoxD3:		"DiabÃ¨te",
	lbBoxG1:		"GangrÃ¨ne",
	lbBoxG2:		"Glaucome",
	lbBoxH1:		"Affections hÃ©matologiques hÃ©morragiques",
	lbBoxH2:		"HÃ©patite",
	lbBoxH3:		"Hypertension",
	lbBoxN1:		"NausÃ©es et vomissements de la grossesse",
	lbBoxO1:		"ObÃ©sitÃ©",
	lbBoxR1:		"Rhumatisme articulaire aigu",
	lbBoxS1:		"SepticÃ©mie",
	lbBoxS2:		"Maladies transmises sexuellement",
	lbBoxS3:		"Hernie Ã©tranglÃ©e",
	lbBoxT1:		"Maladies thrombotiques et embolies",
	lbBoxT2:		"Glande thyroÃ¯dienne (affections)",
	lbBoxU1:		"UlcÃ¨res des voies gastro-intestinales",
	lbGuidance:		"Pour obtenir davantage d'orientation et de plus amples renseignements, veuillez consulter le document d'orientation : Annexe A et Article 3 de la Loi sur les aliments et drogues.",
	
	ttBoxA1:		"Alcoolisme aigu. Maladie ou trouble 1 de 29.",
	ttBoxA2:		"AnxiÃ©tÃ© sÃ©vÃ¨re. 2 de 29.",
	ttBoxA3:		"Syndrome respiratoire aigu sÃ©vÃ¨re. 3 de 29.",
	ttBoxA4:		"Arthrite aiguÃ«, inflammatoire et dÃ©bilitante. 4 de 29.",
	ttBoxA5:		"Troubles psychotiques aigus. 5 de 29.",
	ttBoxA6:		"DÃ©pendance (sauf la dÃ©pendance Ã  la nicotine). 6 de 29.",
	ttBoxA7:		"Appendicite. 7 de 29.",
	ttBoxA8:		"ArtÃ©riosclÃ©rose. 8 de 29.",
	ttBoxA9:		"Asthme. 9 de 29.",
	ttBoxC1:		"Cancer. 10 de 29.",
	ttBoxC2:		"Insuffisance cardiaque congestive. 11 de 29.",
	ttBoxC3:		"Convulsions. 12 de 29.",
	ttBoxD1:		"DÃ©mence. 13 de 29.",
	ttBoxD2:		"DÃ©pression. 14 de 29.",
	ttBoxD3:		"DiabÃ¨te. 15 de 29.",
	ttBoxG1:		"GangrÃ¨ne. 16 de 29.",
	ttBoxG2:		"Glaucome. 17 de 29.",
	ttBoxH1:		"Affections hÃ©matologiques hÃ©morragiques. 18 de 29.",
	ttBoxH2:		"HÃ©patite. 19 de 29.",
	ttBoxH3:		"Hypertension. 20 de 29.",
	ttBoxN1:		"NausÃ©es et vomissements de la grossesse. 21 de 29.",
	ttBoxO1:		"ObÃ©sitÃ©. 22 de 29.",
	ttBoxR1:		"Rhumatisme articulaire aigu. 23 de 29.",
	ttBoxS1:		"SepticÃ©mie. 24 de 29.",
	ttBoxS2:		"Maladies transmises sexuellement. 25 de 29.",
	ttBoxS3:		"Hernie Ã©tranglÃ©e. 26 de 29.",
	ttBoxT1:		"Maladies thrombotiques et embolies. 27 de 29.",
	ttBoxT2:		"Glande thyroÃ¯dienne (affections). 28 de 29.",
	ttBoxU1:		"UlcÃ¨res des voies gastro-intestinales. 29 de 29.",
	
	error_DiseasesClaimed:		"Partie B. Au moins une maladie ou un trouble doivent Ãªtre sÃ©lectionnÃ©s.",
	
}
</script>
                  <script contentType="application/x-javascript" name="certification_en">
var content={

		lbCertHead:		"CERTIFICATION",
		lbCertText:		"I, the undersigned, certify that the information and material included in this Schedule A Form for Nonprescription Products is accurate and complete.",
		lbSalutation:	"Salutation",
		lbGivenName:	"Given Name",
		lbSurname:		"Surname",
		lbTitle:		"Position Title",
		lbCompanyName:	"Name of Company to which the Authorized Signing Official belongs",




	listSalut: [
			["MR","Mr"],
			["MS","Ms"],
			["MRS","Mrs"],
			["DR","Dr"],
	],	
}


</script>
                  <script contentType="application/x-javascript" name="certification_fr">
var content={

		lbCertHead:		"CERTIFICATION",
		lbCertText:		"Je, soussignÃ©(e), confirme que les renseignements et le matÃ©riel contenus dans la prÃ©sente demande relative Ã  l'Annexe A portant sur les mÃ©dicaments sans ordonnance sont exacts et complets.",
		lbSalutation:	"Appel",
		lbGivenName:	"PrÃ©nom",
		lbSurname:		"Nom",
		lbTitle:		"Titre du poste",
		lbCompanyName:	"Nom de l'entreprise Ã  laquelle est liÃ© le signataire autorisÃ©",

	listSalut: [
			["MR","M"],
			["MS","Mlle"],
			["MRS","Mme"],
			["DR","Dr"],
	],	

		
}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 0?></subform>
            <subform h="50mm" name="util" w="100mm">
               <variables>
                  <script usehref="O:\HPFB_forms\Fragments\util\NumberFormat.xdp#som($template.form1.#subform.#variables.NumberFormat)"/>
                  <script usehref="O:\HPFB_forms\fragments\util\General.xdp#som($template.form1.#subform.#variables.General)"/>
                  <script usehref="O:\HPFB_forms\fragments\Accessibility.xdp#som($template.form1.#subform.#variables.Accessibility)"/>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <bind match="none"/>
            <?templateDesigner expand 1?></subform>
         <?templateDesigner expand 1?></subform>
      <proto/>
      <desc>
         <text name="version"> 2.00.01</text>
         <text name="title">Schedule A Form for Nonprescription Products â€©(excluding Natural Health Products)</text>
         <text name="creator">Health Canada</text>
         <text name="created">2016-04-21</text>
         <text name="department">Health Canada</text>
         <text name="issued">2016</text>
      </desc>
      <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
      <event activity="initialize" name="event__initialize">
         <script contentType="application/x-javascript">
var cFormHandler=script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cSystem = script.core.System;


try{
		// set up event object
		var actionName = cFormHandler.INITIALIZE_FORM_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with  form initialize::initialize", exception);
}



</script>
      </event>
      <event activity="prePrint" ref="$host" name="event__prePrint">
         <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName =  cFormHandler.HIDE_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with hide instructions ::preprint", exception);
}
</script>
      </event>
      <?templateDesigner Hyphenation excludeInitialCap:1, excludeAllCaps:1, wordCharCnt:7, remainCharCnt:3, pushCharCnt:3?>
      <?templateDesigner expand 1?>
      <?renderCache.subset "Myriad Pro" 0 0 ISO-8859-1 4 220 56 000100030009000A000B000C000D000E000F00100014001B001C0022002400250026002700280029002A002E002F003000310033003400350036003A00420043004400450046004700480049004A004C004D004E004F005000510053005400550056005700580059005A005B00CE "()*+,-./3:;ACDEFGHIMNOPRSTUYabcdefghiklmnoprstuvwxyzÃ§?>
      <?renderCache.subset "Myriad Pro" 1 0 ISO-8859-1 4 160 40 00010009000A000E00220023002400250026002700280029002A002D002E002F0030003100330034003500360042004400450046004700480049004A004D004E004F0050005100530054005500560059 ()-ABCDEFGHILMNOPRSTUacdefghilmnoprstux?>
   </subform>
   <?templateDesigner DefaultPreviewDynamic 1?>
   <?originalXFAVersion http://www.xfa.org/schema/xfa-template/2.8/?>
   <?templateDesigner Grid show:0, snap:0, units:0, color:ff8080, origin:(0,0), interval:(125000,125000), objsnap:0, guidesnap:0, pagecentersnap:827642484?>
   <?templateDesigner DefaultLanguage JavaScript?>
   <?templateDesigner DefaultRunAt client?>
   <?acrobat JavaScript strictScoping?>
   <?PDFPrintOptions embedViewerPrefs 0?>
   <?PDFPrintOptions embedPrintOnFormOpen 0?>
   <?PDFPrintOptions scalingPrefs 0?>
   <?PDFPrintOptions enforceScalingPrefs 0?>
   <?PDFPrintOptions paperSource 0?>
   <?PDFPrintOptions duplexMode 0?>
   <?templateDesigner DefaultPreviewType interactive?>
   <?templateDesigner DefaultPreviewPagination simplex?>
   <?templateDesigner XDPPreviewFormat 20?>
   <?templateDesigner DefaultCaptionFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner DefaultValueFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner ValidationMessaging noMessages?>
   <?templateDesigner FormTargetVersion 30?>
   <?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?>
   <?templateDesigner Zoom 127?>
   <?templateDesigner SaveTaggedPDF 1?>
   <?templateDesigner SavePDFWithEmbeddedFonts 1?>
   <?templateDesigner SavePDFWithLog 0?></template>
<config xmlns="http://www.xfa.org/schema/xci/3.0/">
   <agent name="designer">
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo/>
      </pdf>
   </agent>
   <present>
      <!--  [0..n]  -->
      <pdf>
         <!--  [0..n]  -->
         <tagged>1</tagged>
         <fontInfo>
            <embed>1</embed>
         </fontInfo>
         <version>1.7</version>
         <adobeExtensionLevel>5</adobeExtensionLevel>
      </pdf>
      <common>
         <data>
            <xsl>
               <uri/>
            </xsl>
            <outputXSL>
               <uri/>
            </outputXSL>
         </data>
      </common>
      <script>
         <runScripts>server</runScripts>
      </script>
      <cache>
         <macroCache/>
      </cache>
      <xdp>
         <packets>*</packets>
      </xdp>
   </present>
   <psMap>
      <font typeface="Calibri" psName="Calibri" weight="normal" posture="normal"/>
   </psMap>
   <acrobat>
      <common>
         <validationMessaging>noMessages</validationMessaging>
      </common>
   </acrobat>
</config>
<localeSet xmlns="http://www.xfa.org/schema/xfa-locale-set/2.7/">
   <locale name="en_CA" desc="English (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">D-MMM-YY</datePattern>
         <datePattern name="short">DD/MM/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="fr_CA" desc="French (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>janvier</month>
            <month>fÃ©vrier</month>
            <month>mars</month>
            <month>avril</month>
            <month>mai</month>
            <month>juin</month>
            <month>juillet</month>
            <month>aoÃ»t</month>
            <month>septembre</month>
            <month>octobre</month>
            <month>novembre</month>
            <month>dÃ©cembre</month>
         </monthNames>
         <monthNames abbr="1">
            <month>janv.</month>
            <month>fÃ©vr.</month>
            <month>mars</month>
            <month>avr.</month>
            <month>mai</month>
            <month>juin</month>
            <month>juil.</month>
            <month>aoÃ»t</month>
            <month>sept.</month>
            <month>oct.</month>
            <month>nov.</month>
            <month>dÃ©c.</month>
         </monthNames>
         <dayNames>
            <day>dimanche</day>
            <day>lundi</day>
            <day>mardi</day>
            <day>mercredi</day>
            <day>jeudi</day>
            <day>vendredi</day>
            <day>samedi</day>
         </dayNames>
         <dayNames abbr="1">
            <day>dim.</day>
            <day>lun.</day>
            <day>mar.</day>
            <day>mer.</day>
            <day>jeu.</day>
            <day>ven.</day>
            <day>sam.</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>av. J.-C.</era>
            <era>ap. J.-C.</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE D MMMM YYYY</datePattern>
         <datePattern name="long">D MMMM YYYY</datePattern>
         <datePattern name="med">YY-MM-DD</datePattern>
         <datePattern name="short">YY-MM-DD</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">HH' h 'MM' min 'SS' s 'Z</timePattern>
         <timePattern name="long">HH:MM:SS Z</timePattern>
         <timePattern name="med">HH:MM:SS</timePattern>
         <timePattern name="short">HH:MM</timePattern>
      </timePatterns>
      <dateTimeSymbols>GaMjkHmsSEDFwWxhKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">z,zz9.99 $|(z,zz9.99$)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">,</numberSymbol>
         <numberSymbol name="grouping">Â </numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">,</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
</localeSet>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
   <xfa:data xfa:dataNode="dataGroup"/>
   <dd:dataDescription xmlns:dd="http://ns.adobe.com/data-description/" dd:name="QIU">
      <QIU>
         <form_lang/>
         <form_version/>
         <drug_product_info>
            <manufacturer/>
            <product_name/>
            <product_din/>
         </drug_product_info>
         <schedule_a_info>
            <alcoholism/>
            <anxiety/>
            <respiratory/>
            <arthritis/>
            <psychotic/>
            <addiction/>
            <appendicitis/>
            <arteriosclerosis/>
            <asthma/>
            <cancer/>
            <heart_failure/>
            <convulsions/>
            <dementia/>
            <depression/>
            <diabetes/>
            <gangrene/>
            <glaucoma/>
            <bleeding/>
            <hepatitis/>
            <hypertension/>
            <pregnancy_nausea/>
            <obesity/>
            <rheumatic_fever/>
            <septicemia/>
            <s_t_disease/>
            <hernia/>
            <thrombotic/>
            <thyroid_disease/>
            <ulcer/>
         </schedule_a_info>
         <authorized_official_info>
            <official_salutation/>
            <official_given_name/>
            <official_surname/>
            <official_position_title/>
            <company_name/>
         </authorized_official_info>
         <attestation_info>
            <attestation_salutation/>
            <attestation_given_name/>
            <attestation_surname/>
            <attestation_title/>
            <signature_type/>
            <signature_image/>
            <attestation_sign_date/>
         </attestation_info>
      </QIU>
   </dd:dataDescription>
</xfa:datasets>
<connectionSet xmlns="http://www.xfa.org/schema/xfa-connection-set/2.8/">
   <xsdConnection name="DataConnection" dataDescription="QIU">
      <uri>..\..\xml_schema\6-12_Scedule-A.xsd</uri>
      <rootElement>QIU</rootElement>
      <?templateDesigner fileDigest shaHash="9cp7afUu9luV0CZp+jU4QMddIww="?></xsdConnection>
</connectionSet>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFASchemaXSD">
   <!--    <hpfb:include schemaLocation="./common/contact.xsd"/>     -->
   <hpfb:include schemaLocation="#XFAXSDReference"/>
   <hpfb:include schemaLocation="#XFAXSDReference1"/>
   <!-- ****************************** -->
   <!-- ELEMENT DECLARATIONS -->
   <!-- ****************************** -->
   <hpfb:element name="QIU" type="schedule_a_form_content"/>
   <hpfb:element name="form_lang"/>
   <hpfb:element name="form_version"/>
   <hpfb:element name="drug_product_info" type="drug_product_content"/>
   <hpfb:element name="manufacturer"/>
   <hpfb:element name="product_name"/>
   <hpfb:element name="product_din"/>
   <hpfb:element name="schedule_a_info" type="schedule_a_content"/>
   <hpfb:element name="alcoholism"/>
   <hpfb:element name="anxiety"/>
   <hpfb:element name="respiratory"/>
   <hpfb:element name="arthritis"/>
   <hpfb:element name="psychotic"/>
   <hpfb:element name="addiction"/>
   <hpfb:element name="appendicitis"/>
   <hpfb:element name="arteriosclerosis"/>
   <hpfb:element name="asthma"/>
   <hpfb:element name="cancer"/>
   <hpfb:element name="heart_failure"/>
   <hpfb:element name="convulsions"/>
   <hpfb:element name="dementia"/>
   <hpfb:element name="depression"/>
   <hpfb:element name="diabetes"/>
   <hpfb:element name="gangrene"/>
   <hpfb:element name="glaucoma"/>
   <hpfb:element name="bleeding"/>
   <hpfb:element name="hepatitis"/>
   <hpfb:element name="hypertension"/>
   <hpfb:element name="pregnancy_nausea"/>
   <hpfb:element name="obesity"/>
   <hpfb:element name="rheumatic_fever"/>
   <hpfb:element name="septicemia"/>
   <hpfb:element name="s_t_disease"/>
   <hpfb:element name="hernia"/>
   <hpfb:element name="thrombotic"/>
   <hpfb:element name="thyroid_disease"/>
   <hpfb:element name="ulcer"/>
   <hpfb:element name="authorized_official_info" type="authorized_official_content"/>
   <hpfb:element name="official_salutation"/>
   <hpfb:element name="official_given_name"/>
   <hpfb:element name="official_surname"/>
   <hpfb:element name="official_position_title"/>
   <hpfb:element name="company_name"/>
   <hpfb:element name="attestation_info" type="attest_content"/>
   <!--Main form structure-->
   <hpfb:complexType name="schedule_a_form_content">
      <hpfb:sequence>
         <hpfb:element ref="form_lang"/>
         <hpfb:element ref="form_version"/>
         <hpfb:element ref="drug_product_info"/>
         <hpfb:element ref="schedule_a_info"/>
         <hpfb:element ref="authorized_official_info"/>
         <hpfb:element ref="attestation_info"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="drug_product_content">
      <hpfb:sequence>
         <hpfb:element ref="manufacturer"/>
         <hpfb:element ref="product_name"/>
         <hpfb:element ref="product_din"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="schedule_a_content">
      <hpfb:sequence>
         <hpfb:element ref="alcoholism"/>
         <hpfb:element ref="anxiety"/>
         <hpfb:element ref="respiratory"/>
         <hpfb:element ref="arthritis"/>
         <hpfb:element ref="psychotic"/>
         <hpfb:element ref="addiction"/>
         <hpfb:element ref="appendicitis"/>
         <hpfb:element ref="arteriosclerosis"/>
         <hpfb:element ref="asthma"/>
         <hpfb:element ref="cancer"/>
         <hpfb:element ref="heart_failure"/>
         <hpfb:element ref="convulsions"/>
         <hpfb:element ref="dementia"/>
         <hpfb:element ref="depression"/>
         <hpfb:element ref="diabetes"/>
         <hpfb:element ref="gangrene"/>
         <hpfb:element ref="glaucoma"/>
         <hpfb:element ref="bleeding"/>
         <hpfb:element ref="hepatitis"/>
         <hpfb:element ref="hypertension"/>
         <hpfb:element ref="pregnancy_nausea"/>
         <hpfb:element ref="obesity"/>
         <hpfb:element ref="rheumatic_fever"/>
         <hpfb:element ref="septicemia"/>
         <hpfb:element ref="s_t_disease"/>
         <hpfb:element ref="hernia"/>
         <hpfb:element ref="thrombotic"/>
         <hpfb:element ref="thyroid_disease"/>
         <hpfb:element ref="ulcer"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="authorized_official_content">
      <hpfb:sequence>
         <hpfb:element ref="official_salutation"/>
         <hpfb:element ref="official_given_name"/>
         <hpfb:element ref="official_surname"/>
         <hpfb:element ref="official_position_title"/>
         <hpfb:element ref="company_name"/>
      </hpfb:sequence>
   </hpfb:complexType>
</hpfb:schema>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFAXSDReference">
   <hpfb:include schemaLocation="#XFAXSDReference1"/>
   <!-- ****************************** -->
   <!-- ELEMENT DECLARATIONS -->
   <!-- ****************************** -->
   <hpfb:element name="attestation_info" type="attest_content"/>
   <hpfb:element name="attestation_salutation"/>
   <hpfb:element name="attestation_given_name"/>
   <hpfb:element name="attestation_surname"/>
   <hpfb:element name="attestation_title"/>
   <hpfb:element name="signature_type"/>
   <hpfb:element name="signature_image"/>
   <hpfb:element name="attestation_sign_date" type="yyyymmdd_date_content"/>
   <!-- ****************************** -->
   <!-- ELEMENT TYPE DECLARATIONS -->
   <!-- ****************************** -->
   <!-- main xml structure-->
   <hpfb:complexType name="attest_content">
      <hpfb:sequence>
         <hpfb:element ref="attestation_salutation"/>
         <hpfb:element ref="attestation_given_name"/>
         <hpfb:element ref="attestation_surname"/>
         <hpfb:element ref="attestation_title"/>
         <hpfb:element ref="signature_type"/>
         <hpfb:element ref="signature_image"/>
         <hpfb:element ref="attestation_sign_date"/>
      </hpfb:sequence>
   </hpfb:complexType>
</hpfb:schema>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFAXSDReference1">
   <hpfb:simpleType name="yyyymmdd_date_content">
      <hpfb:restriction base="hpfb:date">
         <hpfb:pattern value="[0-9]{4}-[0-9]{2}-[0-9]{2}"/>
      </hpfb:restriction>
   </hpfb:simpleType>
</hpfb:schema>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2011/06/07-10:39:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about="">
         <xmp:MetadataDate>2016-05-18T19:46:35Z</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe LiveCycle Designer ES 10.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about="">
         <pdf:Producer>Adobe LiveCycle Designer ES 10.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" rdf:about="">
         <xmpMM:DocumentID>uuid:2fe67f18-53d3-4f1f-af76-3bad638519f3</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:4cb937a1-40a5-4c1f-b8aa-1e2e03695ac1</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about="">
         <dc:format>application/pdf</dc:format>
         <dc:date>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>2016-04-21</rdf:value>
                  <dc:element-refinement>dc:created</dc:element-refinement>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>2016</rdf:value>
                  <dc:element-refinement>dc:issued</dc:element-refinement>
               </rdf:li>
            </rdf:Seq>
         </dc:date>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Health Canada</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Schedule A Form for Nonprescription Products â€©(excluding Natural Health Products)</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description xmlns:desc="http://ns.adobe.com/xfa/promoted-desc/" rdf:about="">
         <desc:version rdf:parseType="Resource">
            <rdf:value> 2.00.01</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:version>
         <desc:department rdf:parseType="Resource">
            <rdf:value>Health Canada</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:department>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
   <annots/>
</xfdf></xdp:xdp>
