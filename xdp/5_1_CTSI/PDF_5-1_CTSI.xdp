<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="AdobeLiveCycleDesignerES_V10.0.2.20120224.1.869952" APIVersion="3.5.12002.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2016-05-20T18:10:12Z" uuid="08c521b7-78c5-4c5b-8c05-4fb326d35c67">
<template xmlns="http://www.xfa.org/schema/xfa-template/3.0/">
   <?formServer defaultPDFRenderFormat acrobat9.1dynamic?>
   <?formServer allowRenderCaching 0?>
   <?formServer formModel client?>
   <subform name="CTSI" layout="tb" locale="en_CA" restoreState="auto">
      <pageSet>
         <pageArea name="Page1" id="Page1">
            <contentArea w="203.2mm" h="249.476mm" x="6.351mm" y="16.198mm" name="contentArea"/>
            <medium stock="default" short="612pt" long="792pt"/>
            <subform x="6.35mm" y="6.35mm" w="47.625mm" name="sfLogo_en" layout="tb">
               <bind match="none"/>
               <draw h="6.35mm" name="imgHCLogo" w="47.625mm">
                  <ui>
                     <imageEdit/>
                  </ui>
                  <value>
                     <image contentType="image/jpeg" href="..\..\FIP logos\HC-SC.jpg"/>
                  </value>
                  <?templateDesigner expand 1?>
                  <assist>
                     <speak priority="toolTip"/>
                  </assist>
               </draw>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

var cFormHandler=script.HCeForm.control.FormHandler;
var cConfigManager=script.core.util.ConfigurationManager;

var FRENCH=			cConfigManager.get("FRENCH");

if(cFormHandler.getCurrentLanguage()===FRENCH){
	this.presence="hidden";
}else{
	this.presence="visible";
}
</script>
               </event>
               <?templateDesigner expand 1?></subform>
            <subform x="6.35mm" y="6.35mm" w="47.625mm" name="sfLogo_fr" layout="tb">
               <bind match="none"/>
               <draw name="imgHCLogo_fr" w="47.625mm" h="6.35mm">
                  <value>
                     <image href="..\..\FIP logos\SC-HC.jpg" contentType="image/jpeg"/>
                  </value>
                  <ui>
                     <imageEdit/>
                  </ui>
                  <assist>
                     <speak priority="toolTip"/>
                  </assist>
               </draw>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">

var cFormHandler=script.HCeForm.control.FormHandler;
var cConfigManager=script.core.util.ConfigurationManager;

var FRENCH=			cConfigManager.get("FRENCH");

if(cFormHandler.getCurrentLanguage()===FRENCH){
	this.presence="visible";
}else{
	this.presence="hidden";
}

</script>
               </event>
               <?templateDesigner expand 1?></subform>
            <draw h="6.352mm" name="imgCanada" w="20.744mm" y="268.392mm" x="6.136mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/gif" href="..\..\Images\wordmark.gif"/>
               </value>
               <assist>
                  <speak disable="1"/>
               </assist>
            </draw>
            <field name="eventHandler" y="269.349mm" x="61.309mm" w="10.54mm" h="6.35mm" access="protected" presence="invisible">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <bind match="none"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">
/*******************************************************************************
 * This updates the FormPage's language when a new instance is created. This is
 * here because there is nowhere to put it on the master page itself.
 */

//imports
var cActionEvent = script.core.event.ActionEvent;
var cMasterPageHandler = script.HCeForm.control.MasterPageHandler;
var cSystem = script.core.System;

try
{
	// set up event object
	var actionName = cMasterPageHandler.INITIALIZE_MASTER_PAGE;
	var anActionEvent = cActionEvent.createInstance(actionName,this, this.parent);

	// deploy event to controller
	cMasterPageHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cSystem.processUnhandledException(exception);
}


</script>
               </event>
            </field>
            <field access="protected" name="Pages" x="93.955mm" y="267.931mm" minW="27.99mm" minH="5.588mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="none"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
var cResourceManager = 		script.core.lang.ResourceManager;

var textVal="";
textVal="Page "+xfa.layout.page(this)+" "+cResourceManager.get("lbOfLCText")+" " + xfa.layout.pageCount();
this.rawValue=textVal;
</script>
               </event>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="txtFormVersion" y="267.931mm" x="28.722mm" w="28.707mm" h="5.588mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden"/>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <caption reserve="15.9508mm">
                  <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                  <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <value>
                     <text>Revision No:</text>
                  </value>
               </caption>
               <bind match="dataRef" ref="$.form_version"/>
            </field>
            <draw name="lblMasterTitle" y="267.931mm" x="123.143mm" w="85.581mm" h="5.588mm" hAlign="right">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>Title</text>
               </value>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para vAlign="middle" hAlign="right"/>
               <?renderCache.bounds 239758 13006 0 0 1417 1417 0 0?>
               <?renderCache.textRun 5 Title 0 226783 9920 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
            <field name="btnAddSite" y="4.901mm" x="171.43mm" w="37.348mm" h="5.08mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Add Clinical Trial Site</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border hand="right">
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cHandler=	script.HCeForm.control.TrialsHandler
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cHandler.ADD_SITE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with show instructions ::click", exception);
}
</script>
               </event>
            </field>
            <field name="btnResetChanges" y="4.808mm" x="124.135mm" w="45.72mm" h="5.08mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Accept All Changes</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
                  <font typeface="Myriad Pro" size="8pt"/>
               </caption>
               <border hand="right">
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">


var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.TrialsHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.RESET_SUBTYPES;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with sub type ::exit", exception);
}
</script>
               </event>
            </field>
            <?templateDesigner expand 1?></pageArea>
         <?templateDesigner expand 0?></pageSet>
      <subform w="576pt" name="sfPage1" layout="lr-tb">
         <subform w="203.2mm" name="sfMainHeader" layout="lr-tb">
            <draw name="lblFormTitle" w="202.184mm" h="9.42mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>CLINICAL TRIAL SITE INFORMATION FORM</text>
               </value>
               <font size="12pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <assist role="H1"/>
               <?renderCache.bounds 570286 23868 0 0 1417 1417 0 0?>
               <?renderCache.textRun 36 CLINICAL TRIAL SITE INFORMATION FORM 0 174524 16351 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <exclGroup name="pageLanguage" layout="lr-tb" presence="hidden">
               <field h="6mm" name="chkEnglish" w="23.28mm" locale="en_CA" relevant="-print">
                  <caption placement="right" reserve="16.812mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>English</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>en</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</text>
                  </value>
               </field>
               <field h="6mm" name="chkFrancais" w="26.316mm" locale="fr_CA" relevant="-print">
                  <caption placement="right" reserve="19.81mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>Français</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>fr</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                  </value>
               </field>
               <?templateDesigner itemValuesSpecified 1?>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cMainHandler = script.HCeForm.control.FormHandler;

try
{
	// set up event object
	var actionName = cMainHandler.LANGUAGE_CHANGE;
	var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
	
	// deploy event to controller
	cMainHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with pageLanguage::change", exception);
}
</script>
               </event>
               <validate scriptTest="warning"/>
               <margin leftInset="50.8mm"/>
               <?templateDesigner expand 0?>
               <bind match="dataRef" ref="$.form_lang"/>
            </exclGroup>
            <bind match="none"/>
            <?templateDesigner expand 1?></subform>
         <subform y="15.42mm" w="202.184mm" layout="lr-tb" name="sfPreInstruct">
            <subform w="203.2mm" layout="lr-tb" name="sfPreInstruct1">
               <draw name="lblMandatory" w="202.184mm" h="6.35mm" colSpan="2">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Asterisk (*) denotes a mandatory field.</text>
                  </value>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
                  <para vAlign="middle"/>
                  <assist>
                     <speak disable="1"/>
                  </assist>
                  <?renderCache.bounds 570286 15166 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 39 Asterisk (*) denotes a mandatory field. 0 1417 11000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <assist role="LI"/>
               <bind match="none"/>
               <?templateDesigner expand 0?></subform>
            <assist role="UL"/>
            <margin bottomInset="2.54mm"/>
            <bind match="none"/>
            <subform w="202.184mm" layout="lr-tb" name="sfPreInstruct2">
               <draw name="lblValidation" w="202.184mm" h="6.35mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Plus (+) denotes a validation error or missing data.</text>
                  </value>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para vAlign="middle"/>
                  <?renderCache.bounds 570286 15166 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 52 Plus (+) denotes a validation error or missing data. 0 1417 11000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <assist role="LI"/>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 0?>
            <subform w="202.08mm" name="sfPreInstruct3" layout="tb">
               <bind match="none"/>
               <assist role="LI"/>
               <draw name="lblPreInstruct3" w="7.955903in" h="6.35mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Please retain a copy of the completed CTSI form. The addition of new sites and changes to submitted sites can be done using the content on this form.</text>
                  </value>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <para vAlign="middle"/>
                  <?renderCache.bounds 569991 15166 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 149 Please retain a copy of the completed CTSI form. The addition of new sites and changes to submitted sites can be done using the content on this form. 0 1417 11000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
               <?templateDesigner expand 1?></subform>
         </subform>
         <subform w="202.184mm" name="sfInstructions">
            <field name="btnViewInstructions" w="31.75mm" h="6.35mm" relevant="-print" x="0.001mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Show Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cFormHandler.SHOW_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with show instructions ::click", exception);
}
</script>
               </event>
            </field>
            <draw name="Text6" w="4.576mm" h="6.35mm" x="31.75mm">
               <ui>
                  <textEdit/>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <?renderCache.bounds 10137 15166 0 0 1417 1417 0 0?></draw>
            <field name="btnHideInstructions" w="31.75mm" h="6.35mm" relevant="-print" x="36.326mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Hide Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName =  cFormHandler.HIDE_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with hide instructions ::click", exception);
}

</script>
               </event>
            </field>
            <border>
               <edge presence="hidden"/>
               <corner presence="hidden" thickness="0.175mm"/>
            </border>
            <margin bottomInset="5.08mm"/>
            <bind match="none"/>
            <?templateDesigner expand 0?>
            <draw name="lblGuidance" w="48.533mm" h="5.2331mm" relevant="-print" x="73.536mm" y="0.78mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="letter-spacing:0in"><a href="http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/guide-ld/patmedbrev/pmreg3_mbreg3-eng.php">Guidance Document</a></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
            </draw>
         </subform>
         <subform w="202.184mm" layout="lr-tb" name="sfInstructionsContent">
            <draw name="lblInstructionsHead" w="202.184mm" h="6.249mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>INSTRUCTIONS</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
                  <edge presence="hidden"/>
                  <edge/>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
                  <corner thickness="0.175mm"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <assist role="H2"/>
               <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
               <?renderCache.textRun 12 INSTRUCTIONS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform y="6.249mm" w="203.199mm" minH="59.561mm" layout="lr-tb" name="sfInstructList">
               <subform w="202.184mm" name="sfInstruct1" layout="tb">
                  <draw name="lblInstruct1" w="7.999958in" minH="3.81mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the \"Finalize\" button at the bottom of the form before printing and signing. </text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                  </draw>
                  <margin bottomInset="2.54mm" topInset="2.54mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform w="202.184mm" name="sfInstruct2" layout="tb">
                  <draw name="lblInstruct2" w="7.999958in" minH="3.81mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>Once finalized, the fields in the form becomes "locked" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the "Modify" button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the "Finalize" button again to re-validate entries.   Alternatively:</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                  </draw>
                  <margin topInset="0mm" bottomInset="2.54mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform w="202.184mm" name="sfInstruct3" layout="tb">
                  <draw name="lblInstruct3" w="202.184mm" minH="3.81mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>-Save, print, sign and date the completed form;</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                  </draw>
                  <margin topInset="0mm" bottomInset="2.54mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform w="202.184mm" name="sfInstruct4" layout="tb">
                  <draw name="lblInstruct4" w="202.184mm" minH="3.81mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>-Scan the signed form, and</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                  </draw>
                  <margin topInset="0mm" bottomInset="2.54mm"/>
                  <assist role="LI"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <assist role="UL"/>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <margin topInset="0mm" bottomInset="2.54mm"/>
            <bind match="none"/>
            <?templateDesigner expand 0?></subform>
         <subform w="202.184mm" name="sfCTSIContent" layout="tb">
            <subform w="202.184mm" name="sfPart1" layout="lr-tb">
               <subform w="202.184mm" name="sfPart1Heading" layout="tb">
                  <draw name="lblPart1" w="202.184mm" h="6.249mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>PART 1 -CLINICAL TRIAL PROTOCOL INFORMATION</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <edge presence="hidden"/>
                        <edge/>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                        <corner thickness="0.175mm"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <assist role="H2"/>
                     <?renderCache.bounds 570286 14878 0 0 1417 1418 0 0?>
                     <?renderCache.textRun 43 PART 1 -CLINICAL TRIAL PROTOCOL INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                  <margin topInset="0.762mm" bottomInset="0.762mm"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform y="6.249mm" w="202.184mm" minH="6.249mm" layout="lr-tb" name="sfSubAction">
                  <exclGroup name="rdoTrialType" layout="lr-tb" w="201.676mm">
                     <?templateDesigner itemValuesSpecified 1?>
                     <field w="190.959mm" h="6mm" name="rdoNew">
                        <ui>
                           <checkButton shape="round">
                              <border>
                                 <edge stroke="lowered"/>
                                 <fill/>
                              </border>
                           </checkButton>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption placement="right" reserve="184.96mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>This is the first time these clinical trial sites are being submitted to Health Canada for this clinical trial protocol.</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <value>
                           <text>NEW</text>
                        </value>
                        <items>
                           <text>NEW</text>
                        </items>
                     </field>
                     <field w="196.533mm" h="6mm" name="rdoAmend">
                        <ui>
                           <checkButton shape="round">
                              <border>
                                 <edge stroke="lowered"/>
                                 <fill/>
                              </border>
                           </checkButton>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption placement="right" reserve="190.533mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>The clinical trial sites are being amended for this clinical trial protocol.  A CTSI form has been previously submitted to Health Canada for this clinical trial protocol.</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <items>
                           <text>AMEND</text>
                        </items>
                     </field>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.TrialsHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.SUBTYPE_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with sub type ::exit", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.submission_info.application_type"/>
                     <?templateDesigner expand 1?></exclGroup>
                  <subform y="12mm" w="201.748mm" layout="lr-tb" name="sfPart3Notice">
                     <bind match="none"/>
                     <draw name="lblPart3" w="201.748mm" h="5.2331mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>Please proceed to Part 3 of this form to update the clinical trial site information.</text>
                        </value>
                        <font size="8pt" typeface="Myriad Pro" weight="bold"/>
                        <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="5.08mm" rightInset="0.5mm"/>
                        <para vAlign="middle"/>
                        <?renderCache.bounds 556067 12000 0 0 14400 1417 0 0?>
                        <?renderCache.textRun 84 Please proceed to Part 3 of this form to update the clinical trial site information. 0 14400 9417 0 0 0 "Myriad Pro" 1 0 8000 ISO-8859-1?></draw>
                     <occur min="0"/>
                     <?templateDesigner expand 1?></subform>
                  <subform name="sfActionHeading" layout="lr-tb" w="202.184mm">
                     <draw name="lblAction" w="202.184mm" h="6.249mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>CLINICAL TRIAL SUBMISSION ACTION REQUIREMENTS</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                              <color value="255,255,153"/>
                           </fill>
                           <edge presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <assist role="H2"/>
                        <?renderCache.bounds 570286 14878 0 0 1417 1418 0 0?>
                        <?renderCache.textRun 45 CLINICAL TRIAL SUBMISSION ACTION REQUIREMENTS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <margin topInset="0.762mm" bottomInset="0.762mm"/>
                     <border>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <field name="ddlSubType" w="80.44mm" h="12.7mm">
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="3.81mm" placement="top">
                        <font size="8pt" typeface="Myriad Pro"/>
                        <para vAlign="middle"/>
                        <value>
                           <text>Type of  Submission for this Protocol or Trial:</text>
                        </value>
                     </caption>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.FormHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cHandler.SUBTYPE_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("sub type change ::exit", exception);
}
</script>
                     </event>
                     <event activity="enter" name="event__enter">
                        <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                     </event>
                     <bind match="dataRef" ref="$.submission_info.sub_type"/>
                  </field>
                  <subform name="sfCtaaMsg" w="119.999mm" layout="tb">
                     <keep intact="contentArea"/>
                     <occur min="0"/>
                     <draw name="lblCtaa" w="4.684375in" h="12.28mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>Specify both the the original, parent clinical trial control number and the control number for the amendment, if assigned.</text>
                        </value>
                        <font typeface="Myriad Pro" weight="bold" baselineShift="0pt"/>
                        <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                        <?renderCache.bounds 334441 31975 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 76 Specify both the the original, parent clinical trial control number and the  0 1417 13904 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?>
                        <?renderCache.textRun 46 control number for the amendment, if assigned. 0 1417 25904 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
                     <margin leftInset="1.016mm"/>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <margin leftInset="0mm" rightInset="0mm"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform w="202.184mm" name="sfClinTrial" layout="lr-tb">
                  <subform name="sfTrialIdHeading" layout="lr-tb" w="202.184mm">
                     <draw name="lblTrialId" w="202.184mm" h="6.249mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>CLINICAL TRIAL IDENTIFICATION INFORMATION</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                              <color value="255,255,153"/>
                           </fill>
                           <edge presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <assist role="H2"/>
                        <?renderCache.bounds 570286 14878 0 0 1417 1418 0 0?>
                        <?renderCache.textRun 41 CLINICAL TRIAL IDENTIFICATION INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <keep intact="contentArea"/>
                     <margin topInset="0.762mm" bottomInset="0.762mm" leftInset="0mm" rightInset="0mm"/>
                     <?templateDesigner expand 0?>
                     <bind match="none"/>
                  </subform>
                  <field name="txtProtocolTitle" w="202.463mm" minH="16.991mm">
                     <ui>
                        <textEdit multiLine="1">
                           <border>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="3.81mm" placement="top">
                        <font size="8pt" typeface="Myriad Pro"/>
                        <para vAlign="middle"/>
                        <value>
                           <text>1. Clinical Trial Protocol Title</text>
                        </value>
                     </caption>
                     <validate nullTest="error"/>
                     <bind match="dataRef" ref="$.submission_info.protocol_title"/>
                  </field>
                  <field name="txtProtocolNumber" w="54.436mm" h="15.24mm">
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="6.985mm" placement="top">
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>2. Clinical Trial Protocol Number</text>
                        </value>
                        <para vAlign="middle"/>
                     </caption>
                     <validate nullTest="error"/>
                     <bind match="dataRef" ref="$.submission_info.protocol_number"/>
                  </field>
                  <field name="txtControlNumber" w="42.633mm" h="15.24mm">
                     <ui>
                        <textEdit>
                           <border>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="6.984mm" placement="top">
                        <font size="8pt" typeface="Myriad Pro"/>
                        <para vAlign="middle"/>
                        <value>
                           <text>3.0 Clinical Trial Control Number, if assigned (6 digits)</text>
                        </value>
                     </caption>
                     <value>
                        <text maxChars="6"/>
                     </value>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.FormHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.DIGIT_TEST;
		var anActionEvent = cActionEvent.createInstance(actionName, this,xfa.event);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Control Number ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.submission_info.control_number"/>
                  </field>
                  <subform x="97.069mm" y="25.78mm" w="29.591mm" name="sfAddControlNum" h="15.24mm">
                     <keep intact="none"/>
                     <field name="btnAddControlNum" w="28.575mm" h="8.23mm" relevant="-print" y="3.64mm">
                        <ui>
                           <button highlight="inverted"/>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <caption>
                           <value>
                              <text>Add Control Number</text>
                           </value>
                           <para vAlign="middle" hAlign="center"/>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <border hand="right">
                           <edge stroke="raised"/>
                           <fill>
                              <color value="212,208,200"/>
                           </fill>
                        </border>
                        <bind match="none"/>
                        <event activity="click" name="event__click">
                           <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.FormHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.ADD_CONTROLNUM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Control Number ADD ::click", exception);
}
</script>
                        </event>
                     </field>
                     <margin leftInset="0.508mm" rightInset="0.508mm"/>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <subform name="sfCTNList" w="202.618mm" layout="lr-tb">
                     <subform layout="lr-tb" name="sfControlNumber" w="63.521mm">
                        <field name="txtControlNumber" w="42.461mm" h="15.24mm">
                           <ui>
                              <textEdit>
                                 <border>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="0.7468mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="6.985mm" placement="top">
                              <font size="8pt" typeface="Myriad Pro"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>3. 1 Clinical Trial Control Number (6 digits)</text>
                              </value>
                           </caption>
                           <validate nullTest="error"/>
                           <value>
                              <text maxChars="6"/>
                           </value>
                           <event activity="change" name="event__change">
                              <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.FormHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.DIGIT_TEST;
		var anActionEvent = cActionEvent.createInstance(actionName, this,xfa.event);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Control Number ::change", exception);
}
</script>
                           </event>
                           <bind match="dataRef" ref="$.control_number"/>
                        </field>
                        <occur min="0" max="-1"/>
                        <subform w="19.05mm" name="sfDeleteCT" h="15.032mm">
                           <field name="btnDeleteCT" h="10.8mm" relevant="-print" y="2.318mm" x="0.9mm" w="18.201mm">
                              <ui>
                                 <button highlight="inverted"/>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <caption>
                                 <value>
                                    <text>Delete Control Number</text>
                                 </value>
                                 <para vAlign="middle" hAlign="center"/>
                                 <font typeface="Myriad Pro" size="8pt"/>
                              </caption>
                              <border hand="right">
                                 <edge stroke="raised"/>
                                 <fill>
                                    <color value="212,208,200"/>
                                 </fill>
                              </border>
                              <bind match="none"/>
                              <event activity="click" name="event__click">
                                 <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.FormHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.DELETE_CONTROLNUM;
		var anActionEvent = cActionEvent.createInstance(actionName, this, this.parent.parent); //hack for parent
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Control Number Delete ::click", exception);
}
</script>
                              </event>
                           </field>
                           <bind match="none"/>
                           <?templateDesigner expand 1?></subform>
                        <keep intact="contentArea"/>
                        <border>
                           <edge stroke="dashed"/>
                           <corner stroke="dashed" thickness="0.175mm"/>
                        </border>
                        <bind match="dataRef" ref="$.submission_info.additional_control_numbers[*]"/>
                        <?templateDesigner expand 1?>
                        <margin leftInset="0.762mm" rightInset="0.762mm" topInset="0.762mm" bottomInset="0.762mm"/>
                     </subform>
                     <bind match="none"/>
                     <?templateDesigner expand 1?>
                     <margin bottomInset="0.762mm"/>
                  </subform>
                  <occur min="0" initial="1"/>
                  <?templateDesigner expand 0?>
                  <field name="txtRegistryNumber" w="88.9mm" h="12.7mm">
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="3.384mm" placement="top">
                        <font size="8pt" typeface="Myriad Pro"/>
                        <para vAlign="middle"/>
                        <value>
                           <text>4. Health Canada's Central Registry (CR) File Number, if assigned</text>
                        </value>
                     </caption>
                     <bind match="dataRef" ref="$.submission_info.registry_number"/>
                  </field>
                  <margin topInset="0.762mm" bottomInset="0.762mm"/>
                  <bind match="none"/>
               </subform>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform w="202.184mm" name="sfPart2" layout="tb">
               <subform name="sfPart2AHeading" layout="lr-tb" w="201.676mm">
                  <draw name="lblDrugSponsor" w="202.184mm" h="6.249mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>PART 2 - DRUG PRODUCT AND SPONSOR INFORMATION</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                     <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <edge presence="hidden"/>
                        <edge/>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                        <corner thickness="0.175mm"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <assist role="H2"/>
                     <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                     <?renderCache.textRun 45 PART 2 - DRUG PRODUCT AND SPONSOR INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                  <keep intact="contentArea"/>
                  <margin topInset="0.762mm" bottomInset="0.762mm"/>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform w="202.184mm" name="sfDrugProdHeading" layout="lr-tb">
                  <draw name="lblDrugProd" w="202.184mm" h="6.249mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>A) DRUG PRODUCT INFORMATION</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                     <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <fill>
                           <linear>
                              <color value="255,255,255"/>
                           </linear>
                           <color value="255,255,153"/>
                        </fill>
                        <edge presence="hidden"/>
                        <edge/>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                        <corner thickness="0.175mm"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <assist role="H2"/>
                     <?renderCache.bounds 570286 14878 0 0 1417 1418 0 0?>
                     <?renderCache.textRun 27 A) DRUG PRODUCT INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                  <keep intact="contentArea"/>
                  <margin topInset="0.762mm" bottomInset="0.762mm" leftInset="0mm" rightInset="0mm"/>
                  <?templateDesigner expand 0?>
                  <bind match="none"/>
               </subform>
               <field name="txtDrugBrandName" w="201.676mm" h="12.7mm">
                  <ui>
                     <textEdit hScrollPolicy="off">
                        <border>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.81mm" placement="top">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>Brand Name</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <bind match="dataRef" ref="$.submission_info.brand_name"/>
               </field>
               <field name="txtDrugCommonName" w="201.676mm" h="12.7mm">
                  <ui>
                     <textEdit hScrollPolicy="off">
                        <border>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.4624mm" placement="top">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>6. Proper, Common, or Non-Proprietary Name</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <bind match="dataRef" ref="$.submission_info.common_name"/>
               </field>
               <border>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <subform y="42.978mm" w="203.199mm" minH="6.249mm" layout="lr-tb" name="sfSponsorInfo">
                  <subform w="202.184mm" minH="54.255mm" layout="lr-tb" name="sfSponsorContent">
                     <bind match="none"/>
                     <keep intact="contentArea"/>
                     <subform w="202.184mm" name="sfSponsorInfoHeading" layout="lr-tb">
                        <draw name="lblSponsorInfo" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>B) SPONSOR INFORMATION</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                           <margin topInset="0.5002mm" bottomInset="0.5002mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <linear>
                                    <color value="255,255,255"/>
                                 </linear>
                                 <color value="255,255,153"/>
                              </fill>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 14878 0 0 1417 1418 0 0?>
                           <?renderCache.textRun 22 B) SPONSOR INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <margin leftInset="0mm" rightInset="0mm" topInset="0.762mm" bottomInset="0.762mm"/>
                        <bind match="none"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 1?></subform>
                     <subform w="202.184mm" minH="49.53mm" layout="lr-tb" name="sfSponsorAddress">
                        <field name="txtSponsorName" w="201.676mm" h="11.43mm">
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="3.4624mm" placement="top">
                              <font size="8pt" typeface="Myriad Pro"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>7. Name of Sponsor</text>
                              </value>
                           </caption>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_name"/>
                        </field>
                        <field name="txtSponsorStreetAddress" w="201.676mm" h="11.43mm">
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="3.4624mm" placement="top">
                              <font size="8pt" typeface="Myriad Pro"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>8. Street, Suite and PO Box</text>
                              </value>
                           </caption>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_address.street_address"/>
                        </field>
                        <field name="txtSponsorCity" w="58.739mm" h="11.43mm">
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="3.4624mm" placement="top">
                              <font size="8pt" typeface="Myriad Pro"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>9. City or Town</text>
                              </value>
                           </caption>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_address.city"/>
                        </field>
                        <field h="11.43mm" name="ddlCountry" w="50.8mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Country*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <items/>
                           <items presence="hidden" save="1"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.Part2Handler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cAddressHandler.SPONSOR_COUNTRY_CHANGED;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with sponsor country ::exit", exception);
}
</script>
                           </event>
                           <event activity="enter" name="event__enter">
                              <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                           </event>
                           <bind match="dataRef" ref="$.submission_info.sponsor_address.country"/>
                        </field>
                        <field h="11.43mm" name="ddlProvince" w="46.49mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Province  or State*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_address.province_lov"/>
                        </field>
                        <field h="11.43mm" name="txtProvince" w="46.49mm">
                           <border>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.3431mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Province or State</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.submission_info.sponsor_address.province_text"/>
                        </field>
                        <field h="11.43mm" name="txtPostalCode" w="45.72mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Postal/ZIP Code*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_address.postal_code"/>
                        </field>
                        <margin bottomInset="0.762mm"/>
                        <bind match="none"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 0?></subform>
                     <?templateDesigner expand 0?></subform>
                  <subform y="54.255mm" w="202.184mm" layout="lr-tb" name="sfSponsorContact">
                     <subform w="202.184mm" name="sfSponsorContactHeading" layout="lr-tb">
                        <draw name="lblSponsor" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>CONTACT PERSON FOR SPONSOR</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <linear>
                                    <color value="255,255,255"/>
                                 </linear>
                                 <color value="255,255,153"/>
                              </fill>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 26 CONTACT PERSON FOR SPONSOR 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <margin leftInset="0mm" rightInset="0mm" topInset="0.762mm" bottomInset="0.762mm"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 1?>
                        <bind match="none"/>
                     </subform>
                     <subform layout="lr-tb" name="sfSponsorContactDetails" w="202.184mm">
                        <keep intact="contentArea"/>
                        <field h="11.43mm" name="txtSponsorFullName" w="99.06mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Full Name</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.full_name"/>
                        </field>
                        <field h="11.43mm" name="txtSponsorTelephone" w="38.1mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>14. Telephone No.*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.phone_num"/>
                        </field>
                        <field h="11.43mm" name="txtSponsorExtension" w="25.932mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Ext.</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.phone_ext"/>
                        </field>
                        <field h="11.43mm" name="txtSponsorFax" w="38.1mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>15. Fax No.</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.fax_num"/>
                        </field>
                        <field h="11.43mm" name="ddlSponsorLangPref" w="35.56mm">
                           <border>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" size="8pt"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>16. Language*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <items save="1"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.language_correspondance"/>
                        </field>
                        <field h="11.43mm" name="txtSponsorTitle" w="55.189mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Position Title*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.job_title"/>
                        </field>
                        <field h="11.43mm" name="txtSponsorEmail" w="72.773mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>18. Email</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.submission_info.sponsor_contact.email"/>
                           <validate nullTest="error"/>
                        </field>
                        <margin bottomInset="0.762mm"/>
                        <?templateDesigner expand 1?>
                        <bind match="none"/>
                     </subform>
                     <keep intact="contentArea"/>
                     <?templateDesigner expand 0?>
                     <bind match="none"/>
                  </subform>
                  <subform w="202.184mm" name="sfContactHeading" layout="lr-tb">
                     <draw name="lblContactHeading" w="202.184mm" h="6.249mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>C) CONTACT INFORMATION</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                              <color value="255,255,153"/>
                           </fill>
                           <edge presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <assist role="H2"/>
                        <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                        <?renderCache.textRun 22 C) CONTACT INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <margin topInset="0.762mm" bottomInset="0.762mm"/>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <field name="chkSponsorAddrSame" w="197.109mm" h="8.815mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="190.109mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>The contact for the clinical trial is the same as the Sponsor.</text>
                        </value>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part2Handler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.CONTACTSAMEAS_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with contact clin trial Same As address ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.submission_info.trial_contact_same_as_sponsor"/>
                  </field>
                  <?templateDesigner expand 0?>
                  <bind match="none"/>
               </subform>
               <subform w="202.184mm" name="sfTrialContact" layout="lr-tb">
                  <occur min="0"/>
                  <subform w="202.184mm" minH="49.53mm" layout="lr-tb" name="sfTrialContactAddress">
                     <field name="txtCompany" w="201.676mm" h="11.43mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="3.175mm" placement="top">
                           <font size="8pt" typeface="Myriad Pro"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>21. Company or Organization Name</text>
                           </value>
                        </caption>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_company_name"/>
                     </field>
                     <field name="txtStreetAddress" w="201.676mm" h="11.43mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="3.18mm" placement="top">
                           <font size="8pt" typeface="Myriad Pro"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>22. Street, Suite and PO Box</text>
                           </value>
                        </caption>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_address.street_address"/>
                     </field>
                     <field name="txtCity" w="50.8mm" h="11.43mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="3.175mm" placement="top">
                           <font size="8pt" typeface="Myriad Pro"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>23. City or Town</text>
                           </value>
                        </caption>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_address.city"/>
                     </field>
                     <field h="11.43mm" name="ddlCountry" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>24. Country*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <items/>
                        <items presence="hidden" save="1"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.Part2Handler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cAddressHandler.CONTACT_COUNTRY_CHANGED;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with contact country ::exit", exception);
}
</script>
                        </event>
                        <event activity="enter" name="event__enter">
                           <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                        </event>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_address.country"/>
                     </field>
                     <field h="11.43mm" name="ddlProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>25. Province - State*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_address.province_lov"/>
                     </field>
                     <field h="11.43mm" name="txtProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>25. Province/State</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro" size="8pt"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_address.province_text"/>
                     </field>
                     <field h="11.43mm" name="txtPostalCode" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>26. Postal/ZIP Code*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_address.postal_code"/>
                     </field>
                     <?templateDesigner expand 1?>
                     <bind match="none"/>
                  </subform>
                  <subform layout="lr-tb" name="sfTrialContactDetails" w="202.184mm">
                     <keep intact="contentArea"/>
                     <field h="11.43mm" name="txtTrialContactFullName" w="92.837mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>27.  Full Name*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.full_name"/>
                     </field>
                     <field h="11.43mm" name="txtTrialContactTitle" w="71.12mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>17.  Position Title*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.job_title"/>
                     </field>
                     <field h="11.43mm" name="ddlTrialContactLangPref" w="35.56mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" size="8pt"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>16. Language*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <items save="1"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.language_correspondance"/>
                     </field>
                     <field h="11.43mm" name="txtTrialContactTelephone" w="38.1mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>14. Telephone No.*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.phone_num"/>
                     </field>
                     <field h="11.43mm" name="txtTrialContactExtension" w="25.932mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Ext.</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.phone_ext"/>
                     </field>
                     <field h="11.43mm" name="txtTrialContactFax" w="38.1mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>15. Fax No.</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.fax_num"/>
                     </field>
                     <field h="11.43mm" name="txtTrialContactEmail" w="64.347mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>18. Email</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.submission_info.trial_contact_info.trial_contact_person.email"/>
                        <validate nullTest="error"/>
                     </field>
                     <?templateDesigner expand 0?>
                     <margin bottomInset="0.762mm"/>
                     <bind match="none"/>
                  </subform>
                  <margin bottomInset="0.762mm"/>
                  <bind match="none"/>
                  <?templateDesigner expand 0?></subform>
               <?templateDesigner expand 0?>
               <bind match="none"/>
            </subform>
            <subform w="202.184mm" name="sfPart3" layout="lr-tb">
               <subform w="202.184mm" name="sfSiteInfo">
                  <keep intact="none"/>
                  <field name="txtChangeNum" w="40.643mm" h="6.35mm" access="protected" x="0.001mm" y="0mm">
                     <ui>
                        <textEdit>
                           <border>
                              <edge presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font size="8pt" typeface="Myriad Pro" weight="bold">
                        <fill>
                           <color value="255,255,255"/>
                        </fill>
                     </font>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1.0008mm"/>
                     <para vAlign="middle" marginLeft="3.6pt"/>
                     <caption reserve="26.672mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>CLINCAL TRIAL SITE </text>
                        </value>
                     </caption>
                     <border>
                        <edge presence="hidden"/>
                     </border>
                     <bind match="none"/>
                  </field>
                  <field name="btnDeleteSite" w="41.904mm" h="5.08mm" relevant="-print" x="157.716mm" y="0.78mm">
                     <ui>
                        <button highlight="inverted"/>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <caption>
                        <value>
                           <text>Delete Clinical Trial Site </text>
                        </value>
                        <para vAlign="middle" hAlign="center"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                     </caption>
                     <border hand="right">
                        <edge stroke="raised"/>
                        <fill>
                           <color value="212,208,200"/>
                        </fill>
                     </border>
                     <bind match="none"/>
                     <event activity="click" name="event__click">
                        <script contentType="application/x-javascript">

var cHandler=	script.HCeForm.control.TrialsHandler
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cHandler.DELETE_SITE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with Delete site::click", exception);
}
</script>
                     </event>
                  </field>
                  <border>
                     <edge presence="hidden"/>
                     <fill>
                        <color value="0,0,0"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <subform w="200.66mm" name="sfClinTrialHeading" layout="lr-tb">
                  <draw name="lblClinTrialHeading" w="202.184mm" h="6.249mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>PART 3 - CLINICAL TRIAL SITE INFORMATION</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                     <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <edge presence="hidden"/>
                        <edge/>
                        <edge presence="hidden"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                        <corner thickness="0.175mm"/>
                        <corner thickness="0.175mm" presence="hidden"/>
                     </border>
                     <assist role="H2"/>
                     <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                     <?renderCache.textRun 40 PART 3 - CLINICAL TRIAL SITE INFORMATION 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                  <keep intact="contentArea"/>
                  <margin topInset="1.27mm" bottomInset="1.27mm"/>
                  <?templateDesigner expand 0?>
                  <bind match="none"/>
               </subform>
               <field name="ddlChangeType" w="78.625mm" h="11.43mm">
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.175mm" placement="top">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>Type of  Amendment</text>
                     </value>
                  </caption>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.AMEND_TYPE_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with amend type ::exit", exception);
}
</script>
                  </event>
                  <bind match="dataRef" ref="$.trial_site_info[*].change_type"/>
               </field>
               <subform w="200.451mm" name="sfChangeReason" layout="lr-tb">
                  <draw name="lblChangeReason" w="200.659mm" h="6.35mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>Reasons for the change. Please select one or more of the following reasons as appropriate</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                     <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para vAlign="middle"/>
                     <?renderCache.bounds 565963 15166 0 0 1417 1417 0 0?>
                     <?renderCache.textRun 89 Reasons for the change. Please select one or more of the following reasons as appropriate 0 1417 11000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                  <field name="chkDateChange" w="198.212mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>0</text>
                     </value>
                     <caption placement="right" reserve="191.211mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Dates: Change in Commencement Date and  Research Ethics Board (REB) Date of Approval</text>
                        </value>
                     </caption>
                     <items>
                        <text>1</text>
                        <text>0</text>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.DATE_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with change date ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_dates"/>
                  </field>
                  <field name="chkSiteNameChange" w="99.06mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="92.06mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Part 3A: Change in Clinical Trial Site Name</text>
                        </value>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cHandler.SITE_NAME_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with change site name ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_site_name"/>
                  </field>
                  <field name="chkSiteAddressChange" w="99.06mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>0</text>
                     </value>
                     <caption placement="right" reserve="92.059mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Part 3A: Change in Clinical Trial Site Address</text>
                        </value>
                     </caption>
                     <items>
                        <text>1</text>
                        <text>0</text>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.SITE_ADDRESS_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with change site address ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_site_address"/>
                  </field>
                  <field name="chkQINameChange" w="99.06mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="92.059mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Part 3B: Change in Qualified Investigator (QI) Name</text>
                        </value>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.QI_NAME_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with change QI Name ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_qi_person"/>
                  </field>
                  <field name="chkQIAddressChange" w="99.06mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="92.059mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Part 3B: Change in Qualified Investigator (QI) Address</text>
                        </value>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.QI_ADDRESS_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with change QI address ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_qi_address"/>
                  </field>
                  <field name="chkREBPersonChange" w="99.06mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="92.059mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Part 3C: Change in Research Ethics Board (REB) Contact Person</text>
                        </value>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.REBA_NAME_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with change QI address ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_reb_person"/>
                  </field>
                  <field name="chkREBAddressChange" w="99.06mm" h="6mm">
                     <ui>
                        <checkButton>
                           <border>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <integer>0</integer>
                     </value>
                     <caption placement="right" reserve="92.059mm">
                        <para vAlign="middle"/>
                        <font size="8pt" typeface="Myriad Pro"/>
                        <value>
                           <text>Part 3C: Change in Research Ethics Board (REB) Address</text>
                        </value>
                     </caption>
                     <items>
                        <integer>1</integer>
                        <integer>0</integer>
                        <integer>2</integer>
                     </items>
                     <event activity="change" name="event__change">
                        <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.SubTypeHandler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.REBA_ADDRESS_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with change QI address ::change", exception);
}
</script>
                     </event>
                     <bind match="dataRef" ref="$.trial_site_info[*].change_type_info.change_reb_address"/>
                  </field>
                  <border>
                     <edge presence="hidden"/>
                     <corner thickness="0.175mm" presence="hidden"/>
                  </border>
                  <?templateDesigner expand 0?>
                  <bind match="none"/>
               </subform>
               <subform w="202.184mm" name="sfClinicalTrialSite" layout="tb">
                  <subform w="202.184mm" minH="20.219mm" layout="tb" name="sfCurrSiteContent">
                     <bind match="none"/>
                     <subform w="200.66mm" name="sfCurrSiteNameHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblCurrSiteNameHeading" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>CLINICAL SITE NAME</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <linear>
                                    <color value="255,255,255"/>
                                 </linear>
                                 <color value="255,255,153"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 18 CLINICAL SITE NAME 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <field h="11.43mm" name="txtCurrSiteName" w="200.66mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Current Name of the Site</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_site_name"/>
                     </field>
                     <keep intact="contentArea"/>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.184mm" layout="lr-tb" name="sfOldSiteName">
                     <subform w="202.184mm" name="sfOldSiteHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblOldSiteNameHeading" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>PREVIOUS CLINICAL SITE NAME</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt">
                              <fill>
                                 <color value="255,255,255"/>
                              </fill>
                           </font>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge>
                                 <color value="255,255,255"/>
                              </edge>
                              <corner thickness="0.175mm">
                                 <color value="255,255,255"/>
                              </corner>
                              <fill>
                                 <color value="0,0,0"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden">
                                 <color value="255,255,255"/>
                              </corner>
                              <corner thickness="0.175mm" presence="hidden">
                                 <color value="255,255,255"/>
                              </corner>
                              <edge presence="hidden">
                                 <color value="255,255,255"/>
                              </edge>
                              <edge>
                                 <color value="255,255,255"/>
                              </edge>
                              <edge presence="hidden">
                                 <color value="255,255,255"/>
                              </edge>
                              <corner thickness="0.175mm" presence="hidden">
                                 <color value="255,255,255"/>
                              </corner>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 27 PREVIOUS CLINICAL SITE NAME 0 1417 11857 255 255 255 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <field h="11.43mm" name="txtOldSiteName" w="201.676mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Previous Name of  the Site</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_name"/>
                     </field>
                     <occur min="0"/>
                     <keep intact="contentArea"/>
                     <bind match="none"/>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.184mm" layout="lr-tb" name="sfCurrSiteAddressDetails">
                     <keep intact="contentArea"/>
                     <subform w="202.184mm" name="sfCurrSiteHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblCurrSiteAddrHeading" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>A)  CURRENT CLINICAL TRIAL SITE ADDRESS</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <linear>
                                    <color value="255,255,255"/>
                                 </linear>
                                 <color value="255,255,153"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 39 A)  CURRENT CLINICAL TRIAL SITE ADDRESS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <field h="11.43mm" name="txtCurrSiteAddress" w="201.196mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Street/Suite/PO Box*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_site_address.street_address"/>
                     </field>
                     <field h="11.43mm" name="txtCurrSiteCity" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.176mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>City - Town*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_site_address.city"/>
                     </field>
                     <field h="11.43mm" name="ddlCountry" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Country*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <items/>
                        <items presence="hidden" save="1"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">/*var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cAddressHandler.CLINICAL_COUNTRY_CHANGED_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with contact country ::exit", exception);
}*/
</script>
                        </event>
                        <event activity="enter" name="event__enter">
                           <script contentType="application/x-javascript">
//var cSystem = script.core.System;

//cSystem.setCurrentField(this);
</script>
                        </event>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_site_address.country"/>
                     </field>
                     <field h="11.43mm" name="ddlProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Province - State*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_site_address.province_lov"/>
                     </field>
                     <field h="11.43mm" name="txtProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Province/State</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro" size="8pt"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="none"/>
                     </field>
                     <field h="11.43mm" name="txtCurrSitePostalCode" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Postal/ZIP Code*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_site_address.postal_code"/>
                     </field>
                     <margin bottomInset="1.27mm"/>
                     <bind match="none"/>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.184mm" layout="lr-tb" name="sfOldSiteAddressDetails">
                     <keep intact="contentArea"/>
                     <subform w="202.184mm" name="sfOldSiteAddrHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblOldSiteAddrHeading" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>PREVIOUS ADDRESS FOR CLINICAL TRIAL SITE</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt">
                              <fill>
                                 <color value="255,255,255"/>
                              </fill>
                           </font>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <color value="0,0,0"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 40 PREVIOUS ADDRESS FOR CLINICAL TRIAL SITE 0 1417 11857 255 255 255 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <field h="11.43mm" name="txtOldSiteAddress" w="200.262mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Street/Suite/PO Box*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_address.street_address"/>
                     </field>
                     <field h="11.43mm" name="txtOldSiteCity" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="2.96mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>City - Town*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_address.city"/>
                     </field>
                     <field h="11.43mm" name="ddlCountry" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Country*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cAddressHandler.CLINICAL_COUNTRY_CHANGED_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with contact country ::exit", exception);
}
</script>
                        </event>
                        <event activity="enter" name="event__enter">
                           <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                        </event>
                        <value>
                           <text>CA</text>
                        </value>
                        <items>
                           <text>CA</text>
                        </items>
                        <items save="1" presence="hidden">
                           <text>CA</text>
                        </items>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_address.country"/>
                     </field>
                     <field h="11.43mm" name="ddlProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="2.8968mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Province - State*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_address.province_lov"/>
                     </field>
                     <field h="11.43mm" name="txtProvince" w="50.8mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Province/State</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro" size="8pt"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_address.postal_code"/>
                     </field>
                     <field h="11.43mm" name="txtOldSitePostalCode" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Postal/ZIP Code*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_site_address.postal_code"/>
                     </field>
                     <margin bottomInset="1.27mm" topInset="0.762mm" leftInset="0mm" rightInset="0mm"/>
                     <occur min="0"/>
                     <border>
                        <edge presence="hidden"/>
                        <edge presence="hidden"/>
                        <edge/>
                        <edge presence="hidden"/>
                        <corner/>
                     </border>
                     <bind match="none"/>
                     <?templateDesigner expand 0?></subform>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <edge presence="hidden"/>
                  <edge presence="hidden"/>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <field name="dteComenceDate" w="68.58mm" h="15.24mm">
                  <ui>
                     <dateTimeEdit hScrollPolicy="off">
                        <border hand="right">
                           <edge/>
                        </border>
                        <margin/>
                        <comb numberOfCells="10"/>
                     </dateTimeEdit>
                     <picture>date{YYYY-MM-DD}</picture>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <date/>
                  </value>
                  <caption reserve="6.604mm" placement="top">
                     <para vAlign="middle" textIndent="-10.8pt" marginLeft="0pt"/>
                     <value>
                        <text>35. Clinical Trial Commencement Date</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <bind match="dataRef" ref="$.trial_site_info[*].curr_commence_date">
                     <picture>date{YYYY-MM-DD}</picture>
                  </bind>
                  <validate nullTest="error">
                     <picture>date{YYYY-MM-DD}</picture>
                  </validate>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.Part3.DateHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		
		//format this value
		var temp=this.rawValue;
		if(temp &amp;&amp; !isNaN(temp) &amp;&amp;(temp).length==8){
				
			this.rawValue=temp.substring(0,4)+'-'+temp.substring(4,6)+'-'+temp.substring(6,8);
		}
	
		// set up event object
		var actionName =  cHandler.SUPPL_UISTATE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with Commence Date ::exit", exception);
}		
</script>
                  </event>
                  <event activity="enter" name="event__enter">
                     <script contentType="application/x-javascript">
var cSystem = script.core.System;

	cSystem.setCurrentField(this);
</script>
                  </event>
                  <format>
                     <picture>date{YYYY-MM-DD}</picture>
                  </format>
               </field>
               <subform w="201.808mm" layout="lr-tb" name="sfPrevCommDate">
                  <field name="dtePrevComenceDate" w="68.58mm" h="15.24mm">
                     <ui>
                        <dateTimeEdit hScrollPolicy="off">
                           <border hand="right">
                              <edge/>
                           </border>
                           <margin/>
                           <comb numberOfCells="10"/>
                        </dateTimeEdit>
                        <picture>date{YYYY-MM-DD}</picture>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <value>
                        <date/>
                     </value>
                     <caption reserve="6.604mm" placement="top">
                        <para vAlign="middle"/>
                        <value>
                           <text>Previous Clinical Trial Commencement Date</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <bind match="dataRef" ref="$.trial_site_info[*].prev_commence_date">
                        <picture>date{YYYY-MM-DD}</picture>
                     </bind>
                     <format>
                        <picture>date{YYYY-MM-DD}</picture>
                     </format>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		
		//format this value
		var temp=this.rawValue;
		cLog.trace("This is temp "+temp);
		if(temp &amp;&amp; !isNaN(temp) &amp;&amp;(temp).length==8){		
			this.rawValue=temp.substring(0,4)+'-'+temp.substring(4,6)+'-'+temp.substring(6,8);
		}
	}
	
}
catch(exception)
{
	cLog.warn("Problem with prev Commence Date ::exit", exception);
}		
</script>
                     </event>
                     <event activity="enter" name="event__enter">
                        <script contentType="application/x-javascript">

var cSystem = script.core.System;

	cSystem.setCurrentField(this);
</script>
                     </event>
                  </field>
                  <keep intact="contentArea"/>
                  <occur min="0"/>
                  <?templateDesigner expand 0?>
                  <bind match="none"/>
               </subform>
               <subform w="202.184mm" name="sfQualifiedInvest" layout="lr-tb">
                  <subform w="202.184mm" name="sfQIHeading" layout="lr-tb">
                     <keep intact="contentArea"/>
                     <margin topInset="0.762mm" bottomInset="0.508mm"/>
                     <draw name="lblQIHeading" w="202.184mm" h="6.249mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>B) QUALIFIED INVESTIGATOR (QI)</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                              <color value="255,255,153"/>
                           </fill>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                        </border>
                        <assist role="H2"/>
                        <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                        <?renderCache.textRun 30 B) QUALIFIED INVESTIGATOR (QI) 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <draw name="lblQIInstruct" w="202.184mm" h="10.67mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                        <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                        <value>
                           <text>A Qualified Investigator Undertaking (QIU) form must be completed by the Qualified Investigator responsible for the conduct of the clinical trial at the site specified above. The completed undertaking must be retained for a period of 25 years.</text>
                        </value>
                        <?renderCache.bounds 570286 27412 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 175 A Qualified Investigator Undertaking (QIU) form must be completed by the Qualified Investigator responsible for the conduct of the clinical trial at the site specified above.  0 1417 12323 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?>
                        <?renderCache.textRun 68 The completed undertaking must be retained for a period of 25 years. 0 1417 21923 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <subform layout="lr-tb" name="sfQIContactDetails" w="202.184mm">
                     <subform w="202.184mm" layout="lr-tb" name="sfCurrQIName">
                        <subform w="202.184mm" name="sfCurrQIHeading" layout="lr-tb">
                           <keep intact="contentArea"/>
                           <margin topInset="1.27mm" bottomInset="1.27mm"/>
                           <draw name="lblCurrQIName" w="202.184mm" h="6.249mm">
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>CURRENT QUALIFIED INVESTIGATOR NAME</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                              <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                              <border>
                                 <edge/>
                                 <corner thickness="0.175mm"/>
                                 <fill>
                                    <linear>
                                       <color value="255,255,255"/>
                                    </linear>
                                    <color value="255,255,153"/>
                                 </fill>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                                 <edge/>
                                 <edge presence="hidden"/>
                              </border>
                              <assist role="H2"/>
                              <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                              <?renderCache.textRun 35 CURRENT QUALIFIED INVESTIGATOR NAME 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                           <?templateDesigner expand 0?>
                           <bind match="none"/>
                        </subform>
                        <field h="11.43mm" name="txtCurrQIFullName" w="99.06mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Full Name*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.full_name"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQIDesignation" w="45.72mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Medical Designation</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_med_designation"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQITitle" w="56.854mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>17.  Position Title*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.job_title"/>
                        </field>
                        <field h="11.43mm" name="ddlCurrQILangPref" w="35.56mm">
                           <border>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" size="8pt"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>16. Language*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <items save="1"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.language_correspondance"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQITelephone" w="38.1mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>14. Telephone No.*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.phone_num"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQIExtension" w="25.932mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Ext.</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.phone_ext"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQIFax" w="38.1mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>15. Fax No.</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.fax_num"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQIEmail" w="63.763mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>18. Email</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_person.qi_person.email"/>
                           <validate nullTest="error"/>
                        </field>
                        <field name="txtFakeCountry" w="62mm" h="9mm" access="protected">
                           <ui>
                              <textEdit>
                                 <border>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="25mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>CountryVal</text>
                              </value>
                           </caption>
                           <value>
                              <text>CA</text>
                           </value>
                           <event activity="initialize" name="event__initialize">
                              <script contentType="application/x-javascript">//hack, not using core. Only a problem if country code for Canada changes
this.rawValue="CA";
this.presence="hidden";

</script>
                           </event>
                           <bind match="none"/>
                        </field>
                        <margin leftInset="0mm" topInset="0mm" rightInset="0mm"/>
                        <bind match="none"/>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 0?></subform>
                     <subform w="202.184mm" name="sfOldQIName" layout="lr-tb">
                        <occur min="0"/>
                        <subform w="201.676mm" name="sfOldQIHeading" layout="lr-tb">
                           <keep intact="contentArea"/>
                           <margin topInset="1.27mm" bottomInset="1.27mm"/>
                           <draw name="lblOldQIName" w="202.184mm" h="6.249mm">
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>PREVIOUS QUALIFIED INVESTIGATOR  NAME</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt">
                                 <fill>
                                    <color value="255,255,255"/>
                                 </fill>
                              </font>
                              <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                              <border>
                                 <edge/>
                                 <corner thickness="0.175mm"/>
                                 <fill>
                                    <color value="0,0,0"/>
                                 </fill>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                                 <edge/>
                                 <edge presence="hidden"/>
                              </border>
                              <assist role="H2"/>
                              <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                              <?renderCache.textRun 37 PREVIOUS QUALIFIED INVESTIGATOR  NAME 0 1417 11857 255 255 255 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                           <bind match="none"/>
                           <?templateDesigner expand 1?></subform>
                        <field h="11.43mm" name="txtOldQIFullName" w="111.253mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Previous Full Name</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.full_name"/>
                        </field>
                        <field h="11.43mm" name="txtOldQIDesignation" w="49.396mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.384mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Previous Medical Designation</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_med_designation"/>
                        </field>
                        <field h="11.43mm" name="txtOldQITitle" w="40.985mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.176mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text> Previous Position Title*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.job_title"/>
                        </field>
                        <keep intact="contentArea"/>
                        <subform w="201.676mm" name="sfOldQINameHide" layout="lr-tb">
                           <keep intact="contentArea"/>
                           <field h="11.43mm" name="ddlPrevQILangPref" w="35.56mm">
                              <border>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" size="8pt"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>16. Language*</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <items save="1"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <choiceList>
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </choiceList>
                              </ui>
                              <validate nullTest="error"/>
                              <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.language_correspondance"/>
                           </field>
                           <field h="11.43mm" name="txtPrevQITelephone" w="38.1mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>14. Telephone No.*</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <validate nullTest="error"/>
                              <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.phone_num"/>
                           </field>
                           <field h="11.43mm" name="txtPrevQIExtension" w="25.932mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.384mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>Ext.</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.phone_ext"/>
                           </field>
                           <field h="11.43mm" name="txtPrevQIFax" w="38.1mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>15. Fax No.</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.fax_num"/>
                           </field>
                           <field h="11.43mm" name="txtPrevQIEmail" w="63.296mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>18. Email</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_person.qi_person.email"/>
                           </field>
                           <bind match="none"/>
                           <?templateDesigner expand 1?></subform>
                        <margin leftInset="0mm" topInset="0.508mm"/>
                        <bind match="none"/>
                        <?templateDesigner expand 0?></subform>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <subform y="90.996mm" w="202.184mm" minH="49.429mm" layout="lr-tb" name="sfCurrContent">
                     <bind match="none"/>
                     <keep intact="contentArea"/>
                     <subform w="202.184mm" name="sfCurrQIAddrHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblCurrQIAddr" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>CURRENT QUALIFIED INVESTIGATOR ADDRESS</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <linear>
                                    <color value="255,255,255"/>
                                 </linear>
                                 <color value="255,255,153"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 38 CURRENT QUALIFIED INVESTIGATOR ADDRESS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <bind match="none"/>
                        <?templateDesigner expand 0?></subform>
                     <field name="chkCurrQIAddrSameAs" w="197.059mm" h="6.35mm">
                        <ui>
                           <checkButton>
                              <border>
                                 <edge stroke="lowered"/>
                                 <fill/>
                              </border>
                           </checkButton>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <value>
                           <integer>0</integer>
                        </value>
                        <caption placement="right" reserve="190.44mm">
                           <para vAlign="middle"/>
                           <font size="8pt" typeface="Myriad Pro"/>
                           <value>
                              <text>Qualified Investigator Address is the same as the Clinical Trial Site</text>
                           </value>
                        </caption>
                        <items>
                           <integer>1</integer>
                           <integer>0</integer>
                           <integer>2</integer>
                        </items>
                        <event activity="change" name="event__change">
                           <script contentType="application/x-javascript">
 
 


var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =  script.HCeForm.control.Part3.QIHandler;
var cSystem = script.core.System;
try
{
	
		// set up event object
		var actionName =  cHandler.CURRADDR_SAMEAS_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);

}
catch(exception)
{
	cLog.warn("Problem with curr QI Same As address ::change", exception);
}
</script>
                        </event>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_address.qi_address_same_as_site"/>
                     </field>
                     <subform w="202.184mm" layout="lr-tb" name="sfCurrQIAddressDetails">
                        <keep intact="contentArea"/>
                        <field h="11.43mm" name="txtCurrQIAddress" w="200.659mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Street/Suite/PO Box*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_address.qi_address_details.street_address"/>
                        </field>
                        <field h="11.43mm" name="txtCurrQICity" w="53.34mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="2.8643mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>City - Town*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_address.qi_address_details.city"/>
                        </field>
                        <field h="11.43mm" name="ddlCountry" w="45.72mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Country*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <items/>
                           <items presence="hidden" save="1"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_address.qi_address_details.country"/>
                        </field>
                        <field h="11.43mm" name="ddlProvince" w="50.8mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Province - State*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_address.qi_address_details.province_lov"/>
                        </field>
                        <field h="11.43mm" name="txtProvince" w="45.72mm">
                           <border>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <para vAlign="middle"/>
                              <value>
                                 <text>Province/State</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro" size="8pt"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="none"/>
                        </field>
                        <field h="11.43mm" name="txtPostalCode" w="45.72mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Postal/ZIP Code*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].curr_qi_address.qi_address_details.postal_code"/>
                        </field>
                        <margin bottomInset="0mm"/>
                        <occur min="0"/>
                        <bind match="none"/>
                        <?templateDesigner expand 0?></subform>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.184mm" layout="lr-tb" name="sfPrevQIAddressDetails">
                     <keep intact="contentArea"/>
                     <subform w="202.184mm" name="sfPrevQIAddrHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblPrevQIAddr" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>PREVIOUS QUALIFIED INVESTIGATOR ADDRESS</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt">
                              <fill>
                                 <color value="255,255,255"/>
                              </fill>
                           </font>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <color value="0,0,0"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 39 PREVIOUS QUALIFIED INVESTIGATOR ADDRESS 0 1417 11857 255 255 255 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <border>
                           <edge presence="hidden"/>
                           <corner presence="hidden"/>
                           <corner/>
                           <corner presence="hidden"/>
                           <corner/>
                        </border>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <field h="11.43mm" name="txtPrevQIAddress" w="200.66mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Street/Suite/PO Box*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_address.street_address"/>
                     </field>
                     <field h="11.43mm" name="txtPrevQICity" w="53.34mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.176mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>City - Town*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_address.city"/>
                     </field>
                     <field h="11.43mm" name="ddlCountry" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Country*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <items/>
                        <items presence="hidden" save="1"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_address.country"/>
                     </field>
                     <field h="11.43mm" name="ddlProvince" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Province - State*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_address.province_lov"/>
                     </field>
                     <field h="11.43mm" name="txtProvince" w="45.72mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>Province/State</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro" size="8pt"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="none"/>
                     </field>
                     <field h="11.43mm" name="txtPostalCode" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Postal/ZIP Code*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_qi_address.postal_code"/>
                     </field>
                     <margin bottomInset="0mm"/>
                     <occur min="0"/>
                     <bind match="none"/>
                     <?templateDesigner expand 0?></subform>
                  <bind match="none"/>
                  <?templateDesigner expand 0?></subform>
               <subform w="202.184mm" name="sfResearchEthics" layout="lr-tb">
                  <subform w="202.184mm" name="sfREBHeading" layout="lr-tb">
                     <keep intact="contentArea"/>
                     <margin topInset="1.27mm" bottomInset="1.27mm"/>
                     <draw name="lblREBHeading" w="202.184mm" h="6.249mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>C) RESEARCH ETHICS BOARD APPROVAL</text>
                        </value>
                        <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                        <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                        <border>
                           <edge/>
                           <corner thickness="0.175mm"/>
                           <fill>
                              <linear>
                                 <color value="255,255,255"/>
                              </linear>
                              <color value="255,255,153"/>
                           </fill>
                           <edge presence="hidden"/>
                           <edge/>
                           <edge presence="hidden"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <corner thickness="0.175mm"/>
                           <corner thickness="0.175mm" presence="hidden"/>
                        </border>
                        <assist role="H2"/>
                        <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                        <?renderCache.textRun 33 C) RESEARCH ETHICS BOARD APPROVAL 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                     <draw name="lblREBEthics" w="7.96in" h="11.865mm">
                        <ui>
                           <textEdit/>
                        </ui>
                        <value>
                           <text>A Research Ethics Board Attestation (REBA) form must be completed by the Research Ethics Board that reviewed and approved the protocol and informed consent form for the clinical trial at the site specified above. The completed attestation must be retained for a period of 25 years</text>
                        </value>
                        <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                        <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                        <?renderCache.bounds 570286 30799 0 0 1417 1417 0 0?>
                        <?renderCache.textRun 165 A Research Ethics Board Attestation (REBA) form must be completed by the Research Ethics Board that reviewed and approved the protocol and informed consent form for  0 1417 14016 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?>
                        <?renderCache.textRun 115 the clinical trial at the site specified above. The completed attestation must be retained for a period of 25 years 0 1417 23616 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
                     <bind match="none"/>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.184mm" minH="49.53mm" layout="lr-tb" name="sfREBAddress">
                     <field name="txtREBCompany" w="201.808mm" h="11.43mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="3.175mm" placement="top">
                           <font size="8pt" typeface="Myriad Pro"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>Name of Research Ethics Board, including applicable affiliations</text>
                           </value>
                        </caption>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].reb_name"/>
                     </field>
                     <field name="dteApprovalDate" w="68.58mm" h="15.24mm">
                        <ui>
                           <dateTimeEdit hScrollPolicy="off">
                              <border hand="right">
                                 <edge/>
                              </border>
                              <margin/>
                              <comb numberOfCells="10"/>
                           </dateTimeEdit>
                           <picture>date{YYYY-MM-DD}</picture>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <value>
                           <date/>
                        </value>
                        <caption reserve="6.604mm" placement="top">
                           <para vAlign="bottom"/>
                           <value>
                              <text>Date of approval as YYYY-MM-DD</text>
                           </value>
                           <font typeface="Myriad Pro" size="8pt"/>
                        </caption>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_approve_date">
                           <picture>date{YYYY-MM-DD}</picture>
                        </bind>
                        <format>
                           <picture>date{YYYY-MM-DD}</picture>
                        </format>
                        <validate nullTest="error"/>
                        <event activity="enter" name="event__enter">
                           <script contentType="application/x-javascript">var cSystem = script.core.System;

cSystem.setCurrentField(this);

</script>
                        </event>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.Part3.DateHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var temp=this.rawValue;
		if(!isNaN(temp) &amp;&amp;(temp).length==8){
				
			this.rawValue=temp.substring(0,4)+'-'+temp.substring(4,6)+'-'+temp.substring(6,8);
		}
		
		var actionName =  cHandler.SUPPL_UISTATE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with Approval Date ::exit", exception);
}

</script>
                        </event>
                     </field>
                     <subform y="21.7mm" w="152.4mm" minH="9mm" layout="lr-tb" name="sfPrevApprovalDate">
                        <field name="dtePrevApprovalDate" w="68.58mm" h="15.24mm">
                           <ui>
                              <dateTimeEdit hScrollPolicy="off">
                                 <border hand="right">
                                    <edge/>
                                 </border>
                                 <margin/>
                                 <comb numberOfCells="10"/>
                              </dateTimeEdit>
                              <picture>date{YYYY-MM-DD}</picture>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <value>
                              <date/>
                           </value>
                           <caption reserve="6.604mm" placement="top">
                              <para vAlign="bottom"/>
                              <value>
                                 <text>Previous Date of approval</text>
                              </value>
                              <font typeface="Myriad Pro" size="8pt"/>
                           </caption>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_approve_date">
                              <picture>date{YYYY-MM-DD}</picture>
                           </bind>
                           <format>
                              <picture>date{YYYY-MM-DD}</picture>
                           </format>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var temp=this.rawValue;
		if(temp &amp;&amp; !isNaN(temp) &amp;&amp;(temp).length==8){
				
			this.rawValue=temp.substring(0,4)+'-'+temp.substring(4,6)+'-'+temp.substring(6,8);
		}
		
		}
}
catch(exception)
{
	cLog.warn("Problem with Approval Date ::exit", exception);
}

</script>
                           </event>
                           <event activity="enter" name="event__enter">
                              <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                           </event>
                        </field>
                        <occur min="0"/>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <subform name="sfSupplSafety" w="202.184mm" layout="lr-tb">
                        <field name="ddlSafetyReasons" w="129.257mm" h="9mm">
                           <ui>
                              <choiceList>
                                 <border>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <caption reserve="102.1943mm">
                              <font size="8pt" typeface="Myriad Pro"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>Is the Commencement date earlier than the REB Approval date for safety reasons?</text>
                              </value>
                           </caption>
                           <validate nullTest="error"/>
                           <event activity="exit" name="event__exit">
                              <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.Part3.DateHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cHandler.SAFETY_UI_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with Approval Date ::exit", exception);
}

</script>
                           </event>
                           <event activity="enter" name="event__enter">
                              <script contentType="application/x-javascript">var cSystem = script.core.System;

cSystem.setCurrentField(this);

</script>
                           </event>
                           <bind match="dataRef" ref="$.trial_site_info[*].safety_reason_info.is_safety_reason"/>
                        </field>
                        <field name="chkSupplDoc" w="91.291mm" h="6mm">
                           <ui>
                              <checkButton>
                                 <border>
                                    <edge stroke="lowered"/>
                                    <fill/>
                                 </border>
                              </checkButton>
                           </ui>
                           <font typeface="Myriad Pro"/>
                           <margin leftInset="1mm" rightInset="1mm"/>
                           <para vAlign="middle"/>
                           <value>
                              <integer>0</integer>
                           </value>
                           <caption placement="right" reserve="84.291mm">
                              <para vAlign="middle"/>
                              <font size="8pt" typeface="Myriad Pro"/>
                              <value>
                                 <text>Supplementary Safety Document Enclosed</text>
                              </value>
                           </caption>
                           <items>
                              <integer>1</integer>
                              <integer>0</integer>
                              <integer>2</integer>
                           </items>
                           <bind match="dataRef" ref="$.trial_site_info[*].safety_reason_info.is_safety_doc_enclosed"/>
                        </field>
                        <occur min="0"/>
                        <draw name="lblDateError" w="200.365mm" minH="5.233mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <exData contentType="text/html">
                                 <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="text-decoration:none;letter-spacing:0in">Please correct the<span style="xfa-spacerun:yes"> </span><span style="letter-spacing:0em">Commencement</span> or approval date. The commencement date cannot be earlier than the Approval date.</p></body>
                              </exData>
                           </value>
                           <font typeface="Myriad Pro" weight="bold"/>
                           <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                        </draw>
                        <bind match="none"/>
                        <?templateDesigner expand 1?></subform>
                     <subform y="62.143mm" w="202.184mm" minH="31.649mm" layout="lr-tb" name="sfCurrRebAddrContent">
                        <bind match="none"/>
                        <subform w="202.184mm" name="sfREBCurrAddrHeading" layout="lr-tb">
                           <keep intact="contentArea"/>
                           <margin topInset="1.27mm" bottomInset="1.27mm"/>
                           <draw name="lblREBCurrAddr" w="202.184mm" h="6.249mm">
                              <ui>
                                 <textEdit/>
                              </ui>
                              <value>
                                 <text>CURRENT  RESEARCH ETHICS BOARD ADDRESS</text>
                              </value>
                              <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
                              <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                              <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                              <border>
                                 <edge/>
                                 <corner thickness="0.175mm"/>
                                 <fill>
                                    <linear>
                                       <color value="255,255,255"/>
                                    </linear>
                                    <color value="255,255,153"/>
                                 </fill>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                                 <edge/>
                                 <edge presence="hidden"/>
                              </border>
                              <assist role="H2"/>
                              <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                              <?renderCache.textRun 38 CURRENT  RESEARCH ETHICS BOARD ADDRESS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                           <bind match="none"/>
                           <?templateDesigner expand 0?></subform>
                        <subform w="200.66mm" minH="34.29mm" layout="lr-tb" name="sfCurrRebAddress">
                           <field name="txtREBStreetAddress" w="200.66mm" h="11.43mm">
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <caption reserve="3.175mm" placement="top">
                                 <font size="8pt" typeface="Myriad Pro"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>22. Street, Suite and PO Box</text>
                                 </value>
                              </caption>
                              <validate nullTest="error"/>
                              <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_address.street_address"/>
                           </field>
                           <field name="txtREBCity" w="55.88mm" h="11.43mm">
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <font typeface="Myriad Pro"/>
                              <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                              <para vAlign="middle"/>
                              <caption reserve="3.175mm" placement="top">
                                 <font size="8pt" typeface="Myriad Pro"/>
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>23. City or Town</text>
                                 </value>
                              </caption>
                              <validate nullTest="error"/>
                              <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_address.city"/>
                           </field>
                           <field h="11.43mm" name="ddlCountry" w="50.8mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>24. Country*</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <items/>
                              <items presence="hidden" save="1"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <choiceList>
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </choiceList>
                              </ui>
                              <validate nullTest="error"/>
                              <event activity="exit" name="event__exit">
                                 <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.Part3.REBAHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cHandler.REBA_COUNTRY_CHANGE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with reba country ::exit", exception);
}
</script>
                              </event>
                              <event activity="enter" name="event__enter">
                                 <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                              </event>
                              <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_address.country"/>
                           </field>
                           <field h="11.43mm" name="ddlProvince" w="45.72mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>Province  or State*</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <choiceList>
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </choiceList>
                              </ui>
                              <validate nullTest="error"/>
                              <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_address.province_lov"/>
                           </field>
                           <field h="11.43mm" name="txtProvince" w="45.72mm">
                              <border>
                                 <corner thickness="0.175mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <para vAlign="middle"/>
                                 <value>
                                    <text>25. Province or State</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro" size="8pt"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <bind match="none"/>
                           </field>
                           <field h="11.43mm" name="txtREBPostalCode" w="45.72mm">
                              <border>
                                 <corner thickness="0.1753mm" presence="hidden"/>
                                 <edge presence="hidden"/>
                              </border>
                              <caption placement="top" reserve="3.175mm">
                                 <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                                 <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                                 <value>
                                    <text>26. Postal or ZIP Code*</text>
                                 </value>
                              </caption>
                              <font typeface="Myriad Pro"/>
                              <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                              <para vAlign="middle"/>
                              <ui>
                                 <textEdit hScrollPolicy="off">
                                    <border>
                                       <?templateDesigner StyleID aped3?>
                                       <edge stroke="lowered"/>
                                    </border>
                                    <margin/>
                                 </textEdit>
                              </ui>
                              <validate nullTest="error"/>
                              <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_address.postal_code"/>
                           </field>
                           <bind match="none"/>
                           <?templateDesigner expand 0?>
                           <keep intact="contentArea"/>
                        </subform>
                        <keep intact="contentArea"/>
                        <?templateDesigner expand 1?></subform>
                     <margin leftInset="0mm" rightInset="0mm"/>
                     <bind match="none"/>
                     <?templateDesigner expand 1?></subform>
                  <subform w="202.184mm" minH="49.53mm" layout="lr-tb" name="sfPrevREBAddress">
                     <subform w="202.184mm" name="sfREBPrevAddrHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblPrevREBAddr" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>PREVIOUS  RESEARCH ETHICS BOARD ADDRESS</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt">
                              <fill>
                                 <color value="255,255,255"/>
                              </fill>
                           </font>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <color value="0,0,0"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 39 PREVIOUS  RESEARCH ETHICS BOARD ADDRESS 0 1417 11857 255 255 255 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <?templateDesigner expand 1?>
                        <bind match="none"/>
                     </subform>
                     <field name="txtPrevREBStreetAddress" w="200.235mm" h="11.43mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="3.175mm" placement="top">
                           <font size="8pt" typeface="Myriad Pro"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>22. Street, Suite and PO Box</text>
                           </value>
                        </caption>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_address.street_address"/>
                     </field>
                     <field name="txtPrevREBCity" w="55.88mm" h="11.43mm">
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <font typeface="Myriad Pro"/>
                        <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                        <para vAlign="middle"/>
                        <caption reserve="3.175mm" placement="top">
                           <font size="8pt" typeface="Myriad Pro"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>23. City or Town</text>
                           </value>
                        </caption>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_address.city"/>
                     </field>
                     <field h="11.43mm" name="ddlCountry" w="50.8mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>24. Country*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <items/>
                        <items presence="hidden" save="1"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <event activity="exit" name="event__exit">
                           <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.Part3.REBAHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cHandler.PREV_REBA_COUNTRY_CHANGE_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with previous reba country ::exit", exception);
}
</script>
                        </event>
                        <event activity="enter" name="event__enter">
                           <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                        </event>
                        <event activity="initialize" name="event__initialize">
                           <script contentType="application/x-javascript">
this.rawValue="CA";
</script>
                        </event>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_address.country"/>
                     </field>
                     <field h="11.43mm" name="ddlProvince" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Province  or State*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_address.province_lov"/>
                     </field>
                     <field h="11.43mm" name="txtProvince" w="45.72mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <para vAlign="middle"/>
                           <value>
                              <text>25. Province or State</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro" size="8pt"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="none"/>
                     </field>
                     <field h="11.43mm" name="txtPrevREBPostalCode" w="45.72mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>26. Postal or ZIP Code*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_address.postal_code"/>
                     </field>
                     <occur min="0"/>
                     <margin leftInset="0mm" rightInset="0mm"/>
                     <bind match="none"/>
                     <keep intact="contentArea"/>
                     <?templateDesigner expand 0?></subform>
                  <subform w="202.184mm" layout="lr-tb" name="sfREBCurrName">
                     <subform w="202.184mm" name="sfREBCurrContactHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblCurrRebaPerson" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>CURRENT RESEARCH BOARD CONTACT PERSON</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <linear>
                                    <color value="255,255,255"/>
                                 </linear>
                                 <color value="255,255,153"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 37 CURRENT RESEARCH BOARD CONTACT PERSON 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <?templateDesigner expand 1?>
                        <bind match="none"/>
                     </subform>
                     <field h="11.43mm" name="txtREBCurrFullName" w="139.7mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Full Name*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.full_name"/>
                     </field>
                     <field h="11.43mm" name="txtREBCurrTitle" w="62.195mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>17.  Position Title*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.job_title"/>
                     </field>
                     <field h="11.43mm" name="ddlREBCurrLangPref" w="35.56mm">
                        <border>
                           <corner thickness="0.175mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" size="8pt"/>
                           <para vAlign="middle"/>
                           <value>
                              <text>16. Language*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <items save="1"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <choiceList>
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </choiceList>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.language_correspondance"/>
                     </field>
                     <field h="11.43mm" name="txtREBCurrTelephone" w="38.1mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>14. Telephone No.*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.phone_num"/>
                     </field>
                     <field h="11.43mm" name="txtREBCurrExtension" w="31.31mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Extion</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.phone_ext"/>
                     </field>
                     <field h="11.43mm" name="txtREBCurrFax" w="38.1mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>15. Fax No.</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.fax_num"/>
                     </field>
                     <field h="11.43mm" name="txtREBCurrEmail" w="58.42mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>18. Email</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <bind match="dataRef" ref="$.trial_site_info[*].curr_reb_person.email"/>
                        <validate nullTest="error"/>
                     </field>
                     <margin leftInset="0mm" rightInset="0mm"/>
                     <?templateDesigner expand 0?>
                     <bind match="none"/>
                     <keep intact="contentArea"/>
                  </subform>
                  <subform w="202.184mm" layout="lr-tb" name="sfREBPrevName">
                     <subform w="202.184mm" name="sfREBPrevContactHeading" layout="lr-tb">
                        <keep intact="contentArea"/>
                        <margin topInset="1.27mm" bottomInset="1.27mm"/>
                        <draw name="lblPrevRebaPerson" w="202.184mm" h="6.249mm">
                           <ui>
                              <textEdit/>
                           </ui>
                           <value>
                              <text>PREVIOUS RESEARCH BOARD CONTACT PERSON</text>
                           </value>
                           <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold">
                              <fill>
                                 <color value="255,255,255"/>
                              </fill>
                           </font>
                           <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
                           <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                           <border>
                              <edge/>
                              <corner thickness="0.175mm"/>
                              <fill>
                                 <color value="0,0,0"/>
                              </fill>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                              <edge/>
                              <edge presence="hidden"/>
                           </border>
                           <assist role="H2"/>
                           <?renderCache.bounds 570286 16274 0 0 1417 720 0 0?>
                           <?renderCache.textRun 38 PREVIOUS RESEARCH BOARD CONTACT PERSON 0 1417 11857 255 255 255 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
                        <?templateDesigner expand 1?>
                        <bind match="none"/>
                     </subform>
                     <field h="11.43mm" name="txtREBPrevFullName" w="139.7mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.0313mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>Full Name*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.full_name"/>
                     </field>
                     <field h="11.43mm" name="txtREBPrevTitle" w="62.461mm">
                        <border>
                           <corner thickness="0.1753mm" presence="hidden"/>
                           <edge presence="hidden"/>
                        </border>
                        <caption placement="top" reserve="3.175mm">
                           <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                           <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                           <value>
                              <text>17.  Position Title*</text>
                           </value>
                        </caption>
                        <font typeface="Myriad Pro"/>
                        <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                        <para vAlign="middle"/>
                        <ui>
                           <textEdit hScrollPolicy="off">
                              <border>
                                 <?templateDesigner StyleID aped3?>
                                 <edge stroke="lowered"/>
                              </border>
                              <margin/>
                           </textEdit>
                        </ui>
                        <validate nullTest="error"/>
                        <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.job_title"/>
                     </field>
                     <subform y="8.789mm" w="202.184mm" minH="22.86mm" layout="lr-tb" name="sfPrevHiddenProp">
                        <field h="11.43mm" name="ddlREBPrevLangPref" w="35.56mm">
                           <border>
                              <corner thickness="0.175mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" size="8pt"/>
                              <para vAlign="middle"/>
                              <value>
                                 <text>Previos Language*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <items save="1"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <choiceList>
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </choiceList>
                           </ui>
                           <validate nullTest="error"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.language_correspondance"/>
                        </field>
                        <field h="11.43mm" name="txtREBPrevTelephone" w="38.1mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>14. Telephone No.*</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <validate nullTest="warning"/>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.phone_num"/>
                        </field>
                        <field h="11.43mm" name="txtREBPrevExtension" w="31.31mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>Extion</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.phone_ext"/>
                        </field>
                        <field h="11.43mm" name="txtREBPrevFax" w="38.1mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>15. Fax No.</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.fax_num"/>
                        </field>
                        <field h="11.43mm" name="txtREBPrevEmail" w="58.42mm">
                           <border>
                              <corner thickness="0.1753mm" presence="hidden"/>
                              <edge presence="hidden"/>
                           </border>
                           <caption placement="top" reserve="3.175mm">
                              <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                              <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                              <value>
                                 <text>18. Email</text>
                              </value>
                           </caption>
                           <font typeface="Myriad Pro"/>
                           <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                           <para vAlign="middle"/>
                           <ui>
                              <textEdit hScrollPolicy="off">
                                 <border>
                                    <?templateDesigner StyleID aped3?>
                                    <edge stroke="lowered"/>
                                 </border>
                                 <margin/>
                              </textEdit>
                           </ui>
                           <bind match="dataRef" ref="$.trial_site_info[*].prev_reb_person.email"/>
                        </field>
                        <?templateDesigner expand 0?>
                        <bind match="none"/>
                        <keep intact="contentArea"/>
                     </subform>
                     <occur min="0"/>
                     <margin leftInset="0mm" rightInset="0mm"/>
                     <?templateDesigner expand 0?>
                     <bind match="none"/>
                     <keep intact="contentArea"/>
                  </subform>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <margin leftInset="0mm" rightInset="0mm" bottomInset="0.762mm" topInset="0.762mm"/>
               <occur max="-1"/>
               <breakBefore/>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <bind match="none"/>
            <?templateDesigner expand 1?></subform>
         <subform w="202.184mm" name="sfFinalizeButton">
            <margin topInset="5.08mm" bottomInset="2.54mm"/>
            <field name="btnFinalizeAndLock" w="28.575mm" h="6.35mm" relevant="-print" x="0.001mm" y="0mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Finalize</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cFormHandler.LOCK_FORM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with finalize ::click", exception);
}

</script>
               </event>
            </field>
            <field name="btnModify" w="28.575mm" h="6.35mm" relevant="-print" x="31.175mm" y="0mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Modify</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler=	script.HCeForm.control.FormHandler;
var cSystem = script.core.System;


try{
		// set up event object
		var actionName = cHandler.UNLOCK_FORM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with  unlock button::click", exception);
}
</script>
               </event>
            </field>
            <bind match="none"/>
            <?templateDesigner expand 1?></subform>
         <margin topInset="0mm" bottomInset="0mm" leftInset="0.508mm" rightInset="0.508mm"/>
         <border>
            <edge/>
            <corner thickness="0.175mm"/>
         </border>
         <bind match="none"/>
         <?templateDesigner expand 1?></subform>
      <subform w="100mm" name="script" layout="tb" presence="hidden">
         <bind match="none"/>
         <subform usehref="..\..\fragments\CoreJavaScript.xdp#som($template.script.core)">
            <bind/>
            <?templateDesigner expand 0?>
         </subform>
         <subform h="50mm" name="HCeForm" w="100mm">
            <subform layout="tb" name="config" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="general">
var cLog = script.core.util.Log;


var content = { 

formType: 					"CTSI",
errorInd:					"+",
formVersion: 				"3.00.40",
CANADA:						"CA",
USA:						"US",
DR_SALUT: 					"dr",
LabelStart: 				"labelStart",
LabelEnd:					"labelEnd",
DIGITAL_SIG:				"DIG_SIG",
IMAGE_SIG:					"IMG_SIG",
FRENCH:						"fr",
ENGLISH:					"en",
TRIALCHGE:					"CHNGE",
AMENDSAME:					"SAME",
NEWTRIAL:					"NEW",
CHK_ON:						1,		//the ON checkbox value
CHK_OFF:					0,		//the OFF checkbox value
CTA:						"CTA",
CTAA:						"CTAA",
NEW_TYPE:					"NEW",		
AMEND_TYPE:					"AMEND",
YES:						"Yes",
NO:							"No",				
//Overrides
//NodeValidator_formatValidator: "",
Log_logLevel: cLog.LEVEL_WARN,
Log_showExceptionDetail: true,
Log_writeToFile: false,


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform layout="tb" name="control" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="FormHandler">/*
* Handles overall Form behaviour. Calls other controllers as appropriate
* Handles part 1 controller functionality as this is small
*/

/** Global Variables **/

var cFormNodeManager = 	script.core.model.FormNodeManager;
var cResourceManager = 	script.core.lang.ResourceManager;
var cConfigManager=			script.core.util.ConfigurationManager
var cControllerUtil = 		script.core.util.ControllerUtil;
var cException = 			script.core.util.Exception;
var cLog = 					script.core.util.Log;
var cUiUtil=				script.core.util.UiUtil;
var cFailureReporter=		script.core.validation.FailureReporter;


//form specific
var cAccessibility=			script.HCeForm.util.Accessibility;
var cSiteAddressHandler=	script.HCeForm.control.Part3.SiteAddressHandler;
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
var cQIHandler=				script.HCeForm.control.Part3.QIHandler;
var cPart2Handler=			script.HCeForm.control.Part2Handler;
var cSubTypeHandler=		script.HCeForm.control.Part3.SubTypeHandler;
var cRebaHandler=			script.HCeForm.control.Part3.REBAHandler;
var cNumberFormat= 			script.HCeForm.util.NumberFormat;
var cGeneralUtil=			script.HCeForm.util.General;
		

var FRENCH=						cConfigManager.get("FRENCH");
var ENGLISH=					cConfigManager.get("ENGLISH");	
var CTAA_CONST=					cConfigManager.get("CTAA");		
//action Global
var LANGUAGE_CHANGE=			"language_change";
var INITIALIZE_FORM_ACTION=		"init_form";
var SET_INVESTIGATOR_NAME=		"set_name";
var HIDE_INSTRUCTIONS=			"hideInstructions";
var SHOW_INSTRUCTIONS=			"showInstructions";
var LOCK_FORM=					"lockForm";
var UNLOCK_FORM=				"unlockForm";
var DIGIT_TEST=					"digitTest";
var ADD_CONTROLNUM=				"addControlNum";
var DELETE_CONTROLNUM=			"deleteControlNum";
var SUBTYPE_CHANGE=				"subtype_change";
// FORM Nodes

//instructions
var INSTRUCTIONS_SF_FN=		cFormNodeManager.getFormNodeForKey("sfInstructionsContent"); 

//buttons
var MODIFY_BTN_FN=			cFormNodeManager.getFormNodeForKey("btnModify");
var FINALIZE_BTN_FN=		cFormNodeManager.getFormNodeForKey("btnFinalizeAndLock");

//language Noe
var LANGUAGE_CHOICE=		cFormNodeManager.getFormNodeForKey("languageChoice");


var CONTROLNUM_ROOT_SF_FN=			cFormNodeManager.getFormNodeForKey("sfControlNumber");	
var CONTROL_NUMBER_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtControlNumber");
var DELETE_CT_BTN_FN=				cFormNodeManager.getFormNodeForKey("btnDeleteCT");
var ADD_CT_BTN_FN=					cFormNodeManager.getFormNodeForKey("btnAddControlNum");
var SUBTYPE_DDL_FN=					cFormNodeManager.getFormNodeForKey("ddlSubType");
var PRIME_CONTROL_NUM_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrimeControlNumber");
var CTAA_MSG_SF_FN=			cFormNodeManager.getFormNodeForKey("sfCtaaMsg");
//SCRIPT NAME
var SCRIPT_OBJECT_NAME="FormHandler";


/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{

		case INITIALIZE_FORM_ACTION:
			 initializeForm();
			break;
		
		case LANGUAGE_CHANGE:
			_updateFormLanguage();
			initializeForm();
			break;
					
		case HIDE_INSTRUCTIONS:
		case SHOW_INSTRUCTIONS:	
				 toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;	
			
		case LOCK_FORM:
			var errors=validateForm();
			if(!errors){
					var msg=cResourceManager.get("validation_pass");
					if(cTrialsHandler.isAmendedType()){
						//dynamic msg based on form tyoe
						msg=cResourceManager.get("msg_success_amend");
					}
					xfa.host.messageBox(msg,cResourceManager.get("validation_title"),3);
					cTrialsHandler.toggleUIStateUnchangedSites("hidden");
					lockForm();	
			}		
			cTrialsHandler.updateAllTrialsID();
			 break;
			 
		case UNLOCK_FORM:
				cTrialsHandler.toggleUIStateUnchangedSites("visible")
				unlockForm();  
				break;
			
		case DIGIT_TEST:
				 cNumberFormat.formatEventToNumber(anEvent.getValue());
			break;	
			
		case ADD_CONTROLNUM:
				_addControlNumber();
			break;			 
		case DELETE_CONTROLNUM:
				_deleteControlNumber(anEvent.getValue()); //cheating passing the parent in the call
				cUiUtil.moveFocus();
			break;	
			
		case SUBTYPE_CHANGE:
			 _setSubType();
		break;	
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - initialize Form '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/*
* Initializes the form to it's default state
*
*
*
*/
function initializeForm(){
	
		_updateFormLanguage();	
		toggleInstructionsVisiblity(HIDE_INSTRUCTIONS);
		_initialiseAllControlNumbers();
		 _setSubType();
		cPart2Handler.initialise(clinicalTrialInstance);
		//initialize each trial site	
		var trialsList=cTrialsHandler.getTrialsInstances();
		for (var i=0;i&lt;trialsList.length;i++){
			var clinicalTrialInstance=trialsList.item(i);
			cTrialsHandler.initialise(clinicalTrialInstance);
		}
		//initialize other controllers
		//if not saving state, check if form is finalized
}




function unlockForm(form_node){
	if(!form_node){
		form_node=cFormNodeManager.getBaseNode();
	}
	form_node.unLock();	
	initializeForm();
}//end fn


function lockForm(){
		var baseNode=cFormNodeManager.getBaseNode();
			
		baseNode.lock();		
		MODIFY_BTN_FN.unLock(); //unlock modify button
	}//end fn


//bit of a hack,using the finalize button state
function isFinalized(){

	if(FINALIZE_BTN_FN.getNodeInstance().access!=="open"){
		return true;
	}
	return false;
}


/*
* Gets the language value for the user set language question
*@returns -a string, either en or fr
*
*/
function getCurrentLanguage(){ 

	var langNodeInstance=LANGUAGE_CHOICE.getNodeInstance();
	if(!langNodeInstance.rawValue){
		langNodeInstance.rawValue=ENGLISH;		
	}
	return(langNodeInstance.rawValue);
}//end fn


//bit of a hack,using the finalize button state. This only works if we automatically remember state, should be manual instaead
function isFinalized(){

	if(FINALIZE_BTN_FN.getNodeInstance().access!=="open"){
		return true;
	}
	return false;
}



/********* Private functions *****/

function _initializeFormNodes(){

	try{

		cControllerUtil.checkFormNode(INSTRUCTIONS_CONTENT_FN,SCRIPT_OBJECT_NAME,"INSTRUCTIONS_CONTENT_FN");	
		cControllerUtil.checkFormNode(MODIFY_BTN_FN,SCRIPT_OBJECT_NAME,"MODIFY_BTN_FN");
		cControllerUtil.checkFormNode(FINALIZE_BTN_FN,SCRIPT_OBJECT_NAME,"FINALIZE_BTN_FN");
		cControllerUtil.checkFormNode(LANGUAGE_CHOICE,SCRIPT_OBJECT_NAME,"LANGUAGE_CHOICE");
		cControllerUtil.checkFormNode(CONTROLNUM_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"CONTROLNUM_ROOT_SF_FN");
		cControllerUtil.checkFormNode(DELETE_CT_BTN_FN,SCRIPT_OBJECT_NAME,"DELETE_CT_BTN_FN");
		
		cControllerUtil.checkFormNode(SUBTYPE_DDL_FN,SCRIPT_OBJECT_NAME,"SUBTYPE_DDL_FN");
		cControllerUtil.checkFormNode(PRIME_CONTROL_NUM_TXT_FN,SCRIPT_OBJECT_NAME,"PRIME_CONTROL_NUM_TXT_FN");
		cControllerUtil.checkFormNode(CTAA_MSG_SF_FN,SCRIPT_OBJECT_NAME,"CTAA_MSG_SF_FN");
						
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+".initializeFormNodes()"), exception);
	}

}//end fn


function _setSubType(){

	var subTypeInstance=SUBTYPE_DDL_FN.getNodeInstance();
	var controlNumInstance=PRIME_CONTROL_NUM_TXT_FN.getNodeInstance();

	if(subTypeInstance.rawValue==CTAA_CONST){
		//make field mandatory
		PRIME_CONTROL_NUM_TXT_FN.setLabelKey("lbControlNumber");
		PRIME_CONTROL_NUM_TXT_FN.setMandatory(true);
		cGeneralUtil.addSubformInstance(CTAA_MSG_SF_FN.getInstanceManager());			
	}else{
			PRIME_CONTROL_NUM_TXT_FN.setLabelKey("lbControlNumberAssign");
			PRIME_CONTROL_NUM_TXT_FN.setMandatory(false);
			var msgInstance=CTAA_MSG_SF_FN.getNodeInstance();
			if(msgInstance){
				cGeneralUtil.removeSubformInstance(msgInstance);
			}
	}
	PRIME_CONTROL_NUM_TXT_FN.updateUI()
	//lbControlNumberAssign
}


function _updateFormLanguage()
{
	
	cResourceManager.setCurrentLanguage(getCurrentLanguage());
	cFormNodeManager.getBaseNode().updateUI();
	var rootInstance=xfa.form.nodes.item(0);
	if(FRENCH===getCurrentLanguage()){		
		rootInstance.locale="fr_CA";			
	}else{
		rootInstance.locale="en_CA";
	}
}


/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	instructionsContainerNode=INSTRUCTIONS_SF_FN.getNodeInstance();
	if(command===HIDE_INSTRUCTIONS){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_INSTRUCTIONS){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

function validateForm(baseNode, nodeInstance){

	if(!baseNode){
		 baseNode=cFormNodeManager.getBaseNode();
	}
	if(!nodeInstance){
		nodeInstance=xfa.form.nodes.item(0);
	}
	
	var validationFailures=baseNode.validateNode(null,true);
	//cLog.trace(cFailureReporter.getFailure(validationFailures));
	cAccessibility.updateColorErrorsForAccessibility(nodeInstance);
	if(validationFailures!==null){			
		xfa.host.messageBox(cFailureReporter.getFailureSummary(validationFailures),cResourceManager.get("validation_title")); 
	}
	return(validationFailures);
}//end fn

/*
* adds an instance of the control number
*
*/
function _addControlNumber(){

	 var instanceManager=CONTROLNUM_ROOT_SF_FN.getInstanceManager();
	 var newSfInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(newSfInstance){
		_initialiseControlNumber(newSfInstance);
	}
}//end function

function _deleteControlNumber(parentInstance){
	 var instanceManager=CONTROLNUM_ROOT_SF_FN.getInstanceManager();
	 //DELETE_CT_BTN_FN
	 var controlNumSfList=CONTROLNUM_ROOT_SF_FN.getNodeInstances();
	 var parentIndex=parentInstance.index;
	 if(instanceManager.count==1){
	 	//set focus to teh add control number
	 	cUiUtil.setFocus(ADD_CT_BTN_FN.getNodeInstance());
	 }else if(parentInstance.index==0){
	 	//set to the index+1
	 	cUiUtil.setFocus(DELETE_CT_BTN_FN.getNodeInstance(controlNumSfList.item(parentIndex+1)))
	 }else{
	 	//set focus to the index -1
	 	cUiUtil.setFocus(DELETE_CT_BTN_FN.getNodeInstance(controlNumSfList.item(parentIndex-1)))
	 }
	var result=cGeneralUtil.removeSubformInstance(parentInstance);
	if(result){
		_initialiseAllControlNumbers()
	}
	 

}

function _initialiseAllControlNumbers(){
	controlNumSfList=CONTROLNUM_ROOT_SF_FN.getNodeInstances();
	for(var i=0;i&lt;controlNumSfList.length;i++){
		_initialiseControlNumber(controlNumSfList.item(i));
	
	}
}



/* Initialises the clinical control number text
*
*/
function _initialiseControlNumber(sfInstance){
	var controlNumInstance=CONTROL_NUMBER_TXT_FN.getNodeInstance(sfInstance);
	var deleteBtnInstance=DELETE_CT_BTN_FN.getNodeInstance(sfInstance);
	var labelText=CONTROL_NUMBER_TXT_FN.getLabel();
	var addText="3."+(sfInstance.index+1);
	labelText=addText+" "+labelText;
	cUiUtil.setCaption(controlNumInstance,labelText);
	labelText=DELETE_CT_BTN_FN.getLabel();
	labelText=labelText+" "+addText;
	cUiUtil.setCaption(deleteBtnInstance,labelText);
}
</script>
                  <script contentType="application/x-javascript" name="MasterPageHandler">

//Imports
var cLog                     = script.core.util.Log;
var cFormNodeManager         = script.core.model.FormNodeManager;
var cResourceManager         = script.core.lang.ResourceManager;
var cException               = script.core.util.Exception;
var cConfigManager=			script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cSystem = 				script.core.System;
var cUiUtil=				script.core.util.UiUtil;
var cFailureReporter=		script.core.validation.FailureReporter;

//var cGeneralUtil=			script.HCeForm.util.General;
var cFormsHandler=			script.HCeForm.control.FormHandler;
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;

var INITIALIZE_MASTER_PAGE=		"intialize_masterPage";


var FORM_VERSION_TXT_FN=		cFormNodeManager.getFormNodeForKey("mp1Version");	
var TITLE_LBL_FN=				cFormNodeManager.getFormNodeForKey("mp1Title");
var ADD_SITE_BTN_FN=			cFormNodeManager.getFormNodeForKey("mp1AddClinicalBtn");
var	RESET_CHGE_BTN_FN= 			cFormNodeManager.getFormNodeForKey("mp1ResetChangesBtn");

var FRENCH=			cConfigManager.get("FRENCH");
var VERSION=		cConfigManager.get("formVersion");


var AMEND_TYPE_CONST=	cConfigManager.get("AMEND_TYPE");

_initializeFormNodes();


/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{


		case INITIALIZE_MASTER_PAGE:
			initialize(anEvent.getValue());
			break;
			
				
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


function setAmendmentButtonState(a_sfInstance){

	if(cTrialsHandler.getSubmissionType()==AMEND_TYPE_CONST){
		cUiUtil.show(RESET_CHGE_BTN_FN.getNodeInstance(a_sfInstance));
	}else{
		cUiUtil.hide(RESET_CHGE_BTN_FN.getNodeInstance(a_sfInstance));
	
	}
}


function initialize(a_sfInstance){


	_setFormVersion(FORM_VERSION_TXT_FN.getNodeInstance(a_sfInstance));
	_setLabels(a_sfInstance);
	setAmendmentButtonState(a_sfInstance);	
	_setButtonState(a_sfInstance);
	
}

function _setButtonState(a_sfInstance){

	var addSiteInstance=ADD_SITE_BTN_FN.getNodeInstance(a_sfInstance);
	var resetButtonInstance=RESET_CHGE_BTN_FN.getNodeInstance(a_sfInstance);
	cUiUtil.setCaption(addSiteInstance,cResourceManager.get(ADD_SITE_BTN_FN.labelKey));
	cUiUtil.setCaption(resetButtonInstance,cResourceManager.get(RESET_CHGE_BTN_FN.labelKey));		
 if(cFormsHandler.isFinalized()){
 	ADD_SITE_BTN_FN.lock(addSiteInstance);
 	RESET_CHGE_BTN_FN.lock(resetButtonInstance);
 }else{
 	ADD_SITE_BTN_FN.unLock(addSiteInstance);
 	RESET_CHGE_BTN_FN.unLock(resetButtonInstance);
 }
}

function _setFormVersion(a_versionField){
	a_versionField.rawValue=VERSION;
	cUiUtil.setCaption(a_versionField,cResourceManager.get(FORM_VERSION_TXT_FN.labelKey));//shouldnt have to do this
}

//sets the labels since this doesn't seem to work on the master page
function _setLabels(a_sfInstance){

	var titleInstance=TITLE_LBL_FN.getNodeInstance(a_sfInstance);
	cUiUtil.setCaption(titleInstance,cResourceManager.get(TITLE_LBL_FN.labelKey));	
	
}



/***Private functionality ***/
function _initializeFormNodes(){

	try{
	
		cControllerUtil.checkFormNode(FORM_VERSION_TXT_FN, SCRIPT_OBJECT_NAME ,"FORM_VERSION_TXT_FN");
		cControllerUtil.checkFormNode(TITLE_LBL_FN, SCRIPT_OBJECT_NAME ,"TITLE_LBL_FN");
		cControllerUtil.checkFormNode(ADD_SITE_BTN_FN, SCRIPT_OBJECT_NAME ,"ADD_SITE_BTN_FN");
		cControllerUtil.checkFormNode(RESET_CHGE_BTN_FN, SCRIPT_OBJECT_NAME ,"RESET_CHGE_BTN_FN");
					
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}
</script>
                  <script contentType="application/x-javascript" name="TrialsHandler">/*
* This controller manages the overall state of a clinical trial Site
* i.e. adding or deleting a clinical trial, trial ID
* One exception is the Form type is managed in this handler
*/


//SCRIPT NAME
var SCRIPT_OBJECT_NAME="TrialsHandler";

/** Global Variables **/

var cFormNodeManager = 		script.core.model.FormNodeManager;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigManager			=script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cException = 			script.core.util.Exception;
var cLog = 					script.core.util.Log;
var cUiUtil=				script.core.util.UiUtil;
var cNodeUtil=		 		script.core.util.NodeUtil;

//form specific
var cSubTypeHandler=		script.HCeForm.control.Part3.SubTypeHandler;
var cGeneralUtil=			script.HCeForm.util.General;
var cQIHandler=				script.HCeForm.control.Part3.QIHandler;
var cSubTypeHandler=		script.HCeForm.control.Part3.SubTypeHandler;
var cRebaHandler=			script.HCeForm.control.Part3.REBAHandler;
var cSiteAddressHandler=	script.HCeForm.control.Part3.SiteAddressHandler;
var cAddressUtil=			script.HCeForm.util.AddressUtil;
var cDateHandler=			script.HCeForm.control.Part3.DateHandler;

// FRM Nodes
var TRIALS_SF_FN=				cFormNodeManager.getFormNodeForKey("sfPart3"); 
var CHANGE_NUM_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtChangeNum"); 
var SUB_TYPE_DDL_FN=			cFormNodeManager.getFormNodeForKey("ddlSubType");
var FORM_SUBMIT_TYPE_RDO_FN=	cFormNodeManager.getFormNodeForKey("rdoTrialType");	  	
var DELETE_BTN_FN=				cFormNodeManager.getFormNodeForKey("btnDeleteSite");
var PART3NOTICE_SF_FN=			cFormNodeManager.getFormNodeForKey("sfPart3Notice");

//const
var AMEND_TYPE_CONST=	cConfigManager.get("AMEND_TYPE");


//actions
var SUBTYPE_CHANGE=		"subTypeChange";
var ADD_SITE_ACTION=	"addSite";
var DELETE_SITE_ACTION=	"deleteSite";	 
var  RESET_SUBTYPES=	"resetSubtype";
/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{

		case SUBTYPE_CHANGE:
			 _updatePart3Msg();					
			cSubTypeHandler.updateAllSubTypes();				
		break;
		
		case RESET_SUBTYPES:
				var result=	xfa.host.messageBox(cResourceManager.get("msg_amendReset"),"",2,1);
			if(result==1){
				cSubTypeHandler.resetAllSubTypes();
			}
		break;
		
		case ADD_SITE_ACTION:
			_addTrialSite();
		break;
		
		case DELETE_SITE_ACTION:
			var rootSiteInstance=getClinicalTrialSFInstance(anEvent.getSource());
			_deleteTrialSite(rootSiteInstance);
			cUiUtil.moveFocus();
		
		break;	 
			
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - initialize Form '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}

//shows or hides the update Part 3 message box. Shows only when amending
function _updatePart3Msg(){

	var noticeSfInstance=PART3NOTICE_SF_FN.getNodeInstance();
	if(getSubmissionType()==AMEND_TYPE_CONST){
		
		if(!noticeSfInstance){
			var instanceManager=PART3NOTICE_SF_FN.getInstanceManager();
			cGeneralUtil.addSubformInstance(instanceManager);
		}
	}else{
		if(noticeSfInstance){
			cGeneralUtil.removeSubformInstance(noticeSfInstance);
		}
	
	}
}


/*
* Manages the state of the delete button
*If there is only one clinical trial site, the delete button is hidden
*
*/
function _updateTrialDeleteButtonState(){

	var trialsList= getTrialsInstances();
	var buttonInstance= DELETE_BTN_FN.getNodeInstance(trialsList.item(0));	
	if(trialsList.length==1){
		cUiUtil.hide(buttonInstance);
	}else if(trialsList.length&gt;1){
		cUiUtil.show(buttonInstance);
	}else{
		//should never happen, but at will never fatally error
		cLog.Warn("There are no clinical trial site delete buttons");
	}
}//end fn



/*
* Adds a clinical Trial Site subform and initializes the subform
*/
function _addTrialSite(){
	var instanceManager= TRIALS_SF_FN.getInstanceManager();
	var newSfInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(newSfInstance){
		initialise(newSfInstance);
		cSubTypeHandler.initSubType(newSfInstance);
		_updateTrialDeleteButtonState();
	}
}//end fn

/*
* Updates all the ID fields to insert the correct index
*	
*
*/
function updateAllTrialsID(){
	var trialsList= getTrialsInstances();
	for (var i=0;i&lt;trialsList.length;i++)
	{
		updateTrialsID(trialsList.item(i))
	}
}//end fn


function _deleteTrialSite(rootSiteInstance){

	if(rootSiteInstance){
		//determine if it is the last clinical site
		var isDeletingLast=false;
		var instanceManager=TRIALS_SF_FN.getInstanceManager();
		var trialsList=TRIALS_SF_FN.getNodeInstances();
		var focusInstance=null;
		var focusControlInstance=null;
		var toDeleteIndex=rootSiteInstance.index;
		//can't delete the last trial;
		if(trialsList.length&lt;2) return;
		
		//get the clinical trial instance of that we want to set focus to
		if(toDeleteIndex==0){
			focusInstance=trialsList.item(1);
		}else{
			focusInstance=trialsList.item(toDeleteIndex-1);
		}
		if(trialsList.length==2){
			focusControlInstance=CHANGE_NUM_TXT_FN.getNodeInstance(focusInstance);
		
		}else{
			focusControlInstance=DELETE_BTN_FN.getNodeInstance(focusInstance);
		}

		if(instanceManager.count===(rootSiteInstance.index+1)){
				isDeletingLast=true;
		}
		var result=cGeneralUtil.removeSubformInstance(rootSiteInstance);
		if(result){
			//if the last clinical trial in the list, don't need to update the site number
			if(!isDeletingLast){
				_initialiseAllTrials()
			}else{
				//if deleting last,still need to update button state, gets called in intialise
				_updateTrialDeleteButtonState()
			}
			cUiUtil.setFocus(focusControlInstance);
		}
	}
}
/*
* Initialise all the Part 3 clinical trial site subforms
*
*/
function _initialiseAllTrials(){
	var trialsList=getTrialsInstances();
	for(var i=0;i&lt;trialsList.length;i++){
		initialise(trialsList.item(i));
	}
	_updateTrialDeleteButtonState()
}

/*
* Sets the state of the Delete Button for the Clinical Trial
* If there is only one clincial trial, the delete button should be hidden
*@param- parentInstance- the clinical trial that is the parent
* 
*/
function _setDeleteButton(parentInstance){
	var deleteBtnInstance=DELETE_BTN_FN.getNodeInstance(parentInstance);
	var index=parentInstance.index;
	var labelText=DELETE_BTN_FN.getLabel();
	var labelText=labelText+" "+(index+1);
	cUiUtil.setCaption(deleteBtnInstance,labelText);
	if(index==0){
		cUiUtil.hide(deleteBtnInstance);
	}else{
		cUiUtil.show(deleteBtnInstance);
	
	}
	
}


/*
* Initialises a single clincal trial site
* Calls all the sub controllers for part 3 initialization
*@param- parentInstance - the adobe node of the site subform
*
*/
function initialise(parentInstance){

	// _updateSiteToolTip(parentInstance);

	updateTrialsID(parentInstance);
	 _setDeleteButton(parentInstance);
	 cSubTypeHandler.initialise(parentInstance);			
	cSiteAddressHandler.initialise(parentInstance);
	cQIHandler.initialise(parentInstance);
	cRebaHandler.initialise(parentInstance);
	cDateHandler.initialise(parentInstance); 
}


/*
* Gets all the trials subform instances
*
*
*/
function getTrialsInstances(){

	return(TRIALS_SF_FN.getNodeInstances());

} 
/* Gets the specific Clincial Trial Site Instance given a field that belongs to the site
* This assumes that the ancestor is the only repeating element
* @param adobeField- an instance of a field that belongs to the clinical site desired
* @returns an adobe node instance of the root Clinical Site subform
*/
function getClinicalTrialSFInstance(adobeField){
	var result=cGeneralUtil.getParentInstance(TRIALS_SF_FN.getSomExpression(),adobeField);
	return(result);
	//return(cNodeUtil.getRepeatingAncestorNode(adobeField));
}

function updateTrialsID(parentInstance){
	var changeNumInstance=CHANGE_NUM_TXT_FN.getNodeInstance(parentInstance);
	 changeNumInstance.rawValue=(parentInstance.index)+1;
	 //UiUtil and lock makes the field grey :(
	  changeNumInstance.access="readOnly";
	changeNumInstance.fillColor="0,0,0"; //black
}

/*
* gets the form Type (new or amended) for the form
*
@returns adobe node instance of the type of submission for this form
*/
function getSubmissionType(){

	return(FORM_SUBMIT_TYPE_RDO_FN.getNodeInstance().rawValue);
}


/*
* For each clinical trial site updates the visibility of the clinical trial sites
* used for finalize/modify to show only amend forms on finalise
*@param stateValue -'visible' to show all the site, otherwise unchanged site will be hidden 
*/
function toggleUIStateUnchangedSites(stateValue){
	
	if(!isAmendedType()){
		return;
	}
	
	var trialsList=TRIALS_SF_FN.getNodeInstances();
	for(var i=0;i&lt;trialsList.length;i++){
		var oneSite=trialsList.item(i);
		if(cSubTypeHandler.isUnchangedAmend(oneSite)){
			if(stateValue=="visible"){
			 	cUiUtil.show(oneSite);
			}else{
				 cUiUtil.hide(oneSite);
			}
		}
	}//end for

}

function isAmendedType(){


	if(getSubmissionType()===AMEND_TYPE_CONST){
		return true;
	}
	return false;
}


function _initializeFormNodes(){

	try{

		cControllerUtil.checkFormNode(TRIALS_SF_FN,SCRIPT_OBJECT_NAME,"TRIALS_SF_FN");
		cControllerUtil.checkFormNode(CHANGE_NUM_TXT_FN,SCRIPT_OBJECT_NAME,"CHANGE_NUM_TXT_FN");
		cControllerUtil.checkFormNode(SUB_TYPE_DDL_FN,SCRIPT_OBJECT_NAME,"SUB_TYPE_DDL_FN");
		cControllerUtil.checkFormNode(FORM_SUBMIT_TYPE_RDO_FN,SCRIPT_OBJECT_NAME,"FORM_SUBMIT_TYPE_RDO_FN");
		cControllerUtil.checkFormNode(DELETE_BTN_FN,SCRIPT_OBJECT_NAME,"DELETE_BTN_FN");
		cControllerUtil.checkFormNode(PART3NOTICE_SF_FN,SCRIPT_OBJECT_NAME,"PART3NOTICE_SF_FN");
		
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_trials", SCRIPT_OBJECT_NAME+".initializeFormNodes()"), exception);
	}

}//end fn


</script>
                  <script contentType="application/x-javascript" name="Part2Handler">
/*
* This form manages the Part 2 information of the form
*/

//SCRIPT NAME
var SCRIPT_OBJECT_NAME="Part2Handler";


var cFormNodeManager = 		script.core.model.FormNodeManager;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigManager			=script.core.util.ConfigurationManager
var cControllerUtil = 		script.core.util.ControllerUtil;
var cLog = 					script.core.util.Log;
var cUiUtil=				script.core.util.UiUtil;
var cNodeUtil=		 		script.core.util.NodeUtil;

//form specific
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
var cGeneralUtil=			script.HCeForm.util.General;
var cAddressUtil= 			script.HCeForm.util.AddressUtil;
var cToolTipUtil=			script.HCeForm.util.ToolTipUtil;


var CHK_ON=						cConfigManager.get("CHK_ON");
var LABEL_END=				cConfigManager.get("LabelEnd");	
//action Global
var CONTACTSAMEAS_CHANGE=			"contactsameas_change";
var CONTACT_COUNTRY_CHANGED=		"contact_country_change";
var SPONSOR_COUNTRY_CHANGED=		"sponsor_country_change";

// FORM Nodes
//Sponsor Info
var SPONSOR_ROOT_SF_FN=				cFormNodeManager.getFormNodeForKey("sfSponsorInfo"); 
var SPONSOR_PROV_DDL_FN=			cFormNodeManager.getFormNodeForKey("ddlSponsorProvince"); 
var SPONSOR_PROV_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtSponsorProvince"); 
var SPONSOR_POSTAL_TXT_FN= 			cFormNodeManager.getFormNodeForKey("txtSponsorPostalCode");
var SPONSOR_COUNTRY_DDL_FN=			cFormNodeManager.getFormNodeForKey("ddlSponsorCountry");
var SPONSOR_HEADING_LBL_FN=			cFormNodeManager.getFormNodeForKey("lblSponsorInfo");
var SPONSOR_ADDRESS_SF_FN=			cFormNodeManager.getFormNodeForKey("sfSponsorAddress");


//contact info
var TRIALCONTACT_ROOT_SF_FN=		cFormNodeManager.getFormNodeForKey("sfTrialContact"); 
var TRIALCONTACT_SAMEAS_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkSponsorAddrSame"); //chg
var TRIALCONTACT_PROV_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlContactProvince"); 
var TRIALCONTACT_PROV_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtContactProvince"); 
var TRIALCONTACT_POSTAL_TXT_FN= 	cFormNodeManager.getFormNodeForKey("txtContactPostalCode");
var TRIALCONTACT_COUNTRY_DDL_FN=	cFormNodeManager.getFormNodeForKey("ddlContactCountry");
 
var CONTACT_SPONSOR_HEADING_LBL_FN=			cFormNodeManager.getFormNodeForKey("lblSponsorHeading");
var CONTACT_SPONSOR_DETAIL_SF_FN=			cFormNodeManager.getFormNodeForKey("sfSponsorContactDetails");

var CONTACT_HEADING_LBL_FN=				cFormNodeManager.getFormNodeForKey("lblContactHeading");	
var CONTACT_DETAILS_SF_FN=				cFormNodeManager.getFormNodeForKey("sfTrialContactAddress");
	

var PART2_SF_FN=					cFormNodeManager.getFormNodeForKey("sfPart2");


 _initializeFormNodes();

/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{

		case CONTACTSAMEAS_CHANGE:
			 _trialContactSameAsUI(anEvent.getSource());
			break;
		case CONTACT_COUNTRY_CHANGED:
				var parentInstance= getPart2SFInstance(anEvent.getSource());
				_initializeContactInfo(TRIALCONTACT_ROOT_SF_FN.getNodeInstance(parentInstance))	
				cUiUtil.moveFocus();				
			break;
			
		case SPONSOR_COUNTRY_CHANGED:
				var parentInstance= getPart2SFInstance(anEvent.getSource());
				_initializeSponsorInfo(SPONSOR_ROOT_SF_FN.getNodeInstance(parentInstance))
				cUiUtil.moveFocus();					
			break;	
		
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - initialize Form '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}


/*
* Initiailizes any part 2 contact for a given clinical trial site
*
*/
function initialise(){

	_trialContactSameAsUI(TRIALCONTACT_SAMEAS_CHK_FN.getNodeInstance());
	 _initializeSponsorInfo();
	 _setSponsoroContactToolTips();
	 _setContactToolTips();
	 _setSponsorToolTips();
}



function getPart2SFInstance(adobeField){
	return(PART2_SF_FN.getNodeInstance())
}

function _setSponsoroContactToolTips(){

	var contactHeading=CONTACT_SPONSOR_HEADING_LBL_FN.getLabel();
	var textToAdd=", "+contactHeading;
	cToolTipUtil.updateAllFieldTooltipsInclHidden(CONTACT_SPONSOR_DETAIL_SF_FN.getNodeInstance(),textToAdd.toLowerCase(),LABEL_END);
}

function _setContactToolTips(){
	var contactHeading=CONTACT_HEADING_LBL_FN.getLabel();
	var textToAdd=", "+contactHeading;	

	 var contactDetailsInstance=TRIALCONTACT_ROOT_SF_FN.getNodeInstance(); ///this the root of both address and contact
	//if same as checkeed, will be no instance
	if(contactDetailsInstance){
		cToolTipUtil.updateAllFieldTooltipsInclHidden(contactDetailsInstance,textToAdd.toLowerCase(),LABEL_END);
	}
}


/*
* Sets the sponsor address tooltips
*/
function _setSponsorToolTips(){
	var headingText=SPONSOR_HEADING_LBL_FN.getLabel();
	var textToAdd=", "+headingText;	
	cToolTipUtil.updateAllFieldTooltipsInclHidden(SPONSOR_ADDRESS_SF_FN.getNodeInstance(),textToAdd.toLowerCase(),LABEL_END);
}


/********* Private functions *****/

function _initializeFormNodes(){

	try{

		cControllerUtil.checkFormNode(TRIALCONTACT_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"TRIALCONTACT_ROOT_SF_FN");
		cControllerUtil.checkFormNode(TRIALCONTACT_SAMEAS_CHK_FN,SCRIPT_OBJECT_NAME,"TRIALCONTACT_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(TRIALCONTACT_PROV_DDL_FN,SCRIPT_OBJECT_NAME,"TRIALCONTACT_PROV_DDL_FN");
		cControllerUtil.checkFormNode(TRIALCONTACT_PROV_TXT_FN,SCRIPT_OBJECT_NAME,"TRIALCONTACT_PROV_TXT_FN");
		cControllerUtil.checkFormNode(TRIALCONTACT_POSTAL_TXT_FN,SCRIPT_OBJECT_NAME,"TRIALCONTACT_POSTAL_TXT_FN");
		cControllerUtil.checkFormNode(TRIALCONTACT_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"TRIALCONTACT_COUNTRY_DDL_FN");
		
		cControllerUtil.checkFormNode(SPONSOR_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"SPONSOR_ROOT_SF_FN");
		cControllerUtil.checkFormNode(SPONSOR_PROV_DDL_FN,SCRIPT_OBJECT_NAME,"SPONSOR_PROV_DDL_FN");
		cControllerUtil.checkFormNode(SPONSOR_PROV_TXT_FN,SCRIPT_OBJECT_NAME,"SPONSOR_PROV_TXT_FN");
		cControllerUtil.checkFormNode(SPONSOR_POSTAL_TXT_FN,SCRIPT_OBJECT_NAME,"SPONSOR_POSTAL_TXT_FN");
		cControllerUtil.checkFormNode(SPONSOR_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"SPONSOR_COUNTRY_DDL_FN");	
		cControllerUtil.checkFormNode(PART2_SF_FN,SCRIPT_OBJECT_NAME,"PART2_SF_FN");	
		
		cControllerUtil.checkFormNode(CONTACT_SPONSOR_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CONTACT_HEADING_LBL_FN");
		cControllerUtil.checkFormNode(CONTACT_SPONSOR_DETAIL_SF_FN,SCRIPT_OBJECT_NAME,"CONTACT_DETAIL_SF_FN");
		
		cControllerUtil.checkFormNode(CONTACT_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CONTACT_HEADING_LBL_FN");
		cControllerUtil.checkFormNode(CONTACT_DETAILS_SF_FN,SCRIPT_OBJECT_NAME,"CONTACT_DETAILS_SF_FN"); 
		
		cControllerUtil.checkFormNode(SPONSOR_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"SPONSOR_HEADING_LBL_FN");
		cControllerUtil.checkFormNode(SPONSOR_ADDRESS_SF_FN,SCRIPT_OBJECT_NAME,"SPONSOR_ADDRESS_SF_FN");
									
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+".initializeFormNodes()"), exception);
	}

}//end fn

/*
*	Manages the state of the Contact same as address field
*	@param- oChkInstance- the adobe instance of the same as checkbox
*
*/
function _trialContactSameAsUI(oChkInstance){
 
 	//var parentInstance=getPart2SFInstance(oChkInstance);
 	if(oChkInstance.rawValue==CHK_ON){
 		//delete the instance
 		var trialContactInstance=TRIALCONTACT_ROOT_SF_FN.getNodeInstance();
 		if(trialContactInstance){
 			cGeneralUtil.removeSubformInstance(trialContactInstance);
 		}
 	}else{
 		var instanceManager=TRIALCONTACT_ROOT_SF_FN.getInstanceManager();
		var newSfInstance=cGeneralUtil.addSubformInstance(instanceManager);
		//initialize
		if(newSfInstance){
			_initializeContactInfo(newSfInstance);
		}
		
 	}
 }
 /*
 * initialized the state of the contact info. Initialises the country/ province information
 *@param parentinstance- the instance subform fo the contact information
 */
 function _initializeContactInfo(parentInstance){
 
 	var provDdlInstance=TRIALCONTACT_PROV_DDL_FN.getNodeInstance(parentInstance);	
 	var postalTxtInstance=TRIALCONTACT_POSTAL_TXT_FN.getNodeInstance(parentInstance);		
	var countryInstance=TRIALCONTACT_COUNTRY_DDL_FN.getNodeInstance(parentInstance);			
 	//initializes the state of country and province
	cAddressUtil.countryChanged(TRIALCONTACT_PROV_DDL_FN,TRIALCONTACT_POSTAL_TXT_FN,provDdlInstance,postalTxtInstance);
	cAddressUtil.setProvinceUIState(countryInstance.rawValue,provDdlInstance,TRIALCONTACT_PROV_TXT_FN.getNodeInstance(parentInstance));
 }

/*
*	Initialises the Sponsor country and province information
*
*/
 function _initializeSponsorInfo(parentInstance){
 
 	var provDdlInstance=SPONSOR_PROV_DDL_FN.getNodeInstance(parentInstance);	
 	var postalTxtInstance=SPONSOR_POSTAL_TXT_FN.getNodeInstance(parentInstance);		
	var countryInstance=SPONSOR_COUNTRY_DDL_FN.getNodeInstance(parentInstance);			
 	//initializes the state of country and province countryChanged(provinceDdl_formNode,postal_formNode,provinceDdlInstance,postalTxtInstance){
	cAddressUtil.countryChanged(SPONSOR_PROV_DDL_FN,SPONSOR_POSTAL_TXT_FN,provDdlInstance,postalTxtInstance);
	cAddressUtil.setProvinceUIState(countryInstance.rawValue,provDdlInstance,SPONSOR_PROV_TXT_FN.getNodeInstance(parentInstance));
 }
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <subform w="100mm" h="50mm" name="Part3">
                  <variables>
                     <script contentType="application/x-javascript" name="SubTypeHandler">/*
* Controller that manages the clinical trial submission/ amendment types
*
*/

//SCRIPT NAME
var SCRIPT_OBJECT_NAME="SubTypeHandler";

/** Global Variables **/

var cFormNodeManager = 		script.core.model.FormNodeManager;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigManager			=script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cException = 			script.core.util.Exception;
var cLog = 					script.core.util.Log;
var cUiUtil=				script.core.util.UiUtil;


//form specific
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
//var cAddressUtil=			script.HCeForm.util.AddressUtil;
var cSiteAddressHandler=	script.HCeForm.control.Part3.SiteAddressHandler;
var cQIHandler=				script.HCeForm.control.Part3.QIHandler; 
var cGeneralUtil=			script.HCeForm.util.General;
var cRebaHandler=			script.HCeForm.control.Part3.REBAHandler; 
var cDateHandler=			script.HCeForm.control.Part3.DateHandler;
var cToolTipUtil=			script.HCeForm.util.ToolTipUtil;	
	
var CHK_ON=					cConfigManager.get("CHK_ON");
var AMENDSAME_CONST=		cConfigManager.get("AMENDSAME");	// amendment, site not changed	
var NEWTRIAL_CONST=			cConfigManager.get("NEWTRIAL");		// new clinical trial site
var AMEND_CHANGE_CONST=		cConfigManager.get("TRIALCHGE");	//amendment, info has changed

var NEW_CONST=				cConfigManager.get("NEW_TYPE");
var AMEND_CONST=				cConfigManager.get("AMEND_TYPE");

	
//action Global
var SITE_NAME_CHANGE=				"siteNameChange";
var SITE_ADDRESS_CHANGE=			"siteAddressChange";
var QI_NAME_CHANGE=					"qiNameChange";
var QI_ADDRESS_CHANGE=				"qiAddressChange";
var REBA_NAME_CHANGE=				"rebaNameChange";
var REBA_ADDRESS_CHANGE=			"rebaAddressChange";
var DATE_CHANGE=					"dateChange";
var AMEND_TYPE_CHANGE=				"amendTypeChange";

// FRM Nodes
var SITE_ADDR_CHK_FN=	cFormNodeManager.getFormNodeForKey("chkSiteAddressChange"); 
var CHANGE_REASON_SF_FN=	cFormNodeManager.getFormNodeForKey("sfChangeReason"); 
var AMEND_TYPE_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlChangeType"); 


//change type form nodes

var SITE_INFO_HEADING_LBL_FN=	cFormNodeManager.getFormNodeForKey("lblClinTrialHeading"); 	
var DATE_CHGE_CHK_FN=			cFormNodeManager.getFormNodeForKey("chkDateChange"); 
var SITE_NAME_CHGE_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkSiteNameChange"); 
var SITE_ADDR_CHGE_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkSiteAddressChange"); 
var QI_NAME_CHGE_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkQINameChange"); 
var QI_ADDR_CHGE_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkQIAddressChange"); 
var REB_PERSON_CHGE_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkREBPersonChange"); 
var REB_ADDR_CHGE_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkREBAddressChange"); 



/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case AMEND_TYPE_CHANGE: //type of amendment droplist behaviour
			var amendTypeDdlInstance=anEvent.getSource();
			var rootTrialInstance= cTrialsHandler.getClinicalTrialSFInstance(amendTypeDdlInstance);	
			 _initReasonState(rootTrialInstance,amendTypeDdlInstance);
			 break;
		
		case SITE_NAME_CHANGE: //site name amendment type
				_clinicalTrialSiteNameChangeType(anEvent.getSource()); //done
				break;
				
		case SITE_ADDRESS_CHANGE: //site address amendment type
				_clinicalTrialAddressChangeType(anEvent.getSource()); //done								
				break;
				
		case 	QI_NAME_CHANGE:	//QI name change amendment type
				_qiNameChangeType(anEvent.getSource());		//done				
				break;
			
		case	QI_ADDRESS_CHANGE: //QI address change amendment type	
			 _qiAddressChangeType(anEvent.getSource()); //done
			 break;
			 
		case REBA_NAME_CHANGE: // research ethics board name change amendment type
			_rebaNameChangeType(anEvent.getSource()); //done
			break;
			
		case REBA_ADDRESS_CHANGE: //research ethics board amendment type
			_rebaAddressChangeType(anEvent.getSource()); //done
			break;			 
			
		case DATE_CHANGE:	//commencement date and approval date amendment type
			_dateChangeType(anEvent.getSource());
			break;	
			 	
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - initialize Form '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}

/*
* for a given clinical trial site, initializes all the fields
* @param parentInstance- the instance subform of the clinical trial to update
*/
function initialise(parentInstance){
	initSubType(parentInstance);
	
}
/*
* Returns an array of all the change reason subforms that contain the checkbox group
*
*/
function getAllChangeTypes(){

	return(CHANGE_REASON_SF_FN.getNodeInstances());

}
/* Get the change reason subform given a specific clinical trial site
* @param- parentInstance- the root instance of the clinical trial site
*/
function getChangeTypeSf(parentInstance){

	return(CHANGE_REASON_SF_FN.getNodeInstance(parentInstance));
}


function isUnchangedAmend(clinicalSite){

	var amendDdlInstance=AMEND_TYPE_DDL_FN.getNodeInstance(clinicalSite);
	if(amendDdlInstance.rawValue=== AMENDSAME_CONST){
	
		return (true);
	}
	return false;
}
/*
* Initializes the tooltips for submisssion type and the change types. This function is called when initalizing the subtype
*/
function _setToolTips(sfParentInstance){

		var sfInstance=getChangeTypeSf(sfParentInstance);	
		var headingInstance=SITE_INFO_HEADING_LBL_FN.getNodeInstance(sfParentInstance);
		var amendInstance=AMEND_TYPE_DDL_FN.getNodeInstance(sfParentInstance);
		
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((sfInstance.index)+1)
		var headingText=SITE_INFO_HEADING_LBL_FN.getLabel()+" "+textToAdd.toLowerCase();
		//set part 3 heading
		cUiUtil.setToolTip(headingInstance,headingText);
		//set amend tooltips
		var changeText=AMEND_TYPE_DDL_FN.getLabel()+" "+textToAdd.toLowerCase();
		cUiUtil.setToolTip(amendInstance,changeText);
		//set the checkbox tooltips
		textToAdd=textToAdd+","
		cToolTipUtil.updateAllFieldTooltipsInclHidden(sfInstance,(textToAdd),"labelStart");
	
		 					
}


/*
*  Returns the amendment type droplist instance for a given clinical trial site
*	@param- parentInstance- the clinical site instance to search for the field
*/
function getAmendType(parentInstance){
	return(AMEND_TYPE_DDL_FN.getNodeInstance(parentInstance));
}



/*
* Manages the state of the clinical trial site name 
*@param oChkSiteName- the adobe instance of the checkbox for the for the amend type
*
*/
function _clinicalTrialSiteNameChangeType(oChkSiteName){
	 var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkSiteName);
	 var oldSiteNameInstance=null;
	if(oChkSiteName.rawValue==CHK_ON){ 
		//change in clincial Site Name
		oldSiteNameInstance=cSiteAddressHandler.createOldSiteName(parentInstance);
		cSiteAddressHandler.copySiteNameToOld(parentInstance);
		 xfa.host.resetData((cSiteAddressHandler.getCurrSiteName(parentInstance)).somExpression);
	}else{
			//oldSiteNameInstance=cSiteAddressHandler.getOldNameSiteRoot(parentInstance);
			//if(oldSiteNameInstance){
				//cGeneralUtil.removeSubformInstance(oldSiteNameInstance);	
			//}
			if(cSiteAddressHandler.isCurrSiteNameEmpty(parentInstance)){
					cSiteAddressHandler.copySiteNameToCurr(parentInstance);
			}

			cSiteAddressHandler.deleteOldSiteName(parentInstance);
	}
}



/*
* Manages Change in clinical trial Address UI state 
*@param - oChkClinTrialAddress: the adobe node for teh change in clinical trial address check box
*/
function _clinicalTrialAddressChangeType(oChkClinTrialAddress){

	 var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkClinTrialAddress);
	 var oldAddressInstance=null;
	 //create the old clinical site
	if(oChkClinTrialAddress.rawValue==CHK_ON){
		//copy the data from the current clinical site
		oldAddressInstance=cSiteAddressHandler.createOldAddress(parentInstance);
		var currAddressInstance=cSiteAddressHandler.getCurrentSiteAddressRoot(parentInstance);
		cSiteAddressHandler.copyCurrSiteAddressToPrev(parentInstance);
		//clear the current address as this will be the "new" address
		xfa.host.resetData(currAddressInstance.somExpression);
		cSiteAddressHandler.intializeSiteAddress(currAddressInstance);
	}else{
		//oldAddressInstance=cSiteAddressHandler.getOldSiteAddressRoot(parentInstance);
		//if(oldAddressInstance){
			//check if empty
			if(cSiteAddressHandler.isCurrentAddressEmpty(parentInstance)){
				cSiteAddressHandler.copyPrevSiteAddressToCurr(parentInstance);
			}
			cSiteAddressHandler.deleteOldSiteAddress(parentInstance);
		//	cGeneralUtil.removeSubformInstance(oldAddressInstance);
		//}	
	}	 
}

/*
* Manages the state when a change in QI address is selected or deselected
* @param- oChkAddress: the adobe instance of the change address check box
*/
function _qiAddressChangeType(oChkAddress){

	 var rootInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkAddress);
	 var oldAddressInstance=null;
	 //create the old clinical site
	if(oChkAddress.rawValue==CHK_ON){
		//copy the data from the current clinical site
		oldAddressInstance=cQIHandler.createOldQIAddress(rootInstance);
		cQIHandler.copyToOldQIAddress(rootInstance);
		
		var currAddressInstance=cQIHandler.getCurrentQAddressSfInstance(rootInstance);
		if(currAddressInstance){
			//clear the current address as this will be the "new" address
			xfa.host.resetData(currAddressInstance.somExpression);
			cQIHandler.initializeCurrQIAddress(rootInstance,null);
		}else{
			//create it, reset the same as
			cQIHandler.resetCurrentQiAddress(rootInstance);
		}

	}else{
			//only copy if current instance exists. Could be a sameas
			oldAddressInstance=cQIHandler.getOldQIAddressSfInstance(rootInstance);
			if(oldAddressInstance &amp;&amp; cQIHandler.getCurrentQAddressSfInstance(rootInstance)){
				if(cQIHandler.isCurrentQIAddressEmpty(rootInstance)===true){
					cQIHandler.copyToCurrQiAddress(rootInstance);
				}
				
			}
			
			if(oldAddressInstance) cQIHandler.deleteOldQIAddress(rootInstance);
			// cGeneralUtil.removeSubformInstance(oldAddressInstance);	
	}	 
}

/*
*	Manages the Qualified Investigator Name state
*	@param oChkQIName - the QI name change checkbox, used to indicate amend change
*/
function _qiNameChangeType(oChkQIName){

	var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkQIName);
	var oldQINameInstance=null;
	
	if(oChkQIName.rawValue==CHK_ON){
		//create the old name instance
		oldNameInstance=cQIHandler.createOldQIName(parentInstance);
		var currQINameInstance=cQIHandler.getCurrentQINameInstance(parentInstance);
		//copy data from the current name to the old name
		cQIHandler.copyToOldQIName(parentInstance)	//clear the current address as this will be the "new" address
		xfa.host.resetData(currQINameInstance.somExpression);
			//? reset the state of current
		}else{
		//delete the instance
		oldQINameInstance=cQIHandler.getOldQINameInstance(parentInstance);
		if(oldQINameInstance){
		
			if(cQIHandler.isCurrentQINameEmpty(parentInstance)===true){
				cQIHandler.copyToCurrQiName(parentInstance);
			}
			//cGeneralUtil.removeSubformInstance(oldQINameInstance);
			cQIHandler.deleteOldQINameInstance(parentInstance)
		}	
	}
	
}
/*
*	Manages Research Ethics Board Name state
*	oChkName- the adobe instance of the checkbox related to the Ethics Board State
*/
function _rebaNameChangeType(oChkName){
	var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkName);	
	if(oChkName.rawValue==CHK_ON){
		//create the old
		 var oldInstance=cRebaHandler.createOldRebaContact(parentInstance);
		 if(oldInstance){
		 		cRebaHandler.copyToPrevRebaContact(parentInstance);
		 		xfa.host.resetData((cRebaHandler.getCurrRebaContactRoot(parentInstance).somExpression));
			}
	}else{
		 //check if current is empty
			if( cRebaHandler.isCurrentContactEmpty(parentInstance)){
				cRebaHandler.copyToCurrRebaContact(parentInstance);
			}			
		 cRebaHandler.deleteOldContact(parentInstance);
	}
}

/*
*	Manages the state of the Research Ethics board Address
*	@param- oChkName- the adobe checkbox related to the amend status for REB address
*
*/
function _rebaAddressChangeType(oChkName){
	var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkName);
	
	if(oChkName.rawValue==CHK_ON){
		//create the old
		 var oldInstance=cRebaHandler.createOldRebaAddress(parentInstance);
		 if(oldInstance){
		 		cRebaHandler.copyToPrevRebaAddress(parentInstance);
		 		cRebaHandler.prevRebaCountryChanged(oldInstance);
		 		xfa.host.resetData((cRebaHandler.getCurrRebaAddressRoot(parentInstance).somExpression));
		 		cRebaHandler.rebaCountryChanged(parentInstance)
			}
	}else{
		 //check if current is empty
			if( cRebaHandler.isCurrentAddressEmpty(parentInstance)){
				cRebaHandler.copyToCurrRebaAddress(parentInstance);
				cRebaHandler.rebaCountryChanged(parentInstance);
			}	
		 cRebaHandler.deleteOldAddress(parentInstance);
	}
}//end functoin

/*
*	Manages the Commencment date and Approval date states
*	@param oChkName- the adobe checkbox related to the amendment state of the dates
*
*/
function _dateChangeType(oChkName){
	var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oChkName);	
	if(oChkName.rawValue==CHK_ON){
		//create the old
		  var oldApprovalInstance=cDateHandler.createPrevApprovalDate(parentInstance);
		  var oldComenceInstance=cDateHandler.createPrevCommenceDate(parentInstance);
		 if(oldApprovalInstance){
		 		cDateHandler.copyToPrevApprovalDate(parentInstance);
		 		xfa.host.resetData((cDateHandler.getCurrApprovalDate(parentInstance).somExpression));
			}
		if(oldComenceInstance){
		 		cDateHandler.copyToPrevCommenceDate(parentInstance);
		 		xfa.host.resetData((cDateHandler.getCurrCommenceDate(parentInstance).somExpression));
			}		
	}else{
		 //check if current is empty
				if(cDateHandler.isCurrCommenceDateEmpty(parentInstance)){
				cDateHandler.copyToCurrCommenceDate(parentInstance);
			}
			if(cDateHandler.isCurrApprovalDateEmpty(parentInstance)){
				cDateHandler.copyToCurrApprovalDate(parentInstance);
			}
			cDateHandler.deletePrevCommenceDate(parentInstance);
			cDateHandler.deletePrevApprovalDate(parentInstance);		
	}
}





/*
* Checks that the form nodes exist
*
*/
function _initializeFormNodes(){

	try{
		
		cControllerUtil.checkFormNode(SITE_INFO_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"SITE_INFO_HEADING_LBL_FN");
		cControllerUtil.checkFormNode(AMEND_TYPE_DDL_FN,SCRIPT_OBJECT_NAME,"AMEND_TYPE_DDL_FN");
		cControllerUtil.checkFormNode(CHANGE_REASON_SF_FN,SCRIPT_OBJECT_NAME,"CHANGE_REASON_SF_FN");
		cControllerUtil.checkFormNode(AMEND_TYPE_DDL_FN,SCRIPT_OBJECT_NAME,"AMEND_TYPE_DDL_FN");
		
		cControllerUtil.checkFormNode(DATE_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"DATE_CHGE_CHK_FN");
		cControllerUtil.checkFormNode(SITE_NAME_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"SITE_NAME_CHGE_CHK_FN");
		cControllerUtil.checkFormNode(SITE_ADDR_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"SITE_ADDR_CHGE_CHK_FN");
		cControllerUtil.checkFormNode(QI_NAME_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"QI_NAME_CHGE_CHK_FN");
		cControllerUtil.checkFormNode(QI_ADDR_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"QI_ADDR_CHGE_CHK_FN");
		cControllerUtil.checkFormNode(REB_PERSON_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"REB_PERSON_CHGE_CHK_FN");
		cControllerUtil.checkFormNode(REB_ADDR_CHGE_CHK_FN,SCRIPT_OBJECT_NAME,"REB_ADDR_CHGE_CHK_FN");
		
					
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_trials", SCRIPT_OBJECT_NAME+".initializeFormNodes()"), exception);
	}

}//end fn

/*
*
*/
 function updateAllSubTypes(){		
	var clinTrialsList=cTrialsHandler.getTrialsInstances()
	for(var i=0;i&lt;clinTrialsList.length;i++){
		updateSubType(clinTrialsList.item(i));
	}
}

function resetAllSubTypes(){
	var clinTrialsList=cTrialsHandler.getTrialsInstances()
	for(var i=0;i&lt;clinTrialsList.length;i++){
		resetSubType(clinTrialsList.item(i));
	}

}

function resetSubType(parentInstance){
	
	amendDdlInstance=getAmendType(parentInstance);
	 amendDdlInstance.rawValue=AMENDSAME_CONST; 
	/*if(cTrialsHandler.getSubmissionType()===AMEND_CONST){
		//user selected an amendment to this form is being submitted
		//make existing sites Existing, no change	
			
	}else{
		 	//otherwise submitting for first time, type is new
		 	amendDdlInstance.rawValue=NEWTRIAL_CONST;	
	}*/
	_resetReasonState(parentInstance);

}
function _resetReasonState(rootTrialInstance){
	 var changeReasonSfInstance=getChangeTypeSf(rootTrialInstance);

	if(changeReasonSfInstance){
		cGeneralUtil.hideAndClearNodeInstance(changeReasonSfInstance);
		// intialize the checkbox states of the reason for the change
		_clinicalTrialSiteNameChangeType(SITE_NAME_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_dateChangeType(DATE_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_clinicalTrialAddressChangeType(SITE_ADDR_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));	
		_qiNameChangeType(QI_NAME_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_qiAddressChangeType(QI_ADDR_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_rebaNameChangeType(REB_PERSON_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_rebaAddressChangeType(REB_ADDR_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
	}
	
		
}//end function





/*
* Based on the form amendment type, updates teh Amendment type default
* @param parentInstance - the instance of the clinical site to update
*/
function updateSubType(parentInstance){

	amendDdlInstance=getAmendType(parentInstance);
	
	if(cTrialsHandler.getSubmissionType()===AMEND_CONST){
		//user selected an amendment to this form is being submitted
		//make existing sites Existing, no change	
		 amendDdlInstance.rawValue=AMENDSAME_CONST; 	
	}else{
		 	//otherwise submitting for first time, type is new
		 	amendDdlInstance.rawValue=NEWTRIAL_CONST;	
	}
	initSubType(parentInstance);
	
}
/*
* Initializes the state of the amendment type for a given site
* This differs from updateSubType as it does not change the amend type if it exists already
*/
function initSubType(parentInstance){
	var amendDdlInstance=getAmendType(parentInstance);
	if(amendDdlInstance.isNull){
		//if null must have created a new instance, must be a new trial
		amendDdlInstance.rawValue=NEWTRIAL_CONST;
	}
	if(cTrialsHandler.getSubmissionType()===AMEND_CONST){	
		 	
		 	cUiUtil.show(amendDdlInstance);	
	}else{
		 	cUiUtil.hide(amendDdlInstance); 		
	}
		
		_initReasonState(parentInstance,amendDdlInstance);
		_setToolTips(parentInstance);
}

/* Initializse the reason state subform, and initialise all the states that the checkboxes control
*	@param rootTrialInstance- the subform instance of the clinical trial site
*	@param amendDdlInstance- the adobe instance of the tpye of amendment droplist
*/
function _initReasonState(rootTrialInstance,amendDdlInstance){
	 var changeReasonSfInstance=getChangeTypeSf(rootTrialInstance);

	if(changeReasonSfInstance){
		//manage the UI state of the reason for change	
		if(amendDdlInstance.rawValue==AMEND_CHANGE_CONST){
			cUiUtil.show(changeReasonSfInstance);
		}else{
			cGeneralUtil.hideAndClearNodeInstance(changeReasonSfInstance);
		}
		// intialize the checkbox states of the reason for the change
		_clinicalTrialSiteNameChangeType(SITE_NAME_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_dateChangeType(DATE_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_clinicalTrialAddressChangeType(SITE_ADDR_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));	
		_qiNameChangeType(QI_NAME_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_qiAddressChangeType(QI_ADDR_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_rebaNameChangeType(REB_PERSON_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
		_rebaAddressChangeType(REB_ADDR_CHGE_CHK_FN.getNodeInstance(changeReasonSfInstance));
	}
	
		
}//end function

</script>
                     <script contentType="application/x-javascript" name="SiteAddressHandler">//imports, core
var cLog = 					script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cFormNodeManager = 		script.core.model.FormNodeManager;
var cUiUtil=				script.core.util.UiUtil;
var cException = 			script.core.util.Exception;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cStringUtil=			script.core.util.StringUtil;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cInstanceManagerUtil=	script.core.util.InstanceManagerUtil;
var cAddressUtil=			script.HCeForm.util.AddressUtil;
var cToolTipUtil=			script.HCeForm.util.ToolTipUtil;	

//imports, utility
var cAddressUtil= 			script.HCeForm.util.AddressUtil;
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
var cGeneralUtil=			script.HCeForm.util.General;
//Globals
var LABEL_START=cConfigurationManager.get("LabelStart");
var LABEL_END=cConfigurationManager.get("LabelEnd");

var CANADA=	cConfigurationManager.get("CANADA");
var  USA=	cConfigurationManager.get("USA");


//Handler name
var SCRIPT_OBJECT_NAME=					"siteAddressHandler";

//Action Globals

var CLINICAL_COUNTRY_CHANGED_ACTION=	"clinical_country_changed";
var INITIALISE_COUNTRY_ACTION="country_init";

//address array indexes
var CONST_STREET=0;
var CONST_CITY=1;
var CONST_DDLPROV=2;
var CONST_POSTAL=3;


//FORM NODES (FN)


//current site name
//var CURR_SITE_SF_FN=cFormNodeManager.getFormNodeForKey("sfCurrSiteName");
var CURR_SITE_NAME_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrSiteName");
var CURR_SITE_NAME_HDING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblCurrSiteNameHeading");

	


//old site name
var OLD_SITE_SF_FN=cFormNodeManager.getFormNodeForKey("sfOldSiteName");
var OLD_SITE_NAME_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldSiteName");

//Current site info
var CURR_SITE_ADDR_SF_FN=cFormNodeManager.getFormNodeForKey("sfCurrSiteAddressDetails");
var CURR_SITE_ADDR_HDING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblCurrSiteAddrHeading");

var CURR_SITE_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("ddlCurrSiteProvince");
var CURR_SITE_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("txtCurrSitePostalCode");
var CURR_SITE_PROVINCE_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrSiteProvince");
var CURR_SITE_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("ddlCurrSiteCountry");
var CURR_SITE_STREET_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrSiteAddress");
var CURR_SITE_CITY_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrSiteCity");

//Old site info
var OLD_SITE_ADDR_SF_FN=cFormNodeManager.getFormNodeForKey("sfOldSiteAddressDetails"); 
var OLD_SITE_STREET_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldSiteAddress");
var OLD_SITE_CITY_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldSiteCity");
var OLD_SITE_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("ddlOldSiteProvince");
var OLD_SITE_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("txtOldSitePostalCode");
var OLD_SITE_PROVINCE_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldSiteProvince");
var OLD_SITE_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("ddlOldSiteCountry");

_initializeFormNodes();


/* Action Handler- Place all actions here
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
			case CLINICAL_COUNTRY_CHANGED_ACTION:
				cAddressUtil.countryChanged(CLINICAL_PROVINCE_FN,CLINICAL_POSTAL_CODE_FN);
				cAddressUtil.setProvinceUIState(anEvent.getSource().rawValue,CLINICAL_PROVINCE_FN.getNodeInstance(),CLINICAL_PROVINCE_TXT_FN.getNodeInstance());					
			break;
			
			case INITIALISE_COUNTRY_ACTION:
					 cAddressUtil.setCountryReadonly("CA",anEvent.getSource());
			
			break;
			
				
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn



function getCurrentSiteAddressValues(rootSfInstance){

	 var currSiteSfInstance=getCurrentSiteAddressRoot(rootSfInstance);
	 var addr=[CURR_SITE_STREET_TXT_FN.getNodeInstance(currSiteSfInstance).rawValue,CURR_SITE_CITY_TXT_FN.getNodeInstance(currSiteSfInstance).rawValue,
	 CURR_SITE_PROVINCE_FN.getNodeInstance(currSiteSfInstance).rawValue,CURR_SITE_POSTAL_CODE_FN.getNodeInstance(currSiteSfInstance).rawValue];
	 
	 return(addr);
}
function getOldSiteAddressValues(rootSfInstance){

	 var oldSiteSfInstance=getOldNameSiteRoot(rootSfInstance);
	 var addr=[OLD_SITE_STREET_TXT_FN.getNodeInstance(oldSiteSfInstance).rawValue,OLD_SITE_CITY_TXT_FN.getNodeInstance(oldSiteSfInstance).rawValue,
	 OLD_SITE_PROVINCE_FN.getNodeInstance(oldSiteSfInstance).rawValue,OLD_SITE_POSTAL_CODE_FN.getNodeInstance(oldSiteSfInstance).rawValue];
	 
	 return(addr);
}



function createOldSiteName(rootSfInstance){

	var instanceManager=OLD_SITE_SF_FN.getInstanceManager(rootSfInstance);
	var result=cGeneralUtil.addSubformInstance(instanceManager);
	if(result){
		intialiseOldSiteName(rootSfInstance,result);
	}
	return(result);
}
function intialiseOldSiteName(rootInstance,oldSiteNameInstance){

	//no longer making this read only
	/*if(!oldSiteNameInstance){
		oldSiteNameInstance=OLD_SITE_SF_FN.getNodeInstance(rootInstance);
	}
	if(oldSiteNameInstance){
		//OLD_SITE_SF_FN.lock(oldSiteNameInstance);
	}*/

}




function getOldNameSiteRoot(parentInstance){
	
	return(OLD_SITE_SF_FN.getNodeInstance(parentInstance));
}
function deleteOldSiteName(parentInstance){

	var oldInstance=getOldNameSiteRoot(parentInstance);
	if(oldInstance){
		var instanceManager=OLD_SITE_SF_FN.getInstanceManager(parentInstance);
		cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldInstance)
	}
}


/*
* Copies the current site name to the old site name for a given clinical site
* @param -parentInstance- a ancestor node of the names to copy
*
*/
function copySiteNameToOld(parentInstance){
		var oldInstance=OLD_SITE_NAME_TXT_FN.getNodeInstance(parentInstance);
		if(oldInstance){
			oldInstance.rawValue=getCurrSiteName(parentInstance).rawValue;
			return(true);
		}
	return false;
}


/*
* Checks to see if the site name is empty (null) 
* param parentInstance- the clinical site instance
* returns - true if the site name is null, false otherwise
*/
function isCurrSiteNameEmpty(parentInstance){
	return(getCurrSiteName(parentInstance).isNull);

}

function copySiteNameToCurr(parentInstance){
		var oldInstance=OLD_SITE_NAME_TXT_FN.getNodeInstance(parentInstance);
		if(oldInstance){
			getCurrSiteName(parentInstance).rawValue=oldInstance.rawValue;
			return true;
		}
		return false;
}


function getCurrSiteName(parentInstance){

	return(CURR_SITE_NAME_TXT_FN.getNodeInstance(parentInstance))
}

function createOldAddress(rootSfInstance){
	var instanceManager=OLD_SITE_ADDR_SF_FN.getInstanceManager(rootSfInstance);
	
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(newInstance){
		initializeOldAddress(rootSfInstance,newInstance);
		//after intialized state lock it
		//OLD_SITE_ADDR_SF_FN.lock(newInstance);
	}
	return(newInstance);	
}


function getCurrentSiteAddressRoot(parentInstance){

	return(CURR_SITE_ADDR_SF_FN.getNodeInstance(parentInstance))

}
function getOldSiteAddressRoot(parentInstance){

	return(OLD_SITE_ADDR_SF_FN.getNodeInstance(parentInstance))
}

function deleteOldSiteAddress(parentInstance){
	var oldAddressInstance=getOldSiteAddressRoot(parentInstance);
	var instanceManager=OLD_SITE_ADDR_SF_FN.getInstanceManager(parentInstance);
	cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldAddressInstance)
}

function isCurrentAddressEmpty(rootSfInstance){

	var currList=_getAllCurrAddressElements(rootSfInstance)
	for(var i=0;i&lt;currList.length;i++){
		var val=cStringUtil.trim(currList[i].rawValue);
		if(val){
			return false;
		}
	}
	return true;	
}



function copyCurrSiteAddressToPrev(rootSfInstance){
			
	var prevAddrList=_getAllPrevAddressElements(rootSfInstance);
	 var currAddrList=_getAllCurrAddressElements(rootSfInstance);
	for(var i=0;i&lt;prevAddrList.length;i++){
		prevAddrList[i].rawValue=currAddrList[i].rawValue;
	
	}
}

function copyPrevSiteAddressToCurr(rootSfInstance){
	
	var prevAddrList=_getAllPrevAddressElements(rootSfInstance);
	 var currAddrList=_getAllCurrAddressElements(rootSfInstance);
	for(var i=0;i&lt;prevAddrList.length;i++){
		currAddrList[i].rawValue=prevAddrList[i].rawValue;
	
	}
}




function _getAllPrevAddressElements(rootSfInstance){

		var prevAddressRootSfInstance= getOldSiteAddressRoot(rootSfInstance);
		//if it doesn't exist, return an empty array
		if(!prevAddressRootSfInstance) return (new Array());
		
	return(
	new Array(
				OLD_SITE_STREET_TXT_FN.getNodeInstance(prevAddressRootSfInstance),
				OLD_SITE_CITY_TXT_FN.getNodeInstance(prevAddressRootSfInstance),
				//OLD_SITE_COUNTRY_DDL_FN.getNodeInstance(prevAddressRootSfInstance),
				OLD_SITE_PROVINCE_FN.getNodeInstance(prevAddressRootSfInstance),
				OLD_SITE_POSTAL_CODE_FN.getNodeInstance(prevAddressRootSfInstance)	
			));

}

function _getAllCurrAddressElements(rootSfInstance){

		var addressRootSfInstance= getCurrentSiteAddressRoot(rootSfInstance);
		//if it doesn't exist, return an empty array
		if(!addressRootSfInstance) return (new Array());
		
	return(
	new Array(
				CURR_SITE_STREET_TXT_FN.getNodeInstance(addressRootSfInstance),
				CURR_SITE_CITY_TXT_FN.getNodeInstance(addressRootSfInstance),
				//CURR_SITE_COUNTRY_DDL_FN.getNodeInstance(addressRootSfInstance),
				CURR_SITE_PROVINCE_FN.getNodeInstance(addressRootSfInstance),
				CURR_SITE_POSTAL_CODE_FN.getNodeInstance(addressRootSfInstance)	
			));

}



/*
*
*
*
*/
function initialise(parentInstance){
		
	intialiseOldSiteName(parentInstance,null)
	 _initialiseSiteInfo(parentInstance);
	
	
}


function initializeOldAddress(rootInstance,oldSiteInstance){
		
	if(!oldSiteInstance){
				oldSiteInstance=OLD_SITE_ADDR_SF_FN.getNodeInstance(rootInstance);
	}
	if(oldSiteInstance){			
		//update old clinical country
		var oldCountryInstance=OLD_SITE_COUNTRY_DDL_FN.getNodeInstance(oldSiteInstance);
		cAddressUtil.setCountryReadonly(CANADA,oldCountryInstance);//call first affects province
		cAddressUtil.countryChanged(OLD_SITE_PROVINCE_FN,OLD_SITE_POSTAL_CODE_FN);
		cAddressUtil.setProvinceUIState(OLD_SITE_COUNTRY_DDL_FN.getNodeInstance(oldSiteInstance).rawValue,OLD_SITE_PROVINCE_FN.getNodeInstance(oldSiteInstance),OLD_SITE_PROVINCE_TXT_FN.getNodeInstance(oldSiteInstance));
		//OLD_SITE_ADDR_SF_FN.lock(oldSiteInstance);
	}
}

function intializeSiteAddress(sfParentInstance){

		var countryInstance=CURR_SITE_COUNTRY_DDL_FN.getNodeInstance(sfParentInstance);
		//update site country
		var provInstance=CURR_SITE_PROVINCE_FN.getNodeInstance(sfParentInstance);
		var postalCodeInstance=CURR_SITE_POSTAL_CODE_FN.getNodeInstance(sfParentInstance);
		cAddressUtil.setCountryReadonly(CANADA,countryInstance);//call first affects province
		cAddressUtil.countryChanged(CURR_SITE_PROVINCE_FN,CURR_SITE_POSTAL_CODE_FN,provInstance,postalCodeInstance);
		cAddressUtil.setProvinceUIState(CANADA,provInstance,CURR_SITE_PROVINCE_TXT_FN.getNodeInstance(sfParentInstance));
}


//Jan 20
function _initialiseAllSiteInfo(){

	//Set the Clinical trial current Country to Canada and read only
	var trialsList=cTrialsHandler.getTrialsInstances();
	for(var i=0; i&lt;trialsList.length;i++){
		  _initialiseSiteInfo(trialsList.item(i));
	}
}

function  _initialiseSiteInfo(parentInstance){

		intializeSiteAddress(parentInstance);
		_setCurrToolTips(parentInstance);
		//old address
		var oldSiteAddress=OLD_SITE_ADDR_SF_FN.getNodeInstance(parentInstance);
		if(oldSiteAddress){
			initializeOldAddress(parentInstance,oldSiteAddress);
		}

}

//sets the current site name and address tooltips

function _setCurrToolTips(parentInstance){

	var rootAddressInstance=getCurrentSiteAddressRoot(parentInstance);
	var siteName=getCurrSiteName(parentInstance);
	var siteAddressText=CURR_SITE_ADDR_HDING_LBL_FN.getLabel();
	var siteNameText=CURR_SITE_NAME_TXT_FN.getLabel();		
	var siteNameHeadingText= CURR_SITE_NAME_HDING_LBL_FN.getLabel();
	var clinSiteText= cResourceManager.get("lbForClinSite")+" "+((parentInstance.index)+1);	
	var forText=cResourceManager.get("lbFor");
	//siteName heading
	
	//siteName Heading Text
	siteNameHeadingText=siteNameHeadingText+" "+clinSiteText.toLowerCase();
	
	siteNameText=siteNameText+" "+clinSiteText.toLowerCase();
	cUiUtil.setToolTip(siteName,siteNameText);
	//site address heading
	var addressHeadingText=siteAddressText+" "+clinSiteText.toLowerCase();
	cUiUtil.setToolTip(CURR_SITE_ADDR_HDING_LBL_FN.getNodeInstance(parentInstance),addressHeadingText);
	//site address fields
	var textFields=clinSiteText+", "+siteAddressText;
	cToolTipUtil.updateAllFieldTooltipsInclHidden(rootAddressInstance,textFields.toLowerCase(),"labelEnd");
	
	//get Current Site Name Heading
	//get Current Site Address Headimg
	//sfPage1.sfCTSIContent.sfPart3.sfClinicalTrialSite.txtCurrSiteName
}


/*
* Checks to see if a form node exists. If it doesn't exist than throw an exception. Otherwise this will fail silently
*
*/

function _initializeFormNodes(){

		try{
		cControllerUtil.checkFormNode(CURR_SITE_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(CURR_SITE_PROVINCE_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_PROVINCE_FN");
		cControllerUtil.checkFormNode(CURR_SITE_POSTAL_CODE_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(CURR_SITE_PROVINCE_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_PROVINCE_TXT_FN");
		cControllerUtil.checkFormNode(CURR_SITE_ADDR_SF_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_ADDR_SF_FN");
		
		cControllerUtil.checkFormNode(OLD_SITE_ADDR_SF_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_ADDR_SF_FN");
		cControllerUtil.checkFormNode(OLD_SITE_PROVINCE_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_PROVINCE_FN");
		cControllerUtil.checkFormNode(OLD_SITE_POSTAL_CODE_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_POSTAL_CODE_FN")
		cControllerUtil.checkFormNode(OLD_SITE_PROVINCE_TXT_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_PROVINCE_TXT_FN")
		cControllerUtil.checkFormNode(OLD_SITE_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_COUNTRY_DDL_FN")
		
		cControllerUtil.checkFormNode(CURR_SITE_CITY_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_CITY_TXT_FN")
		cControllerUtil.checkFormNode(CURR_SITE_STREET_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_STREET_TXT_FN")
		cControllerUtil.checkFormNode(OLD_SITE_STREET_TXT_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_STREET_TXT_FN")
		cControllerUtil.checkFormNode(OLD_SITE_CITY_TXT_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_CITY_TXT_FN")
		
		cControllerUtil.checkFormNode(CURR_SITE_NAME_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_NAME_TXT_FN")
		cControllerUtil.checkFormNode(OLD_SITE_SF_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_SF_FN")
		cControllerUtil.checkFormNode(OLD_SITE_NAME_TXT_FN,SCRIPT_OBJECT_NAME,"OLD_SITE_NAME_TXT_FN")
		
		cControllerUtil.checkFormNode(CURR_SITE_ADDR_HDING_LBL_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_ADDR_HDING_LBL_FN");
		cControllerUtil.checkFormNode(CURR_SITE_NAME_HDING_LBL_FN,SCRIPT_OBJECT_NAME,"CURR_SITE_NAME_HDING_LBL_FN");

	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+"._initializeFormNode()"), exception);
	}

}



                  
               
               
</script>
                     <script contentType="application/x-javascript" name="QIHandler">

//imports, core
var cLog = 					script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cFormNodeManager = 		script.core.model.FormNodeManager;
var cUiUtil=				script.core.util.UiUtil;
var cException = 			script.core.util.Exception;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cInstanceManagerUtil=	script.core.util.InstanceManagerUtil;
var cStringUtil=			script.core.util.StringUtil;

//imports, utility
var cAddressUtil= 			script.HCeForm.util.AddressUtil;
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
var cGeneralUtil=			script.HCeForm.util.General;
var cSiteHandler=			script.HCeForm.control.Part3.SiteAddressHandler; 
var cToolTipUtil=			script.HCeForm.util.ToolTipUtil;

//Globals
var LABEL_START=cConfigurationManager.get("LabelStart");
var LABEL_END=	cConfigurationManager.get("LabelEnd");

var CANADA=		cConfigurationManager.get("CANADA");
var  USA=		cConfigurationManager.get("USA");
var CHK_ON=		cConfigurationManager.get("CHK_ON");
var CHK_OFF=		cConfigurationManager.get("CHK_OFF");
//Handler name
var SCRIPT_OBJECT_NAME=					"QIHandler";

//Action Globals

var  CURRADDR_SAMEAS_ACTION=	"curr_sameas_changed";


//FORM NODES (FN)

//current QI Name nodes
var CURR_QINAME_SF_FN=cFormNodeManager.getFormNodeForKey("sfCurrQIName");
var CURR_QINAME_HEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblCurrQIName");

var CURR_QINAME_FULL_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQIFullName");

var CURR_QINAME_DESIGN_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQIDesignation");
var CURR_QINAME_TITLE_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQITitle");
var CURR_QINAME_LANG_DDL_FN=cFormNodeManager.getFormNodeForKey("ddlCurrQILangPref");
var CURR_QINAME_PHONE_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQITelephone");
var CURR_QINAME_EXTENSION_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQIExtension");
var CURR_QINAME_FAX_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQIFax");
var CURR_QINAME_EMAIL_TXT_FN=cFormNodeManager.getFormNodeForKey("txtCurrQIEmail");

//old QIName nodes
var PREV_QINAME_SF_FN=cFormNodeManager.getFormNodeForKey("sfOldQIName");
var PREV_QINAME_HEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblOldQIName");
var PREV_QINAME_FULL_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldQIFullName");

var PREV_QINAME_DESIGN_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldQIDesignation");
var PREV_QINAME_TITLE_TXT_FN=cFormNodeManager.getFormNodeForKey("txtOldQITitle");
//hidden fields used for copying
var PREV_QINAME_HIDE_SF_FN=cFormNodeManager.getFormNodeForKey("sfOldQINameHide");	
var PREV_QINAME_LANG_DDL_FN=cFormNodeManager.getFormNodeForKey("ddlPrevQILangPref");	
var PREV_QINAME_PHONE_TXT_FN=cFormNodeManager.getFormNodeForKey("txtPrevQITelephone");	
var PREV_QINAME_EXTENSION_TXT_FN=cFormNodeManager.getFormNodeForKey("txtPrevQIExtension");	
var PREV_QINAME_FAX_TXT_FN=cFormNodeManager.getFormNodeForKey("txtPrevQIFax");
var PREV_QINAME_EMAIL_TXT_FN=cFormNodeManager.getFormNodeForKey("txtPrevQIEmail");

//current QI address nodes


var CURR_ADDR_HEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblCurrQIAddr");		
var CURR_ADDR_SAMEAS_CHK_FN=cFormNodeManager.getFormNodeForKey("chkCurrQIAddrSameAs");
var CURR_ADDR_SF_FN=		cFormNodeManager.getFormNodeForKey("sfCurrQIAddressDetails");
var CURR_STREET_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrQIAddress");
var CURR_CITY_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrQICity");
var CURR_COUNTRY_DDL_FN=	cFormNodeManager.getFormNodeForKey("ddlCurrQICountry");
var CURR_PROV_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlCurrQIProvince");
var CURR_PROV_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrQIProvince");
var CURR_POSTAL_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrQIPostalCode");

//previous QI address nodes
var PREV_ADDR_HEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblPrevQIAddr");
var PREV_ADDR_SF_FN=		cFormNodeManager.getFormNodeForKey("sfPrevQIAddressDetails");
var PREV_STREET_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrevQIAddress");
var PREV_CITY_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrevQICity");
var PREV_COUNTRY_DDL_FN=	cFormNodeManager.getFormNodeForKey("ddlPrevQICountry");
var PREV_PROV_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlPrevQIProvince");
var PREV_PROV_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrevQIProvince");
var PREV_POSTAL_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrevQIPostalCode");


_initializeFormNodes();


/* Action Handler- Place all actions here
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
			case CURRADDR_SAMEAS_ACTION:
					_setQISameAsUIState(anEvent.getSource());				
			break;
						
				
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn

/*
* Creates the previous Name fields for amendment changes
* @param- parentSfInstance- the adobe instance of the clinical trial
*/
function createOldQIName(parentSfInstance){

	if(!parentSfInstance) return null;
	var instanceManager=PREV_QINAME_SF_FN.getInstanceManager(parentSfInstance);
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(newInstance){
		_intializePrevNameInstance(parentSfInstance,newInstance);
		
	}
	return(newInstance);		
}
/*
* 
*
*/
function _intializePrevNameInstance(rootInstance,qiNameInstance){

	if(!qiNameInstance){
		qiNameInstance=PREV_QINAME_SF_FN.getNodeInstance(rootInstance);
	}
	if(qiNameInstance){
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+PREV_QINAME_HEADING_LBL_FN.getLabel();
		cToolTipUtil.updateAllFieldTooltipsInclHidden(qiNameInstance,textToAdd,LABEL_END);
		var hiddenSfInstance=PREV_QINAME_HIDE_SF_FN.getNodeInstance(qiNameInstance);
		cUiUtil.hide(hiddenSfInstance);
		//PREV_QINAME_SF_FN.lock(qiNameInstance);
	}
}//end fn

function _updateCurrNameTooltips(rootInstance){

	var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+CURR_QINAME_HEADING_LBL_FN.getLabel();
	var currNameInstance=CURR_QINAME_SF_FN.getNodeInstance(rootInstance);
	cToolTipUtil.updateAllFieldTooltipsInclHidden(currNameInstance,textToAdd.toLowerCase(),LABEL_END);

}
function getOldQINameInstance(parentSfInstance){
	
	if(!parentSfInstance) return null;
	return(PREV_QINAME_SF_FN.getNodeInstance(parentSfInstance));

}

function deleteOldQINameInstance(parentSfInstance){
	var oldInstance=getOldQINameInstance(parentSfInstance);
	var instanceManager=PREV_QINAME_SF_FN.getInstanceManager(parentSfInstance);
	cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldInstance);
}

function getCurrentQINameInstance(parentSfInstance){

	if(!parentSfInstance) return null;
	return(CURR_QINAME_SF_FN.getNodeInstance(parentSfInstance));
}

function getCurrentQAddressSfInstance(parentSfInstance){

	if(!parentSfInstance) return null;
	return(CURR_ADDR_SF_FN.getNodeInstance(parentSfInstance));
}

function getOldQIAddressSfInstance(parentSfInstance){

	if(!parentSfInstance) return null;
	return(PREV_ADDR_SF_FN.getNodeInstance(parentSfInstance));
}
function deleteOldQIAddress(parentSfInstance){
	var oldInstance=getOldQIAddressSfInstance(parentSfInstance);
	var instanceManager=PREV_ADDR_SF_FN.getInstanceManager(parentSfInstance);
	cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldInstance);
}


function resetCurrentQiAddress(rootInstance){
	//reset the checkbox
	var sameAsChkInstance=CURR_ADDR_SAMEAS_CHK_FN.getNodeInstance(rootInstance);
	sameAsChkInstance.rawValue=CHK_OFF;
	_setQISameAsUIState(sameAsChkInstance);
}

function copyToOldQIName(rootSfInstance){

	var currElementsList=_getAllCurrQINameElements(rootSfInstance);
	var prevElementsList=_getAllPrevQINameElements(rootSfInstance);
	for(var i=0;i&lt;prevElementsList.length;i++){
		prevElementsList[i].rawValue=currElementsList[i].rawValue;
	
	}
}

function copyToCurrQiName(rootSfInstance){
	var currElementsList=_getAllCurrQINameElements(rootSfInstance);
	var prevElementsList=_getAllPrevQINameElements(rootSfInstance);
	for(var i=0;i&lt;prevElementsList.length;i++){
		currElementsList[i].rawValue=prevElementsList[i].rawValue;
	
	}
	
}
/*
* for a given clinical trial site, determines if all the QI name 
* Fields are empty
* @param rootSfInstance the root suform of the clinical trial
*
*/
function isCurrentQINameEmpty(rootSfInstance){

	var currList=_getAllCurrQINameElements(rootSfInstance)
	for(var i=0;i&lt;currList.length;i++){
		var val=cStringUtil.trim(currList[i].rawValue);
		if(val){
			return false;
		}
	}
	return true;	
}

function _getAllCurrQINameElements(rootSfInstance){
	
	var currQINameSfInstance=CURR_QINAME_SF_FN.getNodeInstance(rootSfInstance);
	if(!currQINameSfInstance) return (new Array());
	return(
	new Array(
		CURR_QINAME_FULL_TXT_FN.getNodeInstance(currQINameSfInstance),		
		CURR_QINAME_DESIGN_TXT_FN.getNodeInstance(currQINameSfInstance),
		CURR_QINAME_TITLE_TXT_FN.getNodeInstance(currQINameSfInstance),
		CURR_QINAME_LANG_DDL_FN.getNodeInstance(currQINameSfInstance),
		CURR_QINAME_PHONE_TXT_FN.getNodeInstance(currQINameSfInstance),
		CURR_QINAME_EXTENSION_TXT_FN.getNodeInstance(currQINameSfInstance),
		CURR_QINAME_FAX_TXT_FN.getNodeInstance(currQINameSfInstance),
		CURR_QINAME_EMAIL_TXT_FN.getNodeInstance(currQINameSfInstance)
	));
}
function _getAllPrevQINameElements(rootSfInstance){
	
	var prevQIRootSfInstance=PREV_QINAME_SF_FN.getNodeInstance(rootSfInstance);
	if(!prevQIRootSfInstance) return (new Array());
	return(
	new Array(
		PREV_QINAME_FULL_TXT_FN.getNodeInstance(prevQIRootSfInstance),		
		PREV_QINAME_DESIGN_TXT_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_QINAME_TITLE_TXT_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_QINAME_LANG_DDL_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_QINAME_PHONE_TXT_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_QINAME_EXTENSION_TXT_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_QINAME_FAX_TXT_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_QINAME_EMAIL_TXT_FN.getNodeInstance(prevQIRootSfInstance)
	));

}//end function

function _getAllPrevQIAddressElements(rootSfInstance){
	
	var prevQIRootSfInstance=PREV_ADDR_SF_FN.getNodeInstance(rootSfInstance);
	if(!prevQIRootSfInstance) return (new Array());
	return(
	new Array(
		PREV_STREET_TXT_FN.getNodeInstance(prevQIRootSfInstance),		
		PREV_CITY_TXT_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_PROV_DDL_FN.getNodeInstance(prevQIRootSfInstance),
		PREV_POSTAL_TXT_FN.getNodeInstance(prevQIRootSfInstance)
	));

}


function _getAllCurrQIAddressElements(rootSfInstance){
	
	var currQIRootSfInstance=CURR_ADDR_SF_FN.getNodeInstance(rootSfInstance);
	if(!currQIRootSfInstance) return (new Array());
	return(
	new Array(
		CURR_STREET_TXT_FN.getNodeInstance(currQIRootSfInstance),		
		CURR_CITY_TXT_FN.getNodeInstance(currQIRootSfInstance),
		CURR_PROV_DDL_FN.getNodeInstance(currQIRootSfInstance),
		CURR_POSTAL_TXT_FN.getNodeInstance(currQIRootSfInstance)
	));

}

function copyToCurrQiAddress(rootSfInstance){
	var currElementsList=_getAllCurrQIAddressElements(rootSfInstance);
	var prevElementsList=_getAllPrevQIAddressElements(rootSfInstance);
	for(var i=0;i&lt;prevElementsList.length;i++){
		currElementsList[i].rawValue=prevElementsList[i].rawValue;
	}
}//fn

function isCurrentQIAddressEmpty(rootSfInstance){

	var currList=_getAllCurrQIAddressElements(rootSfInstance);
	for(var i=0;i&lt;currList.length;i++){
		var val=cStringUtil.trim(currList[i].rawValue);
		if(val){
			return false;
		}
	}
	return true;	
}


function initialise(parentInstance){

	_updateCurrNameTooltips(parentInstance);
	var qiAddressSameAsInstance=CURR_ADDR_SAMEAS_CHK_FN.getNodeInstance(parentInstance)
	_setQISameAsUIState(qiAddressSameAsInstance);
	
	//set the tooltip for each site for the same as checkbox
	var textSuffix=cResourceManager.get("lbForClinSite")+" "+((parentInstance.index)+1)
	var textToAdd=CURR_ADDR_SAMEAS_CHK_FN.getLabel()+" "+textSuffix.toLowerCase();
	cUiUtil.setToolTip(qiAddressSameAsInstance,textToAdd);
	
	var currQIAddrInstance= getCurrentQAddressSfInstance(parentInstance);
	if(currQIAddrInstance){
		initializeCurrQIAddress(parentInstance,currQIAddrInstance);
	}
	var oldQIAddrInstance= getOldQIAddressSfInstance(parentInstance);
	if(oldQIAddrInstance){
		_initializeOldQIAddress(parentInstance,oldQIAddrInstance);	
	}
	_intializePrevNameInstance(parentInstance,null);
	
}

/*
* Checks to see if a form node exists. If it doesn't exist than throw an exception. Otherwise this will fail silently
*
*/

function _initializeFormNodes(){

		try{
		
		cControllerUtil.checkFormNode(PREV_QINAME_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_HEADING_LBL_FN");	
		cControllerUtil.checkFormNode(PREV_QINAME_SF_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_SF_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_FULL_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_GIVEN_TXT_FN");
		
		cControllerUtil.checkFormNode(PREV_QINAME_DESIGN_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_DESIGN_TXT_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_TITLE_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_TITLE_TXT_FN")
		
		cControllerUtil.checkFormNode(PREV_QINAME_HIDE_SF_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_HIDE_SF_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_LANG_DDL_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_LANG_DDL_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_PHONE_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_PHONE_TXT_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_EXTENSION_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_EXTENSION_TXT_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_FAX_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_FAX_TXT_FN");
		cControllerUtil.checkFormNode(PREV_QINAME_EMAIL_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_QINAME_EMAIL_TXT_FN");
		
		cControllerUtil.checkFormNode(CURR_QINAME_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_HEADING_LBL_FN");	
		cControllerUtil.checkFormNode(CURR_QINAME_SF_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_SF_FN");
		
		cControllerUtil.checkFormNode(CURR_QINAME_FULL_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_GIVEN_TXT_FN");
		cControllerUtil.checkFormNode(CURR_QINAME_DESIGN_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_DESIGN_TXT_FN");
		cControllerUtil.checkFormNode(CURR_QINAME_TITLE_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_TITLE_TXT_FN");
		//new
		cControllerUtil.checkFormNode(CURR_QINAME_LANG_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_LANG_DDL_FN");
		cControllerUtil.checkFormNode(CURR_QINAME_PHONE_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_PHONE_TXT_FN");
		cControllerUtil.checkFormNode(CURR_QINAME_EXTENSION_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_EXTENSION_TXT_FN");
		cControllerUtil.checkFormNode(CURR_QINAME_FAX_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_FAX_TXT_FN");
		cControllerUtil.checkFormNode(CURR_QINAME_EMAIL_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_QINAME_EMAIL_TXT_FN");
		
		cControllerUtil.checkFormNode(CURR_ADDR_SAMEAS_CHK_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_SAMEAS_CHK_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_SF_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_SF_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_SF_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_SF_FN");
		
		//Previous QI address
		cControllerUtil.checkFormNode(PREV_STREET_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_STREET_TXT_FN");
		cControllerUtil.checkFormNode(PREV_CITY_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CITY_TXT_FN");
		cControllerUtil.checkFormNode(PREV_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"PREV_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PREV_PROV_DDL_FN,SCRIPT_OBJECT_NAME,"PREV_PROV_DDL_FN");
		cControllerUtil.checkFormNode(PREV_PROV_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_PROV_TXT_FN");
		cControllerUtil.checkFormNode(PREV_POSTAL_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_POSTAL_TXT_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_HEADING_LBL_FN");
		
		//Current QI Address
		cControllerUtil.checkFormNode(CURR_STREET_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_STREET_TXT_FN");
		cControllerUtil.checkFormNode(CURR_CITY_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CITY_TXT_FN");
		cControllerUtil.checkFormNode(CURR_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(CURR_PROV_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_PROV_DDL_FN");
		cControllerUtil.checkFormNode(CURR_PROV_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_PROV_TXT_FN");
		cControllerUtil.checkFormNode(CURR_POSTAL_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_POSTAL_TXT_FN");
		
		
		
		
		
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+"._initializeFormNode()"), exception);
	}

}



function createOldQIAddress(parentInstance){
	
	var instanceManager=PREV_ADDR_SF_FN.getInstanceManager(parentInstance);	
	var prevAddrInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(prevAddrInstance){
		_initializeOldQIAddress(parentInstance,prevAddrInstance);
		//make readonly after initializing
		//PREV_ADDR_SF_FN.lock(prevAddrInstance); 
	}

}
/**
* Copies the to the old QI address the appropriate information
* @param rootInstance- the root subform instance of the clinical trial
**/
function copyToOldQIAddress(rootInstance){

	var prevQIAddrSfInstance= PREV_ADDR_SF_FN.getNodeInstance(rootInstance);
	if(!prevQIAddrSfInstance) return; // error check if previous address doesn't exist get out	
	//previous QI Address fields instances, Country is always Canada
	var prevQIStreetTxtInstance=PREV_STREET_TXT_FN.getNodeInstance(prevQIAddrSfInstance);	
	var  prevQICityTxtInstance=PREV_CITY_TXT_FN.getNodeInstance(prevQIAddrSfInstance);	
	var  prevQIProvinceDdlInstance=PREV_PROV_DDL_FN.getNodeInstance(prevQIAddrSfInstance);		
	var  prevQIPostalTxtInstance=PREV_POSTAL_TXT_FN.getNodeInstance(prevQIAddrSfInstance);	

	if(CURR_ADDR_SAMEAS_CHK_FN.getNodeInstance(rootInstance).rawValue==CHK_ON){

		var siteAddressRootSf=cSiteHandler.getOldSiteAddressRoot(rootInstance);
		if(siteAddressRootSf){
			//TODO: copy information from the old address, there is a change in site address as well
			var oldAddrList=cSiteHandler.getOldSiteAddressValues(rootInstance);
			prevQIStreetTxtInstance.rawValue=oldAddrList[cSiteHandler.CONST_STREET];
			prevQICityTxtInstance.rawValue=	 oldAddrList[cSiteHandler.CONST_CITY];	
			prevQIProvinceDdlInstance.rawValue= oldAddrList[cSiteHandler.CONST_DDLPROV];
			prevQIPostalTxtInstance.rawValue= oldAddrList[cSiteHandler.CONST_POSTAL];	
		}else{
			//copy information from the current address as there is no change to site address
			var currAddrList=cSiteHandler.getCurrentSiteAddressValues(rootInstance);
			prevQIStreetTxtInstance.rawValue=currAddrList[cSiteHandler.CONST_STREET];
			prevQICityTxtInstance.rawValue=	 currAddrList[cSiteHandler.CONST_CITY];	
			prevQIProvinceDdlInstance.rawValue= currAddrList[cSiteHandler.CONST_DDLPROV];
			prevQIPostalTxtInstance.rawValue= currAddrList[cSiteHandler.CONST_POSTAL];
		}	
	}else{
		//copy from the current QI address. Same as was not selected
		var currQIAddrSfInstance=getCurrentQAddressSfInstance(rootInstance);	
		prevQIStreetTxtInstance.rawValue=CURR_STREET_TXT_FN.getNodeInstance(currQIAddrSfInstance).rawValue;
		prevQICityTxtInstance.rawValue=CURR_CITY_TXT_FN.getNodeInstance(currQIAddrSfInstance).rawValue;
		prevQIProvinceDdlInstance.rawValue=	CURR_PROV_DDL_FN.getNodeInstance(currQIAddrSfInstance).rawValue;
		prevQIPostalTxtInstance.rawValue=CURR_POSTAL_TXT_FN.getNodeInstance(currQIAddrSfInstance).rawValue;
	}
}

/*
* Sets the current QI address state to be same as the site
* This deletes the current address field details
*@param- the sameAs checkbox for the current address. State determines if address details exists or are deleted
*/
function _setQISameAsUIState(oSameAsChk){

	var parentInstance=cTrialsHandler.getClinicalTrialSFInstance(oSameAsChk);
	var currAddrInstance=null;
	if(oSameAsChk.rawValue===CHK_ON){
		//delete it
		 currAddrInstance=CURR_ADDR_SF_FN.getNodeInstance(parentInstance);
		 if( currAddrInstance){
		 	var instanceManager=CURR_ADDR_SF_FN.getInstanceManager(parentInstance);
		 	cGeneralUtil.removeSpecificSubformInstance(instanceManager,currAddrInstance)
		 	//cGeneralUtil.removeSubformInstance(currAddrInstance);
		 }
	}
	else{
		//create it if it doesn't exist	
		var instanceManager=CURR_ADDR_SF_FN.getInstanceManager(parentInstance);	
		currAddrInstance=cGeneralUtil.addSubformInstance(instanceManager);
		initializeCurrQIAddress(parentInstance,currAddrInstance);
	}	
}//end fn

/*
* Initializes the Previouse QI address. Does not check 
*@param rootInstance- the root SF object for the Prev QI Address
*/

function _initializeOldQIAddress(rootInstance,oldAddressInstance){
	
			//if(!rootInstance) return;
			if(!oldAddressInstance){
				oldAddressInstance=PREV_ADDR_SF_FN.getNodeInstance(rootInstance);
			}
			if(oldAddressInstance){
			
				
				var oldCountryInstance=PREV_COUNTRY_DDL_FN.getNodeInstance(oldAddressInstance);
				var provDdlInstance=PREV_PROV_DDL_FN.getNodeInstance(oldAddressInstance);
				var postalTxtInstance=PREV_POSTAL_TXT_FN.getNodeInstance(oldAddressInstance);	
				cAddressUtil.setCountryReadonly(CANADA,oldCountryInstance);//call first affects province
				cAddressUtil.countryChanged(PREV_PROV_DDL_FN,PREV_POSTAL_TXT_FN,provDdlInstance,postalTxtInstance);
				cAddressUtil.setProvinceUIState(oldCountryInstance.rawValue,provDdlInstance,PREV_PROV_TXT_FN.getNodeInstance(oldAddressInstance));	
				//PREV_ADDR_SF_FN.lock(oldAddressInstance);
				var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+PREV_ADDR_HEADING_LBL_FN.getLabel();;
				cToolTipUtil.updateAllFieldTooltipsInclHidden(oldAddressInstance,textToAdd.toLowerCase(),LABEL_END);
			}
			//TODO manage hidden fields
			
}

function initializeCurrQIAddress(rootInstance,currAddressInstance){

			if(!currAddressInstance){
				currAddressInstance=CURR_ADDR_SF_FN.getNodeInstance(rootInstance);
			}
			
			if(currAddressInstance){
				var currCountryInstance=CURR_COUNTRY_DDL_FN.getNodeInstance(currAddressInstance);
				cAddressUtil.setCountryReadonly(CANADA,currCountryInstance);//call first affects province
				var provDdlInstance=CURR_PROV_DDL_FN.getNodeInstance(currAddressInstance);
				var postalTxtInstance=CURR_POSTAL_TXT_FN.getNodeInstance(currAddressInstance);
				cAddressUtil.countryChanged(CURR_PROV_DDL_FN,CURR_POSTAL_TXT_FN,provDdlInstance,postalTxtInstance);				
				cAddressUtil.setProvinceUIState(currCountryInstance.rawValue,provDdlInstance,CURR_PROV_TXT_FN.getNodeInstance(currAddressInstance));
				var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+CURR_ADDR_HEADING_LBL_FN.getLabel();;
				cToolTipUtil.updateAllFieldTooltipsInclHidden(currAddressInstance,textToAdd.toLowerCase(),LABEL_END);
			}
}

</script>
                     <script contentType="application/x-javascript" name="REBAHandler">

//imports, core
var cLog = 					script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cFormNodeManager = 		script.core.model.FormNodeManager;
var cUiUtil=				script.core.util.UiUtil;
var cException = 			script.core.util.Exception;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cInstanceManagerUtil=	script.core.util.InstanceManagerUtil;
var cStringUtil=			script.core.util.StringUtil;

//imports, utility
var cAddressUtil= 			script.HCeForm.util.AddressUtil;
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
var cGeneralUtil=			script.HCeForm.util.General;
var cSiteHandler=			script.HCeForm.control.Part3.SiteAddressHandler; 
var cToolTipUtil=			script.HCeForm.util.ToolTipUtil;
//Globals
var LABEL_START=			cConfigurationManager.get("LabelStart");
var LABEL_END=				cConfigurationManager.get("LabelEnd");

var CANADA=					cConfigurationManager.get("CANADA");
var USA=					cConfigurationManager.get("USA");
var CHK_ON=					cConfigurationManager.get("CHK_ON");
var CHK_OFF=				cConfigurationManager.get("CHK_OFF");
//Handler name
var SCRIPT_OBJECT_NAME=					"REBAHandler";

//Action Globals
var  REBA_COUNTRY_CHANGE_ACTION=	"currCountryChange";
var PREV_REBA_COUNTRY_CHANGE_ACTION=	"prevCountryChange";

//FORM NODES (FN)

//prev Name nodes
var PREV_CONTACT_ROOT_SF_FN=		cFormNodeManager.getFormNodeForKey("sfREBPrevName");
var PREV_CONTACT_HIDDENPROP_SF_FN=	cFormNodeManager.getFormNodeForKey("sfPrevHiddenProp");
var PREV_CONTACT_FULLNAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("txtREBPrevFullName");
var PREV_CONTACT_TITLE_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBPrevTitle");
var PREV_CONTACT_LANG_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlREBPrevLangPref");
var PREV_CONTACT_PHONE_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBPrevTelephone");
var PREV_CONTACT_PHONEEXT_TXT_FN=	cFormNodeManager.getFormNodeForKey("txtREBPrevExtension");
var PREV_CONTACT_FAX_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBPrevFax");
var PREV_CONTACT_EMAIL_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBPrevEmail");
var PREV_CONTACT_HEADING_LBL_FN=	cFormNodeManager.getFormNodeForKey("lblPrevRebaPerson");

//current Name Fields
var CURR_CONTACT_ROOT_SF_FN=		cFormNodeManager.getFormNodeForKey("sfREBCurrName");
var CURR_CONTACT_FULLNAME_TXT_FN=	cFormNodeManager.getFormNodeForKey("txtREBCurrFullName");
var CURR_CONTACT_TITLE_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBCurrTitle");
var CURR_CONTACT_LANG_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlREBCurrLangPref");
var CURR_CONTACT_PHONE_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBCurrTelephone");
var CURR_CONTACT_PHONEEXT_TXT_FN=	cFormNodeManager.getFormNodeForKey("txtREBCurrExtension");
var CURR_CONTACT_FAX_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBCurrFax");
var CURR_CONTACT_EMAIL_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtREBCurrEmail");
var CURR_CONTACT_HEADING_LBL_FN=	cFormNodeManager.getFormNodeForKey("lblCurrRebaPerson");

//prev REBA Address Fields
var PREV_ADDR_HEADING_LBL_FN=		cFormNodeManager.getFormNodeForKey("lblREBPrevAddr");				
var PREV_ADDR_ROOT_SF_FN=			cFormNodeManager.getFormNodeForKey("sfPrevREBAddress");
var PREV_ADDR_STREET_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrevREBStreetAddress");
var PREV_ADDR_CITY_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtPrevREBCity");
var PREV_ADDR_COUNTRY_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlPrevREBCountry");
var PREV_ADDR_PROV_DDL_FN=			cFormNodeManager.getFormNodeForKey("ddlPrevREBProvince");
var PREV_ADDR_PROV_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtPrevREBProvince");
var PREV_ADDR_POSTAL_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtPrevREBPostalCode");

//CURR Address Fields
var CURR_ADDR_HEADING_LBL_FN=		cFormNodeManager.getFormNodeForKey("lblREBCurrAddr");
var CURR_ADDR_ROOT_SF_FN=			cFormNodeManager.getFormNodeForKey("sfCurrREBAddress");
var CURR_ADDR_STREET_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrREBStreetAddress");
var CURR_ADDR_CITY_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtCurrREBCity");
var CURR_ADDR_COUNTRY_DDL_FN=		cFormNodeManager.getFormNodeForKey("ddlCurrREBCountry");
var CURR_ADDR_PROV_DDL_FN=			cFormNodeManager.getFormNodeForKey("ddlCurrREBProvince");
var CURR_ADDR_PROV_TXT_FN=			cFormNodeManager.getFormNodeForKey("txtCurrREBProvince");
var CURR_ADDR_POSTAL_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrREBPostalCode");

//REBA Ethics Board
var CURR_ETHICS_COMPANY_TXT_FN=		cFormNodeManager.getFormNodeForKey("txtCurrREBCompany"); 


_initializeFormNodes();


/* Action Handler- Place all actions here
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
		case REBA_COUNTRY_CHANGE_ACTION:
				var rootTrialInstance=cTrialsHandler.getClinicalTrialSFInstance(anEvent.getSource());
				rebaCountryChanged(rootTrialInstance);
				cUiUtil.moveFocus();				
			break;
		case PREV_REBA_COUNTRY_CHANGE_ACTION:
				var rootTrialInstance=cTrialsHandler.getClinicalTrialSFInstance(anEvent.getSource());
					prevRebaCountryChanged(rootTrialInstance);
					cUiUtil.moveFocus();					
			break;
						
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn

/*
* Initialises the state of this controller
*@param parentInstance- the clinical trial site to initialise
*/
function initialise(parentInstance){

	rebaCountryChanged(parentInstance);
	initialiseCurrRebaAddress(parentInstance,null);
	initialiseOldRebaAddress(parentInstance,null);
	initialiseOldRebaContact(parentInstance,null);
	initialiseCurrRebaContact(parentInstance,null);
	_initialiseCurrRebaBoard(parentInstance);
}
/*
* Initialised all the form nodes, checks that they exist
*	@throws- if a formnode does not exist
*/

function _initializeFormNodes(){

	try{
			
		cControllerUtil.checkFormNode(PREV_CONTACT_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_ROOT_SF_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_HIDDENPROP_SF_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_HIDDENPROP_SF_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_FULLNAME_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_FULLNAME_TXT_FN");
		
		cControllerUtil.checkFormNode(PREV_CONTACT_TITLE_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_TITLE_TXT_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_LANG_DDL_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_LANG_DDL_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_PHONE_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_PHONE_TXT_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_PHONEEXT_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_PHONEEXT_TXT_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_FAX_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_FAX_TXT_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_EMAIL_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_EMAIL_TXT_FN");
		cControllerUtil.checkFormNode(PREV_CONTACT_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"PREV_CONTACT_HEADING_LBL_FN");
		//curr name
		cControllerUtil.checkFormNode(CURR_CONTACT_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_ROOT_SF_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_FULLNAME_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_FULLNAME_TXT_FN");
		
		cControllerUtil.checkFormNode(CURR_CONTACT_TITLE_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_TITLE_TXT_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_LANG_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_LANG_DDL_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_PHONE_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_PHONE_TXT_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_PHONEEXT_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_PHONEEXT_TXT_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_FAX_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_FAX_TXT_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_EMAIL_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_EMAIL_TXT_FN");
		cControllerUtil.checkFormNode(CURR_CONTACT_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CURR_CONTACT_HEADING_LBL_FN");
		//old address
		cControllerUtil.checkFormNode(PREV_ADDR_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_ROOT_SF_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_STREET_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_STREET_TXT_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_CITY_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_CITY_TXT_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_PROV_DDL_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_PROV_DDL_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_PROV_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_PROV_TXT_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_POSTAL_TXT_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_POSTAL_TXT_FN");
		cControllerUtil.checkFormNode(PREV_ADDR_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"PREV_ADDR_HEADING_LBL_FN");
		//curr address
		cControllerUtil.checkFormNode(CURR_ADDR_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_ROOT_SF_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_STREET_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_STREET_TXT_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_CITY_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_CITY_TXT_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_PROV_DDL_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_PROV_DDL_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_PROV_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_PROV_TXT_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_POSTAL_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_POSTAL_TXT_FN");
		cControllerUtil.checkFormNode(CURR_ADDR_HEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CURR_ADDR_HEADING_LBL_FN");
		
		cControllerUtil.checkFormNode(CURR_ETHICS_COMPANY_TXT_FN,SCRIPT_OBJECT_NAME,"CURR_ETHICS_COMPANY_TXT_FN");
			
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+"._initializeFormNode()"), exception);
	}
}

/**
* Creates an instance of the previous contact person
*@param- the clinical trial site containing the contact
*@returns the new instance subform if it was created, null if it was not created (already exists)
*/
function createOldRebaContact(parentInstance){

 	var instanceManager=PREV_CONTACT_ROOT_SF_FN.getInstanceManager(parentInstance);
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	
	if(newInstance){
		initialiseOldRebaContact(parentInstance,newInstance);
	}
	return(newInstance);		
}

/*
* Initialises the research ethics board company
*@param- rootInstance- the clinical trial site to initialise the REB company
*
*/
function _initialiseCurrRebaBoard(rootInstance){

	var companyTxtInstance=CURR_ETHICS_COMPANY_TXT_FN.getNodeInstance(rootInstance);
	var textToAdd= CURR_ETHICS_COMPANY_TXT_FN.getFieldNumber()+". "+ CURR_ETHICS_COMPANY_TXT_FN.getLabel()+" "
					+ (cResourceManager.get("lbForClinSite")).toLowerCase()+" "+((rootInstance.index)+1);
	cUiUtil.setToolTip(companyTxtInstance,textToAdd);
}

/*
* Initializes the previous REBA name section
*	@param rootSfInstace- the root Adobe sf for the previous address
*/
function initialiseOldRebaContact(rootInstance,contactSfInstance){
	
	if(!contactSfInstance){
		contactSfInstance=PREV_CONTACT_ROOT_SF_FN.getNodeInstance(rootInstance);
	}
	if(contactSfInstance){
		var hiddenSfInstance=PREV_CONTACT_HIDDENPROP_SF_FN.getNodeInstance(contactSfInstance);
		cUiUtil.hide(hiddenSfInstance);
		//PREV_CONTACT_ROOT_SF_FN.lock(contactSfInstance);
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+(PREV_CONTACT_HEADING_LBL_FN.getLabel()).toLowerCase();
		cToolTipUtil.updateAllFieldTooltipsInclHidden(contactSfInstance,textToAdd,LABEL_END);
	}	
}//end fn

/*
* Initialises the state and tooltips of the current REB contact
*@param rootInstance- the clinical trial site to initialise the current contact
*@param contactSfInstance (optional)- the contact subform instance  
*/
function initialiseCurrRebaContact(rootInstance,contactSfInstance){
	if(!contactSfInstance){
		contactSfInstance=CURR_CONTACT_ROOT_SF_FN.getNodeInstance(rootInstance);
	}
	if(contactSfInstance){
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+(CURR_CONTACT_HEADING_LBL_FN.getLabel()).toLowerCase();
		cToolTipUtil.updateAllFieldTooltipsInclHidden(contactSfInstance,textToAdd,LABEL_END);
	}
}//end fn

/*
* Returns a reference to the root subform of the old Research Ethics Board Contact
*@param rootSfInstance- the clinical trial site subform
*
*/
function getOldRebaContactRoot(rootSfInstance){

	return(PREV_CONTACT_ROOT_SF_FN.getNodeInstance(rootSfInstance));
}

/*
* returns the research ethics board current contact root SF for a given trial
*@param rootSfInstance-
*/

function getCurrRebaContactRoot(rootSfInstance){

	return(CURR_CONTACT_ROOT_SF_FN.getNodeInstance(rootSfInstance));
}


function deleteOldContact(rootSfInstance){

	var oldInstance=getOldRebaContactRoot(rootSfInstance);
	if(oldInstance){
		//var result=cGeneralUtil.removeSubformInstance(oldInstance);
		var instanceManager=PREV_CONTACT_ROOT_SF_FN.getInstanceManager(rootSfInstance);
		var result=cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldInstance)	
	}else{
		cLog.trace("There is no old REBA contact to remove")
	}
}

function copyToPrevRebaContact(rootSfInstance){

	var prevContactList=_getAllPrevContactElements(rootSfInstance);
	var currContactList=_getAllCurrContactElements(rootSfInstance);
	//order of lists is important! Use prev list for the loop as it might be length 0
	for(var i=0;i&lt;prevContactList.length;i++){
		 prevContactList[i].rawValue=currContactList[i].rawValue;
	}

}

function copyToCurrRebaContact(rootSfInstance){

	var prevContactList=_getAllPrevContactElements(rootSfInstance);
	var currContactList=_getAllCurrContactElements(rootSfInstance);
	//order of lists is important!
	for(var i=0;i&lt;prevContactList.length;i++){
		currContactList[i].rawValue= prevContactList[i].rawValue;
	
	}
}

function isCurrentContactEmpty(rootSfInstance){

	var currList=_getAllCurrContactElements(rootSfInstance)
	for(var i=0;i&lt;currList.length;i++){
		var val=cStringUtil.trim(currList[i].rawValue);
		if(val){
			return false;
		}
	}
	return true;	
}


function rebaCountryChanged(parentInstance){
	var provDdlInstance=CURR_ADDR_PROV_DDL_FN.getNodeInstance(parentInstance);	
 	var postalTxtInstance=CURR_ADDR_POSTAL_TXT_FN.getNodeInstance(parentInstance);		
	var countryInstance=CURR_ADDR_COUNTRY_DDL_FN.getNodeInstance(parentInstance);			
 	//initializes the state of country and province
	cAddressUtil.countryChanged(CURR_ADDR_PROV_DDL_FN,CURR_ADDR_POSTAL_TXT_FN,provDdlInstance,postalTxtInstance);
	cAddressUtil.setProvinceUIState(countryInstance.rawValue,provDdlInstance,CURR_ADDR_PROV_TXT_FN.getNodeInstance(parentInstance));
}

/*
* updates the state of the previous research ethics board insta
*/
function prevRebaCountryChanged(parentInstance){
	var provDdlInstance=PREV_ADDR_PROV_DDL_FN.getNodeInstance(parentInstance);	
 	var postalTxtInstance=PREV_ADDR_POSTAL_TXT_FN.getNodeInstance(parentInstance);		
	var countryInstance=PREV_ADDR_COUNTRY_DDL_FN.getNodeInstance(parentInstance);			
 	//initializes the state of country and province
	cAddressUtil.countryChanged(PREV_ADDR_PROV_DDL_FN,PREV_ADDR_POSTAL_TXT_FN,provDdlInstance,postalTxtInstance);
	cAddressUtil.setProvinceUIState(countryInstance.rawValue,provDdlInstance,PREV_ADDR_PROV_TXT_FN.getNodeInstance(parentInstance));
}



function _getAllCurrContactElements(rootSfInstance){
	
	var currContactRootSfInstance=CURR_CONTACT_ROOT_SF_FN.getNodeInstance(rootSfInstance);
	return(
	new Array(
		CURR_CONTACT_FULLNAME_TXT_FN.getNodeInstance(currContactRootSfInstance),		
		CURR_CONTACT_TITLE_TXT_FN.getNodeInstance(currContactRootSfInstance),
		CURR_CONTACT_LANG_DDL_FN.getNodeInstance(currContactRootSfInstance),
		CURR_CONTACT_PHONE_TXT_FN.getNodeInstance(currContactRootSfInstance),
		CURR_CONTACT_PHONEEXT_TXT_FN.getNodeInstance(currContactRootSfInstance),
		CURR_CONTACT_FAX_TXT_FN.getNodeInstance(currContactRootSfInstance),
		CURR_CONTACT_EMAIL_TXT_FN.getNodeInstance(currContactRootSfInstance)
	));

}
function _getAllPrevContactElements(rootSfInstance){
		var prevContactRootSfInstance=PREV_CONTACT_ROOT_SF_FN.getNodeInstance(rootSfInstance);
	
	if(!prevContactRootSfInstance) return (new Array());

	return(
	new Array(
	PREV_CONTACT_FULLNAME_TXT_FN.getNodeInstance(prevContactRootSfInstance),		
	PREV_CONTACT_TITLE_TXT_FN.getNodeInstance(prevContactRootSfInstance),
	PREV_CONTACT_LANG_DDL_FN.getNodeInstance(prevContactRootSfInstance),
	PREV_CONTACT_PHONE_TXT_FN.getNodeInstance(prevContactRootSfInstance),
	PREV_CONTACT_PHONEEXT_TXT_FN.getNodeInstance(prevContactRootSfInstance),
	PREV_CONTACT_FAX_TXT_FN.getNodeInstance(prevContactRootSfInstance),
	PREV_CONTACT_EMAIL_TXT_FN.getNodeInstance(prevContactRootSfInstance)
	));
	//return (result);
}

/*
* returns the Adobe instance of the root subform for the previous address
*
*/
function getOldAddressRoot(rootSfInstance){
 	return(PREV_ADDR_ROOT_SF_FN.getNodeInstance(rootSfInstance));
}
 
function createOldRebaAddress(parentInstance){

	var instanceManager=PREV_ADDR_ROOT_SF_FN.getInstanceManager(parentInstance);
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	
	if(newInstance){
		initialiseOldRebaAddress(parentInstance,newInstance);
	}
	return(newInstance);		

} 
function deleteOldRebaAddress(rootSfInstance){
	oldAddressInstance=getOldAddressRoot(rootSfInstance);
	if(oldAddressInstance){
		var instanceManager=PREV_ADDR_ROOT_SF_FN.getInstanceManager(rootSfInstance);
		cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldAddressInstance)	
	}

}
function copyToPrevRebaAddress(rootSfInstance){
	var prevList=_getAllPrevAddressElements(rootSfInstance);
	var currList=_getAllCurrAddressElements(rootSfInstance);
	
	for(var i=0;i&lt;prevList.length;i++){
		prevList[i].rawValue=currList[i].rawValue;
	}
	
}
/*
* Copies data from the current Reba address to the previous address
*/
function copyToCurrRebaAddress(rootSfInstance){
	var prevList=_getAllPrevAddressElements(rootSfInstance);
	var currList=_getAllCurrAddressElements(rootSfInstance);
	
	for(var i=0;i&lt;prevList.length;i++){
		currList[i].rawValue=prevList[i].rawValue;
	}	
}


function initialiseOldRebaAddress(rootInstance,oldAddressInstance){

	//for backwards compa. Old Address instance is optional
	if(!oldAddressInstance){
		oldAddressInstance=PREV_ADDR_ROOT_SF_FN.getNodeInstance(rootInstance);
	}
	if(oldAddressInstance){
		//PREV_ADDR_ROOT_SF_FN.lock(oldAddressInstance);
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+PREV_ADDR_HEADING_LBL_FN.getLabel();
		cToolTipUtil.updateAllFieldTooltipsInclHidden(oldAddressInstance,textToAdd.toLowerCase(),LABEL_END);
		prevRebaCountryChanged(oldAddressInstance);
		//update tooltips
	}
}
function initialiseCurrRebaAddress(rootInstance){
	var currSfInstance=getCurrRebaAddressRoot(rootInstance);	
	var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)+", "+(CURR_ADDR_HEADING_LBL_FN.getLabel());
	
	cToolTipUtil.updateAllFieldTooltipsInclHidden(currSfInstance,textToAdd.toLowerCase(),LABEL_END);
}

function isCurrentAddressEmpty(rootInstance){

	var currList=_getAllCurrAddressElements(rootInstance)
	for(var i=0;i&lt;currList.length;i++){
		var val=cStringUtil.trim(currList[i].rawValue);
		if(val){
			return false;
		}
	}
	return true;
}

function deleteOldAddress(rootInstance){
	
	var oldAddrInstance=getPrevRebaAddressRoot(rootInstance);
	if(oldAddrInstance){
			var instanceManager=PREV_ADDR_ROOT_SF_FN.getInstanceManager(rootInstance);
			cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldAddrInstance)
		//cGeneralUtil.removeSubformInstance(oldAddrInstance);
	}
}

function getCurrRebaAddressRoot(rootInstance){

	return(CURR_ADDR_ROOT_SF_FN.getNodeInstance(rootInstance));
}

function getPrevRebaAddressRoot(rootInstance){

	return(PREV_ADDR_ROOT_SF_FN.getNodeInstance(rootInstance));
}


/*
* Returns a list of adobe elements for the previous Reba Address
* @param rootSfInstance- the instance of the address to look for the elements
* @returns: an array of address adobe node elements
*/
function _getAllPrevAddressElements(rootSfInstance){

		var prevAddressRootSfInstance= getPrevRebaAddressRoot(rootSfInstance);
		//if it doesn't exist, return an empty array
		if(!prevAddressRootSfInstance) return (new Array());
		
	return(
	new Array(
				PREV_ADDR_STREET_TXT_FN.getNodeInstance(prevAddressRootSfInstance),
				PREV_ADDR_CITY_TXT_FN.getNodeInstance(prevAddressRootSfInstance),
				PREV_ADDR_COUNTRY_DDL_FN.getNodeInstance(prevAddressRootSfInstance),
				PREV_ADDR_PROV_DDL_FN.getNodeInstance(prevAddressRootSfInstance),
				PREV_ADDR_PROV_TXT_FN.getNodeInstance(prevAddressRootSfInstance),
				PREV_ADDR_POSTAL_TXT_FN.getNodeInstance(prevAddressRootSfInstance)	
			));

}
/*
* Returns a list of adobe elements for the Current Reba Address
* @param rootSfInstance- the instance of the clinical trial site to look for the elements
* @returns: an array of address adobe node elements
*/

function _getAllCurrAddressElements(rootSfInstance){

		var currAddressRootSfInstance=getCurrRebaAddressRoot(rootSfInstance);
	return(
	new Array(
				CURR_ADDR_STREET_TXT_FN.getNodeInstance(currAddressRootSfInstance),
				CURR_ADDR_CITY_TXT_FN.getNodeInstance(currAddressRootSfInstance),
				CURR_ADDR_COUNTRY_DDL_FN.getNodeInstance(currAddressRootSfInstance),
				CURR_ADDR_PROV_DDL_FN.getNodeInstance(currAddressRootSfInstance),
				CURR_ADDR_PROV_TXT_FN.getNodeInstance(currAddressRootSfInstance),
				CURR_ADDR_POSTAL_TXT_FN.getNodeInstance(currAddressRootSfInstance)			
			));
}
</script>
                     <script contentType="application/x-javascript" name="DateHandler">
//imports, core
var cLog = 					script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cFormNodeManager = 		script.core.model.FormNodeManager;
var cUiUtil=				script.core.util.UiUtil;
var cException = 			script.core.util.Exception;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cControllerUtil = 		script.core.util.ControllerUtil;
var cInstanceManagerUtil=	script.core.util.InstanceManagerUtil;
var cStringUtil=			script.core.util.StringUtil;
var cDateUtil=				script.core.util.DateUtil;
//imports, utility
var cAddressUtil= 			script.HCeForm.util.AddressUtil;
var cTrialsHandler=			script.HCeForm.control.TrialsHandler;
var cGeneralUtil=			script.HCeForm.util.General;
var cSiteHandler=			script.HCeForm.control.Part3.SiteAddressHandler; 
var cNumberUtil=			script.HCeForm.util.NumberFormat;
//Globals

var CHK_ON=					cConfigurationManager.get("CHK_ON");
var CHK_OFF=				cConfigurationManager.get("CHK_OFF");

var YES=				cConfigurationManager.get("YES");
var NO=					cConfigurationManager.get("NO");
//Handler name
var SCRIPT_OBJECT_NAME=					"DateHandler";

//Action Globals

var  SUPPL_UISTATE_ACTION=	"supplUiAction";
var SAFETY_UI_ACTION=		"safetyUI";

//FORM NODES (FN)

var PREV_COMMENCE_DATE_ROOT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPrevCommDate");
var PREV_APPROVAL_DATE_ROOT_SF_FN=cFormNodeManager.getFormNodeForKey("sfPrevApprovalDate");
var CURR_APPROVAL_DTE_FN=cFormNodeManager.getFormNodeForKey("dteCurrApprovalDate");
var CURR_COMMENCE_DTE_FN=cFormNodeManager.getFormNodeForKey("dteCurrComenceDate");
var PREV_COMMENCE_DTE_FN=cFormNodeManager.getFormNodeForKey("dtePrevComenceDate");
var PREV_APPROVAL_DTE_FN=cFormNodeManager.getFormNodeForKey("dtePrevApprovalDate");

var SUPPL_SAFETY_SF_FN=		cFormNodeManager.getFormNodeForKey("sfSupplSafety");	
var SAFETY_REASON_DDL_FN=	cFormNodeManager.getFormNodeForKey("ddlSafetyReasons");	
var SUPPL_DOC_CHK_FN=		cFormNodeManager.getFormNodeForKey("chkSupplDoc");	
var SUPPL_ERROR_LBL_FN=		cFormNodeManager.getFormNodeForKey("lblDateError");

_initializeFormNodes();


/* Action Handler- Place all actions here
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
			case SUPPL_UISTATE_ACTION:
					var parentTrialSfInstance=cTrialsHandler.getClinicalTrialSFInstance(anEvent.getSource());
					_setSupplUIState(parentTrialSfInstance);						
			break;
			case SAFETY_UI_ACTION:
					//get parent using source
					var parentInstance=cGeneralUtil.getParentInstance(SUPPL_SAFETY_SF_FN.getSomExpression(),anEvent.getSource());
					setSupplState(parentInstance);
			break;			
				
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn

/*
* Sets the state of the Supplemental information
* If the commencement date is before the approval date, show this information
* @param- parentInstance - the clinical site to apply this logic to
*/
function _setSupplUIState(parentInstance){

	if(isCommenceEarlierThanApproval(parentInstance)){
		//create sup safety document
		var instanceManager=SUPPL_SAFETY_SF_FN.getInstanceManager(parentInstance);
		var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
		if(newInstance){
			setSupplState(parentInstance)
		}	
	}else{
		var sfInstance=SUPPL_SAFETY_SF_FN.getNodeInstance(parentInstance);
		if(sfInstance){
				var instanceManager=SUPPL_SAFETY_SF_FN.getInstanceManager(parentInstance);
				cGeneralUtil.removeSpecificSubformInstance(instanceManager,sfInstance);
				//cGeneralUtil.removeSubformInstance(sfInstance);
		}
	}

}

/*
* Sets the tooltips for the site address handler
* sfParentInstance - the instance of the clinical trial
*/
function _setToolTips(sfParentInstance){
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((sfParentInstance.index)+1)
		_setCurrCommenceToolTip(sfParentInstance,textToAdd);
		_setCurrApprovalTooltip(sfParentInstance, textToAdd);		 					
}

/*sets the commencement Tooltip for the date field
* sfParentInstance- the adobe instance of the clinical trial.
* textToAdd- string, text to add to the end of the tooltip. concatenated with the label
*/
function _setCurrCommenceToolTip(sfParentInstance, textToAdd){

		var commenceDateText=CURR_COMMENCE_DTE_FN.getFieldNumber()+". "+ CURR_COMMENCE_DTE_FN.getLabel()+" "+textToAdd.toLowerCase();
		var dateInstance= getCurrCommenceDate(sfParentInstance);
		cUiUtil.setToolTip(dateInstance,commenceDateText);

}
/*sets the approvalTooltip for the date field
* sfParentInstance- the adobe instance of the clinical trial.
* textToAdd- string, text to add to the end of the tooltip. concatenated with the label
*/
function _setCurrApprovalTooltip(sfParentInstance, textToAdd){

		var approveDateText= CURR_APPROVAL_DTE_FN.getFieldNumber()+". "+ CURR_APPROVAL_DTE_FN.getLabel()+" "+textToAdd.toLowerCase();
		var dateInstance= getCurrApprovalDate(sfParentInstance);
		cUiUtil.setToolTip(dateInstance,approveDateText);
}



/*
* sets the UI state of the supplementary Safety Document checkbox
* @param parentInstance- the parent instance of the checkbox. Can be clinicaltrial or saftey subform
*/
function setSupplState(parentInstance){
	
	var chkSupplInstance=SUPPL_DOC_CHK_FN.getNodeInstance(parentInstance);
	var ddlSafetyReason=SAFETY_REASON_DDL_FN.getNodeInstance(parentInstance);
	var labelErrorInstance=SUPPL_ERROR_LBL_FN.getNodeInstance(parentInstance);
	
	if(!ddlSafetyReason || !ddlSafetyReason || !labelErrorInstance ) return;
	if(ddlSafetyReason.rawValue===YES){
	
		cUiUtil.show(chkSupplInstance);
		cUiUtil.hide(labelErrorInstance);
	}
	else{
		chkSupplInstance.rawValue=NO;
		cUiUtil.hide(chkSupplInstance);
		cUiUtil.hide(labelErrorInstance);
	}
	if(ddlSafetyReason.rawValue===NO){
		cUiUtil.show(labelErrorInstance);
	}
}


/*
* Checks to see if the commmencement date is earlier that the approval date
*
*/

function isCommenceEarlierThanApproval(parentInstance){

	var currCommenceInstance=CURR_COMMENCE_DTE_FN.getNodeInstance(parentInstance);
	var currApprovalInstance=CURR_APPROVAL_DTE_FN.getNodeInstance(parentInstance);
	
	if(!currCommenceInstance.isNull &amp;&amp; !currApprovalInstance.isNull){
		
		 return(cNumberUtil.isOlderDate(currCommenceInstance.rawValue,currApprovalInstance.rawValue));
	}
	return(false);
}


/*
* checks to see if the form nodes exist, called when the script object is initialized
*/
function _initializeFormNodes(){

	try{
			
		cControllerUtil.checkFormNode(PREV_COMMENCE_DATE_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"PREV_COMMENCE_DATE_ROOT_SF_FN");
		cControllerUtil.checkFormNode(PREV_APPROVAL_DATE_ROOT_SF_FN,SCRIPT_OBJECT_NAME,"PREV_APPROVAL_DATE_ROOT_SF_FN");
		cControllerUtil.checkFormNode(CURR_APPROVAL_DTE_FN,SCRIPT_OBJECT_NAME,"CURR_APPROVAL_DTE_FN");
		cControllerUtil.checkFormNode(CURR_COMMENCE_DTE_FN,SCRIPT_OBJECT_NAME,"CURR_COMMENCE_DTE_FN");	
		cControllerUtil.checkFormNode(PREV_COMMENCE_DTE_FN,SCRIPT_OBJECT_NAME,"PREV_COMMENCE_DTE_FN");	
		cControllerUtil.checkFormNode(PREV_APPROVAL_DTE_FN,SCRIPT_OBJECT_NAME,"PREV_APPROVAL_DTE_FN");
		
		cControllerUtil.checkFormNode(SUPPL_SAFETY_SF_FN,SCRIPT_OBJECT_NAME,"SUPPL_SAFETY_SF_FN");
		cControllerUtil.checkFormNode(SAFETY_REASON_DDL_FN,SCRIPT_OBJECT_NAME,"SAFETY_REASON_DDL_FN");
		cControllerUtil.checkFormNode(SUPPL_DOC_CHK_FN,SCRIPT_OBJECT_NAME,"SUPPL_DOC_CHK_FN");
		cControllerUtil.checkFormNode(SUPPL_ERROR_LBL_FN,SCRIPT_OBJECT_NAME,"SUPPL_ERROR_LBL_FN");
			
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+"._initializeFormNode()"), exception);
	}

}

/*
* Initializes this controller state
*rootInstance- the clinical trial root instance to get the values for	
*/
function initialise(rootInstance){

	_setSupplUIState(rootInstance);
	initialisePrevCommenceDate(rootInstance,null)
	initialisePrevApprovalDate(rootInstance,null);
	 _setToolTips(rootInstance);
	 //needed to set the error label
	 setSupplState(rootInstance);
}

/*
*
*
*
*/
function createPrevCommenceDate(sfRootInstance){
	var instanceManager=PREV_COMMENCE_DATE_ROOT_SF_FN.getInstanceManager(sfRootInstance);
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	
	if(newInstance){
		 initialisePrevCommenceDate(sfRootInstance,newInstance);
	}
	return(newInstance);	


}

function createPrevApprovalDate(sfRootInstance){
	var instanceManager=PREV_APPROVAL_DATE_ROOT_SF_FN.getInstanceManager(sfRootInstance);
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	
	if(newInstance){
		 initialisePrevApprovalDate(sfRootInstance,newInstance);
	}
	return(newInstance);	


}
function initialisePrevCommenceDate(rootInstance,sfInstance){
	
	if(!sfInstance){
		sfInstance=PREV_COMMENCE_DATE_ROOT_SF_FN.getNodeInstance(rootInstance);
	}
	if(sfInstance){
		//PREV_COMMENCE_DATE_ROOT_SF_FN.lock(sfInstance);
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)
		var commenceDateText= PREV_COMMENCE_DTE_FN.getLabel()+" "+textToAdd.toLowerCase();
		var dateInstance=  PREV_COMMENCE_DTE_FN.getNodeInstance(sfInstance);
		cUiUtil.setToolTip(dateInstance,commenceDateText);
		return true;
	}
	return false;
}
function initialisePrevApprovalDate(rootInstance,sfInstance){

	if(!sfInstance){
		sfInstance=PREV_APPROVAL_DATE_ROOT_SF_FN.getNodeInstance(rootInstance);
	}
	if(sfInstance){
		//PREV_APPROVAL_DATE_ROOT_SF_FN.lock(sfInstance);
		var textToAdd= cResourceManager.get("lbForClinSite")+" "+((rootInstance.index)+1)
		var commenceDateText= PREV_APPROVAL_DTE_FN.getLabel()+" "+textToAdd.toLowerCase();
		var dateInstance=  PREV_APPROVAL_DTE_FN.getNodeInstance(sfInstance);
		cUiUtil.setToolTip(dateInstance,commenceDateText);
		return true;
	}
	return false
}

function deletePrevCommenceDate(rootSfInstance){
	var oldInstance=PREV_COMMENCE_DATE_ROOT_SF_FN.getNodeInstance(rootSfInstance);
	if(oldInstance){
		var instanceManager=PREV_COMMENCE_DATE_ROOT_SF_FN.getInstanceManager(rootSfInstance);
		cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldInstance);
		//cGeneralUtil.removeSubformInstance(oldInstance);
	}	
}
function deletePrevApprovalDate(rootSfInstance){
	var oldInstance=PREV_APPROVAL_DATE_ROOT_SF_FN.getNodeInstance(rootSfInstance);
	if(oldInstance){
		var instanceManager=PREV_APPROVAL_DATE_ROOT_SF_FN.getInstanceManager(rootSfInstance);
		cGeneralUtil.removeSpecificSubformInstance(instanceManager,oldInstance)
		//cGeneralUtil.removeSubformInstance(oldInstance);	
	}

}

function isCurrCommenceDateEmpty(rootSfInstance){
	var dteInstance=getCurrCommenceDate(rootSfInstance);
	return(dteInstance.isNull);

}

function isCurrApprovalDateEmpty(rootSfInstance){

	var dteInstance=getCurrApprovalDate(rootSfInstance);
	return(dteInstance.isNull);

}
/*
* Done
*/
function copyToCurrApprovalDate(rootSfInstance){
	var currDateInstance=getCurrApprovalDate(rootSfInstance);
	var prevDateSfInstance= getPrevApprovalDateRoot(rootSfInstance);
	if(prevDateSfInstance){
		var prevDateInstance=PREV_APPROVAL_DTE_FN.getNodeInstance(prevDateSfInstance);
		currDateInstance.rawValue=prevDateInstance.rawValue;
	}
}
/*
*
*/
function copyToPrevApprovalDate(rootSfInstance){
	var currDateInstance=getCurrApprovalDate(rootSfInstance);
	var prevDateSfInstance= getPrevApprovalDateRoot(rootSfInstance)
	if(prevDateSfInstance){
		var prevDateInstance=PREV_APPROVAL_DTE_FN.getNodeInstance(prevDateSfInstance);
		prevDateInstance.rawValue=currDateInstance.rawValue;
	}
}
/*
*
*
*/
function copyToCurrCommenceDate(rootSfInstance){
	var currDateInstance=getCurrCommenceDate(rootSfInstance);
	var prevDateSfInstance= getPrevCommenceDateRoot(rootSfInstance)
	if( prevDateSfInstance){
		var prevDateInstance=	PREV_COMMENCE_DTE_FN.getNodeInstance(prevDateSfInstance);
		currDateInstance.rawValue=prevDateInstance.rawValue;
	}

}
function copyToPrevCommenceDate(rootSfInstance){
	var currDateInstance=getCurrCommenceDate(rootSfInstance);
	var prevDateSfInstance= getPrevCommenceDateRoot(rootSfInstance)
	if(prevDateSfInstance){
		var prevDateInstance=	PREV_COMMENCE_DTE_FN.getNodeInstance(prevDateSfInstance);
		prevDateInstance.rawValue=currDateInstance.rawValue;	
	}
}

function getCurrApprovalDate(rootSfInstance){
	
	return(CURR_APPROVAL_DTE_FN.getNodeInstance(rootSfInstance));	
		
				

}		
function getCurrCommenceDate(rootSfInstance){

	return(CURR_COMMENCE_DTE_FN.getNodeInstance(rootSfInstance));	
}

function getPrevApprovalDateRoot(rootSfInstance){
	
	return(PREV_APPROVAL_DATE_ROOT_SF_FN.getNodeInstance(rootSfInstance));	
}
		
function getPrevCommenceDateRoot(rootSfInstance){

	return(PREV_COMMENCE_DATE_ROOT_SF_FN.getNodeInstance(rootSfInstance));	
}	
	





</script>
                     <?templateDesigner expand 1?></variables>
                  <bind match="none"/>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="model" w="100mm">
               <subform w="100mm" h="50mm" name="delegate">
                  <bind match="none"/>
                  <variables>
                     <script contentType="application/x-javascript" name="FieldLengthDelegate">
//
/*******************************************************************************
 * An object that responds to information requests sent to an email FormNode.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cLog = script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;




/*******************************************************************************
 * Gets a new FieldLengthDelegate. Adobe does not allow object instances to be
 * created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new EmailDelegate instance
 */
function createInstance()
{
	return new FieldLengthDelegateClass();
}

/**
 * Class implementation
 */
function FieldLengthDelegateClass(somExpression)
{
	this.className = "FieldLengthDelegate";
	this.errorResourceAlias="";
	this.fieldLength=6;
	this.secondaryTextAlias="";
	this.formNode;	
	
	this.setSecondaryErrorText=function(aliasName){
		this.secondaryTextAlias=aliasName;
	}
	/**
	 * Sets custom error text 
	 *
	 * @param aliasName the resource alias to search for. Will be converted to localized text
	 */
	this.setErrorText = function(aliasName)
    {    	
    	this.errorResourceAlias=aliasName;
    }
	
		/**
		 * Sets the field length to check for. If this value is not set
		 * use the maximum length of the field
		 * @param fldLength- the length to check for
		 */
		this.setFieldLength = function(fldSize)
	    {    	
	    	this.fieldLength=fldSize;
	    }
	
	
	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if the country is Canada or the US, false if it
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Dummy function stub so the interface requirements are met.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		if(!aNodeInstance.isNull){
				var temp=""+aNodeInstance.rawValue //force to a string
				var fldLength=temp.length;
				if(this.fieldLength!=fldLength){
				
					//error
					this.createError(aNodeInstance,updateDisplay,aValidationFailure)
				
				}else{
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed
			}		
			
		}			
		return aValidationFailure;
	}
	
	this.createError=function(aNodeInstance,updateDisplay,aValidationFailure)	{
	
		if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,
										cConfigurationManager.get("colourError"))
				}
				var errorMsg="";						
				if(this.errorResourceAlias){
					errorMsg=cResourceManager.get(this.errorResourceAlias);
				}else{
					var values=(aNodeInstance.caption.value.text.value).split(' ');
					errorMsg=values[0] + " "+cResourceManager.get(this.secondaryTextAlias);
				}						
				var newValidationFailure = cValidationFailure.createInstance(
										"fieldLengthValidation",errorMsg);
				if (aValidationFailure != null)
				{
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else
				{
					aValidationFailure = newValidationFailure;
				}				
	}
	
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}
}

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               
               

               
               

               
               
</script>
                     <script contentType="application/x-javascript" name="EmailFormatDelegate">
//
/*******************************************************************************
 * An object that responds to information requests sent to an email FormNode.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cLog = script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;
var cGeneralUtil=			script.HCeForm.util.General;

var _EMAIL_FORMAT_TYPE = "email";

/*******************************************************************************
 * Gets a new EmailDelegate. Adobe does not allow object instances to be
 * created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new EmailDelegate instance
 */
function createInstance()
{
	return new EmailFormatDelegateClass();
}

/**
 * Class implementation
 */
function EmailFormatDelegateClass(somExpression)
{
	this.className = "EmailFormatDelegate";
	this.errorResourceAlias="";
	this.formNode;
	this.base_errorAlias="error_emailFormat";
	this.errorRootAlias=null;
	this.nodeAlias=null;
	
	
	/*
	* this is the resource file alias for the text that identifies the subform the field is on
	* For example: "For trial site". The delegate adds the index of the subform
	* This text is optional, it isn't needed if you have only one instance of a specific postal code
	*/
	this.setErrorRootText=function(aliasName){
	
		this.errorRootAlias=aliasName;
	}
	
	/* Optional -sets the string alias to the name of the root node (ie the field name)
	**
	*/
	this.setNodeAlias = function(bar)
	{
		this.nodeAlias=bar;
	}
	
	/*
	* this is the resource file alias for the text that identifies the subform the field is on
	* For example: "For trial site". The delegate adds the index of the subform
	* This text is optional, it isn't needed if you have only one instance of a specific postal code
	*/
	this.setErrorRootText=function(aliasName){
	
		this.errorRootAlias=aliasName;
	}	
	
	/**
	 * Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	this.setErrorText = function(resName)
    {    	
    	this.errorResourceAlias=resName;
    }
	

	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if the country is Canada or the US, false if it
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Dummy function stub so the interface requirements are met.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		if(!aNodeInstance.isNull){
		
			var regExpress=/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
			var resourceError=cResourceManager.get(this.base_errorAlias);
			
			if(!regExpress.test(aNodeInstance.rawValue)){
				if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,
										cConfigurationManager.get("colourError"))
				}						
				var errorMsg=cResourceManager.get(this.errorResourceAlias)+resourceError;	
				if(this.errorRootAlias &amp;&amp; this.nodeAlias){
					var errorPart1msg=cResourceManager.get(this.errorRootAlias);
					var rootIndex= (cGeneralUtil.getParentIndex(this.nodeAlias,aNodeInstance))+1;
					if(rootIndex&gt;0){
					errorPart1msg=errorPart1msg+" "+rootIndex+",";
					}
					errorMsg=errorPart1msg+" "+errorMsg;
				}
									
				var newValidationFailure = cValidationFailure.createInstance(
										"EmailValidation",errorMsg);
				if (aValidationFailure != null)
				{
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else
				{
					aValidationFailure = newValidationFailure;
				}						
			}else{
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed
			}
		}			
		return aValidationFailure;
	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}
}

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               
</script>
                     <script contentType="application/x-javascript" name="PostalCodeFormatDelegate">
//Updated on Feb 2016 to support multiple instances of the same field
/*******************************************************************************
 * An object that responds to information requests sent to a postal/zip code
 * FormNode. This determines whether the country is Canada, the US, or other
 * value and responds accordingly.
 * Note that this assumes that the related country node instance is a peer to
 * this one (i.e. has the same parent).
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cConfigurationManager = script.core.util.ConfigurationManager;
var cLog = script.core.util.Log;
var cResourceManager = script.core.lang.ResourceManager;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;
var cNodeUtil=		 				script.core.util.NodeUtil;
var cFormNodeManager = 				script.core.model.FormNodeManager;
var cGeneralUtil=					script.HCeForm.util.General;
//note: These keys are in the core fragment. The base implementation was copied from core
//for all the label handling
var _COUNTRY_NODE_NAME = null; //String
var _COUNTRY_NODE_NAME_KEY = "countryNodeName";
var _POSTAL_CODE_FORMAT_TYPE = "postalCode";
var _POSTAL_CODE_LABEL_KEY = "postalCode";
var _POSTAL_ZIP_CODE_LABEL_KEY = "postalZipCode";
var _ZIP_CODE_FORMAT_TYPE = "zipCode";
var _ZIP_CODE_LABEL_KEY = "zipCode";
var CANADA=	cConfigurationManager.get("CANADA");
var  USA=	cConfigurationManager.get("USA");

/*******************************************************************************
 * Gets a new PostalZipDelegate. Adobe does not allow object instances to be
 * created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new PostalZipDelegate instance
 */
function createInstance()
{
	return new PostalCodeFormatDelegateClass();
}

//===== PRIVATE ================================================================
/**
 * Gets the name of the country node. This is lazy loaded from the configuration
 * since the field naming conventions may vary between applications.
 * @return the name of country nodes in this form.
 */
function _getCountryNodeName()
{
	if (_COUNTRY_NODE_NAME == null)
	{
		_COUNTRY_NODE_NAME = cConfigurationManager.get(_COUNTRY_NODE_NAME_KEY);
		if (_COUNTRY_NODE_NAME == null)
		{
			cLog.warn("PostalZipDelegate._getCountryNodeName(): '"
					  + _COUNTRY_NODE_NAME_KEY + "' not found in the configuration");
		}
	}
	return _COUNTRY_NODE_NAME;
}

/**
 * Class implementation
 */
function PostalCodeFormatDelegateClass(somExpression)
{
	this.className = "PostalCodeFormatDelegate";
	this.errorResourceAlias="error_PostalCodeFormat";
	this.base_errorAlias="error_caPostalCodeFormat";
	this.errorRootAlias=null;
	this.nodeAlias=null;
	this.formNode;
	this.delegateIndex=0;
	
	
	/* Optional -sets the string alias to the name of the root node (ie the field name)
	**
	*/
	this.setNodeAlias = function(bar)
	{
		this.nodeAlias=bar;
	}
	


	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
	
	/**
	 * Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	this.setErrorText = function(aliasName)
    {
    	
    	this.errorResourceAlias=aliasName;
    }
		
	/*
	* this is the resource file alias for the text that identifies the subform the field is on
	* For example: "For trial site". The delegate adds the index of the subform
	* This text is optional, it isn't needed if you have only one instance of a specific postal code
	*/
	this.setErrorRootText=function(aliasName){
	
		this.errorRootAlias=aliasName;
	}
	
	
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
    }
	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	if (aNode != undefined)
    	{
    		var countryValue = this._getCountry(aNode);

			if(countryValue == CANADA)
			{
    			return cResourceManager.get(_POSTAL_CODE_LABEL_KEY);
			}
			else if(countryValue == USA)
			{
    			return cResourceManager.get(_ZIP_CODE_LABEL_KEY);
			}
    	}
    	return cResourceManager.get(_POSTAL_ZIP_CODE_LABEL_KEY);
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if the country is Canada or the US, false if it
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
    	if (aNode != undefined)
    	{
    		var countryValue = this._getCountry(aNode);

			return (countryValue == CANADA || countryValue == USA);
    	}
		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Dummy function stub so the interface requirements are met.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		
		if(!aNodeInstance.isNull){
		
			var countryNodeValue=aNodeInstance.parent.ddlCountry.rawValue;
			var regExpress="";
			var resourceError="";
			if(countryNodeValue===CANADA){
				regExpress= /^[a-z]\d[a-z](\s)?\d[a-z]\d\s*$/i ;
				resourceError=cResourceManager.get(this.base_errorAlias);
			}else if(countryNodeValue===USA){
			
				regExpress=/^\d{5}([-, ]\d{4})?$/
				resourceError=cResourceManager.get("error_usZipCodeFormat");
			}else{
				//not USA or Canada so don't test
				return aValidationFailure;
			}
			if(!regExpress.test(aNodeInstance.rawValue)){
				
				if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,
										cConfigurationManager.get("colourError"))
				}						
				
				var errorMsg=cResourceManager.get(this.errorResourceAlias)+resourceError;						
				if(this.errorRootAlias &amp;&amp; this.nodeAlias){
					var errorPart1msg=cResourceManager.get(this.errorRootAlias);
					var rootIndex= (cGeneralUtil.getParentIndex(this.nodeAlias,aNodeInstance))+1;
					if(rootIndex&gt;0){
					errorPart1msg=errorPart1msg+" "+rootIndex+",";
					}
					errorMsg=errorPart1msg+" "+errorMsg;
					validationType="PostalCodeValidation_"+rootIndex;
				}
				var newValidationFailure = cValidationFailure.createInstance("PostalCodeValidation",errorMsg);				
										
				if (aValidationFailure != null)
				{
					
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else
				{
					aValidationFailure = newValidationFailure;
			
				}						
			}else{
			
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed
				this.formatZip(countryNodeValue,aNodeInstance)
			}
		}			
		return aValidationFailure;

	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		buffer+=this.delegateIndex;
		return buffer;
	}
	this.formatZip=function(country,postalCodeInstance){
		var zipCodeValue=postalCodeInstance.rawValue;
		var formattedZipCode="";
		if (country===CANADA){
		
			formattedZipCode = (zipCodeValue.substring(0, 3) + " " + zipCodeValue.substring(zipCodeValue.length - 3, zipCodeValue.length)).toUpperCase();
			postalCodeInstance.rawValue=formattedZipCode ;
		}	
	}


	//===== PRIVATE ============================================================
	/**
	 * Gets the value of a country node. Issues a warning if the country node
	 * can't be found.
	 * @param aNode the Adobe Node instance that is being processed.
	 * @return the value of the related country node in this form.
	 */
	this._getCountry = function(aNode)
	{
		var countryNode = xfa.resolveNode(aNode.parent.somExpression + "."
										  + _getCountryNodeName());
				
		if (countryNode != null)
		{
    		return countryNode.rawValue;
		}
		cLog.info("PostalZipDelegate._getCountry couldn't find the country"
				  + " node for " + aNode.somExpression);
		return null;
	}
	//this assumes that the first repeating ancestor is the one we want. Works but potentially dangerous
	this._getRootNodeInstance=function(aNode, ROOT_FN){
	
		//if(!ROOT_FN) return null;
		
		return(ROOT_FN.getNodeInstance())
	}//end fn
}               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               
</script>
                     <script contentType="application/x-javascript" name="TelephoneFormatDelegate">
//
/*******************************************************************************
 * An object that responds to information requests sent to a telephone/fax
 * FormNode.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
//imports
var cLog = script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;
var cFormNodeManager = 				script.core.model.FormNodeManager;
var cGeneralUtil=					script.HCeForm.util.General;


var _TELEPHONE_FORMAT_TYPE = "telephone";
var CANADA=	cConfigurationManager.get("CANADA");
var  USA=	cConfigurationManager.get("USA");
var PHONE=	1;
var FAX=		2;

/*******************************************************************************
 * Gets a new PostalZipDelegate. Adobe does not allow object instances to be
 * created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new PostalZipDelegate instance
 */
function createInstance()
{
	return new TelephoneFormatDelegateClass();
}

/**
 * Class implementation
 */
function TelephoneFormatDelegateClass(somExpression)
{
	this.className = "TelephoneFormatDelegate";
	this.errorResourceAlias="";
	this.northAmerica_errorAlias="error_usPhoneNumError";
	this.other_errorAlias="error_otherPhoneNumError";
	this.numberType=PHONE;
	this.countryDdlNodeAlias="";
	this.formNode;
	this.errorRootAlias=null;
	this.nodeAlias=null;		

	/* Optional -sets the string alias to the name of the root node (ie the field name)
	**		
	*/
	this.setNodeAlias = function(bar)
	{
		this.nodeAlias=bar;
	}
	/*
	* this is the resource file alias for the text that identifies the subform the field is on
	* For example: "For trial site". The delegate adds the index of the subform
	* This text is optional, it isn't needed if you have only one instance of a specific postal code
	*/
	this.setErrorRootText=function(aliasName){
	
		this.errorRootAlias=aliasName;
	}	
	

	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
	
	/**
	 * Sets alias 
	 *
	 * @param aliasName -the alias of the country set in the nodeDefinitions
	 */
	this.setCountryNodeAlias = function(aliasName)
    {    	
    		this.countryDdlNodeAlias=aliasName;
    }
    
    	/**
	 * Sets the delegate to treat any error messages a phone messages
	 *
	 * 
	 */
	this.setAsPhoneNumber = function()
    {    	
    		this.numberType=PHONE;
    		this.northAmerica_errorAlias="error_usPhoneNumError";
		this.other_errorAlias="error_otherPhoneNumError";
    }
    /**
	 * Sets the delegate to treat any error messages a fax messages
	 *
	 * 
	 */
	this.setAsFaxNumber = function()
    {    	
    		this.numberType=FAX;
    		this.northAmerica_errorAlias="error_usFaxNumError";
		this.other_errorAlias="error_otherFaxNumError";	
    }
    

	/* Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	this.setErrorText = function(aliasName)
    {    	
    		this.errorResourceAlias=aliasName;
    }
	
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * 	 
	 */
	this.isMandatory = function(aNode)
	{
			return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Dummy function stub so the interface requirements are met.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		var countryCode=this._getCountryCode(aNodeInstance);
		var errorAlias=""; //dynamic
		if(aNodeInstance.isNull){
			return aValidationFailure;
		}//if
	
		var testPassed=true;
		var phone = aNodeInstance.rawValue;
		if (countryCode == CANADA || countryCode == USA) {
				var reg = /^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; //(phone leading with 1
				if (reg.test(phone) == false) {
						testPassed= false;
						errorAlias=this.northAmerica_errorAlias;
				} 
				else {
						testPassed= true;
						var formattedPhoneNumber = phone.replace(reg, "$1-$2-$3");
						var temp = phone.replace(/[^\d]/g, "");
						if (temp.length == 11) {
							formattedPhoneNumber = phone.replace(reg, "1-$1-$2-$3");
						}//if	
				}//else	
		}//if 
		else {
				var reg = /^[0-9() .-]+$/;
				var temp = phone.replace(/[^\d]/g, "");
				if (temp.length &lt; 9 || temp.length &gt; 18) {
						testPassed= false;
						errorAlias=this.other_errorAlias;
				}//if
				else{
					testPassed= true;
				}//else
		}//else		
		if(testPassed===true){
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed
		}//if
		else{
				this.createFailure(updateDisplay,aValidationFailure,aNodeInstance,errorAlias);
		}//else
	return aValidationFailure;
	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}
	//assumes that a) country field is called ddlCountry  and 
	//b) has the same parent as phone number
	this._getCountryCode=function(aNodeInstance){
		var countryValue="";
		if(!this.countryDdlNodeAlias){
			//use the parent and use ddlCountry if the alias is not set
			countryValue=aNodeInstance.parent.ddlCountry;
		}else{
			var countryFormNode=cFormNodeManager.getFormNodeForKey(this.countryDdlNodeAlias);
			if(!countryFormNode) return null;
			var rootInstance=null;
			if(this.errorRootAlias &amp;&amp; this.nodeAlias){
					var errorPart1msg=cResourceManager.get(this.errorRootAlias);
					rootInstance= cGeneralUtil.getParentInstance(this.nodeAlias,aNodeInstance); 
			}
			var countryInstance=countryFormNode.getNodeInstance(rootInstance);
			countryValue=countryInstance.rawValue;
		}
		return(countryValue);
	}
	
	
	this.createFailure=function(updateDisplay,aValidationFailure,aNodeInstance,baseErrorAlias){
	
		var resourceError=this.errorResourceAlias;
		if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,cConfigurationManager.get("colourError"));
		}						
		var errorMsg=cResourceManager.get(resourceError)+cResourceManager.get(baseErrorAlias);
		//Feb 2016 added to account for multiple repeating instances of the same type
		if(this.errorRootAlias &amp;&amp; this.nodeAlias){
					var errorPart1msg=cResourceManager.get(this.errorRootAlias);
					var rootIndex= (cGeneralUtil.getParentIndex(this.nodeAlias,aNodeInstance))+1;
					if(rootIndex&gt;0){
					errorPart1msg=errorPart1msg+" "+rootIndex+",";
					}
					errorMsg=errorPart1msg+" "+errorMsg;
					validationType="PostalCodeValidation_"+rootIndex;
		}			
		var newValidationFailure = cValidationFailure.createInstance("PhoneFormatValidation",errorMsg);
		if (aValidationFailure != null)
		{
			aValidationFailure.addNestedValidationFailure(newValidationFailure);
		}
		else{
			aValidationFailure = newValidationFailure;
		}					
	}//endfn
	
	
	
}

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
               

               
               
</script>
                     <script contentType="application/x-javascript" name="ContactPhoneFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contact");
	oDelegate.setAsPhoneNumber();
	oDelegate.setCountryNodeAlias("ddlContactCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactFaxFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contact");
	oDelegate.setAsFaxNumber();
	oDelegate.setCountryNodeAlias("ddlContactCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactEmailFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cEmailFormatDelegate=		script.HCeForm.model.delegate.EmailFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cEmailFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contact");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactPostalCodeFormatDelegate">//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactAddress");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="SponsorPostalCodeFormatDelegate">//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_sponsorSiteAddress");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="SponsorEmailFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cEmailFormatDelegate=		script.HCeForm.model.delegate.EmailFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cEmailFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactSponsor");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="SponsorPhoneFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactSponsor");
	oDelegate.setAsPhoneNumber();
	oDelegate.setCountryNodeAlias("ddlSponsorCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="SponsorFaxFormatDelegate">//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactSponsor");
	oDelegate.setAsFaxNumber();
	oDelegate.setCountryNodeAlias("ddlSponsorCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="SitePostalCodeFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_clinicalSiteAddress");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="PrevSitePostalCodeFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_prevClinicalSiteAddress");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="QIPhoneFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currQIName");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	oDelegate.setAsPhoneNumber();
	oDelegate.setCountryNodeAlias("txtFakeCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="QIFaxFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currQIName");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	oDelegate.setAsFaxNumber();
	oDelegate.setCountryNodeAlias("txtFakeCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="QIEmailFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cEmailFormatDelegate=		script.HCeForm.model.delegate.EmailFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cEmailFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currQIName");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="QIPostalCodeFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currQIAddress");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="PrevQIPostalCodeFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_prevQIAddress");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="REBPhoneFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currREBName");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	oDelegate.setAsPhoneNumber();
	oDelegate.setCountryNodeAlias("ddlCurrREBCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="REBFaxFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=			script.HCeForm.model.delegate.TelephoneFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currREBName");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	oDelegate.setAsFaxNumber();
	oDelegate.setCountryNodeAlias("ddlCurrREBCountry");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="REBEmailFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cEmailFormatDelegate=		script.HCeForm.model.delegate.EmailFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cEmailFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currREBName");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}

</script>
                     <script contentType="application/x-javascript" name="REBPostalCodeFormatDelegate">

//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_currREBAddress");
	oDelegate.setNodeAlias("sfPart3"); //can't make function calls, must be hard coded
	oDelegate.setErrorRootText("error_clinicalTrialSite");
	return oDelegate;
}
</script>
                     <script usehref="..\..\fragments\delegates\CheckBoxMandatoryDelegate.xdp#som($template.#subform.#subform.#variables.CheckBoxMandatoryDelegate)"/>
                     <script contentType="application/x-javascript" name="REBSupplCheckboxDelegate">

//imports
var cLog = 							script.core.util.Log;
var cCheckMandFormatDelegate=		script.HCeForm.model.delegate.CheckBoxMandatoryDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cCheckMandFormatDelegate.createInstance();
	oDelegate.setCheckValue("1");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="TrialDatesDelegate">
//Note: This delegate is a bit of a hack.
//It looks for the error label ui state. The error label is displayed
//if the date is not for safety reasons
/*******************************************************************************
 * An object that responds to information requests to FormNode.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cLog = script.core.util.Log;
var cResourceManager = 		script.core.lang.ResourceManager;
var cConfigurationManager = script.core.util.ConfigurationManager;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;
var cGeneralUtil=			script.HCeForm.util.General;
var cFormNodeManager = 		script.core.model.FormNodeManager;


/*******************************************************************************
 * Gets a new EmailDelegate. Adobe does not allow object instances to be
 * created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new  instance
 */
function createInstance()
{
	return new TrialDateDelegateClass();
}

/**
 * Class implementation
 */
function TrialDateDelegateClass(somExpression)
{
	this.className = "TrialDateFormatDelegate";
	//this.errorResourceAlias="error_trialDates";
	this.formNode;
	this.base_errorAlias="error_trialDates";
	this.errorRootAlias="error_clinicalTrialSite";
	this.parentNodeName="sfPart3";
	
	
	/*
	* this is the resource file alias for the text that identifies the subform the field is on
	* For example: "For trial site". The delegate adds the index of the subform
	* This text is optional, it isn't needed if you have only one instance of a specific postal code
	*/
	this.setErrorRootText=function(aliasName){
	
		this.errorRootAlias=aliasName;
	}
	
	/* Optional -sets the string alias to the name of the root node (ie the field name)
	**
	*/
	this.setNodeParentName = function(bar)
	{
		this.parentNodeName=bar;
	}
	
	/*
	* this is the resource file alias for the text that identifies the subform the field is on
	* For example: "For trial site". The delegate adds the index of the subform
	* This text is optional, it isn't needed if you have only one instance of a specific postal code
	*/
	this.setErrorRootText=function(aliasName){
	
		this.errorRootAlias=aliasName;
	}	
	
	/**
	 * Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	//this.setErrorText = function(resName)
    //{    	
    	//this.errorResourceAlias=resName;
    //}
	

	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if the country is Canada or the US, false if it
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Dummy function stub so the interface requirements are met.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);
		
		if(!aNodeInstance.isNull){
		
			var SUPPL_ERROR_LBL_FN=		cFormNodeManager.getFormNodeForKey("lblDateError");
			var labelErrorInstance=		SUPPL_ERROR_LBL_FN.getNodeInstance(aNodeInstance.parent); //hack
			
			var errorMsg=cResourceManager.get(this.base_errorAlias);
			
			if(labelErrorInstance &amp;&amp; labelErrorInstance.presence=="visible"){
				if(updateDisplay===true){
					cUiUtil.setColour(aNodeInstance,
										cConfigurationManager.get("colourError"))
				}						
				if(this.errorRootAlias &amp;&amp; this.parentNodeName){
					var errorPart1msg=cResourceManager.get(this.errorRootAlias);
					var rootIndex= (cGeneralUtil.getParentIndex(this.parentNodeName,aNodeInstance))+1;
					if(rootIndex&gt;=0){
					errorPart1msg=errorPart1msg+" "+rootIndex+",";
					}
					errorMsg=errorPart1msg+" "+errorMsg;
				}
									
				var newValidationFailure = cValidationFailure.createInstance(
										"EmailValidation",errorMsg);
				if (aValidationFailure != null)
				{
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else
				{
					aValidationFailure = newValidationFailure;
				}						
			}else{
				cUiUtil.resetColour(aNodeInstance); //In case it previously failed
			}
		}			
		return aValidationFailure;
	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}
}
</script>
                     <script contentType="application/x-javascript" name="DateFormatDelegate">

/*******************************************************************************
 * An object that validates a date to Health Canada's standard format of ####-##-##
 * Also validates if the date is correct 
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cConfigurationManager = 		script.core.util.ConfigurationManager;
var cLog = 							script.core.util.Log;
var cObjectUtil = 					script.core.util.ObjectUtil;
var cResourceManager = 				script.core.lang.ResourceManager;
var cTypeChecker = 					script.core.util.TypeChecker;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;
var cGeneralUtil=					script.HCeForm.util.General;


var DATE_ERR_NOTDATE=			"not_date";
var DATE_ERR_INVALID_MONTH=		"month_invalid";
var DATE_ERR_INVALID_DAY_31=	"day_invalid31";
var DATE_ERR_INVALID_DAY_30=	"day_invalid30";
var DATE_ERR_INVALID_DAY_29=	"day_invalid29";
var DATE_ERR_INVALID_DAY_28=	"day_invalid28";
var DATE_VALID=					"dateValid";
var FUTURE_DATE=				"date_future";
var PAST_DATE=					"date_past";	
var strSeparator 					= '-';


/*******************************************************************************
 * Gets a new DateFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new DateFormatDelegateinstance
 */
function createInstance()
{
	return new DateFormatDelegateClass();
}



/**
 * Class implementation
 */
function DateFormatDelegateClass(somExpression)
{
	this.className = "DateFormatDelegate";
	this.errorResourceAlias=null; //sets a default error message
	this.expandedResourceAlias=null;
	this.formNode;
	this.validateFuture=true;
	//new used to support multiple instances
	this.parentNodeName=null;
	this.errorRootAlias=null;

	/*
	* Set the adobe node name of the parent you want to find
	* Traverses up the node being validated to find the parent
	* Used for providing indexes
	*/
	this.setParentNodeName=function(myVal){
		this.parentNodeName=myVal;
	}
	
	/*
	*  Sets the resource alias name for the pretext
	* To identify the repeating element name. For example: clinical Trial site X, report X
	*/
	this.setRootErrorAlias=function(aliasVal){
		this.errorRootAlias=aliasVal;
	}
	
	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return  null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if is mandatory*/
	this.isMandatory = function(aNode)
	{
    		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}
	
	/**
	 * Sets custom error text 
	 *
	 * @param aFormNode the FormNode that is using this delegate.
	 */
	this.setErrorText = function(aliasName)
    {
    	
    	this.errorResourceAlias=aliasName;
    }
    
    /*
    * Sets whether to validate if a future date
    *true means a future date is not allowed (default)
    *
    */
	this.setValidateFuture=function(futureValidationVal){
	
		this.validateFuture=futureValidationVal;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Performs custom validation. This also validates all child FormNodes if
	 * required. It may call the FormNode's _validateNode().
	 * @param aNodeInstance (optional) the instance of Adobe Node that should
	 *		  be validated. Required if this is below a collection of instances
	 *		  (e.g. a repeating subform). When unspecified, this may use the
	 *		  FormNode's getNodeInstances() to get all instances of this Node
	 *		  to validate.
	 * @param updateDisplay (optional) a boolean that indicates whether this
	 *		  should automatically update the colour of the node to reflect
	 *		  whether it passed validation. Defaults to true.
	 * @param aValidationFailure (optional) the ValidationFailure that this
	 *		  should append its validationFailures to. This is only used
	 *		  internally when this is called recursively.
	 * @return a ValidationFailure containing all failures that were
	 *		   encountered. Returns aValidationFailure if that parameter was
	 *		   used. Null if there were no failures.
	 * @throws an UnexpectedDataType Exception if aNodeInstance isn't an Adobe
	 *		   Node.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// It must be called to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);

		if(!aNodeInstance.isNull){
			var nodeDate=aNodeInstance.rawValue;
			var result=_checkDateOk(nodeDate);
			if(result===DATE_VALID &amp;&amp; this.validateFuture==true){
				var futureResult=isFutureDate(nodeDate);
				if(futureResult===true){
					result=FUTURE_DATE;
				}	
			}
			if(result===DATE_VALID){
				var pastResult=_isTooFarinPast(nodeDate);
				if(pastResult===true){
					result=PAST_DATE;
				}
			}	
	
			if(result!==DATE_VALID){
		
				if(updateDisplay){
					cUiUtil.setColour(aNodeInstance,
									cConfigurationManager.get("colourError"));
				}	
				switch(result){
				
					case DATE_ERR_NOTDATE:
						this.expandedResourceAlias="err_notDate";
						break;
					case DATE_ERR_INVALID_MONTH:
						this.expandedResourceAlias="err_dateInvalidMonth";
						break;	
					case DATE_ERR_INVALID_DAY_31:
						this.expandedResourceAlias="err_dateInvalidDay31";
						break;	
					case DATE_ERR_INVALID_DAY_30:
						this.expandedResourceAlias="err_dateInvalidDay30";
						break;
					case DATE_ERR_INVALID_DAY_29:
						this.expandedResourceAlias="err_dateInvalidDay29";
						break;				
					case DATE_ERR_INVALID_DAY_28:
						this.expandedResourceAlias="err_dateInvalidDay28";
						break;
												
					case FUTURE_DATE:	
						this.expandedResourceAlias="err_futureDate";
						break;
					
					case PAST_DATE:	
						this.expandedResourceAlias="err_pastDate";
						break;	
								
					default: //for anything else just default to not a date
						this.expandedResourceAlias="err_notDate";
						break;				
				}
				var validationText=	cResourceManager.get(this.errorResourceAlias) +" "+	cResourceManager.get(this.expandedResourceAlias);	
				var instanceText="";
				if(this.parentNodeName &amp;&amp; this.errorRootAlias){
					//get the parent index and the resource text, merge
					instanceText=	cResourceManager.get(this.errorRootAlias);
					var rootIndex= (cGeneralUtil.getParentIndex(this.parentNodeName,aNodeInstance))+1;
					if(rootIndex&gt;0){
						instanceText=instanceText+" "+rootIndex+", ";
					}
				
				}
				validationText=instanceText+validationText;
				var newValidationFailure = cValidationFailure.createInstance(
										"DateValidation",
										validationText);
				if (aValidationFailure != null)
				{
					aValidationFailure.addNestedValidationFailure(newValidationFailure);
				}
				else
				{
					aValidationFailure = newValidationFailure;
				}					
									
			}else{ //field passed reset color
				
				if(updateDisplay) cUiUtil.resetColour(aNodeInstance);
				
			}	
		
		}//isNotNull
				
		return aValidationFailure;
	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}

}

function _checkDateOk(value)
{
	if(!value) return(DATE_VALID); //does not check for empty
		
	var reg =/^\d{4}(\-|\/|\.)\d{2}\1\d{2}$/;
	
	//1) check if in proper format	
	var check = reg.test(value); 
	if (check!=true) return(DATE_ERR_NOTDATE); 
		
	//var strSeparator = '-'
	var arrayDate = value.split(strSeparator); 
	var intDay = parseInt(arrayDate[2],10); 
	var intMonth = parseInt(arrayDate[1],10);
	var intYear = parseInt(arrayDate[0]);
    	 	
    //check if month is valid ie 1-12
    var maxDaysInMonth=_getMaxDayRange(arrayDate[1]);
    
    if(!maxDaysInMonth &amp;&amp; intMonth!==2) {
  	  	 return(DATE_ERR_INVALID_MONTH);  	 
    }
 	//month passed, check if day is valid
 	
 	if (intMonth === 2) {      //since lookup will return null
	      maxDaysInMonth=28;
	      if( _isLeapYear(intYear)){  
	      		maxDaysInMonth=29;
	      }		
	 }     		
	if(intDay &lt;=  maxDaysInMonth &amp;&amp; intDay != 0){
	        	return DATE_VALID; //found in lookup table, good date
	}else{
	
		return _getDayErrorType(maxDaysInMonth);
	}
	     
   return(DATE_ERR_NOTDATE);
}//end fn


/*
* Calculates the max number of days for a given month. Does not calculate for Febuary
* @param month: the month to lookup. Valid values are 1-12 as strings!
* @returns: the integer value of the max number of days, null if not found
*/
function _getMaxDayRange(month){

	 var arrayLookup = { 	'01' : 31,'03' : 31, 
	                      	'04' : 30,'05' : 31,
	                      	'06' : 30,'07' : 31,
	                      	'08' : 31,'09' : 30,
	                      	'10' : 31,'11' : 30,'12' : 31}

	return(arrayLookup[month]);

}

/*
*	Determines the correct day error message
*	@param maxDays- the max number of days allowed in a month
*	@returns- the error message
*
*/
function _getDayErrorType(maxDays){

	var errorType;
	
	switch(maxDays){
	
		case 28:
			errorType=DATE_ERR_INVALID_DAY_28;
			break; 
		
		case 29:
			errorType=DATE_ERR_INVALID_DAY_29;
			break; 
		
		case 30:
			errorType=DATE_ERR_INVALID_DAY_30;
			break; 
			
		case 31:
			errorType=DATE_ERR_INVALID_DAY_31;
			break; 
		
	
	}
	return errorType;
}

/*
*	Determines if a year is a leap year using the famous standard alg
*	@param intYear- the integer year value to check
*	@returns- true if a leap year
*
*/
function _isLeapYear(intYear){

	if ((intYear % 4 == 0) &amp;&amp; (intYear % 100 != 0) ||  (intYear % 400 == 0)) {
		 // year div by 4 and ((not div by 100) or div by 400) =ok
		 return true;
	} 
	return false;
}



function isFutureDate(value)
{
	var oToday = new Date();
	var curYear = oToday.getFullYear();
	var curMonth = pad(String(oToday.getMonth() + 1), 2, "0");
	var curDay = pad(String(oToday.getDate()), 2, "0");	
	oToday = curYear + '-' + curMonth + '-' + curDay;
	
	return (value &gt; oToday);
	

}//end fn




//pads a string s, to length len, with character chr
//padding is done in front of the string
function pad(s, len, chr)
{		
	if(s.length &gt; len)
	{
		return s.substr(s.length - len, len);
	}
	else if(s.length &lt; len)
	{
		var tmp = "";
		var i = 0;
		for(i = s.length; i &lt; len; i++)
		{
			tmp += chr;
		}
		return tmp + s;
	}
	return s;
}//end fn

function _isTooFarinPast(value){ 
	//var strSeparator = '-'
	var arrayDate = value.split(strSeparator); 
	var intYear = parseInt(arrayDate[0]);
	var oDateNow = new Date();
	var currYear=oDateNow.getFullYear();
	var isTooOld=false;

	var yearResult=currYear-intYear;
	if(yearResult&gt;130 || yearResult&lt;0){
			isTooOld=true;
	}
	return(isTooOld);
}



               
               
</script>
                     <script contentType="application/x-javascript" name="CommenceDateFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cDateFormatDelegate=			script.HCeForm.model.delegate.DateFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cDateFormatDelegate.createInstance();
	oDelegate.setErrorText("msg_commenceDate");
	oDelegate.setRootErrorAlias("error_clinicalTrialSite");
	oDelegate.setParentNodeName("sfPart3");//can't make function calls, must be hard coded]
	oDelegate.setValidateFuture(false);
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="PrevCommenceDateFormatDelegate">
var cDateFormatDelegate=			script.HCeForm.model.delegate.DateFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cDateFormatDelegate.createInstance();
	oDelegate.setErrorText("msg_prevCommenceDate");
	oDelegate.setRootErrorAlias("error_clinicalTrialSite");
	oDelegate.setParentNodeName("sfPart3");//can't make function calls, must be hard coded]
	oDelegate.setValidateFuture(false);
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ApprovalDateFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cDateFormatDelegate=			script.HCeForm.model.delegate.DateFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cDateFormatDelegate.createInstance();
	oDelegate.setErrorText("msg_approveDate");
	oDelegate.setRootErrorAlias("error_clinicalTrialSite");
	oDelegate.setParentNodeName("sfPart3");//can't make function calls, must be hard coded
	oDelegate.setValidateFuture(false);
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="PrevApprovalDateFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cDateFormatDelegate=			script.HCeForm.model.delegate.DateFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cDateFormatDelegate.createInstance();
	oDelegate.setErrorText("msg_prevApproveDate");
	oDelegate.setRootErrorAlias("error_clinicalTrialSite");
	oDelegate.setParentNodeName("sfPart3");//can't make function calls, must be hard coded
	oDelegate.setValidateFuture(false);
	return oDelegate;
}

</script>
                     <script contentType="application/x-javascript" name="CheckBoxGroupMandatory">

//
/*******************************************************************************
 * An object that responds to information requests sent to a set of check boxes
 * FormNode. This determines whether one of the children check boxes is checked
 * and responds accordingly.
 * Note that this assumes that the all check boxes are children to the same
 * parent.
 *
 * Implements FormNodeDelegateInterface.
 */

//imports
var cConfigurationManager = 		script.core.util.ConfigurationManager;
var cLog = 							script.core.util.Log;
var cObjectUtil = 					script.core.util.ObjectUtil;
var cResourceManager = 				script.core.lang.ResourceManager;
var cTypeChecker = 					script.core.util.TypeChecker;
var cUiUtil = 						script.core.util.UiUtil;
var cValidationFailure = 			script.core.validation.ValidationFailure;
var cGeneralUtil=					script.HCeForm.util.General;

/*******************************************************************************
 * Gets a new MandatoryCheckBoxDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the new MandatoryCheckBoxDelegate instance
 */
function createInstance()
{
	return new CheckBoxGroupMandatoryDelegateClass();
}

/**
 * Given a parent node which contains a set of checkBoxes in its
 * children, check if at least one of the checkboxes is checked.
 * @param aNode the parent Adobe Node instance that is being processed.
 * @return a boolean - true if at least one checkbox is checked.
 */
function isMandatoryCheckBoxPassed(aNode)
{
	var checkBoxArray = this._getCheckBoxNodeArray(aNode);
	return this._isOneCheckBoxChecked(checkBoxArray);
}

/**
 * Class implementation
 */
function CheckBoxGroupMandatoryDelegateClass(somExpression)
{
	this.className = "CheckBoxGroupMandatoryDelegate";

	this.formNode;
	this.checkedValue=1; //allows setting the checked value of a checkbox
	this.base_errorAlias=null;
	this.errorRootAlias=null; //optional- the preface error messsage to identify the instance 
	this.parentNodeName=null;		//optional the root node to look for
	this.questionAlias=null;
	this.delegateErrorAlias="error_mandatoryCheckBoxSet";// the error message if a checkbox in the group is not selected
	
	
	
	this.setParentNodeName= function(nodeName){
			this.parentNodeName=nodeName;
	
	}
	
	this.setRootErrorAlias= function(aliasName){
		this.errorRootAlias=aliasName;
	}
	
	this.setErrorText = function(aliasName){	
		this.base_errorAlias=aliasName;
	}
	
	/**
	 * Gets this node's default value, which is an internationalized value.
	 * This returns null since this uses a picklist.
	 * @param aNode the Adobe Node instance who's default value is required.
	 * @return a String that contains the internationalized default value for
	 *		   the passed Node. Null if this is not applicable.
	 */
    this.getDefaultValue = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets the type of format validation to be applied to data entered into
	 * this node in the UI.
	 * @param aNode the Adobe Node instance who's value must conform to a 
	 *		  specific format.
	 * @return a String that contains the type of format validation to be
	 *		   applied to data entered into this node in the UI. These must be
	 *		   types that are supported by the currently installed 
	 *		   FormatValidator. Null if this is not applicable.
	 */
    this.getFormatType = function(aNode)
    {
    	return null;
	}

	/**
	 * Gets this node's label to be displayed in the UI, which is an
	 * internationalized value.
	 * @param aNode the Adobe Node instance who's label is required.
	 * @return a String that contains the internationalized UI label for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getLabel = function(aNode)
    {
    	return null;
   	}

	/**
	 * Gets whether this node is mandatory (required).
	 * @param aNode the Adobe Node instance who's mandatory setting is required.
	 * @return a boolean - true if the country is Canada or the US, false if it
	 *		   is any other value, null if there was no node passed.
	 */
	this.isMandatory = function(aNode)
	{
    	if (aNode != undefined)
    	{
    		var childrenNodes = this._getChildrenNodes(aNode);
    	}
		return null;
	}
		
	/**
	 * Gets a string that defines the pick list to be displayed in the UI for
	 * this node.
	 * @param aNode the Adobe Node instance who's pick list is required.
	 * @return a String that contains the definition of the pick list to be
	 *		   displayed in the UI for this node. The format is:
	 *		   "displayValue1, code1, displayValue2, code2...". Null if
	 *		   this is not applicable.
	 */
    this.getPickListValues = function(aNode)
    {
    	return null;
	}
		
	/**
	 * Gets this node's tool tip to be displayed in the UI, which is an
	 * internationalized value. In this case it is null, since these are
	 * dependant on the subform that the field is in (must be handled by the
	 * FormNode itself).
	 * @param aNode the Adobe Node instance who's tool tip is required.
	 * @return a String that contains the internationalized UI tool tip for the
	 *		   passed Node. Null if this is not applicable.
	 */
    this.getToolTip = function(aNode)
    {
    	return null;
	}

	/**
	 * Sets the FormNode that is using this delegate. It is mandatory that this
	 * is set to allow the delegate to access items in the FormNode as required.
	 * @param aFormNode the FormNode that is using this delegate.
	 */
    this.setFormNode = function(aFormNode)
    {
    	this.formNode = aFormNode;
	}

	/**
	 * Gets whether this delegate is used to validate node instances (e.g.
	 * mandatory fields, etc.) as well as their child nodes.
	 * @return a boolean -true if this should be called to perform validation.
	 */
	this.isUsedToValidateNodes = function()
	{
		return true;
	}
	
	/**
	 * Performs custom validation. This also validates all child FormNodes if
	 * required. It may call the FormNode's _validateNode().
	 * @param aNodeInstance (optional) the instance of Adobe Node that should
	 *		  be validated. Required if this is below a collection of instances
	 *		  (e.g. a repeating subform). When unspecified, this may use the
	 *		  FormNode's getNodeInstances() to get all instances of this Node
	 *		  to validate.
	 * @param updateDisplay (optional) a boolean that indicates whether this
	 *		  should automatically update the colour of the node to reflect
	 *		  whether it passed validation. Defaults to true.
	 * @param aValidationFailure (optional) the ValidationFailure that this
	 *		  should append its validationFailures to. This is only used
	 *		  internally when this is called recursively.
	 * @return a ValidationFailure containing all failures that were
	 *		   encountered. Returns aValidationFailure if that parameter was
	 *		   used. Null if there were no failures.
	 * @throws an UnexpectedDataType Exception if aNodeInstance isn't an Adobe
	 *		   Node.
	 */
	this.validateNode = function(aNodeInstance, updateDisplay,
								 aValidationFailure)
	{
		// This is to perform all other validations beside the checkBoxes
		// It must be called before the checkBoxes validation to avoid being
		// overwirtten.
		this.formNode._validateNode(aNodeInstance, updateDisplay,
									aValidationFailure);

		var checkBoxArray = this._getCheckBoxNodeArray(aNodeInstance);

		// Check if none of the checkBoxes is checked
		if (aNodeInstance.presence=="visible" &amp;&amp; !this._isOneCheckBoxChecked(checkBoxArray))
		{
			for (var i=0; i &lt; checkBoxArray.length; i++)
			{
				cUiUtil.setColour(checkBoxArray[i],
									cConfigurationManager.get("colourError"));
			}
			var errorMsg=cResourceManager.get(this.base_errorAlias)+", "+cResourceManager.get(this.delegateErrorAlias);
			cLog.trace("first " +errorMsg);
			var instanceText=""
			if(this.errorRootAlias &amp;&amp; this.parentNodeName){
					var rootIndex= (cGeneralUtil.getParentIndex(this.parentNodeName,aNodeInstance))+1;
					if(rootIndex&gt;0){
						instanceText=cResourceManager.get(this.errorRootAlias)+" "+rootIndex+", ";
					}
					errorMsg=instanceText+errorMsg;
					cLog.trace(errorMsg);
			}
	
			
			var newValidationFailure = cValidationFailure.createInstance(
										"CheckBoxMandatorySet",errorMsg);
			if (aValidationFailure != null)
			{
				aValidationFailure.addNestedValidationFailure(newValidationFailure);
			}
			else
			{
				aValidationFailure = newValidationFailure;
			}
		}
		else
		{
			for (var i=0; i &lt; checkBoxArray.length; i++)
			{
				cUiUtil.resetColour(checkBoxArray[i]); //In case it previously failed
			}
		}
		
		return aValidationFailure;
	}
			
    /**
     * Describes this object. This is implemented in all objects since their
     * toString() cannot be overridden!
     * @return the description of this object.
     */
    this.asString = function()
	{
		var buffer = this.className + "[";
		
	    if (this.formNode != null)
	    {
	    	buffer += "formNode.somExpression= " + this.formNode.somExpression;
	    }
	    else
	    {
	    	buffer += "formNode= null";
	    }
		buffer += "]";
		return buffer;
	}

	//===== PRIVATE ============================================================
	/**
	 * Gets the children nodes from the given parent node and collect the ones
	 * that are checkBoxes into a node array. Issues a warning if the no children
	 * nodes can be found.
	 * @param aNode the parent Adobe Node instance that is being processed.
	 * @return an array - contains children nodes that are checkBoxes.
	 */
	this._getCheckBoxNodeArray = function(aNode)
	{
		var childrenNodeList = aNode.nodes;
		var checkBoxArray = new Array();

		if (childrenNodeList != null)
		{
			for(var i=0; i &lt; childrenNodeList.length; i++)
			{
				if (cTypeChecker.isCheckBox(childrenNodeList.item(i)))
				{
					checkBoxArray.push(childrenNodeList.item(i));
				}
			}
			return checkBoxArray;
		}
		cLog.warn("MandatoryCheckBoxDelegate._getCheckBoxNodeArray(aNode)"
				  + " couldn't find any child node for " + aNode.somExpression);
		return null;
	}

	/**
	 * Verify if at least one of the checkBox is checked in a checkBox array.
	 * @param aNodeArray the Adobe Node Array instance that is being processed.
	 * @return a boolean -true if at least one checkBox is checked.
	 */
	this._isOneCheckBoxChecked = function(aNodeArray)
	{
		for (var i=0; i &lt; aNodeArray.length; i++)
		{
			if (aNodeArray[i].rawValue == this.checkedValue)
			{
				return true;
			}
		}
		return false;
	}
}
</script>
                     <script contentType="application/x-javascript" name="ReasonChangeMandatoryCheckboxDelegate">
//imports
var cLog = 								script.core.util.Log;
var cCheckBoxGroupMandatory =			script.HCeForm.model.delegate.CheckBoxGroupMandatory;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate= cCheckBoxGroupMandatory.createInstance();
	oDelegate.setErrorText("msg_reasonChange");
	oDelegate.setRootErrorAlias("error_clinicalTrialSite");
	oDelegate.setParentNodeName("sfPart3");//can't make function calls, must be hard coded
	
	return oDelegate;
}

</script>
                     <script contentType="application/x-javascript" name="ControlNumberFieldLengthDelegate">


//imports
var cLog = 							script.core.util.Log;
var cDelegate=						script.HCeForm.model.delegate.FieldLengthDelegate;

/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the  instance
 */
function createInstance()
{
	var oDelegate=   cDelegate.createInstance();
	oDelegate.setErrorText("error_cn_length");	
	
	oDelegate.setFieldLength(6);
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="AddtionalControlNumberFieldLengthDelegate">

//imports
var cLog = 							script.core.util.Log;
var cDelegate=						script.HCeForm.model.delegate.FieldLengthDelegate;

/*******************************************************************************
 * Gets a new . Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the  instance
 */
function createInstance()
{
	var oDelegate=   cDelegate.createInstance();
		
	oDelegate.setSecondaryErrorText("error_addtional_cn_length");
	oDelegate.setFieldLength(6);
	return oDelegate;
}
</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="nodeDefinitions" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="MasterPage1">
var content={

	masterPage: {
		somExpression: "#pageSet",
		parentNodeKey: "root"},

	//Master Page / Form Page
	mp1FormPage: {
		somExpression: "Page1",
		parentNodeKey: "masterPage"},
		
	mp1Version:{
		somExpression:	"txtFormVersion",
		parentNodeKey:	"mp1FormPage",
		labelKey:		"lbVersion"},		
		
	mp1SFEnLogo: {
		somExpression:	"sfLogo_en",
		parentNodeKey:	"mp1FormPage"},
					
	mp1HcLogo: {
		somExpression:	"imgHCLogo",
		parentNodeKey:	"mp1SFEnLogo",
		toolTipKey:		"lbHealthCanada"},
	
	mp1SFFrLogo: {
		somExpression:	"sfLogo_fr",
		parentNodeKey:	"mp1FormPage"},
	
	mp1HcLogoFr: {
		somExpression:	"imgHCLogo_fr",
		parentNodeKey:	"mp1SFFrLogo",
		toolTipKey:		"lbHealthCanada"},	

	
	mp1Title:  {
		somExpression:	"lblMasterTitle",
		parentNodeKey:	"mp1FormPage",
		labelKey:		"lbApplTitle"},	
	
	mp1ResetChangesBtn:{
		somExpression:	"btnResetChanges",
		parentNodeKey:	"mp1FormPage",
		labelKey:		"lbResetChange",		
	},
	mp1AddClinicalBtn:{
		somExpression:	"btnAddSite",
		parentNodeKey:	"mp1FormPage",
		labelKey:		"lbAddSite",
	},					
}


</script>
                  <script contentType="application/x-javascript" name="General">	
var content={
		root: {
			somExpression: "xfa.form.CTSI", //TODO: change the root node name
		},	
		sfPage1: {
			somExpression: "sfPage1",
			parentNodeKey: "root"},	
		
		sfMainHeader: {
			somExpression: "sfMainHeader",
			parentNodeKey: "sfPage1"},
			
		languageChoice: {
			somExpression: "pageLanguage",
			parentNodeKey: "sfMainHeader"},
			
		chkEnglish: {
			somExpression: "chkEnglish",
			parentNodeKey: "languageChoice"},
			
		chkFrancais: {
			somExpression: "chkFrancais",
			parentNodeKey: "languageChoice"},		
		
		lblFormTitle: {
			somExpression: "lblFormTitle",
			parentNodeKey: "sfMainHeader",
			labelKey:		"lbApplTitle"},
		
		
		sfCTSIContent: {
			somExpression: "sfCTSIContent",
			parentNodeKey: "sfPage1"},	
				
			
}
</script>
                  <script contentType="application/x-javascript" name="Part1">

var content={

	sfPart1: {
		somExpression: "sfPart1",
		parentNodeKey: "sfCTSIContent"},
	
	
	sfPart1Heading: {
		somExpression: "sfPart1Heading",
		parentNodeKey: "sfPart1"},
		
	lblPart1: {
		somExpression: "lblPart1",
		parentNodeKey: "sfPart1Heading",
		labelKey:		"lbPart1",
		},
	
	sfSubAction: {
		somExpression: "sfSubAction",
		parentNodeKey: "sfPart1"},
		
	rdoTrialType: {
		somExpression: "rdoTrialType",
		parentNodeKey: "sfSubAction"},
			
	rdoNew: {
		somExpression: "rdoNew",
		parentNodeKey: "rdoTrialType",
		labelKey:		"lbNewAppl"},
			
	rdoAmend: {
		somExpression: "rdoAmend",
		parentNodeKey: "rdoTrialType",
		labelKey:		"lbAmendAppl"},
		
	sfPart3Notice: {
		somExpression: "sfPart3Notice",
		parentNodeKey: "sfSubAction"},

	lblPart3: {
		somExpression: "lblPart3",
		parentNodeKey: "sfPart3Notice",
		labelKey:	"lbPart3Notice",
	},
				
	sfActionHeading: {
		somExpression: "sfActionHeading",
		parentNodeKey: "sfSubAction"},
	
	lblAction: {
		somExpression: "lblAction",
		parentNodeKey: "sfActionHeading",
		labelKey:		"lbSubAction",
		},
	
	ddlSubType: {
		somExpression: "ddlSubType",
		parentNodeKey: "sfSubAction",
		labelKey:		"lbSubType",
		pickListKey:	"subTypeList",
		},
		

	sfCtaaMsg: {
			somExpression: "sfCtaaMsg",
			parentNodeKey: "sfSubAction"},
	
	lblCtaa: {
		somExpression:	"lblCtaa",
		parentNodeKey:	"sfCtaaMsg",
		labelKey:		"msg_ctaa",
		},
	
	sfClinTrial: {
		somExpression: "sfClinTrial",
		parentNodeKey: "sfPart1"},
	
	sfTrialIdHeading: {
		somExpression: "sfTrialIdHeading",
		parentNodeKey: "sfClinTrial"},
	
	lblTrialId: {
		somExpression: "lblTrialId",
		parentNodeKey: "sfTrialIdHeading",
		labelKey:		"lbTrialIDInfo"},
	
	txtProtocolTitle: {
		somExpression: "txtProtocolTitle",
		parentNodeKey: "sfClinTrial",
		labelKey:		"lbProtocolTitle",
		fieldNumber:	"1",
		},
	
	txtProtocolNumber: {
		somExpression: "txtProtocolNumber",
		parentNodeKey: "sfClinTrial",
		labelKey:		"lbProtocolNum",
		fieldNumber:	"2",
		},
	
	txtPrimeControlNumber: {
		somExpression: "txtControlNumber",
		parentNodeKey: "sfClinTrial",
		fieldNumber:	"3",
		delegate:		"script.HCeForm.model.delegate.ControlNumberFieldLengthDelegate"
		},//label set dynamically in code
		
	sfAddControlNum: {
		somExpression: "sfAddControlNum",
		parentNodeKey: "sfClinTrial"},
	
	btnAddControlNum: {
		somExpression: "btnAddControlNum",
		parentNodeKey: "sfAddControlNum",
		labelKey:		"lbAddControlNumber"},
	
	txtRegistryNumber: {
		somExpression: "txtRegistryNumber",
		parentNodeKey: "sfClinTrial",
		labelKey:		"lbRegFileNum",
		fieldNumber:	"4",
		},
				
	sfCTNList: {
		somExpression: "sfCTNList",
		parentNodeKey: "sfClinTrial"},

	sfControlNumber: {
		somExpression: "sfControlNumber",
		parentNodeKey: "sfCTNList"},
	
	txtControlNumber: {
		somExpression:	"txtControlNumber",
		parentNodeKey:	"sfControlNumber",
		labelKey:		"lbControlNumber",
		delegate:		"script.HCeForm.model.delegate.AddtionalControlNumberFieldLengthDelegate"
		},
	
	sfDeleteCT: {
		somExpression: "sfDeleteCT",
		parentNodeKey: "sfControlNumber"},
	
	btnDeleteCT: {
		somExpression:	"btnDeleteCT",
		parentNodeKey:	"sfDeleteCT",
		labelKey:		"lbDeleteControlNumber"},
	
}
</script>
                  <script contentType="application/x-javascript" name="Instructions">

var content={

	
	sfInstructions: {
			somExpression: "sfInstructions",
			parentNodeKey: "sfPage1"},
		
	btnHideInstructions: {
			somExpression: "btnHideInstructions",
			parentNodeKey: "sfInstructions",
			labelKey:		"lbHideInstruct"},
		
	btnViewInstructions: {
			somExpression:	"btnViewInstructions",
			parentNodeKey:	"sfInstructions",
			labelKey:		"lbShowInstruct"},
	
	lblGuidance: {
			somExpression: "lblGuidance",
			parentNodeKey: "sfInstructions",
			labelKey:		"lbGuidance"},
	
	sfPreInstruct: {
		somExpression: "sfPreInstruct",
		parentNodeKey: "sfPage1"},
		
	sfPreInstruct1: {
		somExpression: "sfPreInstruct1",
		parentNodeKey: "sfPreInstruct"},
	
	lblMandatory: {
		somExpression: "lblMandatory",
		parentNodeKey: "sfPreInstruct1",
		labelKey:		"lbMandatory"},
	
	sfPreInstruct2: {
		somExpression: "sfPreInstruct2",
		parentNodeKey: "sfPreInstruct"},
	
	lblValidation: {
		somExpression: "lblValidation",
		parentNodeKey: "sfPreInstruct2",
		labelKey:		"lbValidError"},
		
		
	sfPreInstruct3: {
		somExpression: "sfPreInstruct3",
		parentNodeKey: "sfPreInstruct"},

	lblPreInstruct3: {
			somExpression: "lblPreInstruct3",
			parentNodeKey: "sfPreInstruct3",
			labelKey:		"lbInstruct5"		
	},
			
	
	sfInstructionsContent: {
		somExpression: "sfInstructionsContent",
		parentNodeKey: "sfPage1"},

	lblInstructionsHead: {
		somExpression: "lblInstructionsHead",
		parentNodeKey: "sfInstructionsContent",
		labelKey:		"lbInstructionsHeading"
		},
	
	
	sfInstructList: {
		somExpression: "sfInstructList",
		parentNodeKey: "sfInstructionsContent"},
	
	sfInstruct1: {
		somExpression: "sfInstruct1",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct1: {
		somExpression: "lblInstruct1",
		parentNodeKey: "sfInstruct1",
		labelKey:		"lbInstruct1"},
	
	sfInstruct2: {
		somExpression: "sfInstruct2",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct2: {
		somExpression: "lblInstruct2",
		parentNodeKey: "sfInstruct2",
		labelKey:		"lbInstruct2"},
	
	sfInstruct3: {
		somExpression: "sfInstruct3",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct3: {
		somExpression: "lblInstruct3",
		parentNodeKey: "sfInstruct3",
		labelKey:		"lbInstruct3"},
	
	sfInstruct4: {
		somExpression: "sfInstruct4",
		parentNodeKey: "sfInstructList"},
	
	lblInstruct4: {
		somExpression: "lblInstruct4",
		parentNodeKey: "sfInstruct4",
		labelKey:		"lbInstruct4"},
		
}
</script>
                  <script contentType="application/x-javascript" name="Finalize">

var content={

	sfFinalizeButton: {
		somExpression: "sfFinalizeButton",
		parentNodeKey: "sfPage1"}, //TODO: reparent if needed
	
	btnFinalizeAndLock: {
		somExpression: "btnFinalizeAndLock",
		parentNodeKey: "sfFinalizeButton",
		labelKey: 		"lbFinalize"},
	
	btnModify: {
		somExpression: "btnModify",
		parentNodeKey: "sfFinalizeButton",
		labelKey: 		"lbModify"},

}
</script>
                  <script contentType="application/x-javascript" name="Part2">

var content={

	sfPart2: {
		somExpression: "sfPart2",
		parentNodeKey: "sfCTSIContent"},

	sfPart2AHeading: {
		somExpression: "sfPart2AHeading",
		parentNodeKey: "sfPart2"},
	
	lblDrugSponsor: {
		somExpression: "lblDrugSponsor",
		parentNodeKey: "sfPart2AHeading",
		labelKey:		"lbPart2",
		},
	
	sfDrugProdHeading: {
		somExpression: "sfDrugProdHeading",
		parentNodeKey: "sfPart2"},
	
	lblDrugProd: {
		somExpression: "lblDrugProd",
		parentNodeKey: "sfDrugProdHeading",
		labelKey:		"lbProductInfo",
		},
	
	txtDrugBrandName: {
		somExpression: "txtDrugBrandName",
		parentNodeKey: "sfPart2",
		labelKey:		"lbBrandName",
		fieldNumber:	"5",
		},
	
	txtDrugCommonName: {
		somExpression: "txtDrugCommonName",
		parentNodeKey: "sfPart2",
		labelKey:		"lbCommonName",
		fieldNumber:	"6",
		},
	
	sfSponsorInfo: {
		somExpression: "sfSponsorInfo",
		parentNodeKey: "sfPart2"},
	
	
	sfSponsorContent:{
	somExpression: "sfSponsorContent",
		parentNodeKey: "sfSponsorInfo"},
	
	sfSponsorInfoHeading: {
		somExpression: "sfSponsorInfoHeading",
		parentNodeKey: "sfSponsorContent"},
	
	lblSponsorInfo: {
		somExpression: "lblSponsorInfo",
		parentNodeKey: "sfSponsorInfoHeading",
		labelKey:		"lbSponsorInfo"},
	
	sfSponsorAddress: {
		somExpression: "sfSponsorAddress",
		parentNodeKey: "sfSponsorContent"},
	
	txtSponsorName: {
		somExpression: "txtSponsorName",
		parentNodeKey: "sfSponsorAddress",
		labelKey:		"lbSponsor",
		fieldNumber:	"7",
		},
	
	txtSponsorStreetAddress: {
		somExpression: "txtSponsorStreetAddress",
		parentNodeKey: "sfSponsorAddress",
		labelKey:		"lbAddress",
		fieldNumber:	"8",
		},
	
	txtSponsorCity: {
		somExpression: "txtSponsorCity",
		parentNodeKey: "sfSponsorAddress",
		labelKey:		"lbCity",
		fieldNumber:	"9",
		},
	
	ddlSponsorCountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfSponsorAddress",
		pickListKey:	"countryList",
		labelKey:		"lbCountry",
		fieldNumber:	"11",
		},
	
	ddlSponsorProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfSponsorAddress",
		//labelKey:		"lbProvince", delegate handles
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
		fieldNumber:	"10",
		},
	
	txtSponsorProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfSponsorAddress",
		labelKey:		"provinceState",
		fieldNumber:	"10",
		},
	
	txtSponsorPostalCode: {
		somExpression: "txtPostalCode",
		parentNodeKey: "sfSponsorAddress",
		delegate:		"script.HCeForm.model.delegate.SponsorPostalCodeFormatDelegate",
		fieldNumber:	"12",
		},
	
	sfSponsorContact: {
		somExpression: "sfSponsorContact",
		parentNodeKey: "sfSponsorInfo"},
	
	sfSponsorContactHeading: {
		somExpression: "sfSponsorContactHeading",
		parentNodeKey: "sfSponsorContact"},
	
	lblSponsorHeading: {
		somExpression: "lblSponsor",
		parentNodeKey: "sfSponsorContactHeading",
		labelKey:		"lbContactPersonHeading",
		},
	
	sfSponsorContactDetails: {
		somExpression: "sfSponsorContactDetails",
		parentNodeKey: "sfSponsorContact"},
				
	txtSponsorFullName: {
		somExpression: "txtSponsorFullName",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:		"lbFullName",
		fieldNumber:	"13",
		},
	
	txtSponsorTelephone: {
		somExpression: "txtSponsorTelephone",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:		"lbTelephone",
		delegate:		"script.HCeForm.model.delegate.SponsorPhoneFormatDelegate",
		fieldNumber:	"14",
		},
	
	txtSponsorExtension: {
		somExpression: "txtSponsorExtension",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:		"lbExtension",
		},
	
	txtSponsorFax: {
		somExpression: "txtSponsorFax",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:		"lbFax",
		delegate:		"script.HCeForm.model.delegate.SponsorFaxFormatDelegate",
		fieldNumber:	"15",
		},
	
	ddlSponsorLangPref: {
		somExpression: "ddlSponsorLangPref",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:		"lbLangPref",
		pickListKey:	"languageList",
		fieldNumber:	"16",
		},
	
		
	txtSponsorTitle: {
		somExpression: "txtSponsorTitle",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:			"lbPositionTitle",
		fieldNumber:	"17",
		
		},	
	
	txtSponsorEmail: {
		somExpression: "txtSponsorEmail",
		parentNodeKey: "sfSponsorContactDetails",
		labelKey:		"lbEmail",
		delegate:		"script.HCeForm.model.delegate.SponsorEmailFormatDelegate",
		fieldNumber:	"18",
		},
	
	sfContactHeading: {
		somExpression: "sfContactHeading",
		parentNodeKey: "sfSponsorInfo"},
	
	lblContactHeading: {
		somExpression: "lblContactHeading",
		parentNodeKey: "sfContactHeading",
		labelKey:		"lbContactInfo"},
	
	chkSponsorAddrSame: {
		somExpression: "chkSponsorAddrSame",
		parentNodeKey: "sfSponsorInfo",
		labelKey:		"lbContactSameSponsor"},
			
	sfTrialContact: {
		somExpression: "sfTrialContact",
		parentNodeKey: "sfPart2"},
	
	sfTrialContactAddress: {
		somExpression: "sfTrialContactAddress",
		parentNodeKey: "sfTrialContact"},
	
	txtContactCompany: {
		somExpression: "txtCompany",
		parentNodeKey: "sfTrialContactAddress",
		labelKey:		"lbCompanyOrg",
		fieldNumber:	"19",
		},
	
	txtContactStreetAddress: {
		somExpression:	"txtStreetAddress",
		parentNodeKey:	"sfTrialContactAddress",
		labelKey:		"lbAddress",
		fieldNumber:	"20",
		},
	
	txtContactCity: {
		somExpression: "txtCity",
		parentNodeKey: "sfTrialContactAddress",
		labelKey:		"lbCity",
		fieldNumber:	"21",
		},
	
	ddlContactCountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfTrialContactAddress",
		labelKey:		"lbCountry",
		pickListKey:	"countryList",
		fieldNumber:	"22",
		},
	
	ddlContactProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfTrialContactAddress",
		//labelKey:		"lbProvince", handled by delegate
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
		fieldNumber:	"23",
		},
	
	txtContactProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfTrialContactAddress",
		labelKey:		"provinceState",
		fieldNumber:	"23",
		},
	
	txtContactPostalCode: {
		somExpression: "txtPostalCode",
		parentNodeKey: "sfTrialContactAddress",
		delegate:		"script.HCeForm.model.delegate.ContactPostalCodeFormatDelegate",
		fieldNumber:	"24",
		}, //label handled by the delegate
	
	sfTrialContactDetails: {
		somExpression: "sfTrialContactDetails",
		parentNodeKey: "sfTrialContact"},
	

	txtTrialContactFullName: {
		somExpression: "txtTrialContactFullName",
		parentNodeKey: "sfTrialContactDetails",
		labelKey:		"lbFullName",
		fieldNumber:	"25"
		},
	
	txtTrialContactTitle: {
		somExpression: "txtTrialContactTitle",
		parentNodeKey: "sfTrialContactDetails",
		labelKey:		"lbPositionTitle",
		}, //TODO
	
	ddlTrialContactLangPref: {
		somExpression: "ddlTrialContactLangPref",
		parentNodeKey: "sfTrialContactDetails",
		labelKey:		"lbLangPref",
		pickListKey:	"languageList",
		fieldNumber:	"26",
		},
	
	txtTrialContactTelephone: {
		somExpression: "txtTrialContactTelephone",
		parentNodeKey: "sfTrialContactDetails",
		labelKey:		"lbTelephone",
		delegate:		"script.HCeForm.model.delegate.ContactPhoneFormatDelegate",
		fieldNumber:	"27",
		},
	
	txtTrialContactExtension: {
		somExpression: "txtTrialContactExtension",
		parentNodeKey: "sfTrialContactDetails",
		labelKey:		"lbExtension"
		},
	
	txtTrialContactFax: {
		somExpression: "txtTrialContactFax",
		parentNodeKey: "sfTrialContactDetails",
		labelKey:		"lbFax",
		delegate:		"script.HCeForm.model.delegate.ContactFaxFormatDelegate",
		fieldNumber:	"28",
		},
	
	txtTrialContactEmail: {
		somExpression:	"txtTrialContactEmail",
		parentNodeKey:	"sfTrialContactDetails",
		labelKey:		"lbEmail",
		delegate:		"script.HCeForm.model.delegate.ContactEmailFormatDelegate",
		fieldNumber:	"29",
		},
			
}
</script>
                  <script contentType="application/x-javascript" name="Part3">

var content={

	sfPart3: {
		somExpression: "sfPart3",
		parentNodeKey: "sfCTSIContent"},
	
	sfSiteInfo: {
		somExpression: "sfSiteInfo",
		parentNodeKey: "sfPart3"},
	
	txtChangeNum: {
		somExpression: "txtChangeNum",
		parentNodeKey: "sfSiteInfo",
		labelKey:		"lbClinTrialSite",
		}, 
		
	btnDeleteSite: {
		somExpression:	"btnDeleteSite",
		parentNodeKey:	"sfSiteInfo",
		labelKey:		"lbDeleteSite"},	
	
	sfClinTrialHeading: {
		somExpression: "sfClinTrialHeading",
		parentNodeKey: "sfPart3"},
	
	lblClinTrialHeading: {
		somExpression: "lblClinTrialHeading",
		parentNodeKey: "sfClinTrialHeading",
		labelKey:		"lbPart3",
		},	
		
	ddlChangeType:{
		somExpression: "ddlChangeType",
		parentNodeKey: "sfPart3",
		labelKey:		"lbChangeType",
		pickListKey:	"amendTypeList"}, 
			
	sfChangeReason: {
		somExpression: "sfChangeReason",
		parentNodeKey: "sfPart3",
		delegate:		"script.HCeForm.model.delegate.ReasonChangeMandatoryCheckboxDelegate",
		},
	
	lblChangeReason: {
		somExpression: "lblChangeReason",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbReasonText",
		}, //TODO
	
	chkDateChange: {
		somExpression: "chkDateChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbDateChange",
		toolTipKey:		"ttDatesReason",
		},
	
	chkSiteNameChange: {
		somExpression: "chkSiteNameChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbSiteNameChange",
		toolTipKey:		"ttPart3ANameReason",
		},
	
	chkSiteAddressChange: {
		somExpression: "chkSiteAddressChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbSiteAddressChange",
		toolTipKey:		"ttPart3AAddressReason",
		},
	
	chkQINameChange: {
		somExpression: "chkQINameChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbQINameChange",
		toolTipKey:		"ttPart3BNameReason",
		},
	
	chkQIAddressChange: {
		somExpression: "chkQIAddressChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbQIAddressChange",
		toolTipKey:		"ttPart3BAddressReason",
		},
	
	chkREBPersonChange: {
		somExpression: "chkREBPersonChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbREBNameChange",
		toolTipKey:		"ttPart3CNameReason",
		},
	
	chkREBAddressChange: {
		somExpression: "chkREBAddressChange",
		parentNodeKey: "sfChangeReason",
		labelKey:		"lbREBAddressChange",
		toolTipKey:		"ttPart3CAddressReason",
		},
		
	
	sfClinicalTrialSite: {
		somExpression: "sfClinicalTrialSite",
		parentNodeKey: "sfPart3"},
	
	sfCurrSiteContent:{
		somExpression: "sfCurrSiteContent",
		parentNodeKey: "sfClinicalTrialSite"},
	
	sfCurrSiteNameHeading: {
		somExpression: "sfCurrSiteNameHeading",
		parentNodeKey: "sfCurrSiteContent"},

	lblCurrSiteNameHeading: {
		somExpression: "lblCurrSiteNameHeading",
		parentNodeKey: "sfCurrSiteNameHeading",
		labelKey:		"lbCurrClinSiteName",
	},	
	
	
	txtCurrSiteName: {
		somExpression: "txtCurrSiteName",
		parentNodeKey: "sfCurrSiteContent",
		labelKey:		"lbCurrSiteName",
		fieldNumber:	"30",
		},
			
	sfOldSiteName: {
		somExpression: "sfOldSiteName",
		parentNodeKey: "sfClinicalTrialSite"},
	
	//dan may19	
	sfOldSiteNameHeading: {
	somExpression: "sfOldSiteHeading",
	parentNodeKey: "sfOldSiteName"},

	lblOldSiteNameHeading: {
	somExpression: "lblOldSiteNameHeading",
	parentNodeKey: "sfOldSiteNameHeading",
	labelKey:		"lbPrevClinSiteName"
	},
	//
	
	txtOldSiteName: {
		somExpression: "txtOldSiteName",
		parentNodeKey: "sfOldSiteName",
		labelKey:		"lbPrevSiteName"},
	
	sfCurrSiteAddressDetails: {
		somExpression: "sfCurrSiteAddressDetails",
		parentNodeKey: "sfClinicalTrialSite"},
	
	sfCurrSiteHeading: {
		somExpression: "sfCurrSiteHeading",
		parentNodeKey: "sfCurrSiteAddressDetails"},
	
	lblCurrSiteAddrHeading: {
		somExpression: "lblCurrSiteAddrHeading",
		parentNodeKey: "sfCurrSiteHeading",
		labelKey:		"lbCurrClinSiteAddress",
		},
	
	txtCurrSiteAddress: {
		somExpression: "txtCurrSiteAddress",
		parentNodeKey: "sfCurrSiteAddressDetails",
		labelKey:		"lbAddress",
		fieldNumber:	"31",
		}, 
	
	txtCurrSiteCity: {
		somExpression: "txtCurrSiteCity",
		parentNodeKey: "sfCurrSiteAddressDetails",
		labelKey:		"lbCity",
		fieldNumber:	"32",
		},
	
	ddlCurrSiteCountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfCurrSiteAddressDetails",
		labelKey:		"lbCountry",
		pickListKey:	"countryList"},
	
	ddlCurrSiteProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfCurrSiteAddressDetails",
		labelKey:		"lbProvince",
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
		fieldNumber:	"33",
		},
	
	txtCurrSiteProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfCurrSiteAddressDetails",
		labelKey:	"provinceState",
		fieldNumber:	"33",
		},
	
	txtCurrSitePostalCode: {
		somExpression: "txtCurrSitePostalCode",
		parentNodeKey: "sfCurrSiteAddressDetails",
		delegate:		"script.HCeForm.model.delegate.SitePostalCodeFormatDelegate",
		fieldNumber:	"34",
		}, //label handled via the delegate
	
	sfOldSiteAddressDetails: {
		somExpression: "sfOldSiteAddressDetails",
		parentNodeKey: "sfClinicalTrialSite"},
	
	sfOldSiteAddrHeading: {
		somExpression: "sfOldSiteAddrHeading",
		parentNodeKey: "sfOldSiteAddressDetails"},
	
	lblOldClinSiteAddrHeading: {
		somExpression: "lblOldSiteAddrHeading",
		parentNodeKey: "sfOldSiteAddrHeading",
		labelKey:		"lbPrevClinSiteAddress"},
	
	txtOldSiteAddress: {
		somExpression: "txtOldSiteAddress",
		parentNodeKey: "sfOldSiteAddressDetails",
		labelKey:		"lbAddress",
		},
	
	txtOldSiteCity: {
		somExpression: "txtOldSiteCity",
		parentNodeKey: "sfOldSiteAddressDetails",
		labelKey:		"lbCity",
		},
	
	ddlOldSiteCountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfOldSiteAddressDetails",
		labelKey:		"lbCountry",
		pickListKey:	"countryList",
		},
	
	ddlOldSiteProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfOldSiteAddressDetails",
		labelKey:		"lbProvince",
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate"
		},
	
	txtOldSiteProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfOldSiteAddressDetails",
		labelKey:		"lbProvince", //canada only
		},
	
	txtOldSitePostalCode: {
		somExpression: "txtOldSitePostalCode",
		parentNodeKey: "sfOldSiteAddressDetails",
		delegate:		"script.HCeForm.model.delegate.PrevSitePostalCodeFormatDelegate",
		//labelKey:		"postal", handled by delegate
	},
	
	dteCurrComenceDate: {
		somExpression: "dteComenceDate",
		parentNodeKey: "sfPart3",
		labelKey:		"lbAmendDate",
		fieldNumber:	"35",
		delegate:		"script.HCeForm.model.delegate.CommenceDateFormatDelegate",
		},
	//prev date
	sfPrevCommDate: {
		somExpression: "sfPrevCommDate",
		parentNodeKey: "sfPart3"},

	dtePrevComenceDate: {
		somExpression: "dtePrevComenceDate",
		parentNodeKey: "sfPrevCommDate",
		labelKey:		"lbPrevCommenceDate",
		delegate:		"script.HCeForm.model.delegate.PrevCommenceDateFormatDelegate"
		},	
	
	sfQualifiedInvest: {
		somExpression: "sfQualifiedInvest",
		parentNodeKey: "sfPart3"},
	
	sfQIHeading: {
		somExpression: "sfQIHeading",
		parentNodeKey: "sfQualifiedInvest"},
	
	lblQIHeading: {
		somExpression: "lblQIHeading",
		parentNodeKey: "sfQIHeading",
		labelKey:		"lbQualifiedInvestigator"},
	
	lblQIInstruct: {
		somExpression: "lblQIInstruct",
		parentNodeKey: "sfQIHeading",
		labelKey:		"lbQUIDecl"},
	
	sfQIContactDetails: {
		somExpression: "sfQIContactDetails",
		parentNodeKey: "sfQualifiedInvest"},
	
	sfOldQIName: {
		somExpression: "sfOldQIName",
		parentNodeKey: "sfQIContactDetails"},
	
	sfOldQIHeading: {
		somExpression: "sfOldQIHeading",
		parentNodeKey: "sfOldQIName"},
	
	lblOldQIName: {
		somExpression: "lblOldQIName",
		parentNodeKey: "sfOldQIHeading",
		labelKey:		"lbPrevQIName",
		},
	
	txtOldQIFullName: {
		somExpression: "txtOldQIFullName",
		parentNodeKey: "sfOldQIName",
		labelKey:		"lbFullName",
		},
			
	txtOldQIDesignation: {
		somExpression: "txtOldQIDesignation",
		parentNodeKey: "sfOldQIName"},
	
	txtOldQITitle: {
		somExpression: "txtOldQITitle",
		parentNodeKey: "sfOldQIName",
		labelKey:		"lbPositionTitle",
		},
		
	sfOldQINameHide: {
		somExpression: "sfOldQINameHide",
		parentNodeKey: "sfOldQIName"},

	ddlPrevQILangPref: {
		somExpression: "ddlPrevQILangPref",
		parentNodeKey: "sfOldQINameHide",
		pickListKey:	"languageList",
		labelKey:		"lbLangPref"},
	
	txtPrevQITelephone: {
		somExpression: "txtPrevQITelephone",
		parentNodeKey: "sfOldQINameHide",
		labelKey:		"lbTelephone",
		},
	
	txtPrevQIExtension: {
		somExpression: "txtPrevQIExtension",
		parentNodeKey: "sfOldQINameHide",
		labelKey:		"lbExtension",
		},
	
	txtPrevQIFax: {
		somExpression: "txtPrevQIFax",
		parentNodeKey: "sfOldQINameHide",
		labelKey:		"lbFax",
		},
	
	txtPrevQIEmail: {
		somExpression: "txtPrevQIEmail",
		parentNodeKey: "sfOldQINameHide",
		labelKey:		"lbEmail",
		},
	
	sfCurrQIName: {
		somExpression: "sfCurrQIName",
		parentNodeKey: "sfQIContactDetails"},
	
	sfCurrQIHeading: {
		somExpression: "sfCurrQIHeading",
		parentNodeKey: "sfCurrQIName"},
	
	lblCurrQIName: {
		somExpression: "lblCurrQIName",
		parentNodeKey: "sfCurrQIHeading",
		labelKey:		"lbCurrQIName"},
	
	txtCurrQIFullName: {
		somExpression: "txtCurrQIFullName",
		parentNodeKey: "sfCurrQIName",
		labelKey:		"lbFullName",
		fieldNumber:	"36",
		},
		
	txtCurrQIDesignation: {
		somExpression: "txtCurrQIDesignation",
		parentNodeKey: "sfCurrQIName",
		labelKey:		"lbMedDesign"},
	
	txtCurrQITitle: {
		somExpression: "txtCurrQITitle",
		parentNodeKey: "sfCurrQIName",
		labelKey:		"lbPositionTitle",
		fieldNumber:	"37",
		},
	
	ddlCurrQILangPref: {
		somExpression: "ddlCurrQILangPref",
		parentNodeKey: "sfCurrQIName",
		pickListKey:	"languageList",
		labelKey:		"lbLangPref",
		fieldNumber:	"38",
		},
	
	txtCurrQITelephone: {
		somExpression: "txtCurrQITelephone",
		parentNodeKey: "sfCurrQIName",
		delegate:		"script.HCeForm.model.delegate.QIPhoneFormatDelegate",
		labelKey:		"lbTelephone",
		fieldNumber:	"39",
		},
	
	txtCurrQIExtension: {
		somExpression: "txtCurrQIExtension",
		parentNodeKey: "sfCurrQIName",
		labelKey:		"lbExtension",
		},
	
	txtCurrQIFax: {
		somExpression: "txtCurrQIFax",
		parentNodeKey: "sfCurrQIName",
		delegate:		"script.HCeForm.model.delegate.QIFaxFormatDelegate",
		labelKey:		"lbFax",
		fieldNumber:	"40",
		},
	
	txtCurrQIEmail: {
		somExpression: "txtCurrQIEmail",
		parentNodeKey: "sfCurrQIName",
		delegate:		"script.HCeForm.model.delegate.QIEmailFormatDelegate",
		labelKey:		"lbEmail",
		fieldNumber:	"41",
		},
	txtFakeCountry:{
		somExpression: "txtFakeCountry",
		parentNodeKey: "sfCurrQIName",
	},
	
	
	sfCurrContent:{
			somExpression: "sfCurrContent",
			parentNodeKey: "sfQualifiedInvest"},
			
	sfCurrQIAddrHeading: {
		somExpression: "sfCurrQIAddrHeading",
		parentNodeKey: "sfCurrContent"},
	
	lblCurrQIAddr: {
		somExpression: "lblCurrQIAddr",
		parentNodeKey: "sfCurrQIAddrHeading",
		labelKey:		"lbCurrQIAddress",
		}, 
	
	chkCurrQIAddrSameAs: {
		somExpression: "chkCurrQIAddrSameAs",
		parentNodeKey: "sfCurrContent",
		labelKey:		"lbQIAddressSameAs",
		},		
	
	sfCurrQIAddressDetails: {
		somExpression: "sfCurrQIAddressDetails",
		parentNodeKey: "sfCurrContent"},
	
	txtCurrQIAddress: {
		somExpression: "txtCurrQIAddress",
		parentNodeKey: "sfCurrQIAddressDetails",
		labelKey:		"lbAddress",
		fieldNumber:	"42",
		},
	
	txtCurrQICity: {
		somExpression: "txtCurrQICity",
		parentNodeKey: "sfCurrQIAddressDetails",
		labelKey:		"lbCity",
		fieldNumber:	"43",
		},
	
	ddlCurrQICountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfCurrQIAddressDetails",
		pickListKey:	"countryListNA",
		labelKey:		"lbCountry",
		},
	
	ddlCurrQIProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfCurrQIAddressDetails",
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
		fieldNumber:	"44",
		}, //handled by delegate

	txtCurrQIProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfCurrQIAddressDetails",
		labelKey:		"provinceState",
		fieldNumber:	"44",
		},
	
	txtCurrQIPostalCode: {
		somExpression: "txtPostalCode",
		parentNodeKey: "sfCurrQIAddressDetails",
		delegate:		"script.HCeForm.model.delegate.QIPostalCodeFormatDelegate",
		labelKey:		"postalCode",  //always canada
		fieldNumber:	"45",
	},
	//old  QI address	
	sfPrevQIAddressDetails: {
		somExpression: "sfPrevQIAddressDetails",
		parentNodeKey: "sfQualifiedInvest"},

	sfPrevQIAddrHeading: {
		somExpression: "sfPrevQIAddrHeading",
		parentNodeKey: "sfPrevQIAddressDetails"},
	
	lblPrevQIAddr: {
		somExpression: "lblPrevQIAddr",
		parentNodeKey: "sfPrevQIAddrHeading",
		labelKey:		"lbPrevQIAddress",
		}, 
	
	txtPrevQIAddress: {
		somExpression: "txtPrevQIAddress",
		parentNodeKey: "sfPrevQIAddressDetails",
		labelKey:		"lbAddress",
		},
	
	txtPrevQICity: {
		somExpression: "txtPrevQICity",
		parentNodeKey: "sfPrevQIAddressDetails",
		labelKey:		"lbCity",
		},
	
	ddlPrevQICountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfPrevQIAddressDetails",
		pickListKey:	"countryListNA",
		labelKey:		"lbCountry",
		},
	
	ddlPrevQIProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfPrevQIAddressDetails",
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
		}, //handled by delegate
	
	txtPrevQIProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfPrevQIAddressDetails",
		labelKey:		"provinceState",
		},
	
	txtPrevQIPostalCode: {
		somExpression: "txtPostalCode",
		parentNodeKey: "sfPrevQIAddressDetails",		
		//labelKey:		"postalCode",
		delegate:		"script.HCeForm.model.delegate.PrevQIPostalCodeFormatDelegate",	
		},			
	//end old QI address
	
	sfResearchEthics: {
		somExpression: "sfResearchEthics",
		parentNodeKey: "sfPart3"},
	
	sfREBHeading: {
		somExpression: "sfREBHeading",
		parentNodeKey: "sfResearchEthics"},
	
	lblREBHeading: {
		somExpression: "lblREBHeading",
		parentNodeKey: "sfREBHeading",
		labelKey:		"lbRebApproval"},
	
	lblREBEthics: {
		somExpression: "lblREBEthics",
		parentNodeKey: "sfREBHeading",
		labelKey:		"lbREBDecl",
		},
	
	//currentAddresssfPage1.sfCTSIContent.sfPart3.sfResearchEthics.sfREBAddress.sfCurrRebAddress.txtREBStreetAddress
	sfREBAddress: {
		somExpression: "sfREBAddress",
		parentNodeKey: "sfResearchEthics"},
	
	sfSupplSafety: {
		somExpression: "sfSupplSafety",
		parentNodeKey: "sfREBAddress",
		
		},
	
	ddlSafetyReasons: {
		somExpression: "ddlSafetyReasons",
		parentNodeKey: "sfSupplSafety",
		pickListKey:	"yesNoList",
		labelKey:		"lbDateSafety",	
		delegate:		"script.HCeForm.model.delegate.TrialDatesDelegate",
		},	
	
	chkSupplDoc: {
		somExpression: "chkSupplDoc",
		parentNodeKey: "sfSupplSafety",
		delegate:		"script.HCeForm.model.delegate.REBSupplCheckboxDelegate",
		labelKey:		"lbSupplEnclose",		
		},	
	lblDateError:	{
		somExpression: "lblDateError",
		parentNodeKey: "sfSupplSafety",
	},
	
	
	txtCurrREBCompany: {
		somExpression: "txtREBCompany",
		parentNodeKey: "sfREBAddress",
		labelKey:		"lbREBName",
		fieldNumber:	"46",
		},
	
	dteCurrApprovalDate: {
		somExpression: "dteApprovalDate",
		parentNodeKey: "sfREBAddress",
		labelKey:		"lbApprovalDate",
		fieldNumber:	"47",
		delegate:		"script.HCeForm.model.delegate.ApprovalDateFormatDelegate"
		}, 
			//prevDate
	sfPrevApprovalDate: {
		somExpression: "sfPrevApprovalDate",
		parentNodeKey: "sfREBAddress",
		
		},
	
	dtePrevApprovalDate: {
		somExpression: "dtePrevApprovalDate",
		parentNodeKey: "sfPrevApprovalDate",
		labelKey:		"lbPrevApprovalDate",
		delegate:		"script.HCeForm.model.delegate.PrevApprovalDateFormatDelegate"
		},
	
	sfCurrRebAddrContent:{
				somExpression: "sfCurrRebAddrContent",
					parentNodeKey: "sfREBAddress"},
	
	sfREBCurrAddrHeading: {
		somExpression: "sfREBCurrAddrHeading",
		parentNodeKey: "sfCurrRebAddrContent"},

	lblREBCurrAddr: {
		somExpression: "lblREBCurrAddr",
		parentNodeKey: "sfREBCurrAddrHeading",
		labelKey:		"lbCurrRebAddress"
		}, 
	
	sfCurrREBAddress: {
		somExpression: "sfCurrRebAddress",
		parentNodeKey: "sfCurrRebAddrContent",
	},	
	
	txtCurrREBStreetAddress: {
		somExpression: "txtREBStreetAddress",
		parentNodeKey: "sfCurrREBAddress",
		labelKey:		"lbAddress",
		fieldNumber:	"48",
		},
	
	txtCurrREBCity: {
		somExpression: "txtREBCity",
		parentNodeKey: "sfCurrREBAddress",
		labelKey:		"lbCity",
		fieldNumber:	"49",
		},
	
	ddlCurrREBCountry: {
		somExpression: "ddlCountry",
		parentNodeKey: "sfCurrREBAddress",
		pickListKey:	"countryListNA",
		labelKey:		"lbCountry",
		},
	
	ddlCurrREBProvince: {
		somExpression: "ddlProvince",
		parentNodeKey: "sfCurrREBAddress",
		delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
		fieldNumber:	"50",
		},
	
	txtCurrREBProvince: {
		somExpression: "txtProvince",
		parentNodeKey: "sfCurrREBAddress",
		labelKey:		"provinceState",
		fieldNumber:	"50",
		},
	
	txtCurrREBPostalCode: {
		somExpression: "txtREBPostalCode",
		parentNodeKey: "sfCurrREBAddress",
		delegate:		"script.HCeForm.model.delegate.REBPostalCodeFormatDelegate",
		fieldNumber:	"51",
		},
	//@@@@@@@@@@@@@previous Reba Address
		sfPrevREBAddress: {
			somExpression: "sfPrevREBAddress",
			parentNodeKey: "sfResearchEthics"},
		
		sfREBPrevAddrHeading: {
				somExpression: "sfREBPrevAddrHeading",
				parentNodeKey: "sfPrevREBAddress"},

		lblREBPrevAddr: {
			somExpression: "lblPrevREBAddr",
			parentNodeKey: "sfREBPrevAddrHeading",
			labelKey:		"lbPrevRebAddress",
			},
		
		txtPrevREBStreetAddress: {
			somExpression: "txtPrevREBStreetAddress",
			parentNodeKey: "sfPrevREBAddress",
			labelKey:		"lbAddress",
			},
		
		txtPrevREBCity: {
			somExpression: "txtPrevREBCity",
			parentNodeKey: "sfPrevREBAddress",
			labelKey:		"lbCity",
			},
		
		ddlPrevREBCountry: {
			somExpression: "ddlCountry",
			parentNodeKey: "sfPrevREBAddress",
			pickListKey:	"countryListNA",
			labelKey:		"lbCountry",
			},
		
		ddlPrevREBProvince: {
			somExpression: "ddlProvince",
			parentNodeKey: "sfPrevREBAddress",
			//labelKey:		"lbProvince",
			delegate:	 	"script.core.model.delegate.ProvinceStateDelegate",
			},
		
		txtPrevREBProvince: {
			somExpression: "txtProvince",
			parentNodeKey: "sfPrevREBAddress",
			labelKey:		"provinceState",
			},
		
		txtPrevREBPostalCode: {
			somExpression: "txtPrevREBPostalCode",
			parentNodeKey: "sfPrevREBAddress",
			//labelKey:		"postalCode"
			delegate:		"script.HCeForm.model.delegate.PrevQIPostalCodeFormatDelegate"
			},			
		//end prevRebaAddress
		
	sfREBCurrName: {
		somExpression: "sfREBCurrName",
		parentNodeKey: "sfResearchEthics"},
	
	sfREBCurrContactHeading: {
		somExpression: "sfREBCurrContactHeading",
		parentNodeKey: "sfREBCurrName"},
	
	lblCurrRebaPerson: {
		somExpression: "lblCurrRebaPerson",
		parentNodeKey: "sfREBCurrContactHeading",
		labelKey:		"lbCurrRebContact"},
		
	txtREBCurrFullName: {
		somExpression: "txtREBCurrFullName",
		parentNodeKey: "sfREBCurrName",
		labelKey:		"lbFullName",
		fieldNumber:	"52",
		},
	
	txtREBCurrTitle: {
		somExpression: "txtREBCurrTitle",
		parentNodeKey: "sfREBCurrName",
		labelKey:		"lbPositionTitle",
		fieldNumber:	"56",
		},
	
	ddlREBCurrLangPref: {
		somExpression: "ddlREBCurrLangPref",
		parentNodeKey: "sfREBCurrName",
		pickListKey:	"languageList",
		labelKey:		"lbLangPref",
		fieldNumber:	"55",
		},
	
	txtREBCurrTelephone: {
		somExpression: "txtREBCurrTelephone",
		parentNodeKey: "sfREBCurrName",
		delegate:		"script.HCeForm.model.delegate.REBPhoneFormatDelegate",
		labelKey:		"lbTelephone",
		fieldNumber:	"53",
		},
	
	txtREBCurrExtension: {
		somExpression: "txtREBCurrExtension",
		parentNodeKey: "sfREBCurrName",
		labelKey:		"lbExtension",
		},
	
	txtREBCurrFax: {
		somExpression: "txtREBCurrFax",
		parentNodeKey: "sfREBCurrName",
		delegate:		"script.HCeForm.model.delegate.REBFaxFormatDelegate",
		labelKey:		"lbFax",
		fieldNumber:	"54",
		},
	
	txtREBCurrEmail: {
		somExpression: "txtREBCurrEmail",
		parentNodeKey: "sfREBCurrName",
		delegate:		"script.HCeForm.model.delegate.REBEmailFormatDelegate",
		labelKey:		"lbEmail",
		fieldNumber:	"57",
		},
	/*Previous name REBA details**/		
	sfREBPrevName: {
		somExpression: "sfREBPrevName",
		parentNodeKey: "sfResearchEthics"},
	
	sfREBPrevContactHeading: {
		somExpression: "sfREBPrevContactHeading",
		parentNodeKey: "sfREBPrevName"},
	
	lblPrevRebaPerson: {
		somExpression:	"lblPrevRebaPerson",
		parentNodeKey:	"sfREBPrevContactHeading",
		labelKey:		"lbPrevRebContact",
		},
		
	txtREBPrevFullName: {
		somExpression: "txtREBPrevFullName",
		parentNodeKey: "sfREBPrevName",
		labelKey:		"lbFullName",
		},
		
	txtREBPrevTitle: {
		somExpression: "txtREBPrevTitle",
		parentNodeKey: "sfREBPrevName",
		labelKey:		"lbPositionTitle",
		},
	
	sfPrevHiddenProp: {
		somExpression: "sfPrevHiddenProp",
		parentNodeKey: "sfREBPrevName"},
	
	ddlREBPrevLangPref: {
		somExpression: "ddlREBPrevLangPref",
		parentNodeKey: "sfPrevHiddenProp",
		pickListKey:	"languageList",
		labelKey:		"lbLangPref",
		},
	
	txtREBPrevTelephone: {
		somExpression: "txtREBPrevTelephone",
		parentNodeKey: "sfPrevHiddenProp",
		labelKey:		"lbTelephone",
		},
	
	txtREBPrevExtension: {
		somExpression: "txtREBPrevExtension",
		parentNodeKey: "sfPrevHiddenProp",
		labelKey:		"lbExtension",
		},
	
	txtREBPrevFax: {
		somExpression: "txtREBPrevFax",
		parentNodeKey: "sfPrevHiddenProp",
		labelKey:		"lbFax",
		},
	
	txtREBPrevEmail: {
		somExpression: "txtREBPrevEmail",
		parentNodeKey: "sfPrevHiddenProp",
		labelKey:		"lbEmail",
		},
	
	
}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script usehref="..\..\fragments\delegates\resources\errorDelegate_en.xdp#som($template.form1.#subform.#variables.errorDelegate_en)"/>
                  <script usehref="..\..\fragments\delegates\resources\errorDelegate_fr.xdp#som($template.form1.#subform.#variables.errorDelegate_fr)"/>
                  <script contentType="application/x-javascript" name="general_en">//nov2015
var content={
	
	lbHideInstruct:		"Hide Instructions",
	lbShowInstruct:		"Show Instructions",
	lbOfLCText:			"of",
	lbMandatory:		"Asterisk symbol (*) denotes a mandatory field.",
	lbValidError:		"Plus symbol (+) denotes a validation error or missing data.",
	lbVersion:			"Revision No.:",
	lbHealthCanada:		"Health Canada",
 	lbDate:				"Date formatted as YYYY-MM-DD",
 	lbDigitalID:		"Digital ID",
	lbDigitalImage:		"Image Signature",
	lbSignature:		"Signature",
	lbFinalize:			"Finalize",
	lbModify:			"Modify",
	validation_title:	"Validation Results",
	validation_pass:	"This form successfully validated and locked from editing. In order to modify fields after finalizing, you must press the 'Modify' button at the bottom of the form.",  //override oore  //override oore
	message_saveAs: 	"This form has encountered a problem.", //override oore
	provinceState:		"Province or State",
	lbFullName:			"Full Name (first name, last name)",
	lbResetChange:		"Accept All Changes",
	lbAddSite:			"Add Clinical Trial Site",
	lbAddControlNumber:	"Add Control Number",
	lbGuidance:			" &lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"letter-spacing:0in\"&gt;&lt;a href=\"http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/form/ctsif_guid_ld_dldcf-eng.php\" style=\"font-size:8pt\"&gt;Guidance Document&lt;/a&gt;&lt;/p&gt;&lt;/body&gt;",
}
</script>
                  <script contentType="application/x-javascript" name="general_fr">//nov2015
var content={

		
	lbHideInstruct:		"Masquer les instructions",
	lbShowInstruct:		"Afficher les instructions",
	lbOfLCText:			"sur",
	validation_title:	"Résultats de la validation",
	lbMandatory:		"Astérisque (*)  démontre un champ obligatoire.",
	lbValidError:		"Symbole plus (+) démontre un champ avec une erreur de validation ou des données manquantes.",
	lbVersion:			"Revision No.:",
	lbHealthCanada:		"Santé  Canada",
	lbSalutation:		"Appel",
	lbGivenName: 		"Prénom",
	lbSurname:			"Nom",
	lbPositionTitle:	"Titre du poste",
	lbSignature:		"Signature",
	lbFinalize:			"Finaliser",
	lbModify:			"Modifier",
	lbSignature:		"Signature",
	lbFinalize:			"Finaliser",
	lbModify:			"Modifier",
	lbLockSuccess:		"Le formulaire a été validé et verrouiller contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton Modifier.",
	validation_pass:	"Le formulaire a été validé et verrouiller contre l'édition. Pour pouvoir modifier le formulaire, appuyez sur le bouton Modifier.",
	message_saveAs: 	"Ce formulaire a eu un problème.",
	provinceState:		"Province ou Etat",
	lbFullName:			"Nom complet (prénom, nom)",
	lbResetChange:		"Accepter toutes les modifications",
	lbAddSite:			"Ajouter un lieu d'essai clinique",
	lbAddControlNumber:	"Ajouter le numéro de contrôle",
	lbGuidance:			"&lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"text-align:center;text-decoration:none;letter-spacing:0in\"&gt;&lt;a href=\"http://www.hc-sc.gc.ca/dhp-mps/prodpharma/applic-demande/form/ctsif_guid_ld_dldcf-fra.php\"&gt;Ligne directrice &lt;/a&gt;&lt;/p&gt;&lt;/body&gt;",
}
</script>
                  <script usehref="..\..\fragments\address\addressResource_en.xdp#som($template.form1.#subform.#variables.address_en)"/>
                  <script usehref="..\..\fragments\address\addressResource_fr.xdp#som($template.form1.#subform.#variables.address_fr)"/>
                  <script contentType="application/x-javascript" name="instruct_en">

var content={

	lbInstruct1:		"This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the \"Finalize\" button at the bottom of the form before printing.",
	lbInstruct2:		"Once finalized, the fields in the form becomes \"locked\" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the \"Modify\" button at the bottom of the form."
							+"Following modifications to the desired fields and before printing, please press the \"Finalize\" button again to re-validate entries.", 
	lbInstruct3:		"All fields must be completed, using full name with no abbreviations, prior to submitting this form to the relevant directorate. Please refer to the guide in its entirety when completing this form.", 
	lbInstruct4:		"To submit multiple clinical trial sites for the same trial (protocol), add new sites by clicking the \"Add Site\" button and complete all the required information for the site.", 
 	lbInstruct5:		"Please retain a copy of the completed CTSI form. The form can be used to add new sites and/or make changes to previously submitted sites. "
 						+"\nTo revise and submit a new version of the form please incorporate all previous changes by selecting \"Accept All Changes\".",
}
</script>
                  <script contentType="application/x-javascript" name="instruct_fr">

var content={

		lbInstruct1:		"Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton \"Finaliser\" au bas du formulaire avant de l'imprimer.",
		lbInstruct2:		"Une fois finalisés, les champs seront verrouillés (les champs ne peuvent plus être modifiés). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton \"Modifier\" au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer, cliquez sur le bouton \"Finaliser\" à nouveau afin de valider les entrées.",  
		lbInstruct3:		"Tous les champs doivent être complétés, en utilisant le nom complet sans abréviation, avant de soumettre ce formulaire à la direction appropriée. Veuillez consulter le guide avant de remplir ce formulaire.", 
		lbInstruct4:		"Pour soumettre plusieurs lieux d'essais cliniques pour le même essai (protocole), ajouter de nouveaux lieux en cliquant sur le 'Ajouter un lieu d`essai clinique' bouton et compléter toutes les informations requises pour le lieu.", 
		lbInstruct5:		"Veuillez garder une copie du formulaire ILEC complété. Le formulaire peut être utilisé afin d'ajouter de nouveaux sites et/ou apporter des modifications au(x) site(s) précédemment soumi(s)."
							+"\nPour réviser et soumettre une nouvelle version du formulaire, s'il vous plaît incorporer tous les changements précédents en sélectionnant \"Accepter toutes les modifications\".",
}
</script>
                  <script contentType="application/x-javascript" name="heading_en">

var content={

		lbInstructionsHeading: 		"INSTRUCTIONS",		
		lbApplTitle : 				"CLINICAL TRIAL SITE INFORMATION FORM (CTSI)",	//TODO: update form title	
		lbPart1:					"PART 1 - CLINICAL TRIAL PROTOCOL INFORMATION",
		lbSubAction:				"CLINICAL TRIAL SUBMISSION ACTION REQUIREMENTS",
		lbTrialIDInfo:				"CLINICAL TRIAL IDENTIFICATION INFORMATION",
		lbPart2:					"PART 2 - DRUG PRODUCT AND SPONSOR INFORMATION",
		lbProductInfo:				"A) DRUG PRODUCT INFORMATION",
		lbSponsorInfo:				"B) SPONSOR INFORMATION",
		lbContactPersonHeading:		"CONTACT PERSON FOR SPONSOR",
		lbContactInfo:				"C) CONTACT PERSON INFORMATION",
		lbPart3:					"PART 3 - CLINICAL TRIAL SITE INFORMATION",
		lbCurrClinSiteName:			"CURRENT CLINICAL TRIAL SITE NAME",
		lbPrevClinSiteName:			"PREVIOUS CLINICAL SITE NAME",
		lbCurrClinSiteAddress:		"A) CURRENT CLINICAL TRIAL SITE ADDRESS",
		lbPrevClinSiteAddress:		"PREVIOUS CLINICAL TRIAL SITE ADDRESS",
		lbQualifiedInvestigator:	"B) QUALIFIED INVESTIGATOR",
		lbCurrQIName:				"CURRENT QUALIFIED INVESTIGATOR NAME",
		lbPrevQIName:				"PREVIOUS QUALIFIED INVESTIGATOR NAME",
		lbCurrQIAddress:			"CURRENT QUALIFIED INVESTIGATOR ADDRESS",
		lbPrevQIAddress:			"PREVIOUS QUALIFIED INVESTIGATOR ADDRESS",
		lbRebApproval:				"C) RESEARCH ETHICS BOARD APPROVAL", 
		lbCurrRebAddress:			"CURRENT RESEARCH ETHICS BOARD ADDRESS",
		lbPrevRebAddress:			"PREVIOUS RESEARCH ETHICS BOARD ADDRESS",
		lbCurrRebContact:			"CURRENT RESEARCH ETHICS BOARD CONTACT PERSON",			
		lbPrevRebContact:			"PREVIOUS RESEARCH ETHICS BOARD CONTACT PERSON",	
}
</script>
                  <script contentType="application/x-javascript" name="heading_fr">

var content={

	lbInstructionsHeading: 		"INSTRUCTIONS",	
	lbApplTitle : 				"FORMULAIRE D'INFORMATION SUR LE LIEU D'ESSAI CLINIQUE (ILEC)", //TODO: update form title
	lbPart1:					"PARTIE 1 – INFORMATION SUR LE PROTOCOLE D’ESSAI CLINIQUE",
	lbSubAction:				"MESURES REQUISES POUR LA PRÉSENTATION D'UN ESSAI CLINIQUE",
	lbTrialIDInfo:				"INFORMATION SUR LE PROTOCOLE ET LE CONTRÔLE DE L'ESSAI CLINIQUE",
	lbPart2:					"PARTIE 2 – INFORMATION SUR LE PRODUIT ET PROMOTEUR",
	lbProductInfo:				"A) INFORMATION SUR LE PRODUIT",
	lbSponsorInfo:				"B) INFORMATION SUR LE PROMOTEUR",
	lbContactPersonHeading:		"PERSONNE-RESSOURCE DU PROMOTEUR",
	lbContactInfo:				"C) INFORMATION SUR LA PERSONNE-RESSOURCE",
	lbPart3:					"PARTIE 3 – RENSEIGNEMENTS SUR LE LIEU DE L'ESSAI CLINIQUE",
	lbCurrClinSiteName:			"NOUVEAU NOM DE CE LIEU D`ESSAI CLINIQUE",
	lbPrevClinSiteName:			"ANCIEN NOM DE CE LIEU D`ESSAI CLINIQUE",
	lbCurrClinSiteAddress:		"A) NOUVELLE ADRESSE DE CE LIEU D`ESSAI CLINIQUE",
	lbPrevClinSiteAddress:		"ANCIENNE ADRESSE DE CE LIEU D`ESSAI CLINIQUE",
	lbQualifiedInvestigator:	"B) CHERCHEUR QUALIFIÉ",
	lbCurrQIName:				"NOUVEAU NOM DU CHERCHEUR QUALIFIÉ",
	lbPrevQIName:				"ANCIEN NOM DU CHERCHEUR QUALIFIÉ",
	lbCurrQIAddress:			"NOUVELLE ADRESSE DU CHERCHEUR QUALIFIÉ",
	lbPrevQIAddress:			"ANCIENNNE ADRESSE DU CHERCHEUR QUALIFIÉ",
	lbRebApproval:				"C) APPROBATION DU COMITÉ D'ÉTHIQUE POUR LA RECHERCHE", 
	lbCurrRebAddress:			"NOUVELLE ADRESSE DU COMITÉ D`ÉTHIQUE POUR LA RECHERCHE",
	lbPrevRebAddress:			"ANCIENNE ADRESSE DU COMITÉ D`ÉTHIQUE POUR LA RECHERCHEE",
	lbCurrRebContact:			"NOUVELLE PERSONNE-RESSOURCE DU COMITÉ D`ÉTHIQUE POUR LA RECHERCHE",		
	lbPrevRebContact:			"ANCIENNE PERSONNE-RESSOURCE DU COMITÉ D`ÉTHIQUE POUR LA RECHERCHE",
	
}
</script>
                  <script contentType="application/x-javascript" name="lists_en">

var content={
	subTypeList:[
					["CTA", "Clinical Trial Application (CTA)"],
					["CTAA", "Clinical Trial Application Amendment (CTA-A)"],
				],

		salutationList:[
						["mr", "Mr."],
						["ms", "Ms."],
						["mrs", "Mrs."],
						["dr","Dr."]
					],

	countryListNA:	[
						["CA", "Canada"],
						["US", "United States"],
				],	
				
	amendTypeList:[
						["NEW", "New clinical trial site"],
						["CHNGE", "Changes to this clinical trial site"],
						["SAME", "No changes to this clinical trial site"],
				],				
				
}
</script>
                  <script contentType="application/x-javascript" name="lists_fr">

var content={
	subTypeList:[
					["CTA", "Demande d'essai clinique (DEC)"],
					["CTAA", " Modification à la demande d'essai clinique (MDEC)"],
				],
	
	salutationList:[
						["mr", "M."],
						["ms", "Mlle"],
						["mrs", "Mme"],
						["dr","Dr/Dre"]
					],
					
	countryListNA:	[
						["CA", "Canada"],
						["US", "United States"],
				],	
	amendTypeList:[
						["NEW", "Nouveau lieu d'essai clinique"],
						["CHNGE", "Modifications à ce lieu d`essai clinique"],
						["SAME", "Aucun modifications à ce lieu d`essai clinique"],
				],				

}
</script>
                  <script contentType="application/x-javascript" name="msg_en">

var content={

		error_sponsorZipFormat:		"For Part 2B, sponsor information",	
		error_clinicalTrialSite:	"For clinical trial site",
		error_clinicalSiteAddress:	"current clinical trial site address,",
		error_prevClinicalSiteAddress:	"previous clinical trial site address,",
		error_sponsorSiteAddress:	"For the sponsor address,",
		error_contactAddress:		"For the contact address,",
		error_contactSponsor:		"For the sponsor contact person,",
		error_contact:				"For the clinical trial contact information,",
		error_currQIName:			"current qualified investigator name,",
		error_currQIAddress:		"current qualified investigator address,",
		error_prevQIAddress:		"previous qualified investigator address,",
		error_currREBName:			"current research board contact person,",
		error_prevREBName:			"previous research board contact person,",
		error_currREBAddress:		"current research board address,",
		msg_ctaa:					"Specify both the the original, parent clinical trial control number and the control number for the amendment, if assigned.",
		error_trialDates:			"the commencement date cannot be earlier than the Approval date if not for safety reasons.",
		msg_commenceDate:			"commencement date:",
		msg_prevCommenceDate:		"previous commencement date:",
		msg_approveDate:			"date of approval:",
		msg_prevApproveDate:		"previous date of approval:",
		msg_reasonChange:			"reasons for the change",
		msg_amendReset:				"Are you sure you want to accept all the changes in the form?",
		error_cn_length:			"3.0 Clinical Trial Control Number must be 6 digits in length.",
		error_addtional_cn_length:	"Clinical Trial Control Number must be 6 digits in length.",
		msg_success_amend:			"This form successfully validated and is locked from further editing.\nClinical trial sites with 'no changes' have been hidden from view. Please submit this version to Health Canada."
										+"\n\nIn order to modify the form, press the 'Modify' button at the bottom of the form. This will also make all sites viewable.",
		
}
</script>
                  <script contentType="application/x-javascript" name="msg_fr">
var content={

		error_sponsorZipFormat:		"Pour partie 2B, Information sur le promoteur,",	
		error_clinicalTrialSite:	"Pour le lieu d'essai clinique",
		error_clinicalSiteAddress:	",nouvelle adresse de ce lieu d`essai clinique",
		error_prevClinicalSiteAddress:	"ancienne adresse de ce lieu d`essai clinique,",
		error_sponsorSiteAddress:	"Pour l`adresse du promoteur,",
		error_contactAddress:		"Pour l`adresse de la personne-ressource,",
		error_contactSponsor:		"Pour la personne-ressource du promoteur,",
		error_contact:				"Pour l`information sur la personne-ressource d'essai clinique,",
		error_currQIName:			"nouveau nom du chercheur qualifié,",
		error_currQIAddress:		"nouvelle adresse du chercheur qualifié,",
		error_currREBName:			"nouvelle personne-ressource du comité d`éthique pour la recherche,",
		error_prevREBName:			"ancienne personne-ressource du comité d`éthique pour la recherche,",
		error_currREBAddress:		"nouvelle adresse du comité d`éthique pour la recherche,",
		msg_ctaa:					"Veuillez spécifier à la fois le Numéro du protocole d'essai clinique original, et le Numéro de contrôle de l'essai clinique modifié si assigné.",
		error_trialDates:			"la date de début ne doit pas être antérieure à la date d’approbation.",
		msg_commenceDate:			"date de début",
		msg_prevCommenceDate:		"ancienne date de début:",
		msg_approveDate:			"date d’approbation",
		msg_prevApproveDate:		"ancienne date d'approbation:",
		msg_reasonChange:			"motif(s) de la modification",
		msg_amendReset:				"Confirmez que vous voulez accepter tous les modifications dan le formulaire?",
		error_prevQIAddress:		"ancienne adresse du chercheur qualifié,",
		error_cn_length:			"3.0 Le numéro de contrôle de l’essai clinique doit être de 6 chiffrres.",
		error_addtional_cn_length:	"Le numéro de contrôle de l’essai clinique doit être de 6 chiffrres.",
		msg_success_amend:			"Le formulaire a été validé et verrouillé contre l'édition.\nLes lieux d'essai cliniques avec «aucun modification» ont été masqués. Veuillez soumettre cette version à Santé Canada."
										+"\n\nPour pouvoir modifier le formulaire, appuyez sur le bouton Modifier à la fin de ce formulaire.  Ceci affichera de nouveau les sites qui ont été masqués.",
}
</script>
                  <script contentType="application/x-javascript" name="part3_en">
var content={
	lbClinTrialSite:		"Clinical Trial Site",
	lbForClinSite:			"For clinical trial site",
	lbDeleteSite:			"Delete Clinical Trial Site",
	lbChangeType:			"Type of Change",
	lbReasonText:			"Reasons for the change. Please select one or more of the reasons as appropriate",
	lbDateChange:			"Dates: Change in Commencement Date and  Research Ethics Board (REB) Date of Approval",
	lbSiteNameChange:		"Part 3A: Change in Clinical Trial Site Name",
	lbSiteAddressChange:	"Part 3A: Change in Clinical Trial Site Address",
	lbQINameChange:			"Part 3B: Change in Qualified Investigator (QI) Name",
	lbQIAddressChange:		"Part 3B: Change in Qualified Investigator (QI) Address",
	lbREBNameChange:		"Part 3C: Change in Research Ethics Board (REB) Contact Person",
	lbREBAddressChange:		"Part 3C: Change in Research Ethics Board (REB) Address",
	
	lbCurrSiteName:			"Current Name of the site",
	lbAmendDate:			"Clinical Trial Commencement or Amendment Date (YYYY-MM-DD)",
	lbQUIDecl:				"A Qualified Investigator Undertaking (QIU) form must be completed by the Qualified Investigator responsible for the conduct of the clinical trial at the site specified above. The completed undertaking must be retained for a period of 25 years.",
	lbREBDecl:				"A Research Ethics Board Attestation (REBA) form must be completed by the Research Ethics Board that reviewed and approved the protocol and informed consent form for the clinical trial at the site specified above. The completed attestation must be retained for a period of 25 years.",
	lbApprovalDate:			"Date of Approval (YYYY-MM-DD)",
	lbREBName:				"Name of Research Ethics Board, including applicable affiliations",
	
	lbPrevSiteName:			"Previous Name of the Site",
	lbPrevApprovalDate:		"Previous Approval Date (YYYY-MM-DD)",
	lbDateSafety:			"Is the Commencement date earlier than the REB Approval date for safety reasons?",
	lbSupplEnclose:			"Supplementary Safety Document Enclosed",
	lbMedDesign:			"Medical Designation",
	lbQIAddressSameAs:		"Qualified Investigator Address is the same as the Clinical Trial Site",
	lbPrevCommenceDate:		"Previous Commencement Date (YYYY-MM-DD)",
}
</script>
                  <script contentType="application/x-javascript" name="part3_fr">
var content={
	lbClinTrialSite:		"Lieu d'essai clinique",
	lbForClinSite:			"pour le lieu d'essai clinique",
	lbDeleteSite:			"Supprimer lieu d'essai clinique",
	lbChangeType:			"Type de modification,",
	lbReasonText:			"Motifs de la modification:S'il vous plaît sélectionner un ou plusieurs des motifs, le cas échéant.",
	lbDateChange:			"Dates: Modification de la date de début et de la date d'approbation du Comité d'éthique de la recherche (CER)",
	lbSiteNameChange:		"Partie 3A: Modification du nom du lieu de l'essai clinique",
	lbSiteAddressChange:	"Partie 3A: Modification de l'adresse du lieu de l'essai clinique",
	lbQINameChange:			"Partie 3B: Modification du nom du chercheur qualifié (CQ)",
	lbQIAddressChange:		"Partie 3B: Modification de l'adresse du chercheur qualifié (CQ)",
	lbREBNameChange:		"Partie 3C: Modification de la personne-ressource du Comité d’éthique de la recherche (CER)",
	lbREBAddressChange:		"Partie 3C: Modification de l'adresse du Comité d’éthique de la recherche (CER)",

	lbCurrSiteName:			"Nom actuel du lieu",
	lbAmendDate:			"Date de début ou de modification de l'essai clinique au format AAAA-MM-JJ",
	lbQUIDecl:				"Le chercheur qualifié chargé de mener l'essai clinique au lieu indiqué ci-dessus doit remplir un formulaire d'engagement du chercheur qualifié (EQI). Ce formulaire doit être conservé pendant une période de 25 ans.",
	lbREBDecl:				"Le Comité d'éthique de la recherche qui a évalué et approuvé le protocole et qui a rempli le formulaire de consentement pour l'essai clinique au lieu susmentionné doit remplir un formulaire d'attestation du comité d'éthique pour la recherche. Cette attestation remplie doit être conservée pendant une période de 25 ans.",
	lbApprovalDate:			"Date d'approbation au format AAAA-MM-J",
	lbREBName:				"Nom du Comité d'éthique de la recherche, y compris les affiliations applicables",
	lbPrevSiteName:			"Ancien nom de ce lieu d`essai clinique",
	lbPrevApprovalDate:		"Ancienne date d’approbation",
	lbDateSafety:			"Est-ce que la date de Début est avant la date d'Approbation CER pour des raisons de sécurité?",
	lbSupplEnclose:			"Documents supplémentaires relatifs à la sécurité ci-joints",
	lbMedDesign:			"Désignation médicale",
	lbQIAddressSameAs:		"L'adresse du chercheur qualifié est la même que celle du lieu clinique d'essai",
	lbPrevCommenceDate:		"Précédente date de début (AAAA-MM-JJ)",
}
</script>
                  <script contentType="application/x-javascript" name="part12_en">

var content={
	lbSubType:				"Type of Submission for this Protocol or Trial",
	lbProtocolTitle:		"Clinical Trial Protocol Title",
	lbProtocolNum:			"Clinical Trial Protocol Number",
	lbControlNumber:		"Clinical Trial Control Number (6 digits)",
	lbControlNumberAssign:	"Clinical Trial Control Number, if assigned (6 digits)",
	lbRegFileNum:			"Health Canada's Central Registry (CR) File Number, if assigned",
	lbDeleteControlNumber:	"Delete Control Number",
	lbBrandName:			"Brand Name",
	lbCommonName:			"Proper, Common or Non-Proprietary Name",
	lbContactSameSponsor:	"The contact for this Clinical Trial is the same as the Sponsor",
	lbCompanyOrg:			"Company or Organization Name",
	lbNewAppl:				"This is the first time this CTSI form is submitted to Health Canada for this clinical trial protocol.",
	lbAmendAppl:			"This CTSI form has been previously submitted to Health Canada for this clinical trial protocol. With this form I am adding additional sites or amending existing sites.",
	lbSponsor:				"Name of Sponsor. Full Name, no abbreviations. (first name, last name)",
	lbPart3Notice:			"Please proceed to Part 3 of this form to update the clinical trial site information.",	
}
</script>
                  <script contentType="application/x-javascript" name="part12_fr">
var content={
		
		lbSubType:				"Type de présentation pour ce protocol ou essai",
		lbProtocolTitle:		"Titre du protocole d'essai clinique",
		lbProtocolNum:			"Numéro du protocole d'essai clinique",
		lbControlNumber:		"Numéro de contrôle de l'essai clinique (6 chiffres)",
		lbControlNumberAssign:	"Numéro de contrôle de l'essai clinique, si assigné (6 chiffres)",
		lbDeleteControlNumber:	"Supprimer Numéro de contrôle",
		lbRegFileNum:			"Numéro de dossier du Registre central (RC) de Santé Canada, si assigné",
		lbBrandName:			"Nom commercial",
		lbCommonName:			"Nom propre, nom usuel ou dénomination commune",
		lbContactSameSponsor:	"La personne-ressource pour cet essai clinique est la même que celle du promoteur",
		lbCompanyOrg:			"Nom de la société",
		lbNewAppl:				"Ceci est la première fois qu'un formulaire ILEC est soumis à Santé Canada pour ce protocole d'essai clinique.",
		lbAmendAppl:			"Un formulaire ILEC a déjà été soumis à Santé Canada pour ce protocole d'essai clinique. Avec ce formulaire, je peux ajouter des lieux supplémentaires ou apporter des modifications aux lieux existants.",
		lbSponsor:				"Nom du promoteur. Nom complet. Ne pas utiliser d'abréviations. (prénom, nom)",
		lbPart3Notice:			"Veuillez procéder à la Partie 3 du présent formulaire afin de mettre à jour l'information sur le lieu d'essai clinique. ",	
		
}
</script>
                  <script contentType="application/x-javascript" name="part3TT_en">

var content={

	ttDatesReason:			"the reason for the change is Dates: Change in Commencement Date and  Research Ethics Board (REB) Date of Approval. Selection 1 of 7, at least one selection is required.",
	ttPart3ANameReason:		"the reason for the change is Part 3A: Change in Clinical Trial Site Name. Selection 2 of 7, at least one selection is required.",
	ttPart3AAddressReason:	"the reason for the change is Part 3A: Change in Clinical Trial Site Address. Selection 3 of 7, at least one selection is required.",
	ttPart3BNameReason:		"the reason for the change is Part 3B: Change in Qualified Investigator (QI) Name. Selection 4 of 7, at least one selection is required.",
	ttPart3BAddressReason:	"the reason for the change is Part 3B: Change in Qualified Investigator (QI) Address. Selection 5 of 7, at least one selection is required.",
	ttPart3CNameReason:		"the reason for the change is Change in Research Ethics Board (REB) Contact Person. Selection 6 of 7, at least one selection is required.",
	ttPart3CAddressReason:	"the reason for the change is Part 3C: Change in Research Ethics Board (REB) Address. Selection 7 of 7, at least one selection is required.",
	
}
</script>
                  <script contentType="application/x-javascript" name="part3TT_fr">

var content={
	ttDatesReason:				"le motif de la modification est:  Dates: Modification de la date de début et de la date d'approbation du Comité d'éthique de la recherche (CER). Option 1 sur 7, au moins une option doit être sélectionnée.",
	ttPart3ANameReason:			"le motif de la modification est:  Partie 3A: Modification du nom du lieu de l'essai clinique. Option 2 sur 7, au moins une option doit être sélectionnée.",
	ttPart3AAddressReason:		"le motif de la modification est:  Partie 3A: Modification de l'adresse du lieu de l'essai clinique. Option 3 sur 7, au moins une option doit être sélectionnée.",
	ttPart3BNameReason:			"le motif de la modification est: Partie 3B: Modification du nom du chercheur qualifié (CQ). Option 4 sur 7, au moins une option doit être sélectionnée.",
	ttPart3BAddressReason:		"le motif de la modification est:  Partie 3B: Modification de l'adresse du chercheur qualifié (CQ). Option 5 sur 7, au moins une option doit être sélectionnée.",
	ttPart3CNameReason:			"le motif de la modification est:  Partie 3C: Modification de la personne-ressource du Comité d’éthique de la recherche (CER). Option 6 sur 7, au moins une option doit être sélectionnée.",
	ttPart3CAddressReason:		"le motif de la modification est:  Partie 3C: Modification de l'adresse du Comité d’éthique de la recherche (CER). Option 7 sur 7, au moins une option doit être sélectionnée.",


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="util" w="100mm">
               <variables>
                  <script usehref="..\..\fragments\util\General.xdp#som($template.form1.#subform.#variables.General)"/>
                  <script usehref="..\..\fragments\Accessibility.xdp#som($template.form1.#subform.#variables.Accessibility)"/>
                  <script usehref="..\..\fragments\util\NumberFormat.xdp#som($template.form1.#subform.#variables.NumberFormat)"/>
                  <script usehref="..\..\fragments\util\AddressUtil.xdp#som($template.form1.#subform.#variables.AddressUtil)"/>
                  <script contentType="application/x-javascript" name="ToolTipUtil">var cLog = script.core.util.Log;
var cControllerUtil = script.core.util.ControllerUtil;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil; 
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cTypeChecker=script.core.util.TypeChecker;
var cUiUtil=script.core.util.UiUtil;
var cStringUtil=script.core.util.StringUtil;
var cException = script.core.util.Exception;
var cConfigurationManager = script.core.util.ConfigurationManager;


var LABEL_START=cConfigurationManager.get("LabelStart");

function updateAllFieldTooltipsInclHidden(startNode, textToAdd,position){

	_walkFields(startNode, updateToolTipIndicator,textToAdd,position);

}//end fn


/*
* Appends a tooltip with provided text. Assumes the component can add a tooltip
*@param nodeInstance- the adobe node instance to update
*@param textToAdd- a string containing the text to append to a tooltip
*
*/
function  updateToolTipIndicator(nodeInstance,textToAdd,position){

	//get the form node
	var fieldFormNode=cFormNodeManager.getFormNodeForSom(nodeInstance.somExpression);
	if(fieldFormNode){
		var fieldNumber=fieldFormNode.getFieldNumber();
		var labelText=fieldFormNode.getLabel();
		var toolTip=fieldFormNode.getToolTip();
		if(toolTip) labelText=toolTip; //make the tooltip have precedence
		var textTT="";
		if(fieldNumber){
			 textTT=fieldNumber+". "+labelText;
		}else{
			 textTT=labelText;
		}
		
		if(position===LABEL_START){
			textTT=textToAdd+" "+textTT;	
		}else{
		
			textTT+=" "+textToAdd;
		}
		
		cUiUtil.setToolTip(nodeInstance,textTT);
	}
}


/*Walks the tree of form nodes and calls in the passed in function. Applies to fields (even hidden ones)
*@param oNode - an adobe Node to process
*@param func- a pointer to the function to call
*@param param1- an optional parameter to pass to the function
*
*/
function _walkFields(oNode, func, param1,param2)
{	
	var count = 0;	
	//if(oNode.isPropertySpecified("presence")) return count;
	
	if ((oNode.className == "exclGroup" 
	|| oNode.className == "subform"  
	|| oNode.className == "subformSet" 
	|| oNode.className == "area"))
	{
		
		for (var i = 0; i &lt; oNode.nodes.length; i++)
		{
			var oChildNode = oNode.nodes.item(i);
			count += _walkFields(oChildNode, func, param1,param2);
		}
	}
	else if (oNode.className == "field")
	{
		if(func(oNode, param1,param2))
		{
			count++;
		}
	}
	
	return count;
}          

</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <bind match="none"/>
            <?templateDesigner expand 1?></subform>
         <?templateDesigner expand 1?></subform>
      <proto/>
      <desc>
         <text name="version"> 2.00</text>
         <text name="title">FORM TITLE</text>
         <text name="creator">Health Canada</text>
         <text name="created">2015-07-21</text>
         <text name="department">Health Canada</text>
         <text name="issued">2015</text>
      </desc>
      <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
      <event activity="initialize" name="event__initialize">
         <script contentType="application/x-javascript">
var cFormHandler=script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cSystem = script.core.System;


try{
		// set up event object
		var actionName = cFormHandler.INITIALIZE_FORM_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with  form initialize::initialize", exception);
}



</script>
      </event>
      <event activity="prePrint" ref="$host" name="event__prePrint">
         <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName =  cFormHandler.HIDE_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with hide instructions ::preprint", exception);
}
</script>
      </event>
      <?templateDesigner expand 0?>
      <?templateDesigner Hyphenation excludeInitialCap:1, excludeAllCaps:1, wordCharCnt:7, remainCharCnt:3, pushCharCnt:3?>
      <?renderCache.subset "Myriad Pro" 0 0 ISO-8859-1 4 284 71 000100030009000A000B000C000D000E000F0010001100120013001400150016001700180019001A001B001C002000220023002400250026002700280029002A002D002E002F00300031003200330034003500360037003A003B003D00420043004400450046004700480049004A004C004D004E004F005000510053005400550056005700580059005A005B0068 "()*+,-./0123456789:;?ABCDEFGHILMNOPQRSTUVYZ\abcdefghiklmnoprstuvwxyz'?>
      <?renderCache.subset "Myriad Pro" 1 0 ISO-8859-1 4 196 49 00010009000A000D000E000F00120013001400220023002400250026002700280029002A002D002E002F0030003100320033003400350036003700420043004400450046004700480049004A004D004E004F0050005100530054005500560057005A (),-.123ABCDEFGHILMNOPQRSTUVabcdefghilmnoprstuvy?></subform>
   <?templateDesigner DefaultPreviewDynamic 1?>
   <?originalXFAVersion http://www.xfa.org/schema/xfa-template/2.8/?>
   <?templateDesigner Grid show:0, snap:0, units:0, color:ff8080, origin:(0,0), interval:(125000,125000), objsnap:0, guidesnap:0, pagecentersnap:827642484?>
   <?layout containedExclGroup 1?>
   <?templateDesigner DefaultLanguage JavaScript?>
   <?templateDesigner DefaultRunAt client?>
   <?acrobat JavaScript strictScoping?>
   <?PDFPrintOptions embedViewerPrefs 0?>
   <?PDFPrintOptions embedPrintOnFormOpen 0?>
   <?PDFPrintOptions scalingPrefs 0?>
   <?PDFPrintOptions enforceScalingPrefs 0?>
   <?PDFPrintOptions paperSource 0?>
   <?PDFPrintOptions duplexMode 0?>
   <?templateDesigner DefaultPreviewType interactive?>
   <?templateDesigner DefaultPreviewPagination simplex?>
   <?templateDesigner XDPPreviewFormat 20?>
   <?templateDesigner DefaultCaptionFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner DefaultValueFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner ValidationMessaging noMessages?>
   <?templateDesigner FormTargetVersion 30?>
   <?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?>
   <?templateDesigner Zoom 114?>
   <?templateDesigner SaveTaggedPDF 0?>
   <?templateDesigner SavePDFWithEmbeddedFonts 0?>
   <?templateDesigner SavePDFWithLog 0?></template>
<config xmlns="http://www.xfa.org/schema/xci/3.0/">
   <agent name="designer">
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo/>
      </pdf>
   </agent>
   <present>
      <!--  [0..n]  -->
      <pdf>
         <!--  [0..n]  -->
         <tagged>0</tagged>
         <fontInfo>
            <embed>0</embed>
         </fontInfo>
         <version>1.7</version>
         <adobeExtensionLevel>5</adobeExtensionLevel>
      </pdf>
      <common>
         <data>
            <xsl>
               <uri/>
            </xsl>
            <outputXSL>
               <uri/>
            </outputXSL>
         </data>
      </common>
      <script>
         <runScripts>server</runScripts>
      </script>
      <cache>
         <macroCache/>
      </cache>
      <xdp>
         <packets>*</packets>
      </xdp>
   </present>
   <psMap>
      <font typeface="Calibri" psName="Calibri" weight="normal" posture="normal"/>
   </psMap>
   <acrobat>
      <common>
         <validationMessaging>noMessages</validationMessaging>
      </common>
   </acrobat>
</config>
<localeSet xmlns="http://www.xfa.org/schema/xfa-locale-set/2.7/">
   <locale name="en_CA" desc="English (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">D-MMM-YY</datePattern>
         <datePattern name="short">DD/MM/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="fr_CA" desc="French (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>janvier</month>
            <month>février</month>
            <month>mars</month>
            <month>avril</month>
            <month>mai</month>
            <month>juin</month>
            <month>juillet</month>
            <month>août</month>
            <month>septembre</month>
            <month>octobre</month>
            <month>novembre</month>
            <month>décembre</month>
         </monthNames>
         <monthNames abbr="1">
            <month>janv.</month>
            <month>févr.</month>
            <month>mars</month>
            <month>avr.</month>
            <month>mai</month>
            <month>juin</month>
            <month>juil.</month>
            <month>août</month>
            <month>sept.</month>
            <month>oct.</month>
            <month>nov.</month>
            <month>déc.</month>
         </monthNames>
         <dayNames>
            <day>dimanche</day>
            <day>lundi</day>
            <day>mardi</day>
            <day>mercredi</day>
            <day>jeudi</day>
            <day>vendredi</day>
            <day>samedi</day>
         </dayNames>
         <dayNames abbr="1">
            <day>dim.</day>
            <day>lun.</day>
            <day>mar.</day>
            <day>mer.</day>
            <day>jeu.</day>
            <day>ven.</day>
            <day>sam.</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>av. J.-C.</era>
            <era>ap. J.-C.</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE D MMMM YYYY</datePattern>
         <datePattern name="long">D MMMM YYYY</datePattern>
         <datePattern name="med">YY-MM-DD</datePattern>
         <datePattern name="short">YY-MM-DD</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">HH' h 'MM' min 'SS' s 'Z</timePattern>
         <timePattern name="long">HH:MM:SS Z</timePattern>
         <timePattern name="med">HH:MM:SS</timePattern>
         <timePattern name="short">HH:MM</timePattern>
      </timePatterns>
      <dateTimeSymbols>GaMjkHmsSEDFwWxhKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">z,zz9.99 $|(z,zz9.99$)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">,</numberSymbol>
         <numberSymbol name="grouping"> </numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">,</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
</localeSet>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
   <xfa:data xfa:dataNode="dataGroup"/>
   <dd:dataDescription xmlns:dd="http://ns.adobe.com/data-description/" dd:name="CTSI">
      <CTSI>
         <form_lang/>
         <form_version/>
         <submission_info>
            <application_type/>
            <sub_type/>
            <protocol_title/>
            <protocol_number/>
            <registry_number/>
            <control_number/>
            <brand_name/>
            <common_name/>
            <additional_control_numbers dd:minOccur="0" dd:maxOccur="-1">
               <control_number/>
            </additional_control_numbers>
            <sponsor_name/>
            <sponsor_address>
               <street_address/>
               <city/>
               <province_lov/>
               <province_text/>
               <country/>
               <postal_code/>
            </sponsor_address>
            <sponsor_contact>
               <full_name/>
               <job_title/>
               <language_correspondance/>
               <phone_num/>
               <phone_ext/>
               <fax_num/>
               <email/>
            </sponsor_contact>
            <trial_contact_same_as_sponsor/>
            <trial_contact_info dd:minOccur="0">
               <trial_contact_company_name/>
               <trial_contact_address>
                  <street_address/>
                  <city/>
                  <province_lov/>
                  <province_text/>
                  <country/>
                  <postal_code/>
               </trial_contact_address>
               <trial_contact_person>
                  <full_name/>
                  <job_title/>
                  <language_correspondance/>
                  <phone_num/>
                  <phone_ext/>
                  <fax_num/>
                  <email/>
               </trial_contact_person>
            </trial_contact_info>
         </submission_info>
         <trial_site_info dd:maxOccur="-1">
            <change_type/>
            <change_type_info>
               <change_dates/>
               <change_site_name/>
               <change_site_address/>
               <change_qi_person/>
               <change_qi_address/>
               <change_reb_person/>
               <change_reb_address/>
            </change_type_info>
            <curr_site_name/>
            <prev_site_name dd:minOccur="0" dd:nullType="exclude"/>
            <curr_site_address>
               <street_address/>
               <city/>
               <province_lov/>
               <country/>
               <postal_code/>
            </curr_site_address>
            <prev_site_address dd:minOccur="0">
               <street_address/>
               <city/>
               <province_lov/>
               <country/>
               <postal_code/>
            </prev_site_address>
            <curr_commence_date/>
            <prev_commence_date dd:minOccur="0" dd:nullType="exclude"/>
            <curr_qi_person>
               <qi_person>
                  <full_name/>
                  <job_title/>
                  <language_correspondance/>
                  <phone_num/>
                  <phone_ext/>
                  <fax_num/>
                  <email/>
               </qi_person>
               <qi_med_designation/>
            </curr_qi_person>
            <prev_qi_person dd:minOccur="0">
               <qi_person>
                  <full_name/>
                  <job_title/>
                  <language_correspondance/>
                  <phone_num/>
                  <phone_ext/>
                  <fax_num/>
                  <email/>
               </qi_person>
               <qi_med_designation/>
            </prev_qi_person>
            <curr_qi_address>
               <qi_address_same_as_site/>
               <qi_address_details dd:minOccur="0">
                  <street_address/>
                  <city/>
                  <province_lov/>
                  <country/>
                  <postal_code/>
               </qi_address_details>
            </curr_qi_address>
            <prev_qi_address dd:minOccur="0">
               <street_address/>
               <city/>
               <province_lov/>
               <country/>
               <postal_code/>
            </prev_qi_address>
            <reb_name/>
            <curr_approve_date/>
            <prev_approve_date dd:minOccur="0" dd:nullType="exclude"/>
            <safety_reason_info dd:minOccur="0">
               <is_safety_reason/>
               <is_safety_doc_enclosed/>
            </safety_reason_info>
            <curr_reb_person>
               <full_name/>
               <job_title/>
               <language_correspondance/>
               <phone_num/>
               <phone_ext/>
               <fax_num/>
               <email/>
            </curr_reb_person>
            <prev_reb_person dd:minOccur="0">
               <full_name/>
               <job_title/>
               <language_correspondance/>
               <phone_num/>
               <phone_ext/>
               <fax_num/>
               <email/>
            </prev_reb_person>
            <curr_reb_address>
               <street_address/>
               <city/>
               <province_lov/>
               <country/>
               <postal_code/>
            </curr_reb_address>
            <prev_reb_address dd:minOccur="0">
               <street_address/>
               <city/>
               <province_lov/>
               <country/>
               <postal_code/>
            </prev_reb_address>
         </trial_site_info>
      </CTSI>
   </dd:dataDescription>
</xfa:datasets>
<connectionSet xmlns="http://www.xfa.org/schema/xfa-connection-set/2.8/">
   <xsdConnection name="DataConnection" dataDescription="CTSI">
      <uri>..\..\xml_schema\5_1_clinical_trial_sites.xsd</uri>
      <rootElement>CTSI</rootElement>
      <?templateDesigner fileDigest shaHash="5Pr9PT/S5CHu4ayvYKdO74MJyec="?></xsdConnection>
</connectionSet>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFASchemaXSD">
   <hpfb:include schemaLocation="#XFAXSDReference"/>
   <hpfb:include schemaLocation="#XFAXSDReference1"/>
   <hpfb:include schemaLocation="#XFAXSDReference2"/>
   <!-- ****************************** -->
   <!-- ELEMENT DECLARATIONS -->
   <!-- ****************************** -->
   <hpfb:element name="CTSI" type="ctsi_content"/>
   <hpfb:element name="form_lang"/>
   <hpfb:element name="form_version"/>
   <!-- Part 1 -->
   <hpfb:element name="submission_info" type="submission_content"/>
   <hpfb:element name="application_type"/>
   <!-- CTA or CTAA -->
   <hpfb:element name="sub_type"/>
   <hpfb:element name="protocol_title"/>
   <hpfb:element name="protocol_number"/>
   <hpfb:element name="control_number"/>
   <hpfb:element name="additional_control_numbers" type="control_number_content"/>
   <hpfb:element name="registry_number"/>
   <!-- Part 2 -->
   <hpfb:element name="brand_name"/>
   <hpfb:element name="common_name"/>
   <!-- Sponsor Information-->
   <hpfb:element name="sponsor_name"/>
   <hpfb:element name="sponsor_address" type="international_address_content"/>
   <hpfb:element name="sponsor_contact" type="contact_full_name_content"/>
   <hpfb:element name="trial_contact_info" type="trial_contact_content"/>
   <hpfb:element name="trial_contact_company_name"/>
   <hpfb:element name="trial_contact_address" type="international_address_content"/>
   <hpfb:element name="trial_contact_person" type="contact_full_name_content"/>
   <hpfb:element name="trial_contact_same_as_sponsor"/>
   <!-- Part 3 -->
   <!--clinical trial site content-->
   <hpfb:element name="trial_site_info" type="trial_site_content"/>
   <hpfb:element name="change_type"/>
   <hpfb:element name="change_type_info" type="change_type_content"/>
   <hpfb:element name="change_dates"/>
   <hpfb:element name="change_site_name"/>
   <hpfb:element name="change_site_address"/>
   <hpfb:element name="change_qi_person"/>
   <hpfb:element name="change_qi_address"/>
   <hpfb:element name="change_reb_person"/>
   <hpfb:element name="change_reb_address"/>
   <hpfb:element name="qi_address_details" type="can_us_address_content"/>
   <hpfb:element name="qi_address_same_as_site"/>
   <hpfb:element name="qi_person" type="contact_full_name_content"/>
   <hpfb:element name="qi_med_designation"/>
   <hpfb:element name="curr_site_address" type="can_us_address_content"/>
   <hpfb:element name="prev_site_address" type="can_us_address_content"/>
   <hpfb:element name="curr_site_name"/>
   <hpfb:element name="prev_site_name"/>
   <!-- date info declarations-->
   <hpfb:element name="curr_commence_date" type="yyyymmdd_date_content"/>
   <hpfb:element name="prev_commence_date" type="yyyymmdd_date_content"/>
   <hpfb:element name="curr_approve_date" type="yyyymmdd_date_content"/>
   <hpfb:element name="prev_approve_date" type="yyyymmdd_date_content"/>
   <hpfb:element name="safety_reason_info" type="safety_reason_content"/>
   <hpfb:element name="is_safety_reason"/>
   <hpfb:element name="is_safety_doc_enclosed"/>
   <hpfb:element name="curr_qi_person" type="qi_person_content"/>
   <hpfb:element name="prev_qi_person" type="qi_person_content"/>
   <hpfb:element name="curr_qi_address" type="qi_address_content"/>
   <hpfb:element name="prev_qi_address" type="can_us_address_content"/>
   <hpfb:element name="reb_name"/>
   <hpfb:element name="curr_reb_person" type="contact_full_name_content"/>
   <hpfb:element name="prev_reb_person" type="contact_full_name_content"/>
   <hpfb:element name="curr_reb_address" type="can_us_address_content"/>
   <hpfb:element name="prev_reb_address" type="can_us_address_content"/>
   <!--Main form structure-->
   <hpfb:complexType name="ctsi_content">
      <hpfb:sequence>
         <hpfb:element ref="form_lang"/>
         <hpfb:element ref="form_version"/>
         <!-- Part 1 and 2 -->
         <hpfb:element ref="submission_info"/>
         <!-- Part 3-->
         <hpfb:element ref="trial_site_info" minOccurs="1" maxOccurs="unbounded"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="trial_contact_content">
      <hpfb:sequence>
         <hpfb:element name="trial_contact_company_name"/>
         <hpfb:element name="trial_contact_address" type="international_address_content"/>
         <hpfb:element name="trial_contact_person" type="contact_full_name_content"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <!--contains Part 1 and part 2 -->
   <hpfb:complexType name="submission_content">
      <hpfb:sequence>
         <hpfb:element ref="application_type"/>
         <!-- CTA or CTAA -->
         <hpfb:element ref="sub_type"/>
         <hpfb:element ref="protocol_title"/>
         <hpfb:element ref="protocol_number"/>
         <hpfb:element ref="registry_number"/>
         <hpfb:element ref="control_number"/>
         <hpfb:element ref="brand_name"/>
         <hpfb:element ref="common_name"/>
         <hpfb:element ref="additional_control_numbers" minOccurs="0" maxOccurs="unbounded"/>
         <hpfb:element ref="submission_info"/>
         <hpfb:element ref="sponsor_name"/>
         <hpfb:element ref="sponsor_address"/>
         <hpfb:element ref="sponsor_contact"/>
         <hpfb:element ref="trial_contact_same_as_sponsor"/>
         <hpfb:element ref="trial_contact_info" minOccurs="0" maxOccurs="1"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <!--control number content, for additional control numbers -->
   <hpfb:complexType name="control_number_content">
      <hpfb:sequence>
         <hpfb:element ref="control_number"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <!-- all the possible change types for a clinical trial site-->
   <hpfb:complexType name="change_type_content">
      <hpfb:sequence>
         <hpfb:element ref="change_dates"/>
         <hpfb:element ref="change_site_name"/>
         <hpfb:element ref="change_site_address"/>
         <hpfb:element ref="change_qi_person"/>
         <hpfb:element ref="change_qi_address"/>
         <hpfb:element ref="change_reb_person"/>
         <hpfb:element ref="change_reb_address"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <!-- define the clinical trial site content-->
   <hpfb:complexType name="trial_site_content">
      <hpfb:sequence>
         <hpfb:element ref="change_type"/>
         <hpfb:element ref="change_type_info"/>
         <hpfb:element ref="curr_site_name"/>
         <hpfb:element ref="prev_site_name" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="curr_site_address"/>
         <hpfb:element ref="prev_site_address" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="curr_commence_date"/>
         <hpfb:element ref="prev_commence_date" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="curr_qi_person"/>
         <hpfb:element ref="prev_qi_person" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="curr_qi_address"/>
         <hpfb:element ref="prev_qi_address" minOccurs="0" maxOccurs="1"/>
         <hpfb:element name="reb_name"/>
         <hpfb:element ref="curr_approve_date"/>
         <hpfb:element ref="prev_approve_date" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="safety_reason_info" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="curr_reb_person"/>
         <hpfb:element ref="prev_reb_person" minOccurs="0" maxOccurs="1"/>
         <hpfb:element ref="curr_reb_address"/>
         <hpfb:element ref="prev_reb_address" minOccurs="0" maxOccurs="1"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="qi_person_content">
      <hpfb:sequence>
         <hpfb:element ref="qi_person"/>
         <hpfb:element ref="qi_med_designation"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="qi_address_content">
      <hpfb:sequence>
         <hpfb:element ref="qi_address_same_as_site"/>
         <hpfb:element ref="qi_address_details" minOccurs="0" maxOccurs="1"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="safety_reason_content">
      <hpfb:sequence>
         <hpfb:element name="is_safety_reason"/>
         <hpfb:element name="is_safety_doc_enclosed"/>
      </hpfb:sequence>
   </hpfb:complexType>
</hpfb:schema>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFAXSDReference">
   <!-- ****************************** -->
   <!-- ELEMENT DECLARATIONS -->
   <!-- ****************************** -->
   <hpfb:element name="street_address"/>
   <hpfb:element name="city"/>
   <hpfb:element name="province_lov"/>
   <hpfb:element name="province_text"/>
   <hpfb:element name="country"/>
   <hpfb:element name="postal_code"/>
   <hpfb:element name="canada_us_address" type="can_us_address_content"/>
   <!-- ****************************** -->
   <!-- ELEMENT TYPE DECLARATIONS -->
   <!-- ****************************** -->
   <!-- main xml structure-->
   <hpfb:complexType name="international_address_content">
      <hpfb:sequence>
         <hpfb:element ref="street_address"/>
         <hpfb:element ref="city"/>
         <hpfb:element ref="province_lov"/>
         <hpfb:element ref="province_text"/>
         <hpfb:element ref="country"/>
         <hpfb:element ref="postal_code"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="can_us_address_content">
      <hpfb:sequence>
         <hpfb:element ref="street_address"/>
         <hpfb:element ref="city"/>
         <hpfb:element ref="province_lov"/>
         <hpfb:element ref="country"/>
         <hpfb:element ref="postal_code"/>
      </hpfb:sequence>
   </hpfb:complexType>
</hpfb:schema>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFAXSDReference1">
   <!-- ****************************** -->
   <!-- ELEMENT DECLARATIONS -->
   <!-- ****************************** -->
   <hpfb:element name="salutation"/>
   <hpfb:element name="given_name"/>
   <hpfb:element name="initials"/>
   <hpfb:element name="surname"/>
   <hpfb:element name="job_title"/>
   <hpfb:element name="language_correspondance"/>
   <hpfb:element name="phone_num"/>
   <hpfb:element name="phone_ext"/>
   <hpfb:element name="fax_num"/>
   <hpfb:element name="email"/>
   <hpfb:element name="full_name"/>
   <!-- ****************************** -->
   <!-- ELEMENT TYPE DECLARATIONS -->
   <!-- ****************************** -->
   <!-- main xml structure-->
   <hpfb:complexType name="contact_content">
      <hpfb:sequence>
         <hpfb:element ref="salutation"/>
         <hpfb:element ref="given_name"/>
         <hpfb:element ref="initials"/>
         <hpfb:element ref="surname"/>
         <hpfb:element ref="job_title"/>
         <hpfb:element ref="language_correspondance"/>
         <hpfb:element ref="phone_num"/>
         <hpfb:element ref="phone_ext"/>
         <hpfb:element ref="fax_num"/>
         <hpfb:element ref="email"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="contact_nolang_content">
      <hpfb:sequence>
         <hpfb:element ref="salutation"/>
         <hpfb:element ref="given_name"/>
         <hpfb:element ref="initials"/>
         <hpfb:element ref="surname"/>
         <hpfb:element ref="job_title"/>
         <hpfb:element ref="phone_num"/>
         <hpfb:element ref="phone_ext"/>
         <hpfb:element ref="fax_num"/>
         <hpfb:element ref="email"/>
      </hpfb:sequence>
   </hpfb:complexType>
   <hpfb:complexType name="contact_full_name_content">
      <hpfb:sequence>
         <hpfb:element ref="full_name"/>
         <hpfb:element ref="job_title"/>
         <hpfb:element ref="language_correspondance"/>
         <hpfb:element ref="phone_num"/>
         <hpfb:element ref="phone_ext"/>
         <hpfb:element ref="fax_num"/>
         <hpfb:element ref="email"/>
      </hpfb:sequence>
   </hpfb:complexType>
</hpfb:schema>
<hpfb:schema xmlns:hpfb="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" id="XFAXSDReference2">
   <hpfb:simpleType name="yyyymmdd_date_content">
      <hpfb:restriction base="hpfb:date">
         <hpfb:pattern value="[0-9]{4}-[0-9]{2}-[0-9]{2}"/>
      </hpfb:restriction>
   </hpfb:simpleType>
</hpfb:schema>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2011/06/07-10:39:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about="">
         <xmp:MetadataDate>2016-05-20T18:10:12Z</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe LiveCycle Designer ES 10.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about="">
         <pdf:Producer>Adobe LiveCycle Designer ES 10.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" rdf:about="">
         <xmpMM:DocumentID>uuid:08c521b7-78c5-4c5b-8c05-4fb326d35c67</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:f9c0250e-7b14-42ab-a171-a0d945e87fb5</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about="">
         <dc:format>application/pdf</dc:format>
         <dc:date>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>2015-07-21</rdf:value>
                  <dc:element-refinement>dc:created</dc:element-refinement>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>2015</rdf:value>
                  <dc:element-refinement>dc:issued</dc:element-refinement>
               </rdf:li>
            </rdf:Seq>
         </dc:date>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Health Canada</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">FORM TITLE</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description xmlns:desc="http://ns.adobe.com/xfa/promoted-desc/" rdf:about="">
         <desc:version rdf:parseType="Resource">
            <rdf:value> 2.00</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:version>
         <desc:department rdf:parseType="Resource">
            <rdf:value>Health Canada</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:department>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
   <annots/>
</xfdf></xdp:xdp>
