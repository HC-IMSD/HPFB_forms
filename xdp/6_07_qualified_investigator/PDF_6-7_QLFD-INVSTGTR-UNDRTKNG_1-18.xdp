<?xml version="1.0" encoding="UTF-8"?>
<?xfa generator="AdobeLiveCycleDesignerES_V10.0.2.20120224.1.869952" APIVersion="3.5.12002.0"?>
<xdp:xdp xmlns:xdp="http://ns.adobe.com/xdp/" timeStamp="2015-11-05T21:29:38Z" uuid="36eb4243-5ca2-4cc2-a15b-2c94480b65ad">
<template xmlns="http://www.xfa.org/schema/xfa-template/3.0/">
   <?formServer defaultPDFRenderFormat acrobat9.1dynamic?>
   <?formServer allowRenderCaching 0?>
   <?formServer formModel client?>
   <subform name="HCeForm" layout="tb" locale="en_CA" restoreState="auto">
      <pageSet>
         <pageArea name="Page1" id="Page1">
            <contentArea w="203.2mm" h="249.476mm" x="6.351mm" y="16.198mm" name="contentArea"/>
            <medium stock="default" short="612pt" long="792pt"/>
            <draw h="6.35mm" name="imgHCLogo" w="47.625mm" y="6.35mm" x="6.35mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/gif" href="..\..\FIP logos\print-fip-sig-eng.gif"/>
               </value>
               <?templateDesigner expand 1?></draw>
            <draw name="imgHCLogo_fr" y="6.35mm" x="6.35mm" w="47.625mm" h="6.35mm">
               <value>
                  <image href="..\..\FIP logos\print-fip-sig-fra0.gif" contentType="image/gif"/>
               </value>
               <ui>
                  <imageEdit/>
               </ui>
            </draw>
            <draw h="6.352mm" name="imgCanada" w="20.744mm" y="268.392mm" x="6.136mm">
               <ui>
                  <imageEdit/>
               </ui>
               <value>
                  <image contentType="image/gif" href="..\..\Images\wordmark.gif"/>
               </value>
            </draw>
            <field access="protected" h="6.35mm" name="txtFinalizeDate" w="36.108mm" x="87.718mm" y="273.098mm">
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="txtAccessDate" y="273.098mm" x="168.275mm" w="41.275mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font size="8pt" typeface="Myriad Pro"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <bind match="none"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">
/*
if (this.rawValue == null) {
var cHCeFormModel=script.HCeForm.model.HCeFormMain;
var language = cHCeFormModel.getLanguage();
	var accessDate = "";
	accessDate = new Date();
	accessDate = util.printd("yyyy-mm-dd", accessDate);
	
	if (language == "en") {
		this.rawValue = "Access date: " + accessDate;
	} else {
		this.rawValue = "Date d'accès: " + accessDate
	}
}*/
</script>
               </event>
               <para vAlign="middle"/>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="lblVersion" y="273.098mm" x="123.825mm" w="44.45mm" h="6.35mm" access="protected" presence="hidden">
               <ui>
                  <textEdit>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5002mm"/>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">/*var cHCeFormModel=script.HCeForm.model.HCeFormMain;
var language = cHCeFormModel.getLanguage();
if (language == "en") {
    this.rawValue = "VERSION 1.16 - FINAL";
} else {
    this.rawValue = "Version 1.16 - Finale";
}*/

</script>
               </event>
               <bind match="none"/>
               <para vAlign="middle"/>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <field name="txtTitle" y="266.748mm" x="123.825mm" w="85.725mm" h="6.35mm" access="protected">
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
               <para vAlign="middle"/>
               <bind match="none"/>
               <assist>
                  <speak disable="1"/>
               </assist>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">/*var cHCeFormModel=script.HCeForm.model.HCeFormMain;
var language = cHCeFormModel.getLanguage();
if (language == "en") {
    this.rawValue = "QUALIFIED INVESTIGATOR UNDERTAKING";
} else {
    this.rawValue = "ENGAGEMENT DU CHERCHEUR QUALIFIÉ";
}*/
</script>
               </event>
            </field>
            <field access="protected" name="Pages" x="41.523mm" y="269.24mm" minW="44.45mm" minH="3.528mm">
               <font typeface="Myriad Pro"/>
               <margin bottomInset="1mm" leftInset="0mm" rightInset="0mm" topInset="1mm"/>
               <para vAlign="middle"/>
               <ui>
                  <textEdit>
                     <border presence="hidden">
                        <?templateDesigner StyleID aped0?></border>
                     <margin/>
                  </textEdit>
               </ui>
               <bind match="global"/>
               <format>
                  <picture>9999999</picture>
               </format>
               <event activity="initialize" name="event__initialize">
                  <script contentType="application/x-javascript">/*
var cHCeFormModel=script.HCeForm.model.HCeFormMain;
var language = cHCeFormModel.getLanguage();

if (language == "en") {
    this.rawValue = "Page "+xfa.layout.page(this)+" of "+xfa.layout.pageCount();
} else {
    this.rawValue = "Page "+xfa.layout.page(this)+" sur "+xfa.layout.pageCount();
}
*/
</script>
               </event>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">/*
if (xfa.layout.page(this) &gt; 1) {

imgCanada.presence  = "invisible";
}
if (xfa.layout.page(this) == 1) {
	Pages.presence = "invisible";
} else {
	Pages.presence = "visible";
}*/

//update the Health Canada FIP Logo
/*var cHCeFormModel=script.HCeForm.model.HCeFormMain;
var language = cHCeFormModel.getLanguage();

imgHCLogo.presence = "invisible";
imgHCLogo_fr.presence = "invisible";

if (language === "en") {
    imgHCLogo.presence = "visible";
} else {
    imgHCLogo_fr.presence = "visible";
}*/
</script>
               </event>
               <assist>
                  <speak disable="1"/>
               </assist>
            </field>
            <draw name="Revision" x="100.224mm" y="268.732mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <exData contentType="text/html">
                     <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="tab-interval:0.5in;tab-stops:left 0.333in left 0.667in left 1in left 1.333in left 1.667in left 2in left 2.333in left 2.667in left 3in left 3.333in left 3.667in left 4in left 4.333in left 4.667in left 5in left 5.333in left 5.667in left 6in left 6.333in left 6.667in left 7in left 7.333in left 7.667in left 8in left 8.333in left 8.667in left 9in left 9.333in left 9.667in left 10in left 10.333in;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span><span xfa:embedType="uri" xfa:embedMode="raw" xfa:embed="#floatingField025515"/></p></body>
                  </exData>
               </value>
               <font typeface="Myriad Pro" size="8pt"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <?templateDesigner expand 1?></draw>
            <field name="RevisionNo" w="62mm" h="9mm" id="floatingField025515" presence="hidden" access="readOnly" x="101.6mm" y="254mm">
               <ui>
                  <textEdit>
                     <border>
                        <edge stroke="lowered"/>
                     </border>
                     <margin/>
                  </textEdit>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
               <para vAlign="middle"/>
               <calculate>
                  <script contentType="application/x-javascript">
//this.rawValue = HCeForm.desc.version.value.replace(/\$/g, "");

</script>
               </calculate>
               <bind match="none"/>
            </field>
            <?templateDesigner expand 1?></pageArea>
         <?templateDesigner expand 1?></pageSet>
      <subform w="576pt" name="sfPage1" layout="lr-tb">
         <subform w="203.2mm" name="sfMainHeader" h="25.376mm">
            <draw name="lblFormTitle" w="202.993mm" h="9.42mm" y="2.386mm" x="0.207mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>QUALIFIED INVESTIGATOR UNDERTAKING</text>
               </value>
               <font size="16pt" typeface="Myriad Pro" baselineShift="0pt" weight="bold"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H1"/>
               <?renderCache.bounds 572579 23868 0 0 1417 1417 0 0?>
               <?renderCache.textRun 34 QUALIFIED INVESTIGATOR UNDERTAKING 0 138261 13417 0 0 0 "Myriad Pro" 1 0 16000 ISO-8859-1?></draw>
            <exclGroup name="pageLanguage" y="16.077mm" x="80.451mm">
               <bind match="dataRef" ref="$.SAR_REQUEST.LANGUAGE"/>
               <field h="6mm" name="chkEnglish" w="23.28mm" locale="en_CA" relevant="-print" y="0mm">
                  <caption placement="right" reserve="16.812mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>English</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>en</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <value>
                     <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">en</text>
                  </value>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">

//var cLog = script.core.util.Log;





//this.resolveNode("HCeForm.sfPage1.sfAuthSignOfficial.lblCertifyPoint_en").presence = "visible";
//this.resolveNode("HCeForm.sfPage1.sfAuthSignOfficial.lblCertifyPoint_fr").presence = "hidden";
</script>
                  </event>
               </field>
               <field h="6mm" name="chkFrancais" w="26.316mm" locale="fr_CA" relevant="-print" x="23.372mm" y="0.001mm">
                  <caption placement="right" reserve="19.81mm">
                     <font size="8pt" typeface="Myriad Pro"/>
                     <para vAlign="middle"/>
                     <value>
                        <text>Français</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items>
                     <text>fr</text>
                  </items>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <checkButton shape="round" size="3.5278mm">
                        <border>
                           <fill>
                              <color value="255, 255, 255"/>
                           </fill>
                        </border>
                        <margin/>
                     </checkButton>
                  </ui>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
 
//var cLog = script.core.util.Log;

//this.resolveNode("HCeForm.sfPage1.sfAuthSignOfficial.lblCertifyPoint_en").presence = "hidden";
//this.resolveNode("HCeForm.sfPage1.sfAuthSignOfficial.lblCertifyPoint_fr").presence = "visible";
</script>
                  </event>
               </field>
               <?templateDesigner itemValuesSpecified 1?>
               <event activity="change" name="event__change">
                  <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cMainHandler = script.HCeForm.control.FormHandler;

try
{
	// set up event object
	var actionName = cMainHandler.LANGUAGE_CHANGE;
	var anActionEvent = cActionEvent.createInstance(actionName, this, this.rawValue);
	
	// deploy event to controller
	cMainHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with pageLanguage::change", exception);
}
</script>
               </event>
               <validate scriptTest="warning"/>
               <?templateDesigner expand 1?></exclGroup>
            <event activity="ready" ref="$layout" name="event__layout_ready">
               <script contentType="application/x-javascript">/*
var cHCeFormModel=script.HCeForm.model.HCeFormMain;
var language = cHCeFormModel.getLanguage();

var lblMan = this.resolveNode("lblMandatory");

if (language == "en") {
    lblMan.rawValue = "* denotes a mandatory field\n+ denotes a field with validation error or missing data";
} else {
    lblMan.rawValue = "* démontre un champ obligatoire\n+ démontre un champ avec une erreur de validation ou des données manquantes";
}
//lblMan.access = "readOnly";

var cFormNodeManager = script.core.model.FormNodeManager;
var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
var cAccessibility = this.resolveNode("script.Accessibility");
cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);
*/
</script>
            </event>
            <field name="Button1" y="4.97mm" x="163.193mm" w="28.575mm" h="6mm">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Button</text>
                  </value>
                  <para vAlign="middle" hAlign="center"/>
               </caption>
               <border hand="right">
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">

this.sdfsdf.sdfsdf.sdfsdf=foo;
zxczczczzcxczxcz zxczxc
</script>
               </event>
            </field>
            <?templateDesigner expand 0?></subform>
         <draw name="lblMandatory" w="8in" h="12.7mm" colSpan="2">
            <ui>
               <textEdit/>
            </ui>
            <value>
               <text>Text</text>
            </value>
            <font typeface="Myriad Pro" size="8pt"/>
            <margin bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm"/>
            <para vAlign="middle"/>
            <assist>
               <speak disable="1"/>
            </assist>
            <?renderCache.bounds 573166 33166 0 0 1417 1417 0 0?>
            <?renderCache.textRun 4 Text 0 1417 20000 0 0 0 "Myriad Pro" 0 0 8000 ISO-8859-1?></draw>
         <subform w="203.2mm" name="sfInstructions" layout="lr-tb">
            <field name="btnViewInstructions" w="31.75mm" h="6.35mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Show Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cFormHandler.SHOW_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with show instructions ::click", exception);
}
</script>
               </event>
            </field>
            <draw name="Text6" w="4.576mm" h="6.35mm">
               <ui>
                  <textEdit/>
               </ui>
               <font typeface="Myriad Pro"/>
               <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <?renderCache.bounds 10137 15166 0 0 1417 1417 0 0?></draw>
            <field name="btnHideInstructions" w="31.75mm" h="6.35mm" relevant="-print">
               <ui>
                  <button highlight="inverted"/>
               </ui>
               <font typeface="Myriad Pro"/>
               <caption>
                  <value>
                     <text>Hide Instructions</text>
                  </value>
                  <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               </caption>
               <border hand="right">
                  <?templateDesigner StyleID apbx2?>
                  <edge stroke="raised"/>
                  <fill>
                     <color value="212,208,200"/>
                  </fill>
               </border>
               <bind match="none"/>
               <event activity="click" name="event__click">
                  <script contentType="application/x-javascript">var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName =  cFormHandler.HIDE_INSTRUCTIONS;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with hide instructions ::click", exception);
}

</script>
               </event>
               <event activity="ready" ref="$layout" name="event__layout_ready">
                  <script contentType="application/x-javascript">
/*
if(btnViewInstructions.access == "open"){
this.access = "readOnly";
this.fillColor = "230,230,230";
}

if(btnViewInstructions.access == "readOnly"){
this.access = "open";
this.fillColor = "212,208,200";
}
//app.alert(this.parent.parent.sfAuthSignOfficial.sfFinalizeButton.access);

if (HCeForm.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnFinalizeAndLock.access=="readOnly"){
//app.alert("hh");
this.access="readOnly"
this.fillColor = "230,230,230";
//this.resolveNode("sfHCInstruction").presence = "hidden";
}
*/
</script>
               </event>
            </field>
            <border>
               <edge presence="hidden"/>
               <corner presence="hidden" thickness="0.175mm"/>
            </border>
            <margin bottomInset="5.08mm"/>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" layout="lr-tb" name="sfInstructionsContent">
            <draw name="lblInstructionsHead" w="8in" h="6.249mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>INSTRUCTIONS</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="12pt" weight="bold"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
                  <fill>
                     <linear>
                        <color value="255,255,255"/>
                     </linear>
                     <color value="255,255,153"/>
                  </fill>
               </border>
               <?renderCache.bounds 573166 16274 0 0 1417 720 0 0?>
               <?renderCache.textRun 12 INSTRUCTIONS 0 1417 11857 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <draw name="lblInstructions" w="8in" y="3mm" minH="40.64mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>An attestation must be completed by the Research Ethics Board that reviewed and approved the clinical trial  protocol and informed consent form for this clinical trial at the site below. The completed attestation must be retained by the clinical trial sponsor for a period of 25 years.</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
               <margin topInset="0.254mm" bottomInset="0.254mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0.5pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
            </draw>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <margin topInset="0mm" bottomInset="5.08mm"/>
            <?templateDesigner expand 0?></subform>
         <subform w="203.199mm" name="sfPart1" layout="lr-tb">
            <draw name="lblProtocol" w="7.999958in" h="7.62mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>PART 1 – Clinical Trial Protocol Information</text>
               </value>
               <font typeface="Myriad Pro" weight="bold" size="12pt" baselineShift="0pt"/>
               <margin topInset="1.778mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <border>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H2">
                  <speak disable="1"/>
               </assist>
               <?renderCache.bounds 573163 15143 0 0 1417 5040 0 0?>
               <?renderCache.textRun 46 PART 1 – Clinical Trial Protocol Information 0 1417 14040 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform w="203.2mm" name="sfProtocolInfo" layout="tb">
               <field name="ddlSubmission" w="203.2mm" h="9mm">
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="87.028mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Please select one of the following:</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <items/>
                  <items save="1" presence="hidden"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
               </field>
               <field name="txtProtocolTitle" w="203.2mm" minH="13.903mm">
                  <ui>
                     <textEdit multiLine="1">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.8216mm" placement="top">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Protocol Title</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <keep intact="contentArea"/>
               </field>
               <field name="txtProtocolNo" w="203.2mm" h="16.142mm">
                  <ui>
                     <textEdit hScrollPolicy="off">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="5.8286mm" placement="top">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Clinical Trial Protocol Number (If Applicable)</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <keep intact="contentArea"/>
               </field>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <margin bottomInset="4.2623mm"/>
            <?templateDesigner expand 0?></subform>
         <subform w="203.2mm" name="sfPart2" layout="tb">
            <draw name="lblProductInfo" w="203.2mm" h="7.62mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>Part 2 - Drug Product / Sponsor Information</text>
               </value>
               <font typeface="Myriad Pro" size="12pt" weight="bold" baselineShift="0pt"/>
               <margin topInset="1.778mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <border>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H2"/>
               <?renderCache.bounds 573166 15143 0 0 1417 5040 0 0?>
               <?renderCache.textRun 43 Part 2 - Drug Product / Sponsor Information 0 1417 14040 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform w="203.2mm" name="sfNHPInfoSectionA" layout="lr-tb">
               <draw name="lblSectionA" w="203.2mm" h="6.604mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>A) Drug Product Information</text>
                  </value>
                  <font typeface="Myriad Pro" weight="bold" baselineShift="0pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                     <fill>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                        <color value="255,255,153"/>
                     </fill>
                  </border>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  <assist role="H3"/>
                  <?renderCache.bounds 573166 15886 0 0 1417 1417 0 0?>
                  <?renderCache.textRun 27 A) Drug Product Information 0 1417 8917 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
               <field name="txtBrand" w="203.2mm" h="11.913mm">
                  <ui>
                     <textEdit hScrollPolicy="off">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="3.8295mm" placement="top">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Brand Name</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <keep intact="contentArea"/>
               </field>
               <field name="txtIngredient" w="203.2mm" h="12.368mm">
                  <ui>
                     <textEdit hScrollPolicy="off">
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="4.119mm" placement="top">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Medicinal Ingredient(s):</text>
                     </value>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <keep intact="contentArea"/>
               </field>
               <?templateDesigner expand 0?></subform>
            <subform w="203.2mm" name="sfSponsorInfoSectionB" layout="lr-tb">
               <subform w="203.2mm" layout="lr-tb" name="sfAddressHeading">
                  <draw name="lblSectionB" w="203.2mm" h="6.604mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>B) Sponsor of Clinical Trial</text>
                     </value>
                     <font typeface="Myriad Pro" weight="bold" baselineShift="0pt"/>
                     <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <fill>
                           <linear>
                              <color value="255,255,255"/>
                           </linear>
                           <color value="255,255,153"/>
                        </fill>
                     </border>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt" vAlign="middle"/>
                     <assist role="H3"/>
                     <?renderCache.bounds 573166 15886 0 0 1417 1417 0 0?>
                     <?renderCache.textRun 28 B) Sponsor of Clinical Trial 0 1417 11860 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
                  <?templateDesigner expand 1?></subform>
               <subform y="6.604mm" w="203.2mm" minH="47.89mm" layout="lr-tb" name="sfAddressDetails">
                  <field h="13.6mm" name="txtSponsorName" w="203.2mm">
                     <border>
                        <corner thickness="0.175mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="4.3955mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Company Name  (Full Name – No Abbreviation)</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <keep intact="contentArea"/>
                  </field>
                  <field h="11.43mm" name="txtAddress" w="203.2mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="2.95mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>12. Street/Suite/PO Box*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <keep intact="contentArea"/>
                  </field>
                  <field h="11.43mm" name="txtCity" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.44mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>13. City - Town*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <keep intact="contentArea"/>
                  </field>
                  <field h="11.43mm" name="ddlCountry" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.2395mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>15. Country*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <items/>
                     <items presence="hidden" save="1"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cAddressHandler.SPONSOR_COUNTRY_CHANGED_ACTION;
		cLog.trace("This is the action "+actionName);
		var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with sponsorInfo country ::exit", exception);
}
</script>
                     </event>
                     <event activity="enter" name="event__enter">
                        <script contentType="application/x-javascript">var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="ddlProvince" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.3942mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>14. Province - State*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                  </field>
                  <field name="txtProvince" w="50.8mm" h="11.138mm">
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro" size="8pt"/>
                     <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption reserve="3.3934mm" placement="top">
                        <para vAlign="middle"/>
                        <value>
                           <text>Province - State*</text>
                        </value>
                     </caption>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                     </border>
                     <keep intact="contentArea"/>
                  </field>
                  <field h="11.43mm" name="txtPostalCode" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.271mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>16. Postal/ZIP Code*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <keep intact="contentArea"/>
                  </field>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 0?></subform>
            <subform y="97.261mm" w="203.2mm" minH="76.708mm" layout="tb" name="sfContactClinicalTrial">
               <subform usehref="..\..\fragments\address\AddressHeading.xdp#som($template.form1.sfAddressHeading)">
                  <keep/>
                  <?templateDesigner expand 1?>
               </subform>
               <subform usehref="..\..\fragments\address\AddressDetails.xdp#som($template.form1.sfAddressDetails)">
                  <keep/>
                  <?templateDesigner expand 1?>
               </subform>
               <keep intact="contentArea"/>
               <?templateDesigner expand 1?></subform>
            <border>
               <edge presence="hidden"/>
               <corner thickness="0.175mm" presence="hidden"/>
            </border>
            <margin bottomInset="1.27mm"/>
            <?templateDesigner expand 1?></subform>
         <subform w="203.199mm" name="sfPart3" layout="lr-tb">
            <draw name="lblCTSInfo" w="7.999958in" h="7.71mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>PART 3 - Qualified Investigator Information</text>
               </value>
               <font typeface="Myriad Pro" weight="bold" size="12pt" baselineShift="0pt"/>
               <margin topInset="1.778mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <border>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <assist role="H2"/>
               <?renderCache.bounds 573163 15398 0 0 1417 5040 0 0?>
               <?renderCache.textRun 43 PART 3 - Qualified Investigator Information 0 1417 14040 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform w="203.2mm" name="sfClinicalTrialSectionA" layout="lr-tb">
               <subform w="203.2mm" layout="lr-tb" name="sfAddressHeading">
                  <draw name="lblSectionA" w="203.2mm" h="6.604mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>A) Clinical Trial Site</text>
                     </value>
                     <font typeface="Myriad Pro" weight="bold" baselineShift="0pt"/>
                     <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <fill>
                           <color value="255,255,153"/>
                           <linear>
                              <color value="255,255,255"/>
                           </linear>
                        </fill>
                     </border>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <assist role="H3">
                        <speak disable="1"/>
                     </assist>
                     <?renderCache.bounds 573166 15886 0 0 1417 1417 0 0?>
                     <?renderCache.textRun 22 A) Clinical Trial Site 0 1417 8917 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
                  <keep intact="contentArea"/>
                  <?templateDesigner expand 1?></subform>
               <subform y="6.604mm" w="203.2mm" layout="lr-tb" name="sfAddressDetails">
                  <field h="11.43mm" name="txtSiteName" w="203.2mm">
                     <border>
                        <corner thickness="0.175mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.6455mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Name of Site (Full Name – No Abbreviation)</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtAddress" w="203.2mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>12. Street/Suite/PO Box*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtCity" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.176mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>13. City - Town*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                     </event>
                  </field>
                  <field name="ddlCountry" w="50.8mm" h="11.43mm" access="readOnly">
                     <ui>
                        <textEdit>
                           <border>
                              <?templateDesigner StyleID aped3?>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption placement="top" reserve="3.2395mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>15. Country*</text>
                        </value>
                     </caption>
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <event activity="initialize" name="event__initialize">
                        <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cAddressHandler.INITIALISE_COUNTRY_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with CTS country ::initialize", exception);
}

</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="ddlProvince" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.271mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Province - State*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                  </field>
                  <field h="11.392mm" name="txtPostalCode" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.4324mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Postal*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                  </field>
                  <keep intact="contentArea"/>
                  <?templateDesigner expand 1?></subform>
               <keep intact="contentArea"/>
               <?templateDesigner expand 1?></subform>
            <subform w="203.2mm" name="sfQISectionB" layout="lr-tb">
               <subform w="203.2mm" layout="lr-tb" name="sfAddressHeading">
                  <draw name="lblSectionB" w="203.2mm" h="6.604mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text>B) Qualified Investigator</text>
                     </value>
                     <font typeface="Myriad Pro" weight="bold" baselineShift="0pt"/>
                     <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <border>
                        <edge/>
                        <corner thickness="0.175mm"/>
                        <fill>
                           <linear>
                              <color value="255,255,255"/>
                           </linear>
                           <color value="255,255,153"/>
                        </fill>
                     </border>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <assist role="H3">
                        <speak disable="1"/>
                     </assist>
                     <?renderCache.bounds 573166 15886 0 0 1417 1417 0 0?>
                     <?renderCache.textRun 25 B) Qualified Investigator 0 1417 8917 0 0 0 "Myriad Pro" 1 0 10000 ISO-8859-1?></draw>
                  <keep intact="contentArea"/>
                  <?templateDesigner expand 1?></subform>
               <subform y="6.604mm" w="203.2mm" layout="lr-tb" name="sfAddressDetails">
                  <field name="ddlSalutation" w="25.4mm" h="11.43mm" access="readOnly">
                     <ui>
                        <choiceList>
                           <border>
                              <?templateDesigner StyleID aped3?>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption placement="top" reserve="3.2752mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Salutation*</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <border>
                        <corner thickness="0.175mm"/>
                        <edge/>
                     </border>
                     <event activity="initialize" name="event__initialize">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cAddressHandler.INITIALISE_SALUT_DR_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with QI salutation ::initialize", exception);
}
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtGivenName" w="35.385mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Given Name*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cFormHandler = script.HCeForm.control.FormHandler; 
var cSystem = script.core.System;

try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cFormHandler.SET_INVESTIGATOR_NAME;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with qual investigator given name ::exit", exception);
}



</script>
                     </event>
                     <event activity="enter" name="event__enter">
                        <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtInitials" w="13.97mm">
                     <border>
                        <corner thickness="0.175mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.44mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Initials</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                  </field>
                  <field h="11.43mm" name="txtSurname" w="54.092mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.18mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>17. Surname*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">var cLog = script.core.util.Log;
var cFormHandler = script.HCeForm.control.FormHandler; 
var cSystem = script.core.System;
var cActionEvent = script.core.event.ActionEvent;

try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cFormHandler.SET_INVESTIGATOR_NAME;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with qual investigator surnname ::exit", exception);
}

</script>
                     </event>
                     <event activity="enter" name="event__enter">
                        <script contentType="application/x-javascript">
var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtTitle" w="38.1mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.2395mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>21. Title*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
var cLog = script.core.util.Log;
var cFormHandler = script.HCeForm.control.FormHandler; 
var cSystem = script.core.System;
var cActionEvent = script.core.event.ActionEvent;

try
{
	if(cSystem.hasCurrentFieldValueChanged(this)){
		// set up event object
		var actionName =  cFormHandler.SET_INVESTIGATOR_NAME;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	}
}
catch(exception)
{
	cLog.warn("Problem with qual investigator title ::exit", exception);
}
</script>
                     </event>
                     <event activity="enter" name="event__enter">
                        <script contentType="application/x-javascript">

var cSystem = script.core.System;

cSystem.setCurrentField(this);
</script>
                     </event>
                  </field>
                  <field h="11.343mm" name="ddlLangPref" w="35.56mm">
                     <border>
                        <corner thickness="0.175mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="2.9645mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>20. Language*</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <items save="1"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                     </event>
                  </field>
                  <field h="14.018mm" name="txtAddress" w="203.2mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="5.4788mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>12. Street/Suite/PO Box*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtCity" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.176mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>13. City - Town*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                     </event>
                  </field>
                  <field name="ddlCountry" w="50.8mm" h="11.43mm" access="readOnly">
                     <ui>
                        <textEdit>
                           <border>
                              <?templateDesigner StyleID aped3?>
                              <edge stroke="lowered"/>
                           </border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption placement="top" reserve="3.044mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>15. Country*</text>
                        </value>
                     </caption>
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <event activity="initialize" name="event__initialize">
                        <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cAddressHandler.INITIALISE_COUNTRY_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with QI country ::initialize", exception);
}
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="ddlProvince" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>14. Province - State*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <choiceList>
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </choiceList>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">

//this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtPostalCode" w="50.8mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.7691mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>16. Postal/ZIP Code*</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
//var cGlobalRequirement = script.core.validation.GlobalRequirement;
//cGlobalRequirement.isPostalcodeValid(this, "CA");//ddlCountry.rawValue);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtTelephone" w="38.1mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.44mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>37. Telephone Number</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//var cGlobalRequirement = script.core.validation.GlobalRequirement;
//cGlobalRequirement .isPhoneValid(this, "CA");//ddlCountry.rawValue);
</script>
                     </event>
                  </field>
                  <field h="11.43mm" name="txtExtension" w="17.78mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>Ext.</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                  </field>
                  <field h="11.43mm" name="txtFax" w="38.1mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.175mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>19. Fax No.</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">
//var cGlobalRequirement = script.core.validation.GlobalRequirement;
//cGlobalRequirement .isFaxValid(this, "CA");//ddlCountry.rawValue);
</script>
                     </event>
                  </field>
                  <field name="txtEmail" w="109.215mm" h="11.43mm">
                     <border>
                        <corner thickness="0.1753mm"/>
                        <edge/>
                     </border>
                     <caption placement="top" reserve="3.7396mm">
                        <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                        <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                        <value>
                           <text>22. Email</text>
                        </value>
                     </caption>
                     <font typeface="Myriad Pro"/>
                     <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                     <para vAlign="middle"/>
                     <ui>
                        <textEdit hScrollPolicy="off">
                           <border>
                              <edge stroke="lowered"/>
                              <?templateDesigner StyleID aped3?></border>
                           <margin/>
                        </textEdit>
                     </ui>
                     <validate nullTest="error"/>
                     <event activity="exit" name="event__exit">
                        <script contentType="application/x-javascript">//var cGlobalRequirement = script.core.validation.GlobalRequirement;
//cGlobalRequirement.isEmailValid(this);
</script>
                     </event>
                  </field>
                  <keep intact="contentArea"/>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 0?>
               <keep intact="contentArea"/>
            </subform>
            <subform w="203.3mm" name="sfREBASectionC" layout="lr-tb" presence="hidden">
               <draw name="lblSectionC" w="203.2mm" h="8.822mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>C) RESEARCH ETHICS BOARD APPROVAL</text>
                  </value>
                  <font typeface="Myriad Pro" weight="bold"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                     <fill>
                        <linear>
                           <color value="255,255,255"/>
                        </linear>
                        <color value="255,255,153"/>
                     </fill>
                  </border>
                  <assist role="H3"/>
               </draw>
               <field name="chkIncludeMember" w="203.2mm" h="10.307mm">
                  <ui>
                     <checkButton>
                        <border>
                           <?templateDesigner StyleID apcb2?>
                           <edge stroke="lowered"/>
                           <fill/>
                        </border>
                     </checkButton>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <integer>0</integer>
                  </value>
                  <caption placement="right" reserve="188.309mm">
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                     <value>
                        <text>Includes member knowledgeable in complementary or alternative health care (identify member and expertise in the cover letter)</text>
                     </value>
                  </caption>
                  <items>
                     <integer>1</integer>
                     <integer>0</integer>
                     <integer>2</integer>
                  </items>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
               </field>
               <field h="14.717mm" name="txtREBName" w="92.346mm">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="6.1653mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Name of Research Ethics Board</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1.0008mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                  </event>
               </field>
               <field name="ddtApproval" w="110.817mm" h="14.367mm">
                  <ui>
                     <dateTimeEdit hScrollPolicy="off">
                        <border hand="right">
                           <?templateDesigner StyleID aped2?>
                           <edge/>
                        </border>
                        <margin/>
                        <comb numberOfCells="10"/>
                     </dateTimeEdit>
                     <picture>date{YYYY-MM-DD}</picture>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <date/>
                  </value>
                  <caption reserve="59.6328mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>47. Date of Approval (YYYY-MM-DD)</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate nullTest="error"/>
                  <format>
                     <picture>date{YYYY-MM-DD}</picture>
                  </format>
                  <bind>
                     <picture>date{YYYY-MM-DD}</picture>
                  </bind>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isDateValid(this);
this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

//this.resolveNode("script.validation.#variables.formValidation").isDateValid(this)
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtAddress" w="203.2mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.0826mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>12. Street/Suite/PO Box*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtCity" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.176mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>13. City - Town*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="ddlCountry" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.9823mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>15. Country*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <items/>
                  <items presence="hidden" save="1"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.RegulatoryAddresses.control.RegulatoryAddressHandler;

try
{
	// set up event object
	var actionName =  cAddressHandler.REBA_COUNTRY_CHANGED_ACTION;
	var anActionEvent = cActionEvent.createInstance(actionName, this,this.rawValue);
	// deploy event to controller
	cAddressHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with Manufacturer Country selection ::exit", exception);
}
//

var cGlobalRequirement = script.core.validation.GlobalRequirement;
cGlobalRequirement .isPhoneValid(txtTelephone, this.rawValue);
cGlobalRequirement .isFaxValid(txtFax, this.rawValue);


if(this.rawValue =="CA" || this.rawValue =="US"){
this.resolveNode("ddlProvince").presence = "visible"; 
this.resolveNode("txtProvince").presence = "hidden";
}else{
this.resolveNode("ddlProvince").presence = "hidden"; 
this.resolveNode("txtProvince").presence = "visible";
}
</script>
                  </event>
               </field>
               <field h="11.43mm" name="ddlProvince" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>14. Province - State*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <validate nullTest="error"/>
               </field>
               <field name="txtProvince" w="50.8mm" h="11.43mm" presence="hidden">
                  <ui>
                     <textEdit>
                        <border>
                           <?templateDesigner StyleID aped3?>
                           <edge stroke="lowered"/>
                        </border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <font size="8pt" typeface="Myriad Pro"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="2.95mm" placement="top">
                     <para vAlign="middle"/>
                     <value>
                        <text>Province/State</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
               </field>
               <field h="11.377mm" name="txtPostalCode" w="50.8mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>16. Postal/ZIP Code*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">var cLog = script.core.util.Log;
var cFormatValidator = script.core.validation.BasicFormatValidator;
var cCommon = script.HCeForm.model.Common;

if ((this.resolveNode("$").rawValue != null &amp;&amp; this.resolveNode("$").rawValue != "")) {
if ( this.resolveNode("ddlCountry").rawValue == "CA" ) {
	cCommon.validateField(this, cFormatValidator.POSTAL_CODE);
} else if (this.resolveNode("ddlCountry").rawValue == "US") {
	cCommon.validateField(this, cFormatValidator.ZIP_CODE);
} else {
	cLog.trace("PostalCode not for US/CA!!");
}
}
</script>
                  </event>
               </field>
               <draw name="lblREBChair" w="203.2mm" h="8.249mm">
                  <ui>
                     <textEdit/>
                  </ui>
                  <value>
                     <text>Name of Research Ethics Board Chair</text>
                  </value>
                  <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               </draw>
               <field h="11.43mm" name="ddlSalutation" w="25.4mm">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Salutation*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <items save="1">
                     <text>Mrs</text>
                     <text>Dr</text>
                  </items>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtGivenName" w="32.446mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Given Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">
this.resolveNode("script.validation.#variables.formValidation").isFilled(this);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtInitials" w="13.97mm">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Initials</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
               </field>
               <field h="11.43mm" name="txtSurname" w="53.34mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>17. Surname*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtTitle" w="38.1mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>21. Title*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                  </event>
               </field>
               <field h="11.43mm" name="ddlLangPref" w="33.957mm">
                  <border>
                     <corner thickness="0.175mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>20. Language*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <items save="1"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">this.resolveNode("script.validation.#variables.formValidation").isFilled(this);

</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtTelephone" w="38.1067mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>18. Telephone No.*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">var cGlobalRequirement = script.core.validation.GlobalRequirement;
cGlobalRequirement .isPhoneValid(this, ddlCountry.rawValue);
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtExtension" w="10.419mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Ext.</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
               </field>
               <field h="11.43mm" name="txtFax" w="38.1mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>19. Fax No.</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">var cGlobalRequirement = script.core.validation.GlobalRequirement;
cGlobalRequirement .isFaxValid(this, ddlCountry.rawValue);
</script>
                  </event>
               </field>
               <field name="txtEmail" w="116.494mm" h="11.43mm">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.175mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>22. Email</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
                  <validate nullTest="error"/>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">var cGlobalRequirement = script.core.validation.GlobalRequirement;
cGlobalRequirement.isEmailValid(this);
</script>
                  </event>
               </field>
               <?templateDesigner expand 0?>
               <keep intact="contentArea"/>
            </subform>
            <border>
               <edge presence="hidden"/>
               <corner/>
               <corner/>
               <corner/>
               <corner presence="hidden"/>
            </border>
            <keep intact="contentArea"/>
            <margin bottomInset="4.2623mm"/>
            <?templateDesigner expand 1?></subform>
         <subform name="sfAuthSignOfficial" layout="lr-tb" w="203.2mm">
            <draw name="lblCertificationHeader" w="203.2mm" h="7.548mm">
               <ui>
                  <textEdit/>
               </ui>
               <value>
                  <text>PART 4 - ATTESTATIONS</text>
               </value>
               <font typeface="Myriad Pro" baselineShift="0pt" weight="bold" size="12pt"/>
               <margin topInset="1.778mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
               <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
               <border>
                  <edge presence="hidden"/>
                  <corner thickness="0.175mm" presence="hidden"/>
               </border>
               <assist role="H2"/>
               <?renderCache.bounds 573166 14939 0 0 1417 5040 0 0?>
               <?renderCache.textRun 21 PART 4 - ATTESTATIONS 0 1417 14040 0 0 0 "Myriad Pro" 1 0 12000 ISO-8859-1?></draw>
            <subform y="7.548mm" w="203.2mm" layout="lr-tb" name="sfAttestation">
               <assist role="UL"/>
               <subform w="203.199mm" name="sfAttest1" layout="tb">
                  <assist role="LI"/>
                  <draw name="lblAttest1" w="202.541mm" minH="7.521mm">
                     <ui>
                        <textEdit/>
                     </ui>
                     <value>
                        <text> tt In respect of the identified clinical trial, I certify, as the qualified investigator for this site that: </text>
                     </value>
                     <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                     <margin topInset="0.5mm" bottomInset="0.5mm" leftInset="0.5mm" rightInset="0.5mm"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                  </draw>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfAttest2" layout="tb">
                  <draw w="202.859mm" name="lblAttest2" minH="7.209mm">
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <exData contentType="text/html">
                           <body xmlns="http://www.w3.org/1999/xhtml" xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/"><p style="text-decoration:none;letter-spacing:0in">1. je suis médecin ou dentiste et membre en règle d’une association professionnelle médicale ou dentaire au sens de la définition contenue dans le titre 5 de la partie C du<span style="xfa-spacerun:yes"> </span><span style="font-style:italic">Règlement sur les aliments et drogues</span>;<span style="xfa-spacerun:yes"> </span></p><p style="text-decoration:none;letter-spacing:0in"><span style="xfa-spacerun:yes"> </span></p></body>
                        </exData>
                     </value>
                     <ui>
                        <textEdit/>
                     </ui>
                     <margin leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm" bottomInset="0.5mm"/>
                  </draw>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfAttest3" layout="tb">
                  <draw w="202.859mm" name="lblAttest3" minH="7.209mm">
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>2. I will supervise the medical care and medical decisions respecting this clinical trial at this site; </text>
                     </value>
                     <ui>
                        <textEdit/>
                     </ui>
                     <margin leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm" bottomInset="0.5mm"/>
                  </draw>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfAttest4" layout="tb">
                  <draw w="202.859mm" name="lblAttest4" minH="7.209mm">
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>3. I will conduct this clinical trial in accordance with Good Clinical Practices; and</text>
                     </value>
                     <ui>
                        <textEdit/>
                     </ui>
                     <margin leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm" bottomInset="0.5mm"/>
                  </draw>
                  <?templateDesigner expand 1?></subform>
               <subform w="203.199mm" name="sfAttest5" layout="tb">
                  <draw w="7.999958in" name="lblAttest5" minH="7.209mm">
                     <font typeface="Myriad Pro" size="8pt" baselineShift="0pt"/>
                     <para spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>4. I will immediately on discontinuance of the clinical trial by the sponsor, in its entirety or at a clinical trial site, inform both the clinical trial subjects and the Research Ethics Board for this site of the discontinuance, provide them with the reasons for the discontinuance, and advise them in writing of any potential risks to the health of clinical trial subjects or other persons.</text>
                     </value>
                     <ui>
                        <textEdit/>
                     </ui>
                     <margin leftInset="0.5mm" rightInset="0.5mm" topInset="0.5mm" bottomInset="0.5mm"/>
                  </draw>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 0?></subform>
            <subform w="203.123mm" name="sfAttestName" layout="lr-tb">
               <field h="11.43mm" name="ddlSalutation" w="20.32mm" access="readOnly">
                  <caption placement="top" reserve="3.5401mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Salutation*</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <items save="1"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <choiceList>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </choiceList>
                  </ui>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <event activity="initialize" name="event__initialize">
                     <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cAddressHandler = script.HCeForm.control.CommonAddressHandler;
var cSystem = script.core.System;
try
{
		// set up event object
		var actionName =  cAddressHandler.INITIALISE_SALUT_DR_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cAddressHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with attestation salutation ::initialize", exception);
}
</script>
                  </event>
               </field>
               <field h="11.43mm" name="txtGivenNameAttestation" w="40.64mm" access="readOnly">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.1733mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Given Name*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
               </field>
               <field h="11.43mm" name="txtSurnameAttestation" w="50.8mm" access="readOnly">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="3.2011mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text>Surname*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
               </field>
               <field h="11.43mm" name="txtTitleAttestation" w="90.948mm" access="readOnly">
                  <border>
                     <corner thickness="0.1753mm"/>
                     <edge/>
                  </border>
                  <caption placement="top" reserve="2.934mm">
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                     <para marginLeft="0pt" marginRight="0pt" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" vAlign="middle"/>
                     <value>
                        <text> Position Title*</text>
                     </value>
                  </caption>
                  <font typeface="Myriad Pro"/>
                  <margin bottomInset="1mm" leftInset="1mm" rightInset="1mm" topInset="1mm"/>
                  <para vAlign="middle"/>
                  <ui>
                     <textEdit>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </textEdit>
                  </ui>
               </field>
               <keep intact="contentArea"/>
               <?templateDesigner expand 1?></subform>
            <subform w="203.2mm" name="sfFinalizeButton">
               <margin topInset="5.08mm" bottomInset="2.54mm"/>
               <field name="btnFinalizeAndLock" w="28.575mm" h="6.35mm" relevant="-print">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Finalize</text>
                     </value>
                     <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
var cFormHandler=	script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
try
{
		// set up event object
		var actionName = cFormHandler.LOCK_FORM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with finalize ::click", exception);
}









/*
cCommon.formValidationAndLock(this);
//this.access="readOnly";
if(this.access == "readOnly"){
cLog.trace("Finalized button start readOnly 11111");
this.parent.parent.sfHeader.signatureOption.presence="visible";
this.parent.parent.sfHeader.ddtSignedOnAttestation.presence="visible";
this.parent.parent.sfHeader.Rectangle1.presence="visible";
this.parent.parent.sfHeader.Rectangle2.presence="visible";
HCeForm.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access = "open";

if (language == "en") {
		this.resolveNode("HCeForm.#pageSet[0].Page1.txtFinalizeDate").rawValue = "Date Finalized " + cDateUtil.toDateString(date);
		//HCeForm.#pageSet[0].Page1.txtFinalizeDate
	} else {
		this.resolveNode("#pageSet.Page1.txtFinalizeDate").rawValue = "Date finalisée " + cDateUtil.toDateString(date);
	}
}
*/
</script>
                  </event>
               </field>
               <field name="btnModify" w="28.575mm" h="6.35mm" relevant="-print" x="31.175mm">
                  <ui>
                     <button highlight="inverted"/>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <caption>
                     <value>
                        <text>Modify</text>
                     </value>
                     <para vAlign="middle" hAlign="center" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <font typeface="Myriad Pro" baselineShift="0pt" size="8pt"/>
                  </caption>
                  <border hand="right">
                     <?templateDesigner StyleID apbx2?>
                     <edge stroke="raised"/>
                     <fill>
                        <color value="212,208,200"/>
                     </fill>
                  </border>
                  <bind match="none"/>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">

var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler=	script.HCeForm.control.FormHandler;
var cSystem = script.core.System;


try{
		// set up event object
		var actionName = cHandler.UNLOCK_FORM;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with  unlock button::click", exception);
}
</script>
                  </event>
               </field>
               <?templateDesigner expand 1?></subform>
            <subform w="203.2mm" layout="lr-tb" name="sfSignatureBlock">
               <border>
                  <edge/>
                  <corner thickness="0.175mm"/>
               </border>
               <exclGroup name="signatureOption" layout="lr-tb">
                  <?templateDesigner itemValuesSpecified 1?>
                  <field w="28mm" h="6mm" name="chkDigitalID">
                     <ui>
                        <checkButton shape="round">
                           <border>
                              <?templateDesigner StyleID apcb4?>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption placement="right" reserve="22mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Digital ID</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <value>
                        <text xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                     </value>
                     <event activity="click" name="event__click">
                        <script contentType="application/x-javascript">
/*
this.parent.parent.digSignature.presence="visible";
this.parent.parent.Rectangle2.presence="hidden"
this.parent.parent.imgSignature.presence="hidden"
*/
</script>
                     </event>
                     <items>
                        <text>DIG_SIG</text>
                     </items>
                  </field>
                  <field w="50.8mm" h="6mm" name="chkDigitalImage">
                     <ui>
                        <checkButton shape="round">
                           <border>
                              <?templateDesigner StyleID apcb4?>
                              <edge stroke="lowered"/>
                              <fill/>
                           </border>
                        </checkButton>
                     </ui>
                     <font typeface="Myriad Pro"/>
                     <margin leftInset="1mm" rightInset="1mm"/>
                     <para vAlign="middle"/>
                     <caption placement="right" reserve="44.958mm">
                        <para vAlign="middle"/>
                        <value>
                           <text>Image Signature</text>
                        </value>
                        <font typeface="Myriad Pro" size="8pt"/>
                     </caption>
                     <event activity="click" name="event__click">
                        <script contentType="application/x-javascript">

//sfSignature.sigSignatureAttestation.presence = "hidden";
//sfSignature.sfImgSignature.presence = "visible";
/*this.parent.parent.digSignature.presence="hidden";
this.parent.parent.Rectangle2.presence="hidden"
this.parent.parent.imgSignature.presence="visible"
*/
</script>
                     </event>
                     <items>
                        <text>IMG_SIG</text>
                     </items>
                  </field>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">


var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler = script.HCeForm.control.SignatureBlockHandler
var cSystem = script.core.System;

try
{
		// set up event object
		var actionName = cHandler.SIGNATURE_CHOICE_UI;
		var anActionEvent = cActionEvent.createInstance(actionName,this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with sig type::change", exception);
}
</script>
                  </event>
                  <?templateDesigner expand 1?></exclGroup>
               <draw name="Rectangle1" w="119.247mm" h="5.598mm">
                  <value>
                     <rectangle>
                        <edge presence="hidden"/>
                        <corner radius="5.08mm" presence="hidden"/>
                     </rectangle>
                  </value>
               </draw>
               <field name="digSignature" w="110.174mm" h="8.939mm">
                  <ui>
                     <signature>
                        <border>
                           <edge stroke="lowered"/>
                           <?templateDesigner StyleID aped3?></border>
                        <margin/>
                     </signature>
                  </ui>
                  <font typeface="Myriad Pro" size="8pt"/>
                  <margin topInset="1mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <caption reserve="26.8657mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Signature*</text>
                     </value>
                  </caption>
                  <bind match="none"/>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">



//script.validation.#variables.
</script>
                  </event>
                  <event activity="preSign" name="event__preSign">
                     <script contentType="application/x-javascript">
/*
var accessDate = "";

    accessDate = new Date();
    accessDate = util.printd("yyyy-mm-dd", accessDate);
this.parent.ddtSignedOnAttestation.rawValue=accessDate;
HCeForm.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "230,230,230";
*/
</script>
                  </event>
                  <event activity="postSign" name="event__postSign">
                     <script contentType="application/x-javascript">

//This example examines the validity of all signed objects on a form. For
//each signed object, the integer return value of the verify() method
// displays in a message box.
//app.alert("hello");
//app.alert(event.target.getField("HCeForm[0].sfPage1[0].sfAuthSignOfficial[0].sfHeader[0].digSignature[0]").signatureValidate());
/*if(HCeForm.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.access=="open"){
this.parent.ddtSignedOnAttestation.rawValue=null;
HCeForm.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "212,208,200";
}
xfa.layout.ready;
*/

</script>
                  </event>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =script.HCeForm.control.SignatureBlockHandler;
var cSystem = script.core.System;

try
{
		// set up event object
		var actionName = cHandler.DIG_SIG_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName,this,event.target);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with dig sig::change", exception);
}

</script>
                  </event>
               </field>
               <field name="imgSignature" w="110.174mm" h="8.938mm">
                  <ui>
                     <imageEdit data="embed"/>
                  </ui>
                  <caption reserve="18.0746mm">
                     <font size="8pt" typeface="Myriad Pro" baselineShift="0pt"/>
                     <para vAlign="middle" spaceAbove="0pt" spaceBelow="0pt" textIndent="0pt" marginLeft="0pt" marginRight="0pt"/>
                     <value>
                        <text>Signature*</text>
                     </value>
                  </caption>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <desc>
                     <text name="embeddedHref">Unknown Embedded URI</text>
                  </desc>
                  <event activity="click" name="event__click">
                     <script contentType="application/x-javascript">
/*if(this.rawValue!=null){

this.resolveNode("script.validation.#variables.formValidation").makeReadonly();
var accessDate = "";

    accessDate = new Date();
    accessDate = util.printd("yyyy-mm-dd", accessDate);
this.parent.ddtSignedOnAttestation.rawValue=accessDate;
HCeForm.sfPage1.sfAuthSignOfficial.sfFinalizeButton.btnModify.fillColor = "230,230,230";
app.execMenuItem("SaveAs");
}

*/
</script>
                  </event>
                  <margin leftInset="0.381mm" topInset="0.381mm" rightInset="0.381mm" bottomInset="0.381mm"/>
                  <event activity="change" name="event__change">
                     <script contentType="application/x-javascript">
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cHandler =script.HCeForm.control.SignatureBlockHandler;
var cSystem = script.core.System;

try
{

		// set up event object
		var actionName = cHandler.IMG_SIG_CHANGE;
		var anActionEvent = cActionEvent.createInstance(actionName,this);
		// deploy event to controller
		cHandler.actionPerformed(anActionEvent);
	
}
catch(exception)
{
	cLog.warn("Problem with img sig::exit", exception);
}
</script>
                  </event>
               </field>
               <draw name="Rectangle2" w="110.937mm" h="8.938mm" presence="hidden">
                  <value>
                     <rectangle>
                        <edge presence="hidden"/>
                        <corner radius="5.08mm" presence="hidden"/>
                     </rectangle>
                  </value>
               </draw>
               <field name="ddtSignedOnAttestation" w="91.281mm" h="8.939mm">
                  <ui>
                     <dateTimeEdit hScrollPolicy="off">
                        <border hand="right">
                           <?templateDesigner StyleID aped2?>
                           <edge/>
                        </border>
                        <margin/>
                        <comb numberOfCells="10"/>
                     </dateTimeEdit>
                     <picture>date{YYYY-MM-DD}</picture>
                  </ui>
                  <font typeface="Myriad Pro"/>
                  <margin topInset="1.0008mm" bottomInset="1mm" leftInset="1mm" rightInset="1mm"/>
                  <para vAlign="middle"/>
                  <value>
                     <date/>
                  </value>
                  <caption reserve="33.6933mm">
                     <para vAlign="middle"/>
                     <value>
                        <text>Date (YYYY-MM-DD)*</text>
                     </value>
                     <font typeface="Myriad Pro" size="8pt"/>
                  </caption>
                  <format>
                     <picture>date{YYYY-MM-DD}</picture>
                  </format>
                  <border>
                     <edge/>
                     <corner thickness="0.175mm"/>
                  </border>
                  <validate>
                     <picture>date{YYYY-MM-DD}</picture>
                  </validate>
                  <event activity="exit" name="event__exit">
                     <script contentType="application/x-javascript">//this.resolveNode("script.validation.#variables.formValidation").isDateValid(this);

//var cCommon = script.HCeForm.model.Common;


//cCommon.isDateValid(this);
</script>
                  </event>
                  <bind>
                     <picture>date{YYYY-MM-DD}</picture>
                  </bind>
               </field>
               <keep intact="contentArea"/>
               <margin topInset="1.27mm"/>
               <?templateDesigner expand 1?>
            </subform>
            <border>
               <edge/>
               <corner thickness="0.175mm"/>
            </border>
            <margin topInset="0mm"/>
            <keep intact="contentArea"/>
            <?templateDesigner expand 1?>
         </subform>
         <margin topInset="0mm" bottomInset="0mm" leftInset="0mm" rightInset="0mm"/>
         <event activity="initialize" name="event__initialize">
            <script contentType="application/x-javascript">
//this.resolveNode("HCeForm.sfPage1.sfAuthSignOfficial.lblCertifyPoint_en").presence = "visible";
//this.resolveNode("HCeForm.sfPage1.sfAuthSignOfficial.lblCertifyPoint_fr").presence = "hidden";
</script>
         </event>
         <?templateDesigner expand 1?>
      </subform>
      <subform w="100mm" name="script" layout="tb" presence="hidden">
         <bind match="none"/>
         <subform usehref="..\..\fragments\CoreJavaScript.xdp#som($template.script.core)">
            <bind/>
            <?templateDesigner expand 1?>
         </subform>
         <subform h="50mm" name="HCeForm" w="100mm">
            <subform layout="tb" name="config" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="general">
var cLog = script.core.util.Log;


var content = { 

formType: "HCeForm",
errorInd:					"+",
formVersion: "00.01.00",
CANADA:	"CA",
USA:	"US",
DR_SALUT: "dr",
LabelStart: "labelStart",
LabelEnd:	"labelEnd",
DIGITAL_SIG:				"DIG_SIG",
IMAGE_SIG:					"IMG_SIG",
//Overrides
//NodeValidator_formatValidator: "",
Log_logLevel: cLog.LEVEL_TRACE,
Log_showExceptionDetail: true,
Log_writeToFile: false,


}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform layout="tb" name="control" w="100mm">
               <keep intact="contentArea"/>
               <variables>
                  <script contentType="application/x-javascript" name="FormHandler">

/** Global Variables **/

var cFormNodeManager = 		script.core.model.FormNodeManager;
var cResourceManager = 		script.core.lang.ResourceManager;
var cHCeFormModel=			script.HCeForm.model.HCeFormMain;
var cException = 			script.core.util.Exception;
var cLog = 					script.core.util.Log;
var cUiUtil=				script.core.util.UiUtil;
var cFailureReporter=		script.core.validation.FailureReporter;
var cAccessibility=	script.HCeForm.util.Accessibility;


var cAddressHandler=		script.HCeForm.control.CommonAddressHandler
var cSignatureHandler=		script.HCeForm.control.SignatureBlockHandler
//action Global
var LANGUAGE_CHANGE=				"language_change";
var INITIALIZE_FORM_ACTION=		"init_form";
var SET_INVESTIGATOR_NAME=		"set_name";
var HIDE_INSTRUCTIONS=			"hideInstructions";
var SHOW_INSTRUCTIONS=			"showInstructions";
var LOCK_FORM=					"lockForm";
var UNLOCK_FORM=				"unlockForm";
// FORM Nodes

//instructions
var INSTRUCTIONS_SF_FN=cFormNodeManager.getFormNodeForKey("sfInstructionsContent"); 

//3c investigator
var QI_GIVEN_NAME_FN=cFormNodeManager.getFormNodeForKey("section3BtxtGivenName"); 
var QI_SURNAME_FN=cFormNodeManager.getFormNodeForKey("section3BtxtSurname");
var QI_INITIALS_FN=cFormNodeManager.getFormNodeForKey("section3BtxtInitials");
var QI_TITLE_FN=cFormNodeManager.getFormNodeForKey("section3BtxtTitle");
///attestations
var ATTEST_SF_FN=cFormNodeManager.getFormNodeForKey("sfAttestName");
var ATTEST_GIVEN_NAME_FN=cFormNodeManager.getFormNodeForKey("txtGivenNameAttestation");
var ATTEST_SURNAME_FN=cFormNodeManager.getFormNodeForKey("txtSurnameAttestation");
var ATTEST_TITLE_FN=cFormNodeManager.getFormNodeForKey("txtTitleAttestation");

//buttons
var MODIFY_BTN_FN=cFormNodeManager.getFormNodeForKey("btnModify");
var FINALIZE_BTN_FN=cFormNodeManager.getFormNodeForKey("btnFinalizeAndLock");


//SCRIPT NAME
var SCRIPT_OBJECT_NAME="FormHandler";




/*
* actionPerformed- central event handler for the overall form functionality
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{

		case INITIALIZE_FORM_ACTION:
			 initialize();
			break;
		
		case LANGUAGE_CHANGE:
			cHCeFormModel.setLanguage(anEvent.getSource().rawValue);
			_updateFormLanguage();
			break;
		
		case SET_INVESTIGATOR_NAME:
				//implemented Oct 27
				_updateAttestationName();
			break;
			
		case HIDE_INSTRUCTIONS:
		case SHOW_INSTRUCTIONS:	
				 toggleInstructionsVisiblity(anEvent.getActionCommand());
			break;	
			
		case LOCK_FORM:
			var errors=validateForm();
			if(!errors){
					lockForm();
					xfa.host.messageBox(cResourceManager.get("validation_pass"),cResourceManager.get("validation_title"));
			}		
			 break;
			 
		case UNLOCK_FORM:
				unlockForm();
				//initalize select components
				_initializeAttestationNameUI();
				cAddressHandler.initialise();
				cSignatureHandler.initialise()
				break;		 
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - initialize Form '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}



/*
* Initializes the form to it's default state
*
*
*
*/
function initialize(){
	
	
		_updateFormLanguage();	
		toggleInstructionsVisiblity(HIDE_INSTRUCTIONS);
		_initializeAttestationNameUI();
		//initialize other controllers
		cAddressHandler.initialise();
		cSignatureHandler.initialise();
}


function unlockForm(form_node){
	if(!form_node){	
		form_node=cFormNodeManager.getBaseNode();
	}
	form_node.unLock();
}//end fn


function lockForm(){
		var baseNode=cFormNodeManager.getBaseNode();	
		baseNode.lock();		
		MODIFY_BTN_FN.unLock(); //unlock modify button
		cSignatureHandler.setSignatureBlockState();	
	}//end fn


//bit of a hack,using the finalize button state
function isFinalized(){

	if(FINALIZE_BTN_FN.getNodeInstance().access!=="open"){
		return true;
	}
	return false;
}



/********* Private functions *****/

function _initializeFormNodes(){

	try{
		cControllerUtil.checkFormNode(QI_GIVEN_NAME_FN,SCRIPT_OBJECT_NAME,"QI_GIVEN_NAME_FN");
		cControllerUtil.checkFormNode(QI_SURNAME_FN,SCRIPT_OBJECT_NAME,"QI_SURNAME_FN");
		cControllerUtil.checkFormNode(QI_INITIALS_FN,SCRIPT_OBJECT_NAME,"QI_INITIALS_FN");
		cControllerUtil.checkFormNode(QI_TITLE_FN,SCRIPT_OBJECT_NAME,"QI_TITLE_FN");
		cControllerUtil.checkFormNode(ATTEST_GIVEN_NAME_FN,SCRIPT_OBJECT_NAME,"ATTEST_GIVEN_NAME_FN");
		cControllerUtil.checkFormNode(ATTEST_SURNAME_FN,SCRIPT_OBJECT_NAME,"ATTEST_SURNAME_FN");
		cControllerUtil.checkFormNode(ATTEST_TITLE_FN,SCRIPT_OBJECT_NAME,"ATTEST_TITLE_FN");
		cControllerUtil.checkFormNode(INSTRUCTIONS_CONTENT_FN,SCRIPT_OBJECT_NAME,"INSTRUCTIONS_CONTENT_FN");
		
		cControllerUtil.checkFormNode(MODIFY_BTN_FN,SCRIPT_OBJECT_NAME,"MODIFY_BTN_FN");
		cControllerUtil.checkFormNode(FINALIZE_BTN_FN,SCRIPT_OBJECT_NAME,"FINALIZE_BTN_FN");
		cControllerUtil.checkFormNode(ATTEST_SF_FN,SCRIPT_OBJECT_NAME,"ATTEST_SF_FN");
				
	 }
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+"._initialize()"), exception);
	}

}//end fn





function _updateFormLanguage()
{
	cResourceManager.setCurrentLanguage(cHCeFormModel.getLanguage());
	cFormNodeManager.getBaseNode().updateUI();
}


function _initializeAttestationNameUI(){

	ATTEST_SF_FN.lock();
}


function _updateAttestationName(){

	var qi_givenName=QI_GIVEN_NAME_FN.getNodeInstance();
	var qi_surname=QI_SURNAME_FN.getNodeInstance();
	var qi_title=QI_TITLE_FN.getNodeInstance();
	var attest_givenName=ATTEST_GIVEN_NAME_FN.getNodeInstance();
	var attest_surname=ATTEST_SURNAME_FN.getNodeInstance();
	var attest_title=ATTEST_TITLE_FN.getNodeInstance();
		//set the attestation fields to the investigator
	attest_givenName.rawValue=qi_givenName.rawValue;	
	attest_surname.rawValue=qi_surname.rawValue;
	attest_title.rawValue=qi_title.rawValue;
}

/**
*	Toggles if the instructions are visible or hidden
*	@param command- indicates if hidden or visbible, using the class globals
*	@returns null
*	@throws Exception if the command is not an expected type
*/
function toggleInstructionsVisiblity(command){
	
	var instructionsContainerNode;
	var cException = script.core.util.Exception;
	instructionsContainerNode=INSTRUCTIONS_SF_FN.getNodeInstance();
	
	
	if(command===HIDE_INSTRUCTIONS){
		cUiUtil.hide(instructionsContainerNode);
	}else if(command===SHOW_INSTRUCTIONS){
		cUiUtil.show(instructionsContainerNode);
		
	}else{
		throw cException.createInstance("InstructionVisiblity function encountered an illegal command. "
				+"Value: "+command+ "is not a valid command"
		 );
	}

}//end toggleInstructionsVisiblity

function validateForm(baseNode, nodeInstance){

	if(!baseNode){
		 baseNode=cFormNodeManager.getBaseNode();
	}
	if(!nodeInstance){
		nodeInstance=xfa.form.nodes.item(0);
	}
	
	var validationFailures=baseNode.validateNode(null,true);
	
	cAccessibility.updateColorErrorsForAccessibility(nodeInstance);
	if(validationFailures!==null){			
		xfa.host.messageBox(cFailureReporter.getFailureSummary(validationFailures),cResourceManager.get("validation_title")); 
	}
	return(validationFailures);
}//end fn


function lockForm(){
		var baseNode=cFormNodeManager.getBaseNode();	
		baseNode.lock();		
		MODIFY_BTN_FN.unLock(); //unlock modify button
		cSignatureHandler.setSignatureBlockState();		
}//end fn


</script>
                  <script contentType="application/x-javascript" name="CommonAddressHandler">//imports, core
var cLog = script.core.util.Log;
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
var cUiUtil=script.core.util.UiUtil;
var cException = script.core.util.Exception;
var cConfigurationManager = script.core.util.ConfigurationManager;
//imports, utility
var cAddressUtil= script.HCeForm.util.AddressUtil; 
var cControllerUtil = script.core.util.ControllerUtil;

//Globals
var LABEL_START=cConfigurationManager.get("LabelStart");
var LABEL_END=cConfigurationManager.get("LabelEnd");

var CANADA=	cConfigurationManager.get("CANADA");
var  USA=	cConfigurationManager.get("USA");
var DR_SALUT= cConfigurationManager.get("DR_SALUT");


//Handler name
var SCRIPT_OBJECT_NAME=					"commonAddressHandler";

//Action Globals

var CLINICAL_COUNTRY_CHANGED_ACTION=	"clinical_country_changed";
var INITIALISE_COUNTRY_ACTION=			"country_init";
//new actions below here
var SPONSOR_COUNTRY_CHANGED_ACTION=		"sponsor_country_changed";
var INITIALISE_SALUT_DR_ACTION=			"drSalutAction";


//FORM NODES (FN)
// address form nodes
var CLINICAL_CONTACTHEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("sec2lblSectionC");
var CLINICAL_ADDRESSDETAILS_SF_FN=cFormNodeManager.getFormNodeForKey("sfContactAddressDetails");

//Clinical address form nodes
var CLINICAL_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("clinicalProvince");
var CLINICAL_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("clinicalPostalCode");
var CLINICAL_PROVINCE_TXT_FN=cFormNodeManager.getFormNodeForKey("section2CtxtProvince");
var CLINICAL_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("clinicalCountry");


//Sponsor address form nodes
var SPONSOR_PROVINCE_FN=cFormNodeManager.getFormNodeForKey("sponsorProvince");
var SPONSOR_POSTAL_CODE_FN=cFormNodeManager.getFormNodeForKey("sponsorPostalCode");
var SPONSOR_PROVINCE_TXT_FN=cFormNodeManager.getFormNodeForKey("section2BtxtProvince");
var SPONSOR_COUNTRY_DDL_FN=cFormNodeManager.getFormNodeForKey("sponsorCountry");

var SPONSOR_CONTACTHEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("sec2lblSectionB");
var SPONSOR_ADDRESSDETAILS_SF_FN=cFormNodeManager.getFormNodeForKey("sfSponsorDetails");

//(QI) Qualified Investigator address nodes
var QI_CONTACTHEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblQIHeading");
var QI_ADDRESSDETAILS_SF_FN=cFormNodeManager.getFormNodeForKey("sfQIAddressDetails");

//(CTS) Clincal Trial Site Address
var CTS_CONTACTHEADING_LBL_FN=cFormNodeManager.getFormNodeForKey("lblCtsHeading");
var CTS_ADDRESSDETAILS_SF_FN=cFormNodeManager.getFormNodeForKey("sfCtsAddressDetails");


_initializeFormNodes();


/* Action Handler- Place all actions here
*
*
*
*/
function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		
			case CLINICAL_COUNTRY_CHANGED_ACTION:
				cAddressUtil.countryChanged(CLINICAL_PROVINCE_FN,CLINICAL_POSTAL_CODE_FN);
				cAddressUtil.setProvinceUIState(anEvent.getSource().rawValue,CLINICAL_PROVINCE_FN.getNodeInstance(),CLINICAL_PROVINCE_TXT_FN.getNodeInstance());					
			break;
			
			case INITIALISE_COUNTRY_ACTION:
					 _setFieldReadonly(CANADA,anEvent.getSource());
			
			break;
			//added new code here
			
			case SPONSOR_COUNTRY_CHANGED_ACTION:
				cAddressUtil.countryChanged(SPONSOR_PROVINCE_FN,SPONSOR_POSTAL_CODE_FN);
				 cAddressUtil.setProvinceUIState(anEvent.getSource().rawValue,SPONSOR_PROVINCE_FN.getNodeInstance(),SPONSOR_PROVINCE_TXT_FN.getNodeInstance())	;					
			break;
			
				case INITIALISE_SALUT_DR_ACTION:
				_setFieldReadonly(DR_SALUT,anEvent.getSource());
			break;
			
				
		default:
			throw cException.createInstance(SCRIPT_OBJECT_NAME
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}//switch
}//end fn


function initialise(){
		
	//set the province UI visibility based on the country value
	cAddressUtil.setProvinceUIState(CLINICAL_COUNTRY_DDL_FN.getNodeInstance().rawValue,CLINICAL_PROVINCE_FN.getNodeInstance(),CLINICAL_PROVINCE_TXT_FN.getNodeInstance());
	//update all the tooltips based on the provided label
	var headingLabel= cResourceManager.get("lbFor")+CLINICAL_CONTACTHEADING_LBL_FN.getLabel();
	cAddressUtil.updateAllFieldTooltips(CLINICAL_ADDRESSDETAILS_SF_FN.getNodeInstance(),headingLabel,LABEL_END);
	//new initialize code here
	
	//Sponsor address initialization
	 cAddressUtil.setProvinceUIState(SPONSOR_COUNTRY_DDL_FN.getNodeInstance().rawValue,SPONSOR_PROVINCE_FN.getNodeInstance(),SPONSOR_PROVINCE_TXT_FN.getNodeInstance());
	headingLabel= cResourceManager.get("lbFor")+SPONSOR_CONTACTHEADING_LBL_FN.getLabel();
	cAddressUtil.updateAllFieldTooltips(SPONSOR_ADDRESSDETAILS_SF_FN.getNodeInstance(),headingLabel,LABEL_END);
	
	//QI address initialization
	headingLabel= cResourceManager.get("lbFor")+ QI_CONTACTHEADING_LBL_FN.getLabel();
	cAddressUtil.updateAllFieldTooltips(QI_ADDRESSDETAILS_SF_FN.getNodeInstance(),headingLabel,LABEL_END);
	
	//CTS address initialization
	headingLabel= cResourceManager.get("lbFor")+ CTS_CONTACTHEADING_LBL_FN.getLabel();
	cAddressUtil.updateAllFieldTooltips(CTS_ADDRESSDETAILS_SF_FN.getNodeInstance(),headingLabel,LABEL_END);

	
	
}


/*
* Checks to see if a form node exists. If it doesn't exist than throw an exception. Otherwise this will fail silently
*
*/

function _initializeFormNodes(){

		try{
		cControllerUtil.checkFormNode(CLINICAL_CONTACTHEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CLINICAL_CONTACTHEADING_LBL_FN");
		cControllerUtil.checkFormNode(CLINICAL_ADDRESSDETAILS_SF_FN,SCRIPT_OBJECT_NAME,"CLINICAL_ADDRESSDETAILS_SF_FN");
		cControllerUtil.checkFormNode(CLINICAL_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"CLINICAL_COUNTRY_DDL_FN");
		cControllerUtil.checkFormNode(CLINICAL_PROVINCE_FN,SCRIPT_OBJECT_NAME,"CLINICAL_PROVINCE_FN");
		cControllerUtil.checkFormNode(CLINICAL_POSTAL_CODE_FN,SCRIPT_OBJECT_NAME,"CLINICAL_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(CLINICAL_PROVINCE_TXT_FN,SCRIPT_OBJECT_NAME,"CLINICAL_PROVINCE_TXT_FN");
		//sponsor
		cControllerUtil.checkFormNode(SPONSOR_PROVINCE_FN,SCRIPT_OBJECT_NAME,"SPONSOR_PROVINCE_FN");
		cControllerUtil.checkFormNode(SPONSOR_POSTAL_CODE_FN,SCRIPT_OBJECT_NAME,"SPONSOR_POSTAL_CODE_FN");
		cControllerUtil.checkFormNode(SPONSOR_PROVINCE_TXT_FN,SCRIPT_OBJECT_NAME,"SPONSOR_PROVINCE_TXT_FN");
		cControllerUtil.checkFormNode(SPONSOR_COUNTRY_DDL_FN,SCRIPT_OBJECT_NAME,"SPONSOR_COUNTRY_DDL_FN");
		
		cControllerUtil.checkFormNode(SPONSOR_CONTACTHEADING_LBL_FN,SCRIPT_OBJECT_NAME,"SPONSOR_CONTACTHEADING_LBL_FN");
		cControllerUtil.checkFormNode(SPONSOR_ADDRESSDETAILS_SF_FN,SCRIPT_OBJECT_NAME,"SPONSOR_ADDRESSDETAILS_SF_FN");
		//QI
		cControllerUtil.checkFormNode(QI_ADDRESSDETAILS_SF_FN,SCRIPT_OBJECT_NAME,"QI_ADDRESSDETAILS_SF_FN");
		cControllerUtil.checkFormNode(QI_CONTACTHEADING_LBL_FN,SCRIPT_OBJECT_NAME,"QI_CONTACTHEADING_LBL_FN");
		
		cControllerUtil.checkFormNode(CTS_CONTACTHEADING_LBL_FN,SCRIPT_OBJECT_NAME,"CTS_CONTACTHEADING_LBL_FN");
		cControllerUtil.checkFormNode(CTS_ADDRESSDETAILS_SF_FN,SCRIPT_OBJECT_NAME,"CTS_ADDRESSDETAILS_SF_FN");
	}
	 catch (exception)
	{
		cLog.critical(cResourceManager.get("error_application", SCRIPT_OBJECT_NAME+"._initializeFormNode()"), exception);
	}

}


/*
* Sets the passed in adobe node to readonly and sets the value of the field
*@param- countryValue- the saved (rawValue) to set
*@param- countryInstance- the country Instance to process
*/
function _setFieldReadonly(fieldValue,fieldInstance){

	fieldInstance.rawValue=fieldValue;
	var field_FN=cFormNodeManager.getFormNodeForSom(fieldInstance.somExpression);		
	field_FN.lock(fieldInstance);
}

               
               
               
</script>
                  <script contentType="application/x-javascript" name="SignatureBlockHandler">
var cLog= 						script.core.util.Log;
var cFormNodeManager=			script.core.model.FormNodeManager;
var cResourceManager= 			script.core.lang.ResourceManager;
var cException=					script.core.util.Exception;
var cConfigManager=				script.core.util.ConfigurationManager;
var cUiUtil=					script.core.util.UiUtil;
var cControllerUtil = script.core.util.ControllerUtil;
var cGeneralUtil=				script.HCeForm.util.General;
var cFormHandler=				script.HCeForm.control.FormHandler;

var SCRIPT_OBJECT_NAME="SignatureBlockHandler";

var NO=				cConfigManager.get("NO");
var YES=			cConfigManager.get("YES");
var OTH=			cConfigManager.get("OTH");
var DIGITAL_SIG=	cConfigManager.get("DIGITAL_SIG");
var	IMAGE_SIG=		cConfigManager.get("IMAGE_SIG");

//action Global variables
var SIGNATURE_CHOICE_UI=  "ui_sigtype"; 
var DIG_SIG_CHANGE=		 "digSigChange";
var IMG_SIG_CHANGE=		"imgSigChange";


//FORM NODES


//signature
var	SIG_SF_FN=					cFormNodeManager.getFormNodeForKey("sfSignatureBlock"); //signature block and attestation parent subform
var DATESIG_DTE_FN=				cFormNodeManager.getFormNodeForKey("ddtSignedOnAttestation");		//date of signature					
var DIGSIG_SIG_FN=				cFormNodeManager.getFormNodeForKey("digSignature");		//digital signature control
var IMGSIG_IMG_FN=				cFormNodeManager.getFormNodeForKey("imgSignature");		//image signature control
var SIGCHOICE_RDO_FN=			cFormNodeManager.getFormNodeForKey("signatureOption");
	



_initialise();


/* Action Handler
*
*
*
*/

function actionPerformed(anEvent)
{
	switch(anEvent.getActionCommand())
	{
		case SIGNATURE_CHOICE_UI:
				_setSignatureChoice(anEvent.getSource().rawValue);
		
			break;	
			
		case DIG_SIG_CHANGE:
		
			 	_digitalSignatureChanged(anEvent.getSource(),anEvent.getValue());
			 break;	
			
		case IMG_SIG_CHANGE:
				 _imgSignatureChanged();
			break;		
		default:
			throw cException.createInstance("InstructionsHandler"
				  + ".actionPerformed() - unrecognized event '" 
				  + anEvent.getActionCommand() + "'.", "UnsupportedAction");
	}
}





/*
* Called during form initialization. 
*
*
*
*/
function initialise(){

	_setSignatureChoice(SIGCHOICE_RDO_FN.getNodeInstance().rawValue);
	 setSignatureBlockState();
	
}//end fn




function clearSignatures(){

	xfa.host.resetData(DIGSIG_SIG_FN.getNodeInstance().somExpression);
	xfa.host.resetData(IMGSIG_IMG_FN.getNodeInstance().somExpression);

}


/***Private functionality ***/
function _initialise(){

	try{
	
		cControllerUtil.checkFormNode(SIGCHOICE_RDO_FN, SCRIPT_OBJECT_NAME ,"SIGCHOICE_RDO_FN");
		cControllerUtil.checkFormNode(DIGSIG_SIG_FN, SCRIPT_OBJECT_NAME ,"DIGSIG_SIG_FN");
		cControllerUtil.checkFormNode(IMGSIG_IMG_FN, SCRIPT_OBJECT_NAME ,"IMGSIG_IMG_FN");
		cControllerUtil.checkFormNode(DATESIG_DTE_FN, SCRIPT_OBJECT_NAME ,"DATESIG_DTE_FN");
				
		cControllerUtil.checkFormNode(SIG_SF_FN,SCRIPT_OBJECT_NAME,"SIG_SF_FN");
		
	}
	catch (exception)
	{
		cLog.critical(SCRIPT_OBJECT_NAME+"._initialize()", exception);
	}
}




/* Updates the ui based on the Signature choice
* UI components are slightly awkward
*/
function _setSignatureChoice(choiceValue){

	var a_digSig=DIGSIG_SIG_FN.getNodeInstance();
	var a_imgSig=IMGSIG_IMG_FN.getNodeInstance();
	var a_dateSig=DATESIG_DTE_FN.getNodeInstance();
	//always clear date on a change
	a_dateSig.rawValue="";
	
	if(choiceValue===DIGITAL_SIG){
		cGeneralUtil.hideAndClearNodeInstance(a_imgSig);
		cUiUtil.show(a_digSig);
			
	}else if(choiceValue===IMAGE_SIG){
		cGeneralUtil.hideAndClearNodeInstance(a_digSig);
		cUiUtil.show(a_imgSig);
		
	}else{
		cGeneralUtil.hideAndClearNodeInstance(a_digSig);
		cGeneralUtil.hideAndClearNodeInstance(a_imgSig);
	}
	
}




function _digitalSignatureChanged(a_Sigfld,acroDoc){

var origSOM=a_Sigfld.somExpression;
//removes the xfa.form stuff
var acroSignFld=acroDoc.getField(origSOM.substr(14)); 

	if(acroSignFld.type=="signature"){
		if(acroSignFld.signatureInfo().date){
			_setSignatureDate();
				
		}else{
	 		_setSignatureDate(true);
	 	}
	 }

}
/** updates validation state for image signature**/
function _imgSignatureChanged(){

	var a_imgSig=IMGSIG_IMG_FN.getNodeInstance();
	
	if(a_imgSig.value.image.value){
		_setSignatureDate();
	}else{
		cFormHandler.unlockForm();
		_setSignatureDate(true);
	
	}	
	
}

// Sets the date of signature
function _setSignatureDate(clearValue){

	var a_dateSig=DATESIG_DTE_FN.getNodeInstance();
	if(clearValue===true){
		a_dateSig.rawValue="";
	}else{
		var today=new Date(Date.now());
		//since core util overrides Grr!
		a_dateSig.rawValue=today.getFullYear()+"-"
		+cGeneralUtil.pad(""+(today.getMonth()+1),2,'0')+"-"
		+cGeneralUtil.pad(""+today.getDate(),2,'0');
	}
}//end fn



function setSignatureBlockState(){

	var a_sigBlock=SIG_SF_FN.getNodeInstance();
	if(cFormHandler.isFinalized()){
		cUiUtil.show(a_sigBlock);
		cFormHandler.unlockForm(SIG_SF_FN);
	}else{
		cGeneralUtil.hideAndClearNodeInstance(a_sigBlock);
		_setSignatureChoice(SIGCHOICE_RDO_FN.getNodeInstance().rawValue);
	}

}//fn

/*
* TODO: needs to move to the general utiltities
*
*/
function createReportInstance(visualState,instanceManager){
	
	var newInstance=cGeneralUtil.addSubformInstance(instanceManager);
	if(newInstance){
		 	if(visualState!="visible"){
			cUiUtil.hide(newInstance);
		}
	 }
	return(newInstance);
}
</script>
                  <?templateDesigner expand 1?></variables>
               <bind match="none"/>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="model" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="HCeFormMain">

var cFormNodeManager = script.core.model.FormNodeManager;
var cResourceManager = script.core.lang.ResourceManager;
var cConfigManager=script.core.util.ConfigurationManager;
var cTypeEnforcer=script.core.util.TypeEnforcer;
var cControllerUtil = script.core.util.ControllerUtil;
var cLog = script.core.util.Log;
var initialized = false;


var LANGUAGE_NODE;

//var SUBMISSION_TYPE_NODE;
var YES="Y";


var SCRIPT_OBJECT_NAME="InstructionsHandler";



function getLanguage()
{
	if (!initialized)
	{
		_initialize();
	}
	return LANGUAGE_NODE.rawValue;
}

function setLanguage(langValue)
{
	if (!initialized)
	{
		_initialize();
	}
	LANGUAGE_NODE.rawValue=langValue;
}






/********PRIVATE METHODS START HERE*****/

/*
* Private function to initalize model values for the form
*
*/

function _initialize(){
	 var languageFormNode=cFormNodeManager.getFormNodeForKey("languageChoice");
	
	
	 cControllerUtil.checkFormNode(languageFormNode,"form","languageFormNode");
	
	 LANGUAGE_NODE=languageFormNode.getNodeInstance();
								
	initialized=true;
}//end _initialize
</script>
                  <script contentType="application/x-javascript" name="Common">

var cFormatValidator = script.core.validation.BasicFormatValidator;
var cResourceManager = script.core.lang.ResourceManager;
var cDrugApplModel=script.HCeForm.model.HCeFormMain;
var cLog = script.core.util.Log;
var CREDIT_CARD = "creditcardnumber";
var MONETARY = "monetary";
var DMF_NUMBER= "dmfNumber";
var CUSTOMER_ACCOUNT = "customerAcctNum"; 
var DATE_FIELD = "dateValue";
var cFormNodeManager = script.core.model.FormNodeManager;
var cGlobalRequirement = script.core.validation.GlobalRequirement;

function isFilled(testField) {
    if ((testField.rawValue != null &amp;&amp; testField.rawValue.toString().replace(/\s/g, "").length != 0)) {
        testField.fillColor = "255,255,255";
    }
}

function isDateValid(dateField) {

  dateField.fillColor = "255,255,255";
	var language = cDrugApplModel.getLanguage();
	if (dateField.rawValue != null &amp;&amp; dateField.rawValue != "") {
		//var reg = /(?:19|20\d{2})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
		// var reg =  /(?:19\d{2}|20\d{2})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
		var reg = /(\d{4})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
		
		var myDate = dateField.rawValue;
		if (myDate.length == 8) {
			var y = myDate.substr(0, 4);
			var m = myDate.substr(4, 2);
			var d = myDate.substr(6, 2);
			myDate = y + "-" + m + "-" + d;
			dateField.rawValue = myDate;
		}
		
		if (reg.test(myDate) == false) {
			if (language == "en") {
				app.alert("Please enter valid date. (ex. YYYY-MM-DD)");
			} else {
				app.alert("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)");
			}
			dateField.fillColor = "230,125,125";
			return;
		} else {
			
			var year = dateField.rawValue.split("-")[0];
			var month = dateField.rawValue.split("-")[1];
			var day = dateField.rawValue.split("-")[2];
			
			var daysInMonth = readDaysInMonth(month - 1, year);
			if (day &gt; readDaysInMonth(month - 1, year)) {
				dateField.fillColor = "230,125,125";
				if (language == "en") {
				app.alert("Please enter valid date. (ex. YYYY-MM-DD)");
			} else {
				app.alert("Veuillez entrer une date valide. (ex. AAAA-MM-JJ)");
				}
				return;
			} else {
				dateField.fillColor = "255,255,255";
			}
		}
		
		var year = dateField.rawValue.split("-")[0];
		var month = dateField.rawValue.split("-")[1];
		var day = dateField.rawValue.split("-")[2];
		var givenDate = new Date(year, month - 1, day);
		var todayDate = new Date();
		
		if (givenDate.valueOf() &gt;= todayDate.valueOf()) {
		if (language == "en") {
				app.alert("The date must be earlier than today.");
			} else {
				app.alert("La date doit être avant aujourd 'hui");
			}
		dateField.fillColor = "230,125,125";
		return;
		} 
	}
}


 function isLeapYear(year) {
     return ((year % 4 == 0) &amp;&amp; (year % 100 != 0 || year % 400 == 0));
 }

 function readDaysInMonth(month, year) {
     if (month == 1 &amp;&amp; isLeapYear(year) == true) return 29;
     else return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
 }

function validateField(field, fieldType) {
	try
	{
		// set up event object
		var validationResult = null;
		if( field.rawValue != null ) {
			switch(fieldType) {
			case CREDIT_CARD:
				validationResult = _validateCreditCard(field);
				break;
			case MONETARY :
				validationResult = _validateMonetary(field);
				break;	
            case DMF_NUMBER :
				//cLog.trace("DMF_NUMBER validation +++++++++ 0");
				validationResult = _validateDMFNumber(field);
				break;
            case CUSTOMER_ACCOUNT :
				//cLog.trace("CUSTOMER_ACCOUNT validation +++++++++ 1");
				validationResult = _validateCustomerAccount(field);
				//cLog.trace("CUSTOMER_ACCOUNT  +++++++++ 2" + validationResult); 
				break;
			 case DATE_FIELD :
				//cLog.trace("CUSTOMER_ACCOUNT validation +++++++++ 1");
				validationResult = _validateDateField(field);
				//cLog.trace("CUSTOMER_ACCOUNT  +++++++++ 2" + validationResult); 
				break;				
			default: // From Core for email/phone/postcode
				validationResult = cFormatValidator.createInstance().validateFieldFormat(field,fieldType);
			}
			
			if( validationResult != null ) {
				app.alert( validationResult );
				xfa.host.setFocus(field);
			}
		}
		return validationResult; 
	}
	catch(exception)
	{
		cLog.warn("Problem with txtBillingEmail::exit", exception);
	}

}


/**
 * Pattern: /^\d{6}$/;
 * Validates the passed DMF Number.
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateDateField(field)
{

	var reg = /(?:19|20\d{2})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
	 if (field.rawValue != null &amp;&amp; field.rawValue != "") {
                
        if (reg.test(field.rawValue) == false) {
        	field.fillColor = "230,125,125"; //"17,136,255";
            return cResourceManager.get("error_badDateValue");
            
        } else {
            var year = field.rawValue.split("-")[0];
            var month = field.rawValue.split("-")[1];
            var day = field.rawValue.split("-")[2];

            var daysInMonth = _readDaysInMonth(month - 1, year);
            if (day &gt; _readDaysInMonth(month - 1, year)) {
                field.fillColor = "230,125,125"; //"17,136,255";
                return cResourceManager.get("error_badDateValue");
            } else {
                field.fillColor = "255,255,255";
            }
        }
    }
}

function _readDaysInMonth(month, year) {
    if (month == 1 &amp;&amp; _isLeapYear(year) == true) return 29;
    else return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
}

function _isLeapYear(year) {
    return ((year % 4 == 0) &amp;&amp; (year % 100 != 0 || year % 400 == 0));
}

/**
 * Pattern: /^\d{6}$/;
 * Validates the passed DMF Number.
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateCustomerAccount(field)
{

	var regExp = /^\d{5}$/;
	    
	if (regExp.test(field.rawValue))
	{
		//cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	return cResourceManager.get("error_badCustomerAcctNum");
}


/**
 * Pattern: /^\d{4}-\d{4}$/;
 * Validates the passed DMF Number.
 * @param aString a String that contains the DMF Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateDMFNumber(field)
{

	var regExp = /^\d{4}-\d{3}$/;
	    
	if (regExp.test(field.rawValue))
	{
		//cLog.trace("nothing wrong with field " + field.rawValue);
		return null; 
	}
	return cResourceManager.get("error_badDMFNumberFormat");
}


/**
 * Pattern: ((4\d{3})|(5[1-5]\d{2})|(6011))( |)?\d{4}(\5\d{4}){2}
 * Validates the passed Credit Card Number.
 * @param aString a String that contains the Credit Card Number to validate.
 * @return a String containing the error message if there
 * is problem with the format. Null if there were no problems.
*/
function _validateCreditCard(field)
{
	var regExp = /((4\d{3})|(5[1-5]\d{2})|(6011))( |)?\d{4}(\5\d{4}){2}/i;
	    
	if (regExp.test(field.rawValue))
	{
		return null; 
	}
	return "Error format with Credit Card Number.";
}

function _validateMonetaryValue(field) {
	// var regExp = ^\$?[0-9]+(,[0-9]{3})*(\.[0-9]{2})?$;
	var regExp = /^\$?(?:\d+|\d{1,3}(?:,\d{3})*)(?:\.\d{1,2}){0,1}$/;

	if (regExp.test(field.rawValue))
	{
		return null; 
	}
	return "Error format with Money Amount.";
}

// usage: someVar.formatMoney(decimalPlaces, symbol, thousandsSeparator, decimalSeparator)
// defaults: (2, "$", ",", ".")
function _validateMonetary(field, places, symbol, thousand, decimal) {
	if (field == null) return null;

	var validationResult = _validateMonetaryValue(field);
	if( validationResult != null ) {
		return validationResult;
	}
	
	var number = new Number(field.rawValue || 0);
	field.rawValue = number.formatMoney();

	return validationResult;
}

/*
Remove non-numeric chars (except decimal point/minus sign):
var price = formatMoney(12345.99); // "$12,345.99"
priceVal = parseFloat(price.replace(/[^0-9-.]/g, '')); // 12345.99
*/
function revertMoneyVaule(value) {
	if (value == null ) return value;
	return parseFloat(value.replace(/[^0-9-.]/g, ''));
}

// Extend the default Number object with a formatMoney() method:
// usage: someVar.formatMoney(decimalPlaces, symbol, thousandsSeparator, decimalSeparator)
// defaults: (2, "$", ",", ".")
Number.prototype.formatMoney = function(places, symbol, thousand, decimal) {
	places = !isNaN(places = Math.abs(places)) ? places : 2;
	symbol = symbol !== undefined ? symbol : "$";
	thousand = thousand || ",";
	decimal = decimal || ".";
	var number = this,
	    negative = number &lt; 0 ? "-" : "",
	    i = parseInt(number = Math.abs(+number || 0).toFixed(places), 10) + "",
	    j = (j = i.length) &gt; 3 ? j % 3 : 0;
	return symbol + negative + (j ? i.substr(0, j) + thousand : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousand) + (places ? decimal + Math.abs(number - i).toFixed(places).slice(2) : "");
};

// Array Remove - By John Resig (MIT Licensed)
/*Array.prototype.remove = function(from, to) {
  var rest = this.slice((to || from) + 1 || this.length);
  this.length = from &lt; 0 ? this.length + from : from;
  return this.push.apply(this, rest);
};*/
arrayRemove = function(array, from, to) {
  var rest = array.slice((to || from) + 1 || array.length);
  array.length = from &lt; 0 ? array.length + from : from;
  return array.push.apply(array, rest);
};

var displayObjProperties = function(obj){
   var keys = [];
   for(var key in obj){
      // cLog.trace("..#.. Obj Key: &lt;"+key+"&gt;.");
      keys.push(key);
   }
   return keys;
};

/******************** Paul Hu ***************************/
//Control the relationship between Device table and Biological Materal table

var deviceTable = [
//	[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}],
//	[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}],
//	[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}]
];

var _tblDeviceRowInstances = null;
var _tblBioRowInstances = null;

function getTblDeviceRowInstances()
{
	return _tblDeviceRowInstances;
}

function getTblBioRowInstances()
{
	return _tblBioRowInstances;
}

function setTblDeviceRowInstances(value)
{
	_tblDeviceRowInstances = value;
}
function setTblBioRowInstances(value)
{
	_tblBioRowInstances = value;
}


function populateSameField(rowID) {
	for (var i=0; i&lt;deviceTable.length; i++ ) {
		var tmpDevice = deviceTable[i];
		
		if ( tmpDevice.deviceID == rowID.rawValue ) {
			if (tmpDevice.bioMaterialTable != null) {
				tmpDevice.bioMaterialTable.txBioAttributetDeviceName.rawValue = 
					tmpDevice.deviceRow.txtDeviceName.rawValue;
			}
			return tmpDevice;
		}
	}
	
	return null;
}

// Return the device which the Bio Material is added to.
function addMaterialInstanceToArray(materialRowInstance) {
	cLog.trace("*** in addMaterialInstanceToArray 00001, deviceTable.length= "+deviceTable.length);
	
	for (var j=0; j&lt;deviceTable.length; j++ ) {
		var tmpDevice = deviceTable[j];
		cLog.trace("*** in addMaterialInstanceToArray 00002");
		if (tmpDevice.bioMaterialTable == null ) {
			cLog.trace("*** in addMaterialInstanceToArray 00003: j=&lt;"+j+"&gt;.");
			//materialRowInstance.resolveNode("rowID").rawValue = tmpDevice.deviceRow.resolveNode("rowID").rawValue; //Also good !
			materialRowInstance.rowID.rawValue = tmpDevice.deviceRow.rowID.rawValue;
			tmpDevice.bioMaterialTable = materialRowInstance;
			
			cLog.trace("*** in addMaterialInstanceToArray 1: &lt;"+tmpDevice.deviceID+"&gt;.");
			//cLog.trace("*** in addMaterialInstanceToArray 2: &lt;"+tmpDevice.deviceRow.rowID.rawValue+"&gt;.");
			//cLog.trace("*** in addMaterialInstanceToArray 3: &lt;"+tmpDevice.bioMaterialTable.rowID.rawValue+"&gt;.");
			
			return tmpDevice;
		}
	}
	cLog.trace("*** in addMaterialInstanceToArray 00004");
	return null;
}



function setDropDownList(ddl, ddlList) { // ddlList = "script.DrugAppl.resources.pickList_fr.content.licAppTypeList"
	reset(ddl);

    for(var i=0; i&lt;ddlList.length; i++) {
		ddl.addItem(ddlList[i][1], ddlList[i][0]);
    }
}


function printOutSomething(){
	cLog.trace("*** weiquan test output in addMaterialInstanceToArray 00004");
}

function reset(ddl){
	ddl.clearItems();
	ddl.rawValue = ""; 
}

function showRowIds() {
	cLog.trace("1  in showRowIds");
	for (var j=0; j&lt;deviceTable.length; j++) {
		var tmpDevice = deviceTable[j];
		
		if ( tmpDevice.deviceRow != null ) {
			cLog.trace("1  Device.rowID="+tmpDevice.deviceRow.txtDeviceName.rawValue+"; Device.rowID="+tmpDevice.deviceRow.txtDeviceName+".");
		}
		if ( tmpDevice.bioMaterialTable != null ) {
			cLog.trace("2  bioMaterial.rowID="+tmpDevice.bioMaterialTable.rowID.rawValue+".");
		}
	}

	cLog.trace("3  showRowIds finished !!");
}

/**
  Row ID name must be "rowID" for all tables !!!
 */
function addOneRow(parentSubform, tblSubFormName, tblRowInstances, isMainTable) {
	try {
		//parentSubform: this.parent.parent, tblRowInstances: _sfIdetifierTbl, tblSubFormName: "sfIdetifierTbl"
		//var tblRowInstances = this.parent.parent.resolveNode('sfDevicesId._sfIdetifierTbl');  // Also good !!
		//var tblRowInstances = this.parent.parent.resolveNode('_sfIdetifierTbl');	// Also good !!
		//var tblRowInstances = _sfIdetifierTbl;	
		var addedDevice = tblRowInstances.addInstance(1);
		if (xfa.host.version &lt; 8) {
			xfa.form.recalculate(1);
		}
			
		if ( isMainTable == true ) {
			var lastIndex = tblRowInstances.count-2;
			var lastDevice = parentSubform.resolveNode(tblSubFormName+"["+lastIndex +"]");
			
			cLog.trace("...1 addOneRow lastIndex: &lt;"+lastIndex+"&gt;, lastDevice=&lt;"+lastDevice+"&gt;.");
			
			//var lastDevice = _sfIdetifierTbl[lastIndex]; // Error
			addedDevice.resolveNode("rowID").rawValue = genID(lastDevice);
		
			cLog.trace("...2 addOneRow resolveNode(rowID).rawValue: &lt;"+addedDevice.resolveNode("rowID").rawValue+"&gt;.");
		
			addDevice(addedDevice );
		}
		
		cLog.trace("..... addOneRow is finished !!!");
		
		return addedDevice;
	} catch(exception)
	{
		cLog.warn("Problem with Add an Idetifier button::click", exception);
	}
}

function genID(field) {
	if (field== null) return 0;

	var currIdSerialNo = parseInt(field.rowID.rawValue);
	if (isNaN(currIdSerialNo) || currIdSerialNo&lt;0) return 0;
	return ++currIdSerialNo;
}

function addDevice(device) {
	var currDevice = new Object(); //[{"deviceID": id0, "deviceRow": xxx, "bioMaterialTable": yyy}];
	
	var rawValue = device.rowID.rawValue;
	// var rawValue = device.resolveNode("rowID").rawValue; //also good !!
	
	currDevice.deviceID = rawValue; 	
	currDevice.deviceRow = device; 
	currDevice.bioMaterialTable = null; 

	cLog.trace("*** addDevice::"+currDevice.deviceRow.rowID.rawValue+",, "+" deviceTable.length="+deviceTable.length+".");
	
	deviceTable.push(currDevice);
	
	cLog.trace("*** after deviceTable.length="+deviceTable.length+".");
	return currDevice;
}

////whole form validation
function formValidationAndLock(thisNode) {
    var successValidation = true;
     var correctInput = true;
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
            if (oFields.item(nNodeCount).presence == "hidden") continue;
            if (oFields.item(nNodeCount).access== "readOnly") {
            	//cLog.info("** Field Name: "+oFields.item(nNodeCount).name);
            	continue;
            }
            
           /* if (oFields.item(nNodeCount).fillColor === "230,125,125") {
            
            cLog.info("** Field Name: "+oFields.item(nNodeCount).name);
                 successValidation = false;
                 continue;
             }*/
             if (oFields.item(nNodeCount).fillColor === "230,125,125") {
                 correctInput = false;
                 continue;
             }
            if (oFields.item(nNodeCount).mandatory != "disabled") {
            	//cLog.info("-- Field Name: "+oFields.item(nNodeCount).name);
            	
                //if(oFields.item(nNodeCount).rawValue==null || oFields.item(nNodeCount).rawValue==""){
                if (oFields.item(nNodeCount).rawValue == null || oFields.item(nNodeCount).rawValue.toString().replace(/\s/g, "").length == 0) {

                    oFields.item(nNodeCount).fillColor = "230,125,125"; //"17,136,255";
                    successValidation = false;
                } else {
                    oFields.item(nNodeCount).fillColor = "255,255,255";
                }
                
                continue;
            }
            
            //cLog.info("&amp;&amp; Field Name: "+oFields.item(nNodeCount).name);
        }
    }
    
    var cFormNodeManager = script.core.model.FormNodeManager;
	var PAGE1_SF_FN = cFormNodeManager.getFormNodeForKey("sfPage1");
	var cAccessibility = this.resolveNode("script.Accessibility");
	cAccessibility.updateColorErrorsForAccessibility(PAGE1_SF_FN.getNodeInstance().parent);
    
  if (correctInput == false &amp;&amp; successValidation == true) {
		cGlobalRequirement.finalizedFailMessage();
		return;
	}
     
     
     if (successValidation == true) {
     cFormNodeManager.getFormNodeForKey("sfInstructionsContent").getNodeInstance().presence = "hidden";
        for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
            var oFields = xfa.layout.pageContent(nPageCount, "field");
            var nNodesLength = oFields.length;
            for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
				if (oFields.item(nNodeCount).access != "protected"){
				if((oFields.item(nNodeCount).name.toLowerCase().indexOf("chkD")==-1)&amp;&amp;(oFields.item(nNodeCount).name.toLowerCase().indexOf("signature")==-1))
                oFields.item(nNodeCount).access = "readOnly";
                
                if(oFields.item(nNodeCount).name.indexOf("btn")&gt;=0){
                 if(oFields.item(nNodeCount).name =="btnModify") continue;
				oFields.item(nNodeCount).fillColor = "230,230,230";
				 cLog.info("&amp;&amp; Field Name: "+oFields.item(nNodeCount).name);
				 }
                
                }

            }
        }
       cGlobalRequirement.finalizedSuccessMessage();
       if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
            //app.alert("The form has been validated and locked for editing. It can now be printed and sent to Health Canada. In order to modify the form, press the \"Modify\" button.");
            app.alert("We strongly encourage you to save the form at this point. Once the form is digitally signed, you will not be able to correct it and you will need to re-input all the information again. Please proceed to signing the form after saving it");
        	} else {
            //app.alert("Le formulaire a été validé et verrouiller contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton \"Modifier\".");
        	app.alert("Nous vous encourageons fortement à sauvegarder le formulaire à ce point-ci. Une fois que le formulaire est signé électroniquement, vous serez incapable de le corriger et vous aurez à entrer à nouveau toute l'information. Veuillez procéder à la signature du formulaire une fois que vous l'avez sauvegarder.");
        	}
    } else {
		cGlobalRequirement.finalizedFailMessage();
    }
}


function makeEditable() {
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
            if(oFields.item(nNodeCount).access != "protected")
             oFields.item(nNodeCount).access = "open";
     
              if(oFields.item(nNodeCount).name.indexOf("btn")&gt;=0){
				oFields.item(nNodeCount).fillColor = "212,208,200";
				 }
        }
    }
}
</script>
                  <?templateDesigner expand 1?></variables>
               <subform w="100mm" h="50mm" name="delegate">
                  <variables>
                     <script usehref="..\..\fragments\delegates\PostalCodeFormatDelegate.xdp#som($template.form1.#subform.#variables.PostalCodeFormatDelegate)"/>
                     <script usehref="..\..\fragments\delegates\EmailFormatDelegate.xdp#som($template.form1.#subform.#variables.EmailFormatDelegate)"/>
                     <script usehref="..\..\fragments\delegates\TelephoneFormatDelegate.xdp#som($template.form1.#subform.#variables.TelephoneFormatDelegate)"/>
                     <script contentType="application/x-javascript" name="SponsorPostalCodeDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_sponserZipFormat");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactPhoneFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=		script.HCeForm.model.delegate.TelephoneFormatDelegate;

/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=   cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactPhone");
	oDelegate.setCountryNodeAlias ("clinicalCountry");
	oDelegate.setAsPhoneNumber();
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactFaxFormatDelegate">


//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=		script.HCeForm.model.delegate.TelephoneFormatDelegate;

/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=   cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactFax");
	oDelegate.setCountryNodeAlias ("clinicalCountry");
	oDelegate.setAsFaxNumber();
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactPostalCodeDelegate">


//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactZipFormat");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="ContactEmailFormatDelegate">

//imports
var cLog = 						script.core.util.Log;
var cEmailFormatDelegate=		script.HCeForm.model.delegate.EmailFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the Delegate instance
 */
function createInstance()
{
	var oDelegate=  cEmailFormatDelegate.createInstance();
	oDelegate.setErrorText("error_contactEmail");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="CTSPostalCodeFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPostalCodeFormatDelegate=		script.HCeForm.model.delegate.PostalCodeFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cPostalCodeFormatDelegate.createInstance();
	oDelegate.setErrorText("error_ctsZipFormat");
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="QualInvestPhoneFormatDelegate">
//imports
var cLog = 							script.core.util.Log;
var cPhoneFormatDelegate=		script.HCeForm.model.delegate.TelephoneFormatDelegate;

/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=   cPhoneFormatDelegate.createInstance();
	oDelegate.setErrorText("error_qualInvestPhone");
	oDelegate.setCountryNodeAlias("quiCountry");
	oDelegate.setAsPhoneNumber();
	return oDelegate;
}
</script>
                     <script contentType="application/x-javascript" name="QualInvestEmailFormatDelegate">


//imports
var cLog = 						script.core.util.Log;
var cEmailFormatDelegate=		script.HCeForm.model.delegate.EmailFormatDelegate;
/*******************************************************************************
 * Gets a new PostalCodeFormatDelegate. Adobe does not allow object instances
 * to be created outside of their packaging, so it must be done here.
 * Note that this is only intended for use by FormNodeFactory. All instances
 * should be created by that class.
 * @return the newPostalCodeFormatDelegate instance
 */
function createInstance()
{
	var oDelegate=  cEmailFormatDelegate.createInstance();
	oDelegate.setErrorText("error_qualInvestEmail");
	return oDelegate;
	//return null
}
</script>
                     <?templateDesigner expand 1?></variables>
                  <?templateDesigner expand 1?></subform>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="nodeDefinitions" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="General">	
var content={
		root: {
			somExpression: "xfa.form.HCeForm",
		},	
		sfPage1: {
			somExpression: "sfPage1",
			parentNodeKey: "root"},
		
		sfMainHeader: {
			somExpression: "sfMainHeader",
			parentNodeKey: "sfPage1"},
			
		languageChoice: {
			somExpression: "pageLanguage",
			parentNodeKey: "sfMainHeader"},
			
		chkEnglish: {
			somExpression: "chkEnglish",
			parentNodeKey: "languageChoice"},
			
		chkFrancais: {
			somExpression: "chkFrancais",
			parentNodeKey: "languageChoice"},		
		
		lblFormTitle: {
			somExpression: "lblFormTitle",
			parentNodeKey: "sfMainHeader",
			labelKey:		"lbApplTitle"},
		
sfInstructions: {
			somExpression: "sfInstructions",
			parentNodeKey: "sfPage1"},
		
		btnHideInstructions: {
			somExpression: "btnHideInstructions",
			parentNodeKey: "sfInstructions",
			labelKey:		"lbHideInstruct"},
		
		btnViewInstructions: {
			somExpression:	"btnViewInstructions",
			parentNodeKey:	"sfInstructions",
			labelKey:		"lbShowInstruct"},
		
	
			
sfInstructionsContent: {
	somExpression: "sfInstructionsContent",
	parentNodeKey: "sfPage1"},

lblInstructions: {
	somExpression: "lblInstructions",
	parentNodeKey: "sfInstructionsContent",
	labelKey:	"lblInstructionsKey"},
	
			
}
</script>
                  <script contentType="application/x-javascript" name="main">
var content = {
sfPart1: {
	somExpression: "sfPart1",
	parentNodeKey: "sfPage1"},

lblProtocol: {
	somExpression: "lblProtocol",
	parentNodeKey: "sfPart1",
	labelKey: "lblProtocol"},

sfProtocolInfo: {
	somExpression: "sfProtocolInfo",
	parentNodeKey: "sfPart1"},

ddlSubmission: {
	somExpression: "ddlSubmission",
	parentNodeKey: "sfProtocolInfo",
	pickListKey:	"submissionList",
	labelKey: "ddlSubmission",
	toolTipKey: "ddlSubmission_tip"
	},

txtProtocolTitle: {
	somExpression: "txtProtocolTitle",
	parentNodeKey: "sfProtocolInfo",
	labelKey: "txtProtocolTitle",
	fieldNumber: "1"},

txtProtocolNo: {
	somExpression: "txtProtocolNo",
	parentNodeKey: "sfProtocolInfo",
	labelKey: "txtProtocolNo",
	fieldNumber: "2"},

sfPart2: {
	somExpression: "sfPart2",
	parentNodeKey: "sfPage1"},


lblProductInfo: {
	somExpression: "lblProductInfo",
	parentNodeKey: "sfPart2",
	labelKey: "lblProductInfo"},

sfNHPInfoSectionA: {
	somExpression: "sfNHPInfoSectionA",
	parentNodeKey: "sfPart2"},

sec1AlblSectionA: {
	somExpression: "lblSectionA",
	parentNodeKey: "sfNHPInfoSectionA",
	labelKey: "lblSectionA2"},

txtBrand: {
	somExpression: "txtBrand",
	parentNodeKey: "sfNHPInfoSectionA",
	labelKey: "txtBrand",
	fieldNumber: "3"},

txtIngredient: {
	somExpression: "txtIngredient",
	parentNodeKey: "sfNHPInfoSectionA",
	labelKey: "txtIngredient",
	fieldNumber: "4"},

sfSponsorInfoSectionB: {
	somExpression: "sfSponsorInfoSectionB",
	parentNodeKey: "sfPart2"},


sfSponsorHeading: {
	somExpression: "sfAddressHeading",
	parentNodeKey: "sfSponsorInfoSectionB"},

sec2lblSectionB: {
	somExpression: "lblSectionB",
	parentNodeKey: "sfSponsorHeading",
	labelKey: "lblSectionB2"},


sfSponsorDetails: {
	somExpression: "sfAddressDetails",
	parentNodeKey: "sfSponsorInfoSectionB"},
	
txtSponsorName: {
	somExpression: "txtSponsorName",
	parentNodeKey: "sfSponsorDetails",
	labelKey: "txtSponsorName",
	//toolTipKey:	"txtSponsorNameTT",
	fieldNumber: "5"},

section2BtxtAddress: {
	somExpression: "txtAddress",
	parentNodeKey: "sfSponsorDetails",
	//toolTipKey:	"section2BtxtAddressTT",
	labelKey: "txtAddress",
	fieldNumber: "6"},

section2BtxtCity: {
	somExpression: "txtCity",
	parentNodeKey: "sfSponsorDetails",
	//toolTipKey:	"section2BtxtCityTT",
	labelKey: "txtCity",
	fieldNumber: "7"},

sponsorCountry: {
	somExpression: "ddlCountry",
	parentNodeKey: "sfSponsorDetails",
	pickListKey:	"countryList",
	//toolTipKey:	"sponsorCountryTT",
	labelKey: "ddlCountry",
	fieldNumber: "8"},

sponsorProvince: {
	somExpression: "ddlProvince",
	//toolTipKey:	"section2BtxtProvinceTT",
	parentNodeKey: "sfSponsorDetails",
	delegate:		"script.core.model.delegate.ProvinceStateDelegate",
	fieldNumber: "9"},

section2BtxtProvince: {
	somExpression: "txtProvince",
	parentNodeKey: "sfSponsorDetails",
	//toolTipKey:	"section2BtxtProvinceTT",
	labelKey: "txtProvince",
	fieldNumber: "9"},

sponsorPostalCode: {
	somExpression: "txtPostalCode",
	//toolTipKey:	"sponsorPostalCodeTT",
	parentNodeKey: "sfSponsorDetails",
	delegate:		"script.HCeForm.model.delegate.SponsorPostalCodeDelegate",
	fieldNumber: "10"},
	

sfPart3: {
	somExpression: "sfPart3",
	parentNodeKey: "sfPage1"},

lblCTSInfo: {
	somExpression: "lblCTSInfo",
	parentNodeKey: "sfPart3",
	labelKey: "lblCTSInfo"},

sfClinicalTrialSectionA: {
	somExpression: "sfClinicalTrialSectionA",
	parentNodeKey: "sfPart3"},
	
	
sfCtsAddressHeading: {
	somExpression: "sfAddressHeading",
	parentNodeKey: "sfClinicalTrialSectionA"},	

lblCtsHeading: {
	somExpression: "lblSectionA",
	parentNodeKey: "sfCtsAddressHeading",
	labelKey: "lblSectionA"},

sfCtsAddressDetails: {
	somExpression: "sfAddressDetails",
	parentNodeKey: "sfClinicalTrialSectionA"},	

txtSiteName: {
	somExpression: "txtSiteName",
	parentNodeKey: "sfCtsAddressDetails",
	//toolTipKey:	"txtSiteNameTT",
	labelKey: "txtSiteName",
	fieldNumber: "21"},

section3AtxtAddress: {
	somExpression: "txtAddress",
	parentNodeKey: "sfCtsAddressDetails",
	//toolTipKey:	"section3AtxtAddressTT",
	labelKey: "txtAddress",
	fieldNumber: "22"},

section3AtxtCity: {
	somExpression: "txtCity",
	parentNodeKey: "sfCtsAddressDetails",
	//toolTipKey:	"section3AtxtCityTT",
	labelKey: "txtCity",
	fieldNumber: "23"},

ctsCountry: {
	somExpression: "ddlCountry",
	parentNodeKey: "sfCtsAddressDetails",
	//toolTipKey:	"ctsCountryTT",
	pickListKey:	"countryList",
	labelKey: "ddlCountry",
	fieldNumber: "24"},

ctsProvince: {
	somExpression: "ddlProvince",
	parentNodeKey: "sfCtsAddressDetails",
	//delegate:		"script.core.model.delegate.ProvinceStateDelegate",
	pickListKey:   "provinceList",
	//toolTipKey:	"ctsProvinceTT",
	labelKey: "province",
	fieldNumber: "25"},


ctsPostalCode: {
	somExpression: "txtPostalCode",
	parentNodeKey: "sfCtsAddressDetails",
	delegate:		"script.HCeForm.model.delegate.CTSPostalCodeFormatDelegate",
	//toolTipKey:	"ctsPostalCodeTT",
	labelKey: "postalCode",
	fieldNumber: "26"},

sfQISectionB: {
	somExpression: "sfQISectionB",
	parentNodeKey: "sfPart3"},
	
sfQIAddressHeading: {
	somExpression: "sfAddressHeading",
	parentNodeKey: "sfQISectionB"},	

lblQIHeading: {
	somExpression: "lblSectionB",
	parentNodeKey: "sfQIAddressHeading",
	labelKey: "lblSectionB"},
	
sfQIAddressDetails: {
	somExpression: "sfAddressDetails",
	parentNodeKey: "sfQISectionB"},	
	
section3BddlSalutation: {
	somExpression: "ddlSalutation",
	parentNodeKey: "sfQIAddressDetails",
	pickListKey:	"salutationList",
	//toolTipKey:	"section3BddlSalutationTT",
	labelKey: "ddlSalutation",
	fieldNumber: "27"},

section3BtxtGivenName: {
	somExpression: "txtGivenName",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtGivenNameTT",
	labelKey: "txtGivenName",
	fieldNumber: "28"},

section3BtxtInitials: {
	somExpression: "txtInitials",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtInitialsTT",
	labelKey: "txtInitials"},

section3BtxtSurname: {
	somExpression: "txtSurname",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtSurnameTT",
	labelKey: "txtSurname",
	fieldNumber: "29"},

section3BtxtTitle: {
	somExpression: "txtTitle",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtTitleTT",
	labelKey: "txtTitle",
	fieldNumber: "30"},

section3BddlLangPref: {
	somExpression: "ddlLangPref",
	parentNodeKey: "sfQIAddressDetails",
	pickListKey:	"languageList",
	//toolTipKey:	"section3BddlLangPrefTT",
	labelKey: "ddlLangPref",
	fieldNumber: "31"},

section3BtxtAddress: {
	somExpression: "txtAddress",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtAddressTT",
	labelKey: "txtAddress",
	fieldNumber: "32"},

section3BtxtCity: {
	somExpression: "txtCity",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtCityTT",
	labelKey: "txtCity",
	fieldNumber: "33"},

quiCountry: {
	somExpression: "ddlCountry",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"quiCountryTT",
	pickListKey:	"countryList",
	labelKey: "ddlCountry",
	fieldNumber: "34"},

quiProvince: {
	somExpression: "ddlProvince",
	parentNodeKey: "sfQIAddressDetails",
	pickListKey:	"provinceList",
	//toolTipKey:	"quiProvinceTT",
	labelKey: "province",
	//delegate:		"script.core.model.delegate.ProvinceStateDelegate",
	fieldNumber: "35"},



quiPostalCode: {
	somExpression: "txtPostalCode",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"quiPostalCodeTT",
	labelKey: "postalCode",
	//delegate:		"script.core.model.delegate.PostalZipDelegate",
	fieldNumber: "36"},

section3BtxtTelephone: {
	somExpression: "txtTelephone",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtTelephoneTT",
	labelKey: 	"txtTelephone",
	delegate:	"script.HCeForm.model.delegate.QualInvestPhoneFormatDelegate",
	fieldNumber: "37"},

section3BtxtExtension: {
	somExpression: "txtExtension",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtExtensionTT",
	labelKey: "txtExtension"},

section3BtxtFax: {
	somExpression: "txtFax",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtFaxTT",
	labelKey: "txtFax",
	fieldNumber: "38"},

section3BtxtEmail: {
	somExpression: "txtEmail",
	parentNodeKey: "sfQIAddressDetails",
	//toolTipKey:	"section3BtxtEmailTT",
	labelKey: "txtEmail",
	delegate:"script.HCeForm.model.delegate.QualInvestEmailFormatDelegate",
	fieldNumber: "39"},


sfREBASectionC: {
	somExpression: "sfREBASectionC",
	parentNodeKey: "sfPart3"},

lblSectionC: {
	somExpression: "lblSectionC",
	parentNodeKey: "sfREBASectionC",
	labelKey: "lblSectionC"},

chkIncludeMember: {
	somExpression: "chkIncludeMember",
	parentNodeKey: "sfREBASectionC",
	labelKey: "chkIncludeMember"},

txtREBName: {
	somExpression: "txtREBName",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtREBName"},

ddtApproval: {
	somExpression: "ddtApproval",
	parentNodeKey: "sfREBASectionC",
	labelKey: "ddtApproval"},

section3CtxtAddress: {
	somExpression: "txtAddress",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtAddress"},

section3CtxtCity: {
	somExpression: "txtCity",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtCity"},

rebaCountry: {
	somExpression: "ddlCountry",
	parentNodeKey: "sfREBASectionC",
	pickListKey:	"countryList",
	labelKey: "ddlCountry"},

rebaProvince: {
	somExpression: "ddlProvince",
	parentNodeKey: "sfREBASectionC",
	delegate:		"script.core.model.delegate.ProvinceStateDelegate"},

section3CtxtProvince: {
	somExpression: "txtProvince",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtProvince"},

rebaPostalCode: {
	somExpression: "txtPostalCode",
	parentNodeKey: "sfREBASectionC",
	delegate:		"script.core.model.delegate.PostalZipDelegate"},

lblREBChair: {
	somExpression: "lblREBChair",
	parentNodeKey: "sfREBASectionC",
	labelKey: "lblREBChair"},

section3CddlSalutation: {
	somExpression: "ddlSalutation",
	parentNodeKey: "sfREBASectionC",
	pickListKey:	"salutationList",
	labelKey: "ddlSalutation"},

section3CtxtGivenName: {
	somExpression: "txtGivenName",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtGivenName"},

section3CtxtInitials: {
	somExpression: "txtInitials",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtInitials"},

section3CtxtSurname: {
	somExpression: "txtSurname",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtSurname"},

section3CtxtTitle: {
	somExpression: "txtTitle",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtTitle"},

section3CddlLangPref: {
	somExpression: "ddlLangPref",
	parentNodeKey: "sfREBASectionC",
	pickListKey:	"languageList",
	labelKey: "ddlLangPref"},

section3CtxtTelephone: {
	somExpression: "txtTelephone",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtTelephone"},

section3CtxtExtension: {
	somExpression: "txtExtension",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtExtension"},

section3CtxtFax: {
	somExpression: "txtFax",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtFax"},

section3CtxtEmail: {
	somExpression: "txtEmail",
	parentNodeKey: "sfREBASectionC",
	labelKey: "txtEmail"},




lblCertificationHeader: {
	somExpression: "lblCertificationHeader",
	parentNodeKey: "sfAuthSignOfficial",
	labelKey: "lblCertificationHeader"},
	


secAutholblCertifyPoint: {
	somExpression: "lblCertifyPoint",
	parentNodeKey: "sfAuthSignOfficial",
	labelKey: "lblCertifyPoint"},


		}
</script>
                  <script usehref="..\..\fragments\address\addressNodeDefinitions.xdp#som($template.form1.#subform.#variables.address)"/>
                  <script contentType="application/x-javascript" name="Finalize">

var content={

	sfAuthSignOfficial: {
		somExpression: "sfAuthSignOfficial",
		parentNodeKey: "sfPage1"},
		
		
	sfAttestation: {
		somExpression: "sfAttestation",
		parentNodeKey: "sfAuthSignOfficial"},

	sfAttest1: {
		somExpression: "sfAttest1",
		parentNodeKey: "sfAttestation"},
	
	lblAttest1: {
		somExpression: "lblAttest1",
		parentNodeKey: "sfAttest1",
		labelKey:		"lbAttest1"},
	
	sfAttest2: {
		somExpression: "sfAttest2",
		parentNodeKey: "sfAttestation"},
	
	lblAttest2: {
		somExpression: "lblAttest2",
		parentNodeKey: "sfAttest2",
		labelKey:		"lbAttest2"},
	
	sfAttest3: {
		somExpression: "sfAttest3",
		parentNodeKey: "sfAttestation"},
	
	lblAttest3: {
		somExpression: "lblAttest3",
		parentNodeKey: "sfAttest3",
		labelKey:		"lbAttest3"},
	
	sfAttest4: {
		somExpression: "sfAttest4",
		parentNodeKey: "sfAttestation"},
	
	lblAttest4: {
		somExpression: "lblAttest4",
		parentNodeKey: "sfAttest4",
		labelKey:		"lbAttest4"},
	
	sfAttest5: {
		somExpression: "sfAttest5",
		parentNodeKey: "sfAttestation"},
	
	lblAttest5: {
		somExpression: "lblAttest5",
		parentNodeKey: "sfAttest5",
		labelKey:		"lbAttest5"},	
			

	lblTitleAttestation: {
		somExpression: "lblTitleAttestation",
		parentNodeKey: "sfAuthSignOfficial",
		labelKey: "lblTitleAttestation"},
	
	/*chkAttestation: {
		somExpression: "chkAttestation",
		parentNodeKey: "sfAuthSignOfficial",
		labelKey: "chkAttestation"},
		
		lblAttestation: {
		somExpression: "lblAttestation",
		parentNodeKey: "sfAuthSignOfficial",
		labelKey: "lblAttestation"},
		
		lblAttest: {
		somExpression: "lblAttest",
		parentNodeKey: "sfAuthSignOfficial",
		labelKey:	 "lblAttest"},
		*/
	
	sfAttestName: {
		somExpression: "sfAttestName",
		parentNodeKey: "sfAuthSignOfficial"},	
		
	ddlSalutationAttest: {
		somExpression: "ddlSalutation",
		parentNodeKey: "sfAttestName",
		toolTipKey:	"ddlSalutationTT",
		labelKey: "ddlSalutation",
		pickListKey:	"salutationList"},
		
	
	txtGivenNameAttestation: {
		somExpression: "txtGivenNameAttestation",
		parentNodeKey: "sfAttestName",
		toolTipKey:	"txtGivenNameAttestationTT",
		labelKey: "txtGivenNameAttestation"},
	
	txtSurnameAttestation: {
		somExpression: "txtSurnameAttestation",
		parentNodeKey: "sfAttestName",
		toolTipKey:	"txtSurnameAttestationTT",
		labelKey: "txtSurnameAttestation"},
	
	txtTitleAttestation: {
		somExpression: "txtTitleAttestation",
		parentNodeKey: "sfAttestName",
		toolTipKey:	"txtTitleAttestationTT",
		labelKey: "txtTitleAttestation" },		
		
	sfSignatureBlock: {
		somExpression: "sfSignatureBlock",
		parentNodeKey: "sfAuthSignOfficial"},
	
	
	signatureOption: {
		somExpression: "signatureOption",
		parentNodeKey: "sfSignatureBlock",
	},
	
	chkDigitalID: {
		somExpression: "chkDigitalID",
		parentNodeKey: "signatureOption",
		labelKey: "chkDigitalID"},
	
	chkDigitalImage: {
		somExpression: "chkDigitalImage",
		parentNodeKey: "signatureOption",
		labelKey: "chkDigitalImage"},
	
	digSignature: {
		somExpression: "digSignature",
		parentNodeKey: "sfSignatureBlock",
		labelKey: "lbSignature"},
		
	imgSignature: {
		somExpression: "imgSignature",
		parentNodeKey: "sfSignatureBlock",
		labelKey: "lbSignature"},
	
	ddtSignedOnAttestation: {
		somExpression: "ddtSignedOnAttestation",
		parentNodeKey: "sfSignatureBlock",
		labelKey: "ddtSignedOnAttestation"},
	
	sfFinalizeButton: {
		somExpression: "sfFinalizeButton",
		parentNodeKey: "sfAuthSignOfficial"},
	
	btnFinalizeAndLock: {
		somExpression: "btnFinalizeAndLock",
		parentNodeKey: "sfFinalizeButton",
		labelKey: "btnFinalizeAndLock"},
	
	btnModify: {
		somExpression: "btnModify",
		parentNodeKey: "sfFinalizeButton",
		labelKey: "btnModify"},
	
	
}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="resources" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="attest_en">///added Nov 2015
var content={

	lbAttest1:		"In respect of the identified clinical trial, I certify, as the qualified investigator for this site that:\n",
	lbAttest2:		"&lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"letter-spacing:0in\"&gt;1. I am a physician or dentist and a member in good standing of a professional medical or dental association as defined in Part C Division 5 of the&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-style:italic\"&gt;Food and Drug Regulations&lt;/span&gt;;&lt;/p&gt;&lt;p style=\"letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;/body&gt;",
	lbAttest3:		"2. I will supervise the medical care and medical decisions respecting this clinical trial at this site;\n ",
	lbAttest4:		"3. I will conduct this clinical trial in accordance with Good Clinical Practices; and\n",
	lbAttest5:		"4. I will immediately on discontinuance of the clinical trial by the sponsor, in its entirety or at a clinical trial site, inform both the clinical trial subjects and the Research Ethics Board for this site of the discontinuance, provide them with the reasons for the discontinuance, and advise them in writing of any potential risks to the health of clinical trial subjects or other persons.",


}
</script>
                  <script contentType="application/x-javascript" name="attest_fr">///added Nov 2015

var content={

	lbAttest1:		" En ce qui concerne l’essai clinique visé, je certifie, à titre de chercheur qualifié pour ce lieu que :\n",
	//lbAttest2:		"&lt;body xmlns=\"http://www.w3.org/1999/xhtml/\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"letter-spacing:0in\"&gt;1. je suis médecin ou dentiste et membre en règle d’une association professionnelle médicale ou dentaire au sens de la définition contenue dans le titre 5 de la partie C du&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-style:italic\"&gt;Règlement sur les aliments et drogues&lt;/span&gt;;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;/body&gt;",
	//lbAttest2: 		"&lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"letter-spacing:0in\"&gt;1. je suis médecin ou dentiste et membre en règle d’une association professionnelle médicale ou dentaire au sens de la définition contenue dans le titre 5 de la partie C du&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-style:italic\"&gt;Règlement sur les aliments et drogues&lt;/span&gt;;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;/body&gt;",
	lbAttest2:		"&lt;body xmlns=\"http://www.w3.org/1999/xhtml\" xmlns:xfa=\"http://www.xfa.org/schema/xfa-data/1.0/\"&gt;&lt;p style=\"text-decoration:none;letter-spacing:0in\"&gt;1. je suis médecin ou dentiste et membre en règle d’une association professionnelle médicale ou dentaire au sens de la définition contenue dans le titre 5 de la partie C du&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;span style=\"font-style:italic\"&gt;Règlement sur les aliments et drogues&lt;/span&gt;;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;p style=\"text-decoration:none;letter-spacing:0in\"&gt;&lt;span style=\"xfa-spacerun:yes\"&gt; &lt;/span&gt;&lt;/p&gt;&lt;/body&gt;",
 
	lbAttest3:		"2. je m’engage à superviser les soins médicaux et les décisions médicales relativement à l’essai clinique mené au lieu visé;\n ",
	lbAttest4:		"3. je m’engage à mener cet essai clinique conformément aux bonnes pratiques cliniques;\n",
	lbAttest5:		"4. en cas d’abandon total ou partiel de l’essai clinique par le promoteur, je m’engage à en informer immédiatement les participants et le comité d’éthique pour la recherche pour le lieu d’essai visé et à les informer par écrit de tout risque potentiel pour la santé des participants à l’essai clinique ou d’autres personnes.",


}
</script>
                  <script contentType="application/x-javascript" name="general_en">

var content={
	lbApplTitle : 		"QUALIFIED INVESTIGATOR UNDERTAKING",	
	lbHideInstruct:		"Hide Instructions",
	lbShowInstruct:		"Show Instructions",
	lblInstructionsKey:	"This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the \"Finalize\" button at the bottom of the form before printing and signing. \n\nOnce finalized, the fields in the form becomes \"locked\" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the \"Modify\" button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the \"Finalize\" button again to re-validate entries.\n\n"
	+ "Alternatively: \n\n" 
	+ "-Save, print, sign and date the completed form;\n" 
	+ "-Scan the signed form, and \n"
	+ "-Send to Health Canada in electronic format.\n"
    +"\n\nAn undertaking must be completed by the qualified investigator responsible for the conduct of the clinical trial at the site specified below. The completed undertaking must be retained by the clinical trial sponsor for a period of 25 years.\n\nPlease note that the Qualified Investigator Undertaking should not be submitted to Health Canada unless requested.",
	validation_title:			"Validation Results",
	validation_pass:			"This form successfully validated",
	
}
</script>
                  <script contentType="application/x-javascript" name="general_fr">
var content={

	lbApplTitle : 		"ENGAGEMENT DU CHERCHEUR QUALIFIÉ",	

	lbHideInstruct:		"Masquer les instructions",
	lbShowInstruct:		"Afficher les instructions",
	lblInstructionsKey: "Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton \"Finaliser\" au bas du formulaire avant de l'imprimer et de le signer. \n\nUne fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton \"Modifier\" au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton \"Finaliser\" à nouveau afin de valider les entrées.\n\n" 
                   + "Alternativement: \n\n"
				   + "-Enregistrez, imprimez, signez et datez le formulaire rempli; \n"
			       + "-Scannez le formulaire signé et \n"
				   + "-Envoyer à Santé Canada en format électronique. "
				   +"\n\nLe formulaire d’engagement doit être rempli par le chercheur qualifié responsable de la conduite de l’essai clinique au lieu mentionné ci-dessous. Le promoteur de l’essai clinique doit conserver le formulaire d’engagement rempli pendant une période de 25 ans.\n\nVeuillez noter que l’engagement du chercheur qualifié ne doit être transmis à Santé Canada que sur demande",

	validation_title:	"Résultats de la validation",
}
</script>
                  <script contentType="application/x-javascript" name="ToolTip_en">

var content = {
ddlSubmission_tip:	"Please select CTA for an initial submission and CTA-A for amendments to a previously submitted CTA",
txtBrand_tip:	"This name should be consistent with the name provided in Part 1, Section 8 of the HC/SC 3011 form.",
txtProperName_tip:	"This is the product name referenced in HC/SC Food and Drug Regulations and/or technical and scientific journals - For more information access guide as per Link provided at top of form.",

txtSponsorNameTT: "SPONSOR OF CLINICAL TRIAL - Company Name",
section2BtxtAddressTT:"SPONSOR OF CLINICAL TRIAL - Street/Suite/PO Box",
section2BtxtCityTT:"SPONSOR OF CLINICAL TRIAL - City - Town",
sponsorCountryTT:"SPONSOR OF CLINICAL TRIAL - Country",
sponsorProvinceTT:"SPONSOR OF CLINICAL TRIAL - Province",
section2BtxtProvinceTT:"SPONSOR OF CLINICAL TRIAL - Province/State",
sponsorPostalCodeTT:"SPONSOR OF CLINICAL TRIAL - Postal/ZIP Code",

section2CddlSalutationTT:"CONTACT FOR THIS CLINICAL TRIAL - Salutation",
section2CtxtGivenNameTT:"CONTACT FOR THIS CLINICAL TRIAL - Given Name",
section2CtxtInitialsTT:"CONTACT FOR THIS CLINICAL TRIAL - Initials",
section2CtxtSurnameTT:"CONTACT FOR THIS CLINICAL TRIAL - Surname",
section2CtxtTitleTT:"CONTACT FOR THIS CLINICAL TRIAL - Title",
section2CddlLangPrefTT:"CONTACT FOR THIS CLINICAL TRIAL - Language",
txtCompanyNameTT: "CONTACT FOR THIS CLINICAL TRIAL - Company Name",
section2CtxtAddressTT:"CONTACT FOR THIS CLINICAL TRIAL - Street/Suite/PO Box",
section2CtxtCityTT:"CONTACT FOR THIS CLINICAL TRIAL - City - Town",
clinicalCountryTT:"CONTACT FOR THIS CLINICAL TRIAL - Country",
clinicalProvinceTT:"CONTACT FOR THIS CLINICAL TRIAL - Province",
section2CtxtProvinceTT:"CONTACT FOR THIS CLINICAL TRIAL - Province/State",
clinicalPostalCodeTT:"CONTACT FOR THIS CLINICAL TRIAL - Postal/ZIP Code",
section2CtxtTelephoneTT:"CONTACT FOR THIS CLINICAL TRIAL - Telephone No.",
section2CtxtExtensionTT:"CONTACT FOR THIS CLINICAL TRIAL - Ext.",
section2CtxtFaxTT:"CONTACT FOR THIS CLINICAL TRIAL - Fax No.",
section2CtxtEmailTT:"CONTACT FOR THIS CLINICAL TRIAL - Email",

txtSiteNameTT: "CLINICAL TRIAL SITE - Name of Site",
section3AtxtAddressTT:"CLINICAL TRIAL SITE - Street/Suite/PO Box",
section3AtxtCityTT:"CLINICAL TRIAL SITE - City - Town",
ctsCountryTT:"CLINICAL TRIAL SITE - Country",
ctsProvinceTT:"CLINICAL TRIAL SITE - Province",
ctsPostalCodeTT:"CLINICAL TRIAL SITE - Postal Code",

section3BddlSalutationTT:"QUALIFIED INVESTIGATOR - Salutation",
section3BtxtGivenNameTT:"QUALIFIED INVESTIGATOR - Given Name",
section3BtxtInitialsTT:"QUALIFIED INVESTIGATOR - Initials",
section3BtxtSurnameTT:"QUALIFIED INVESTIGATOR - Surname",
section3BtxtTitleTT:"QUALIFIED INVESTIGATOR - Title",
section3BddlLangPrefTT:"QUALIFIED INVESTIGATOR - Language",
section3BtxtAddressTT:"QUALIFIED INVESTIGATOR - Street/Suite/PO Box",
section3BtxtCityTT:"QUALIFIED INVESTIGATOR - City - Town",
quiCountryTT:"QUALIFIED INVESTIGATOR - Country",
quiProvinceTT:"QUALIFIED INVESTIGATOR - Province",
quiPostalCodeTT:"QUALIFIED INVESTIGATOR - Postal Code",
section3BtxtTelephoneTT:"QUALIFIED INVESTIGATOR - Telephone No.",
section3BtxtExtensionTT:"QUALIFIED INVESTIGATOR - Ext.",
section3BtxtFaxTT:"QUALIFIED INVESTIGATOR - Fax No.",
section3BtxtEmailTT:"QUALIFIED INVESTIGATOR - Email",

ddlSalutationTT:	"ATTESTATION - Salutation",
txtGivenNameAttestationTT: "ATTESTATION - Given Name",
txtSurnameAttestationTT: 	"ATTESTATION - Surname",
txtTitleAttestationTT:	"ATTESTATION - Position Title",

}
</script>
                  <script contentType="application/x-javascript" name="ToolTip_fr">var content = {
ddlSubmission_tip:	"Veuillez choisir DEC pour créer une demande ou MDEC pour modifier une DEC existante.",
txtBrand_tip:	"Le nom devrait correspondre au nom indiqué à la partie 1, section 8, du formulaire HC/SC 3011.",
txtProperName_tip:	"Il s'agit du nom du produit tel que spécifié dans le Règlement sur les aliments et drogues de SC et dans les revues scientifiques et techniques. Pour plus de renseignements, veuillez consulter le guide en suivant le lien fourni au début du formulaire.",

txtSponsorNameTT: "PROMOTEUR DE L'ESSAI CLINIQUE - Nom du fabricant/promoteur",
section2BtxtAddressTT:"PROMOTEUR DE L'ESSAI CLINIQUE - Rue/Bureau/C. P.",
section2BtxtCityTT:"PROMOTEUR DE L'ESSAI CLINIQUE - Ville",
sponsorCountryTT:"PROMOTEUR DE L'ESSAI CLINIQUE - Pays",
sponsorProvinceTT:"PROMOTEUR DE L'ESSAI CLINIQUE - Province",
section2BtxtProvinceTT:"PROMOTEUR DE L'ESSAI CLINIQUE - Province/état",
sponsorPostalCodeTT:"PROMOTEUR DE L'ESSAI CLINIQUE - Code postal/code de zone",

section2CddlSalutationTT:"CONTACT POUR CET ESSAI CLINIQUE - Titre de civilité",
section2CtxtGivenNameTT:"CONTACT POUR CET ESSAI CLINIQUE - Prénom",
section2CtxtInitialsTT:"CONTACT POUR CET ESSAI CLINIQUE - Initiales",
section2CtxtSurnameTT:"CONTACT POUR CET ESSAI CLINIQUE - Nom",
section2CtxtTitleTT:"CONTACT POUR CET ESSAI CLINIQUE - Titre de poste",
section2CddlLangPrefTT:"CONTACT POUR CET ESSAI CLINIQUE - Langue",
txtCompanyNameTT: "CONTACT POUR CET ESSAI CLINIQUE - Nom du fabricant/promoteur",
section2CtxtAddressTT:"CONTACT POUR CET ESSAI CLINIQUE - Rue/Bureau/C. P.",
section2CtxtCityTT:"CONTACT POUR CET ESSAI CLINIQUE - Ville",
clinicalCountryTT:"CONTACT POUR CET ESSAI CLINIQUE - Pays",
clinicalProvinceTT:"CONTACT POUR CET ESSAI CLINIQUE - Province",
section2CtxtProvinceTT:"CONTACT POUR CET ESSAI CLINIQUE - Province/état",
clinicalPostalCodeTT:"CONTACT POUR CET ESSAI CLINIQUE - Code postal/code de zone",
section2CtxtTelephoneTT:"CONTACT POUR CET ESSAI CLINIQUE - Numéro de téléphone",
section2CtxtExtensionTT:"CONTACT POUR CET ESSAI CLINIQUE - Poste",
section2CtxtFaxTT:"CONTACT POUR CET ESSAI CLINIQUE - Numéro de télécopieur",
section2CtxtEmailTT:"CONTACT POUR CET ESSAI CLINIQUE - Courriel",

txtSiteNameTT: "LIEU DE L'ESSAI CLINIQUE - Nom du lieu",
section3AtxtAddressTT:"LIEU DE L'ESSAI CLINIQUE - Rue/Bureau/C. P.",
section3AtxtCityTT:"LIEU DE L'ESSAI CLINIQUE - Ville",
ctsCountryTT:"LIEU DE L'ESSAI CLINIQUE - Pays",
ctsProvinceTT:"LIEU DE L'ESSAI CLINIQUE - Province",
ctsPostalCodeTT:"LIEU DE L'ESSAI CLINIQUE - Code postal",

section3BddlSalutationTT:"CHERCHEUR QUALIFIE - Titre de civilité",
section3BtxtGivenNameTT:"CHERCHEUR QUALIFIE - Prénom",
section3BtxtInitialsTT:"CHERCHEUR QUALIFIE - Initiales",
section3BtxtSurnameTT:"CHERCHEUR QUALIFIE - Nom",
section3BtxtTitleTT:"CHERCHEUR QUALIFIE - Titre de poste",
section3BddlLangPrefTT:"CHERCHEUR QUALIFIE - Langue",
section3BtxtAddressTT:"CHERCHEUR QUALIFIE - Rue/Bureau/C. P.",
section3BtxtCityTT:"CHERCHEUR QUALIFIE - Ville",
quiCountryTT:"CHERCHEUR QUALIFIE - Pays",
quiProvinceTT:"CHERCHEUR QUALIFIE - Province",
quiPostalCodeTT:"CHERCHEUR QUALIFIE - Code postal",
section3BtxtTelephoneTT:"CHERCHEUR QUALIFIE - Numéro de téléphone",
section3BtxtExtensionTT:"CHERCHEUR QUALIFIE - Poste",
section3BtxtFaxTT:"CHERCHEUR QUALIFIE - Numéro de télécopieur",
section3BtxtEmailTT:"CHERCHEUR QUALIFIE - Courriel",


ddlSalutationTT:	"ATTESTATION - Appel",
txtGivenNameAttestationTT: 	"ATTESTATION - Prénom",
txtSurnameAttestationTT:	"ATTESTATION - Nom",
txtTitleAttestationTT:	"ATTESTATION - Titre du poste",

}
</script>
                  <script contentType="application/x-javascript" name="Finalize_en">

var content={

lblTitleAttestation:	"11. ATTESTATION",
lblAttest:	"11. ATTESTATION",
lblHCUse:	"Health Canada Use Only",
lblAttestation:	"I, the Manufacturer of this device, hereby certify that the information provided on this application and in any attached documentation is correct, complete and in accordance with all relevant sections of the Medical Devices Regulations.",
chkAttestation:	"I, the Manufacturer of this device, hereby certify that the information provided on this application and in any attached documentation is correct, complete and in accordance with all relevant sections of the Medical Devices Regulations.",
ddlSalutation:	"Salutation",
txtGivenNameAttestation: "Given Name",
txtSurnameAttestation: 	"Surname",
txtTitleAttestation:	"Position Title",
chkDigitalID:	"Digital ID",
chkDigitalImage:	"Image Signature",
sigSignatureAttestation:	"Signature",
ddtSignedOnAttestation:	"Date (YYYY-MM-DD)",
lblTitleHC:	"Health Canada Use Only",
numSubmission:	"Submission Number",
ddtSignedOnOff:	"Filing Date (YYYY-MM-DD)",
lbSignature:	"Signature",
btnFinalizeAndLock:	"Finalize",
btnModify:	"Modify",
lbLockSuccess:	"The form has been validated and locked for editing. It can now be printed and sent to Health Canada. In order to modify the form, press the Modify button.",
}
</script>
                  <script contentType="application/x-javascript" name="Finalize_fr">

var content={	
lblAttest:	"11. ATTESTATION",
lblHCUse:	"Usage réservé à Santé Canada",
lblAttestation:	"Je, fabricant de cet instrument, certifie par la présente que l'information fournie dans ce formulaire et dans tout document annexé est correcte, complète, et conforme à toutes les sections pertinentes des Règlements sur les instruments médicaux.",
ddlSalutation:	"Appel",
txtGivenNameAttestation: 	"Prénom",
txtSurnameAttestation:	"Nom",
txtTitleAttestation:	"Titre du poste",
chkDigitalID:	"ID électronique",
chkDigitalImage:	"Image de signature",
sigSignatureAttestation:	"Signature",
ddtSignedOnAttestation:	"Date (AAAA-MM-JJ)",
lblTitleHC:	"Usage réservé à Santé Canada",
numSubmission:	"Numéro de la demande",
ddtSignedOnOff:	"Date (AAAA-MM-JJ)",
lbSignature:	"Signature",
btnFinalizeAndLock:	"Finaliser",
btnModify:	"Modifier",
lbLockSuccess:	"Le formulaire a été validé et verrouiller contre l'édition. Il peut maintenant être imprimé et envoyé à Santé Canada. Pour pouvoir modifier le formulaire, appuyez sur le bouton Modifier.",

}
</script>
                  <script contentType="application/x-javascript" name="RebAttestation_en">



var content = {


txtAddress:	"Street/Suite/PO Box",
txtCity:	"City - Town",
ddlCountry:	"Country",
//ddlProvince:	"Province - State",
txtProvince:	"Province - State",
//txtPostalCode:	"Postal/ZIP Code",
txtTelephone:	"Telephone No.",
txtExtension:	"Ext.",
txtFax:	"Fax No.",
txtEmail:	"Email",

ddlSalutation:	"Salutation",
txtGivenName:	"Given Name",
txtInitials:	"Initials",
txtSurname:	"Surname",
txtTitle:	"Title",
ddlLangPref:	"Language",


lblProtocol:	"PART 1 – CLINICAL TRIAL PROTOCOL INFORMATION",
ddlSubmission:	"Please select one of the following:",
txtProtocolTitle:	"Clinical Trial Protocol Title",
txtProtocolNo:	"Clinical Trial Protocol Number (If Applicable)",

lblProductInfo:	"PART 2 - DRUG PRODUCT / SPONSOR INFORMATION",
lblSectionA2:	"A) DRUG PRODUCT INFORMATION",
txtBrand:	"Brand Name:",
txtIngredient:	"Proper or Common Name:",
//chkCTA:	"See Clinical Trial Application and Attestation Form",
//txtSubmissionNo:	"Submission Number (if known):",
lblSectionB2:	"B) SPONSOR OF CLINICAL TRIAL",
txtSponsorName:	"Company Name (Full Name - No Abbreviations)",

txtContactName:	"Contact Name",
txtCompanyName:	"Company Name (Full Name . No Abbreviations)",

lblCTSInfo:	"PART 3 - QUALIFIED INVESTIGATOR INFORMATION",
lblSectionA:	"A) CLINICAL TRIAL SITE",
txtSiteName:	"Name of Site (Full Name – No Abbreviation)",

lblSectionB:	"B) QUALIFIED INVESTIGATOR",

//txtAttached:	"Attach separate sheets (same format) for each Clinical Trial Site. Number of pages attached: ",
lblSectionC:	"C) RESEARCH ETHICS BOARD APPROVAL",
chkIncludeMember:	"Includes member knowledgeable in complementary or alternative health care (identify member and expertise in the cover letter)",
txtREBName:	"Name of Research Ethics Board",
ddtApproval:	"Date of Approval (YYYY-MM-DD)",

lblREBChair:	"Name of Research Ethics Board Chair",

//lblCertify:	"In respect of the identified clinical trial, I certify, as representative of this Research Ethics Board that:",
lblCertificationHeader : "PART 4 - ATTESTATION",
 //lblCertifyPoint:	"In respect of the identified clinical trial, I certify, as the qualified investigator for this site that: \n\n 1. I am a physician or dentist and a member in good standing of a professional medical or dental association as defined in Part C Division 5 of the Food and Drug \n\nRegulations;\n\n2. I will supervise the medical care and medical decisions respecting this clinical trial at this site;\n\n3. I will conduct this clinical trial in accordance with Good Clinical Practices; and\n\n4. I will immediately on discontinuance of the clinical trial by the sponsor, in its entirety or at a clinical trial site, inform both the clinical trial subjects and the Research Ethics Board for this site of the discontinuance, provide them with the reasons for the discontinuance, and advise them in writing of any potential risks to the health of clinical trial subjects or other persons.",
//txtRepresentative:	"Name, Title and Signature of Research Ethics Board Representative",





lblInstructionsKey:	"This form contains mandatory fields. In order to ensure you have completed all appropriate fields, please press the \"Finalize\" button at the bottom of the form before printing and signing. \n\nOnce finalized, the fields in the form becomes \"locked\" (i.e. Fields cannot be modified). In order to modify fields after finalizing, you must press the \"Modify\" button at the bottom of the form. Following modifications to the desired fields and before printing and signing, please press the \"Finalize\" button again to re-validate entries.\n\n"
	+ "Alternatively: \n\n" 
	+ "-Save, print, sign and date the completed form;\n" 
	+ "-Scan the signed form, and \n"
	+ "-Send to Health Canada in electronic format.\n"
	+"\n\nAn undertaking must be completed by the qualified investigator responsible for the conduct of the clinical trial at the site specified below. The completed undertaking must be retained by the clinical trial sponsor for a period of 25 years.\n\nPlease note that the Qualified Investigator Undertaking should not be submitted to Health Canada unless requested.",

}
</script>
                  <script contentType="application/x-javascript" name="RebAttestation_fr">



var content = {


txtAddress:	"Rue/Bureau/C. P.",
txtCity:	"Ville",
ddlCountry:	"Pays",
//ddlProvince:	"Fr_Province - State",
txtProvince:	"Province/état",
//txtPostalCode:	"Fr_Postal/ZIP Code",
txtTelephone:	"No de téléphone",
txtExtension:	"No de poste",
txtFax:	"No de télécopieur",
txtEmail:	"Courriel",

ddlSalutation:	"Appel",
txtGivenName:	"Prénom",
txtInitials:	"Initiales",
txtSurname:	"Nom",
txtTitle:	"Titre",
ddlLangPref:	"Langue de préférence",





lblProtocol:	"PARTIE 1 – INFORMATION SUR LE PROTOCOLE DE L’ESSAI CLINIQUE",
ddlSubmission:	"Veuillez choisir une des options suivantes :",
txtProtocolTitle:	"Titre du protocole",
txtProtocolNo:	"Numéro du protocole (s'il est connu)",

lblProductInfo:	"PARTIE 2 - INFORMATION SUR LE PRODUIT/PROMOTEUR",
lblSectionA2:	"A) INFORMATION SUR LE PRODUIT",

txtBrand:	"Nom commercial :",
txtIngredient:	"Nom propre ou usuel :",
//chkCTA:	"Voir la demande et l'attestation d'essai clinique",
//txtSubmissionNo:	"Numéro de la présentation (s'il est connu) :",
lblSectionB2:	"B) PROMOTEUR DE L'ESSAI CLINIQUE",
txtSponsorName:	"Nom de la société (Nom complet - Ne pas utiliser d’abréviations)",

txtContactName:	"Nom du contact",
txtCompanyName:	"Nom de la société (Nom complet – Ne pas utiliser d'abréviations)",

lblCTSInfo:	"PARTIE 3 – INFORMATION SUR LE CHERCHEUR QUALIFIÉ",
lblSectionA:	"A) LIEU DE L'ESSAI CLINIQUE", 
txtSiteName:	"Nom du lieu (Nom complet – Ne pas utiliser d'abréviations)",

lblSectionB:	"B) CHERCHEUR QUALIFIE", // É FOR FRENCH ACCENT

//txtAttached:	"Veuillez joindre des feuilles distinctes et de même format pour chacun des lieux d'essai clinique. Nombre de pages jointes :",
lblSectionC:	"C) APPROBATION DU COMITE D'ETHIQUE POUR LA RECHERCHE",
chkIncludeMember:	"Veuillez inclure le nom d'un membre qui possède des connaissances dans le domaine des soins de santé complémentaires ou dans le domaine des médecines douces (Veuillez identifier ce membre ainsi que son expertise sur la lettre d'introduction).",
txtREBName:	"Nom du comité d'éthique pour la recherche",
ddtApproval:	"Date d'approbation (AAAA-MM-JJ)", 

lblREBChair:	"Nom du président du comité d'éthique pour la recherche",

//lblCertify:	"En ce qui concerne l'essai clinique visé, je certifie, à titre de représentant du comité d'éthique pour la recherche, que :",
lblCertificationHeader : "PARTIE 4 – ATTESTATION",
//lblCertifyPoint:	"1. la composition de ce comité d'éthique pour la recherche satisfait aux exigences pertinentes \n\n2. le comité d'éthique pour la recherche exerce ses activités d'une manière conforme aux bonnes pratiques cliniques; \n\n3. le comité d'éthique pour la recherche a examiné et approuvé le formulaire de consentement éclairé et le protocole pour l'essai qui sera mené par le chercheur qualifié susmentionné au lieu d'essai indiqué. L'approbation et les opinions du présent comité ont été consignées par écrit.",
//txtRepresentative:	"Nom, titre et signature du représentant du comité d'éthique pour la recherche",




lblInstructionsKey: "Ce formulaire contient des champs obligatoires. Pour vous assurer que vous avez rempli les champs appropriés, cliquez sur le bouton \"Finaliser\" au bas du formulaire avant de l'imprimer et de le signer. \n\nUne fois finalisé, les champs seront verrouiller (les champs ne peuvent plus être modifié). Pour pouvoir modifier les champs après la finalisation, vous devez cliquer sur le bouton \"Modifier\" au bas du formulaire. Après avoir modifié les champs désirés et avant d'imprimer et de signer, cliquez sur le bouton \"Finaliser\" à nouveau afin de valider les entrées.\n\n" 
                   + "Alternativement: \n\n"
				   + "-Enregistrez, imprimez, signez et datez le formulaire rempli; \n"
			       + "-Scannez le formulaire signé et \n"
				   + "-Envoyer à Santé Canada en format électronique. " 
				   +"\n\nLe formulaire d’engagement doit être rempli par le chercheur qualifié responsable de la conduite de l’essai clinique au lieu mentionné ci-dessous. Le promoteur de l’essai clinique doit conserver le formulaire d’engagement rempli pendant une période de 25 ans.\n\nVeuillez noter que l’engagement du chercheur qualifié ne doit être transmis à Santé Canada que sur demande"

}
</script>
                  <script contentType="application/x-javascript" name="error_en">
var content={	

	error_sponserZipFormat:		"For question 10, ",
	error_contactZipFormat:		"For question 17, ", 
	error_ctsZipFormat:			"For question 26, ",
	error_contactEmail:			"For question 20, ",
	error_qualInvestEmail:		"For question 39, ",
	error_contactPhone:			"For question 18,",
	error_contactFax:			"For question 19,",	
	error_qualInvestPhone:		"For question 37,",
	
}
</script>
                  <script contentType="application/x-javascript" name="error_fr">

var content={	
	
	error_sponserZipFormat:		"Pour la question 10, ",
	error_contactZipFormat:		"Pour la question 17, ",
	error_ctsZipFormat:			"Pour la question 26, ", 
	error_contactEmail:			"Pour la question 20, ",
	error_qualInvestEmail:		"Pour la question 39, ",
	error_contactPhone:			"Pour la question 18,",
	error_contactFax:			"Pour la question 19,",	
	error_qualInvestPhone:		"Pour la question 37,",
}
</script>
                  <script contentType="application/x-javascript" name="droplists_en">
var content={

		submissionList:[
		["1", "Clinical Trial Application (CTA)"],
		["2", "Clinical Trial Application Amendment (CTA-A)"]
		],
		
		salutationList:[
		["mr", "Mr."],
		["ms", "Ms."],
		["mrs", "Mrs."],
		["dr","Dr."]],

							
	}
</script>
                  <script contentType="application/x-javascript" name="droplists_fr">

var content={

		submissionList:[
						["1", "Demande d'essai clinique (DEC)"],
						["2", "Modification de demande d'essai clinique (MDEC)"]
						],
		salutationList:[
						["mr", "M."],
						["ms", "Mlle"],
						["mrs", "Mme"],
						["dr","Dr/Dre"]],
				
					
	}
</script>
                  <script usehref="..\..\fragments\delegates\resources\errorDelegate_en.xdp#som($template.form1.#subform.#variables.errorDelegate_en)"/>
                  <script usehref="..\..\fragments\delegates\resources\errorDelegate_fr.xdp#som($template.form1.#subform.#variables.errorDelegate_fr)"/>
                  <script usehref="..\..\fragments\address\addressResource_en.xdp#som($template.form1.#subform.#variables.address_en)"/>
                  <script usehref="..\..\fragments\address\addressResource_fr.xdp#som($template.form1.#subform.#variables.address_fr)"/>
                  <script contentType="application/x-javascript" name="addressHeading_en">

var content={

		lbSectionC2:	"C) CLINICAL TRIAL CONTACT",

}
</script>
                  <script contentType="application/x-javascript" name="addressHeading_fr">

var content={

		lbSectionC2:	"C) CONTACT POUR CET ESSAI CLINIQUE",
}
</script>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <subform h="50mm" name="util" w="100mm">
               <variables>
                  <script contentType="application/x-javascript" name="General">
//globals
var cInstanceManagerUtil = script.core.util.InstanceManagerUtil;
var cLog =						script.core.util.Log;
var cUiUtil=					script.core.util.UiUtil;
var cFailureReporter=			script.core.validation.FailureReporter;
var cInstanceManagerUtil =		script.core.util.InstanceManagerUtil;

/*
* If a node has a delegate, calls the delegate code. On errors, displays a dialog
* @param - aFormNode - the framework defined form node
* @param - a_adobeNode- the object instance that matches the form node
* @returns -true if validation was successful
*/
function  validateField(a_FormNode,a_adobeNode,a_focusNode){
		
	if(a_adobeNode.isNull) return true; //do not validate empty field
	var validationFailures=a_FormNode.validateNode(a_adobeNode,false); //do not update the display
		
	if(validationFailures!==null){
		xfa.host.messageBox(cFailureReporter.getFailureSummary(validationFailures));
		if(a_focusNode){
			cUiUtil.setFocus(a_focusNode);
		}else{
			cUiUtil.setFocus(a_adobeNode);
		}
		cUiUtil.moveFocus(); 
		return false;
	}
	return true
}//end fn


/*
*	Generic Instance manager checker. Core does not check if it allowed to add an instance
*	This should really be part of core
*	@param instanceManager- the instanceManager to check
*
*/

function addSubformInstance(instanceManager){
	var createdInstance=null;
	//TO DO check if instance manager exists and is an instanceManager
	if((instanceManager.count&lt;instanceManager.max) || instanceManager.max&lt;0){
		 createdInstance=cInstanceManagerUtil.addInstance(instanceManager);

	}
	return(createdInstance);
}

function removeSpecificSubformInstance(instanceManager,sfInstance){
	
	//TO DO check if instance manager exists and is an instanceManager
	if(instanceManager.count&gt;instanceManager.min){
				cInstanceManagerUtil.removeSpecificInstance(sfInstance);

	}

}

/*
* Hides the passed in node and clears any values of it and it's children
*@param nodeInstance- the adobe node to process
*
*
*
*/
function hideAndClearNodeInstance(nodeInstance){

	//to do error check for adobe node
	cUiUtil.hide(nodeInstance);
	xfa.host.resetData(nodeInstance.somExpression);
}//end fn



function addSubformInstance(instanceManager){
	var createdInstance=null;
	//TO DO check if instance manager exists and is an instanceManager
	if((instanceManager.count&lt;instanceManager.max) || instanceManager.max&lt;0){
		 createdInstance=cInstanceManagerUtil.addInstance(instanceManager);
		 
	}
	return(createdInstance);
}

</script>
                  <script usehref="..\..\fragments\Accessibility.xdp#som($template.form1.#subform.#variables.Accessibility)"/>
                  <script usehref="..\..\fragments\util\AddressUtil.xdp#som($template.form1.#subform.#variables.AddressUtil)"/>
                  <?templateDesigner expand 1?></variables>
               <?templateDesigner expand 1?></subform>
            <?templateDesigner expand 1?></subform>
         <subform w="100mm" h="50mm" name="validation">
            <variables>
               <script contentType="application/x-javascript" name="formValidation">
 
// validation for Company ID field
var cResourceManager = script.core.lang.ResourceManager;
var cFormNodeManager = script.core.model.FormNodeManager;
//var selectedLang =  cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue;
var cLog = script.core.util.Log;

function isDateValid(dateField) {

    if (dateField.rawValue != null &amp;&amp; dateField.rawValue != "") {
        //var reg = /(?:19|20\d{2})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
         //var reg =  /(?:19\d{2}|20\d{2})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
          var reg =  /(\d{4})\-(?:0[1-9]|1[0-2])\-(?:0[1-9]|[12][0-9]|3[01])/;
        var myDate = dateField.rawValue;
        if(myDate.length == 8){
        var y = myDate.substr(0,4);
        var m=  myDate.substr(4,2);
        var d = myDate.substr(6,2);
        myDate =y+"-"+m+"-"+d;
        dateField.rawValue = myDate;
        }
        if (reg.test(myDate) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please enter Valid Date. Date must be in this format: YYYY-MM-DD");
            } else {
                app.alert("Veuillez saisir la date. La date doit être saisie selon ce format : AAAA-MM-JJ");
            }
            //dateField.fillColor = "230,125,125";
            dateField.rawValue = "";
        } else {

            var year = dateField.rawValue.split("-")[0];
            var month = dateField.rawValue.split("-")[1];
            var day = dateField.rawValue.split("-")[2];

            var daysInMonth = readDaysInMonth(month - 1, year);
            if (day &gt; readDaysInMonth(month - 1, year)) {
                //dateField.fillColor = "230,125,125";
				dateField.rawValue = "";	                
                if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                    app.alert("Please enter Valid Date. Date must be in this format: YYYY-MM-DD");
                } else {
                    app.alert("Veuillez saisir la date. La date doit être saisie selon ce format : AAAA-MM-JJ");
                }
            } else {
                dateField.fillColor = "255,255,255";
            }
        }
    }
}



function isLeapYear(year) {
    return ((year % 4 == 0) &amp;&amp; (year % 100 != 0 || year % 400 == 0));
}

function readDaysInMonth(month, year) {
    if (month == 1 &amp;&amp; isLeapYear(year) == true) return 29;
    else return [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
}


function companyIDValidation(companyIDField) {
    if ((companyIDField.rawValue != null &amp;&amp; companyIDField.rawValue != "")) {
        var reg = /^\d{6}$/;
        var companyID = companyIDField.rawValue;
        if (reg.test(companyID) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("The Company ID must contain 6 digits");
            } else {
                app.alert("Le no d'identification de la société est composé de six caractères");
            }
            companyIDField.fillColor = "230,125,125"; //"17,136,255";
        } else {
            companyIDField.fillColor = "255,255,255";
        }
    }
}


//validation for email
function isEmailValid(emailField) {
    if ((emailField.rawValue != null &amp;&amp; emailField.rawValue != "")) {
        var reg = /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
        var address = emailField.rawValue;
        if (reg.test(address) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Email Address.");
            } else {
                app.alert("Veuillez inscrire une adresse courriel valide.");
            }
            emailField.fillColor = "230,125,125"; //"17,136,255";
        } else {
            emailField.fillColor = "255,255,255";
        }
    }
}


function isPhoneValid(phoneField) {
    if ((phoneField.rawValue != null &amp;&amp; phoneField.rawValue != "")) {
        //var reg = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        var reg = /^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; //(phone leading with 1
        //var reg = /^\+(?:[0-9] ?){6,14}[0-9]$/;  //international
        //leading 1: ^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        // phone /^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$;///^\d{6}$/;
        var phone = phoneField.rawValue;
        if (reg.test(phone) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Phone Number.");
            } else {
                app.alert("Veuillez inscrire un numéro de téléphone valide.");
            }
            phoneField.fillColor = "230,125,125"; //"17,136,255";
        } else {
            var formattedPhoneNumber = phone.replace(reg, "$1-$2-$3"); //"($1) $2-$3");
            //app.alert("phone: " + formattedPhoneNumber );
            phoneField.rawValue = formattedPhoneNumber;
            phoneField.fillColor = "255,255,255";
        }
    }
}

function isPhoneValid4Country(phoneField, selectedCountry) {
    
    if ((phoneField.rawValue != null &amp;&amp; phoneField.rawValue != "")) {
    if (selectedCountry.rawValue == "CA" || selectedCountry.rawValue == "US") {
        //var reg = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        var reg = /^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; //(phone leading with 1
        //var reg = /^\+(?:[0-9] ?){6,14}[0-9]$/;  //international
        //leading 1: ^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        // phone /^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$;///^\d{6}$/;
        var phone = phoneField.rawValue;
        if (reg.test(phone) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Phone Number.");
            } else {
                app.alert("Veuillez inscrire un numéro de téléphone valide.");
            }
            phoneField.fillColor = "230,125,125"; //"17,136,255";
        } else {
            var formattedPhoneNumber = phone.replace(reg, "$1-$2-$3"); //"($1) $2-$3");
            //app.alert("phone: " + formattedPhoneNumber );
            phoneField.rawValue = formattedPhoneNumber;
            phoneField.fillColor = "255,255,255";
        }
    }else{
    
   var reg = /^[0-9() .-]+$/;
   var phone = phoneField.rawValue;

   //var temp = phone.replace(/\s+/g, "");
   //temp = temp.replace(/\(/g, "");
   //temp = temp.replace(/\)/g, "");
   //temp = temp.replace(/\./g, "");
   
   var temp = phone.replace(/\(|\)|\.|\s/g,"");
   if (temp.length &lt; 9 || temp.length &gt; 18) {

       if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
           app.alert("Please Enter Valid Phone Number (numeric value 9-18 digits).");
       } else {
           app.alert("Veuillez inscrire un numéro de téléphone valide (9-18 digit).");
       }
       phoneField.fillColor = "230,125,125"; //"17,136,255";
       return;

   }
        if (reg.test(phone) == false) {
          if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Phone Number (numeric value).");
            } else {
                app.alert("Veuillez inscrire un numéro de téléphone valide.");
            }
            phoneField.fillColor = "230,125,125"; //"17,136,255";
        }else{
    phoneField.fillColor = "255,255,255";
   }
    }
   }
}

function isPhoneValid4Country123(phoneField, selectedCountry) {
    
    if ((phoneField.rawValue != null &amp;&amp; phoneField.rawValue != "")) {
    if (selectedCountry.rawValue == "CA" || selectedCountry.rawValue == "US") {
        //var reg = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        var reg = /^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; //(phone leading with 1
        //var reg = /^\+(?:[0-9] ?){6,14}[0-9]$/;  //international
        //leading 1: ^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        // phone /^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$;///^\d{6}$/;
        var phone = phoneField.rawValue;
        if (reg.test(phone) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Phone Number.");
            } else {
                app.alert("Veuillez inscrire un numéro de téléphone valide.");
            }
            phoneField.fillColor = "230,125,125"; //"17,136,255";
        } else {
            var formattedPhoneNumber = phone.replace(reg, "$1-$2-$3"); //"($1) $2-$3");
            //app.alert("phone: " + formattedPhoneNumber );
            phoneField.rawValue = formattedPhoneNumber;
            phoneField.fillColor = "255,255,255";
        }
    }else{
    phoneField.fillColor = "255,255,255";
    }
   }
}

function isFaxValid4Country(faxField, selectedCountry) {
    if ((faxField.rawValue != null &amp;&amp; faxField.rawValue != "")) {
     if (selectedCountry.rawValue == "CA" || selectedCountry.rawValue == "US") {
        //var reg = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        var reg = /^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; //(phone leading with 1
        //var reg = /^\+(?:[0-9] ?){6,14}[0-9]$/;  //international
        //leading 1: ^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        // phone /^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$;///^\d{6}$/;
        var fax = faxField.rawValue;
        if (reg.test(fax) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Fax Number.");
            } else {
                app.alert(" Veuillez inscrire un numéro de télécopieur valide.");
            }
            faxField.fillColor = "230,125,125"; //"17,136,255";
            xfa.host.setFocus(faxField);
        } else {
            var formattedFaxNumber = fax.replace(reg, "$1-$2-$3");
            //app.alert("phone: " + formattedPhoneNumber );
            faxField.rawValue = formattedFaxNumber;
            faxField.fillColor = "255,255,255";
        }
      }else{    
		   var reg =  /^[0-9() .-]+$/;
		   var fax = faxField.rawValue;
		   var temp = fax.replace(/\(|\)|\.|\s/g,"");
		   if (temp.length &lt; 9 || temp.length &gt; 18) {
		
		       if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
		           app.alert("Please Enter Valid Fax Number (numeric value 9-18 digits).");
		       } else {
		           app.alert("Veuillez inscrire un numéro de télécopieur valide (9-18 digit).");
		       }
		       faxField.fillColor = "230,125,125"; //"17,136,255";
		       xfa.host.setFocus(faxField);
		       return;
		   }
	       if (reg.test(fax) == false) {
	          if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
	                app.alert("Please Enter Valid Fax Number (numeric value).");
	            } else {
	                app.alert("Veuillez inscrire un numéro de télécopieur valide.");
	            }
	            faxField.fillColor = "230,125,125"; //"17,136,255";
	        }else{
		      faxField.fillColor = "255,255,255";
		    }
        }
    } else {
    	faxField.fillColor = "255,255,255";
    }
}

function isFaxValid(faxField) {
    if ((faxField.rawValue != null &amp;&amp; faxField.rawValue != "")) {
        //var reg = /^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/;
        var reg = /^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$/; //(phone leading with 1
        //var reg = /^\+(?:[0-9] ?){6,14}[0-9]$/;  //international
        //leading 1: ^(?:\+?1[-. ]?)?\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$
        // phone /^\(?(\d{3})\)?[- ]?(\d{3})[- ]?(\d{4})$;///^\d{6}$/;
        var fax = faxField.rawValue;
        if (reg.test(fax) == false) {
            if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                app.alert("Please Enter Valid Fax Number.");
            } else {
                app.alert(" Veuillez inscrire un numéro de télécopieur valide.");
            }
            faxField.fillColor = "230,125,125"; //"17,136,255";
        } else {
            var formattedFaxNumber = fax.replace(reg, "$1-$2-$3");
            //app.alert("phone: " + formattedPhoneNumber );
            faxField.rawValue = formattedFaxNumber;
            faxField.fillColor = "255,255,255";
        }
    }
}

String.prototype.replaceAll2=function(s1, s2) { return this.replace(new RegExp(s1,"g"), s2); }

function isFaxValid_9_18(faxField) {
 var language = script.HCeForm.model.HCeFormMain.getLanguage();
      faxField.fillColor = "255,255,255";               
     if ((faxField.rawValue != null &amp;&amp; faxField.rawValue != "")) {
             var fax = faxField.rawValue;
             var temp = fax.replaceAll2( "[^\\d]", "" )
             if (temp.length &lt; 9 || temp.length &gt; 18) {

                 if (language == "en") {
                     app.alert("Please Enter Valid Fax Number (numeric value 9-18 digits).");
                 } else {
                     app.alert("Veuillez inscrire un numéro de télécopieur valide (9-18 digit).");
                 }
                 faxField.fillColor = "230,125,125";
                 return;

             } else {
                 faxField.fillColor = "255,255,255";
             }
            
       }
}   


//postal code
function isPostalcodeValid(postalcodeField, selectedCountry) {
    if ((postalcodeField.rawValue != null &amp;&amp; postalcodeField.rawValue != "")) {
        if (selectedCountry.rawValue == "CA" || selectedCountry.rawValue == "US") {
            var reg = /^\d{5}([-, ]\d{4})?$/; // /^\d{5}$|^\d{5}-\d{4}$/;
            if (selectedCountry.rawValue == "CA") {
                reg = /^\D{1}\d{1}\D{1}\-?\s?\d{1}\D{1}\d{1}$/;
                //reg = /^\[A-Z]{1}\d{1}\[A-Z]{1}\-?\s?\d{1}\[A-Z]{1}\d{1}$/;
            }
            //for common reg = /(^\d{5}$)|(^\D{1}\d{1}\D{1}\s\d{1}\D{1}\d{1}$)/;
            var zipcode = postalcodeField.rawValue;

            if (reg.test(zipcode) == false) {
                if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
                    app.alert("Please Enter Valid Zip/PostalCode.");
                } else {
                    app.alert("Veuillez inscrire un code postal valide.");
                }
                postalcodeField.fillColor = "230,125,125"; //"17,136,255";
            } else {
                postalcodeField.fillColor = "255,255,255";
                var zipcode = postalcodeField.rawValue;
                //var formattedPostalCode = zipcode.replace(reg, "$1-$2");
                //app.alert("phone: " + zipcode.substring(0,3)+" "+zipcode.substring(zipcode.length-3,zipcode.length) );
                var formattedPostalCode = zipcode.substring(0, 3) + " " + zipcode.substring(zipcode.length - 3, zipcode.length)
                if (selectedCountry.rawValue == "CA") {
                    postalcodeField.rawValue = (zipcode.substring(0, 3) + " " + zipcode.substring(zipcode.length - 3, zipcode.length)).toUpperCase();
                }
                //postalcodeField.rawValue = formattedPhoneNumber;
                //postalcodeField.rawValue = postalcodeField.rawValue.toUpperCase();
            }
        }
    }
}


function makeReadonly() {
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
            //if(oFields.item(nNodeCount).value == "sfFinalizeButton"){
            //app.alert("The Company ID must contain 6 digits");
            //}
            oFields.item(nNodeCount).access = "readOnly";
        }
    }
}

function makeEditable() {
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
            //if(oFields.item(nNodeCount).value == "sfFinalizeButton"){
            //app.alert("The Company ID must contain 6 digits");
            //}
            oFields.item(nNodeCount).access = "open";
            if(oFields.item(nNodeCount).name.indexOf("btn")&gt;=0){
				oFields.item(nNodeCount).fillColor = "212,208,200";
				 }
        }
    }
}

//
function isFilled(testField) {
    if ((testField.rawValue != null &amp;&amp; testField.rawValue.replace(/\s/g, "").length != 0)) {
        testField.fillColor = "255,255,255";
    }
}
//
function WriteToFile(sText) {
    var fso = new ActiveXObject("Scripting.FileSystemObject");
    var s = fso.CreateTextFile("C:\\test.txt", true);
    s.WriteLine("helloworld");
    s.Close();
}


function getValue() {
    for (var nPageCount = 0; nPageCount &lt; xfa.host.numPages; nPageCount++) {
        var oFields = xfa.layout.pageContent(nPageCount, "field");
        var nNodesLength = oFields.length;
        for (var nNodeCount = 0; nNodeCount &lt; nNodesLength; nNodeCount++) {
            //if(oFields.item(nNodeCount).value == "sfFinalizeButton"){
            //app.alert("The Company ID must contain 6 digits");
            //}
            var value = oFields.item(nNodeCount).caption.value.text.value;

            app.alert("value: " + value);

        }
    }
}

//tracking number random
function getRandomString() {
    var chars = "0123456789"; //ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz";
    var string_length = 8;
    var randomstring = '';
    for (var i = 0; i &lt; string_length; i++) {
        var rnum = Math.floor(Math.random() * chars.length);
        randomstring += chars.substring(rnum, rnum + 1);
    }
    //document.randform.randomfield.value = randomstring;
    return randomstring;
}

function getFinalizedDate(){
var finalizedDate = new Date();
var retValue="";
if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
retValue  = "Date finalized: " + util.printd("yyyy-mm-dd", finalizedDate );
}else{
retValue  = "Date de finalisé: " + util.printd("yyyy-mm-dd", finalizedDate );
}
return retValue;
}



function getAccessDate(){
var accessDate = new Date();
var retValue="";
if (cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue == "en") {
retValue  = "Access date: " + util.printd("yyyy-mm-dd", accessDate );
}else{
retValue  = "Accès date de: " + util.printd("yyyy-mm-dd", accessDate );
}
return retValue;
}
function isCheckvalid() {
    //var selectedLang =  cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue;
    var chk = new Array(6);

    chk[0] = cFormNodeManager.getFormNodeForKey("Part1chkChangeName").getNodeInstance().rawValue; //"HCeForm.sfPage1.sfPart1.sfReason.sfChangeP1.chkChangeName";
    chk[1] = cFormNodeManager.getFormNodeForKey("Part1chkChangeDate").getNodeInstance().rawValue;
    chk[2] = cFormNodeManager.getFormNodeForKey("Part2chkChangeName").getNodeInstance().rawValue;
    chk[3] = cFormNodeManager.getFormNodeForKey("Part3chkChangeName").getNodeInstance().rawValue;
    chk[4] = cFormNodeManager.getFormNodeForKey("Part3chkChangeDate").getNodeInstance().rawValue;
    chk[5] = cFormNodeManager.getFormNodeForKey("Part3chkChangeCordinate").getNodeInstance().rawValue;

    var chkValid = false;

    var otherChange = cFormNodeManager.getFormNodeForKey("txtOtherChange").getNodeInstance().rawValue;

    if ((otherChange != null &amp;&amp; otherChange.replace(/\s/g, "").length != 0)) {

        return true;
    }


    for (var i = 0; i &lt;= 5; i++) {
        if (chk[i] == "1") chkValid = true;
    }

    /*
if(chkValid){
app.alert("validate ok");
}
*/
    return chkValid;
}


function isCheckvalid4OtherChange() {
    //var selectedLang =  cFormNodeManager.getFormNodeForKey("chkEnglish").getNodeInstance().rawValue;
    var chk = new Array(6);

    chk[0] = cFormNodeManager.getFormNodeForKey("Part1chkChangeName").getNodeInstance().rawValue; //"HCeForm.sfPage1.sfPart1.sfReason.sfChangeP1.chkChangeName";
    chk[1] = cFormNodeManager.getFormNodeForKey("Part1chkChangeDate").getNodeInstance().rawValue;
    chk[2] = cFormNodeManager.getFormNodeForKey("Part2chkChangeName").getNodeInstance().rawValue;
    chk[3] = cFormNodeManager.getFormNodeForKey("Part3chkChangeName").getNodeInstance().rawValue;
    chk[4] = cFormNodeManager.getFormNodeForKey("Part3chkChangeDate").getNodeInstance().rawValue;
    chk[5] = cFormNodeManager.getFormNodeForKey("Part3chkChangeCordinate").getNodeInstance().rawValue;

    var chkValid = false;

    /*
var otherChange = cFormNodeManager.getFormNodeForKey("txtOtherChange").getNodeInstance().rawValue; 
if ((otherChange != null &amp;&amp; otherChange.replace(/\s/g, "").length != 0)) {
return true;
}*/


    for (var i = 0; i &lt;= 5; i++) {
        if (chk[i] == "1") chkValid = true;
    }

    /*
if(chkValid){
app.alert("validate ok");
}
*/
    return chkValid;
}
</script>
               <?templateDesigner expand 1?></variables>
            <?templateDesigner expand 1?></subform>
         <?templateDesigner expand 1?></subform>
      <proto/>
      <desc>
         <text name="version">$Revision No: 1.18$</text>
         <text name="title">QUALIFIED INVESTIGATOR UNDERTAKING</text>
         <text name="creator">Bianca Andreescu</text>
         <text name="created">$Date: 2015-07-21$</text>
         <text name="department">Health Canada - Sante Canada</text>
         <text name="issued">$Revision date: 2015-07-22$</text>
      </desc>
      <margin leftInset="0mm" topInset="0mm" bottomInset="0mm"/>
      <event activity="initialize" name="event__initialize">
         <script contentType="application/x-javascript">

//cFormHandler.initialize();
var cFormHandler=script.HCeForm.control.FormHandler;
var cActionEvent = script.core.event.ActionEvent;
var cLog = script.core.util.Log;
var cSystem = script.core.System;


try{
		// set up event object
		var actionName = cFormHandler.INITIALIZE_FORM_ACTION;
		var anActionEvent = cActionEvent.createInstance(actionName, this);
		// deploy event to controller
		cFormHandler.actionPerformed(anActionEvent);
}
catch(exception)
{
	cLog.warn("Problem with  form initialize::initialize", exception);
}



</script>
      </event>
      <event activity="preSave" ref="$host" name="event__preSave">
         <script contentType="application/x-javascript">//var cPart2GeneralHandler=script.HCeForm.control.part2.GeneralHandler;

//cPart2GeneralHandler.serializeModels();
</script>
      </event>
      <?templateDesigner Hyphenation excludeInitialCap:1, excludeAllCaps:1, wordCharCnt:7, remainCharCnt:3, pushCharCnt:3?>
      <event activity="docReady" ref="$host" name="event__docReady">
         <script contentType="application/x-javascript">//if (xfa.host.name != "XFAPresentationAgent") {
  //event.target.zoomType = zoomtype.fitP;
//}

</script>
      </event>
      <?templateDesigner expand 1?>
      <?renderCache.subset "Myriad Pro" 0 0 ISO-8859-1 4 288 79 000100080009000A000B000D000E000F0010001100120013001400150016001700180019001A001B001C00220023002400250026002700280029002A002D002E002F00300031003300340035003A003B00420043004400450046004700480049004A004B004C004D004E004F0050005100520053005400550056005700580059005A005B005C005E006F00CE00CF00D2 ’()*,-./0123456789:;ABCDEFGHILMNOPRSTYZabcdefghijklmnopqrstuvwxyz{}–çéè?>
      <?renderCache.subset "Myriad Pro" 1 0 ISO-8859-1 4 188 49 0001000A000E000F0010001200130014001500220023002400250026002700280029002A002C002D002F00300031003200330034003500360037004200440045004600470048004A004D004E004F0050005100530054005500560057006F )-./1234ABCDEFGHIKLNOPQRSTUVacdefgilmnoprstuv–?>
      <?renderCache.subset "Myriad Pro" 0 1 ISO-8859-1 4 64 17 000100330042004500460048004A004D004E004F0050005300540055005600D2 Radegilmnorstuè?>
   </subform>
   <?templateDesigner DefaultPreviewDynamic 1?>
   <?originalXFAVersion http://www.xfa.org/schema/xfa-template/2.8/?>
   <?templateDesigner Grid show:0, snap:0, units:0, color:ff8080, origin:(0,0), interval:(125000,125000), objsnap:0, guidesnap:0, pagecentersnap:827642484?>
   <?templateDesigner DefaultLanguage JavaScript?>
   <?templateDesigner DefaultRunAt client?>
   <?acrobat JavaScript strictScoping?>
   <?PDFPrintOptions embedViewerPrefs 0?>
   <?PDFPrintOptions embedPrintOnFormOpen 0?>
   <?PDFPrintOptions scalingPrefs 0?>
   <?PDFPrintOptions enforceScalingPrefs 0?>
   <?PDFPrintOptions paperSource 0?>
   <?PDFPrintOptions duplexMode 0?>
   <?templateDesigner DefaultPreviewType interactive?>
   <?templateDesigner DefaultPreviewPagination simplex?>
   <?templateDesigner XDPPreviewFormat 20?>
   <?templateDesigner DefaultCaptionFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner DefaultValueFontSettings face:Myriad Pro;size:10;weight:normal;style:normal?>
   <?templateDesigner ValidationMessaging noMessages?>
   <?templateDesigner FormTargetVersion 30?>
   <?templateDesigner Zoom 121?>
   <?templateDesigner Rulers horizontal:1, vertical:1, guidelines:1, crosshairs:0?>
   <?templateDesigner SaveTaggedPDF 0?>
   <?templateDesigner SavePDFWithEmbeddedFonts 0?>
   <?templateDesigner SavePDFWithLog 0?></template>
<config xmlns="http://www.xfa.org/schema/xci/3.0/">
   <agent name="designer">
      <!--  [0..n]  -->
      <destination>pdf</destination>
      <pdf>
         <!--  [0..n]  -->
         <fontInfo/>
      </pdf>
   </agent>
   <present>
      <!--  [0..n]  -->
      <pdf>
         <!--  [0..n]  -->
         <tagged>0</tagged>
         <fontInfo>
            <embed>0</embed>
         </fontInfo>
         <version>1.7</version>
         <adobeExtensionLevel>5</adobeExtensionLevel>
      </pdf>
      <common/>
      <script>
         <runScripts>server</runScripts>
      </script>
      <cache>
         <macroCache/>
      </cache>
      <xdp>
         <packets>*</packets>
      </xdp>
   </present>
   <psMap>
      <font typeface="Calibri" psName="Calibri" weight="normal" posture="normal"/>
   </psMap>
   <acrobat>
      <common>
         <validationMessaging>noMessages</validationMessaging>
      </common>
   </acrobat>
</config>
<localeSet xmlns="http://www.xfa.org/schema/xfa-locale-set/2.7/">
   <locale name="en_CA" desc="English (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>January</month>
            <month>February</month>
            <month>March</month>
            <month>April</month>
            <month>May</month>
            <month>June</month>
            <month>July</month>
            <month>August</month>
            <month>September</month>
            <month>October</month>
            <month>November</month>
            <month>December</month>
         </monthNames>
         <monthNames abbr="1">
            <month>Jan</month>
            <month>Feb</month>
            <month>Mar</month>
            <month>Apr</month>
            <month>May</month>
            <month>Jun</month>
            <month>Jul</month>
            <month>Aug</month>
            <month>Sep</month>
            <month>Oct</month>
            <month>Nov</month>
            <month>Dec</month>
         </monthNames>
         <dayNames>
            <day>Sunday</day>
            <day>Monday</day>
            <day>Tuesday</day>
            <day>Wednesday</day>
            <day>Thursday</day>
            <day>Friday</day>
            <day>Saturday</day>
         </dayNames>
         <dayNames abbr="1">
            <day>Sun</day>
            <day>Mon</day>
            <day>Tue</day>
            <day>Wed</day>
            <day>Thu</day>
            <day>Fri</day>
            <day>Sat</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>BC</era>
            <era>AD</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE, MMMM D, YYYY</datePattern>
         <datePattern name="long">MMMM D, YYYY</datePattern>
         <datePattern name="med">D-MMM-YY</datePattern>
         <datePattern name="short">DD/MM/YY</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">h:MM:SS A Z</timePattern>
         <timePattern name="long">h:MM:SS A Z</timePattern>
         <timePattern name="med">h:MM:SS A</timePattern>
         <timePattern name="short">h:MM A</timePattern>
      </timePatterns>
      <dateTimeSymbols>GyMdkHmsSEDFwWahKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">$z,zz9.99</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">.</numberSymbol>
         <numberSymbol name="grouping">,</numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">.</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
   <locale name="fr_CA" desc="French (Canada)">
      <calendarSymbols name="gregorian">
         <monthNames>
            <month>janvier</month>
            <month>février</month>
            <month>mars</month>
            <month>avril</month>
            <month>mai</month>
            <month>juin</month>
            <month>juillet</month>
            <month>août</month>
            <month>septembre</month>
            <month>octobre</month>
            <month>novembre</month>
            <month>décembre</month>
         </monthNames>
         <monthNames abbr="1">
            <month>janv.</month>
            <month>févr.</month>
            <month>mars</month>
            <month>avr.</month>
            <month>mai</month>
            <month>juin</month>
            <month>juil.</month>
            <month>août</month>
            <month>sept.</month>
            <month>oct.</month>
            <month>nov.</month>
            <month>déc.</month>
         </monthNames>
         <dayNames>
            <day>dimanche</day>
            <day>lundi</day>
            <day>mardi</day>
            <day>mercredi</day>
            <day>jeudi</day>
            <day>vendredi</day>
            <day>samedi</day>
         </dayNames>
         <dayNames abbr="1">
            <day>dim.</day>
            <day>lun.</day>
            <day>mar.</day>
            <day>mer.</day>
            <day>jeu.</day>
            <day>ven.</day>
            <day>sam.</day>
         </dayNames>
         <meridiemNames>
            <meridiem>AM</meridiem>
            <meridiem>PM</meridiem>
         </meridiemNames>
         <eraNames>
            <era>av. J.-C.</era>
            <era>ap. J.-C.</era>
         </eraNames>
      </calendarSymbols>
      <datePatterns>
         <datePattern name="full">EEEE D MMMM YYYY</datePattern>
         <datePattern name="long">D MMMM YYYY</datePattern>
         <datePattern name="med">YY-MM-DD</datePattern>
         <datePattern name="short">YY-MM-DD</datePattern>
      </datePatterns>
      <timePatterns>
         <timePattern name="full">HH' h 'MM' min 'SS' s 'Z</timePattern>
         <timePattern name="long">HH:MM:SS Z</timePattern>
         <timePattern name="med">HH:MM:SS</timePattern>
         <timePattern name="short">HH:MM</timePattern>
      </timePatterns>
      <dateTimeSymbols>GaMjkHmsSEDFwWxhKzZ</dateTimeSymbols>
      <numberPatterns>
         <numberPattern name="numeric">z,zz9.zzz</numberPattern>
         <numberPattern name="currency">z,zz9.99 $|(z,zz9.99$)</numberPattern>
         <numberPattern name="percent">z,zz9%</numberPattern>
      </numberPatterns>
      <numberSymbols>
         <numberSymbol name="decimal">,</numberSymbol>
         <numberSymbol name="grouping"> </numberSymbol>
         <numberSymbol name="percent">%</numberSymbol>
         <numberSymbol name="minus">-</numberSymbol>
         <numberSymbol name="zero">0</numberSymbol>
      </numberSymbols>
      <currencySymbols>
         <currencySymbol name="symbol">$</currencySymbol>
         <currencySymbol name="isoname">CAD</currencySymbol>
         <currencySymbol name="decimal">,</currencySymbol>
      </currencySymbols>
      <typefaces>
         <typeface name="Myriad Pro"/>
         <typeface name="Minion Pro"/>
         <typeface name="Courier Std"/>
         <typeface name="Adobe Pi Std"/>
         <typeface name="Adobe Hebrew"/>
         <typeface name="Adobe Arabic"/>
         <typeface name="Adobe Thai"/>
         <typeface name="Kozuka Gothic Pro-VI M"/>
         <typeface name="Kozuka Mincho Pro-VI R"/>
         <typeface name="Adobe Ming Std L"/>
         <typeface name="Adobe Song Std L"/>
         <typeface name="Adobe Myungjo Std M"/>
      </typefaces>
   </locale>
</localeSet>
<xfa:datasets xmlns:xfa="http://www.xfa.org/schema/xfa-data/1.0/">
   <xfa:data xfa:dataNode="dataGroup"/>
</xfa:datasets>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2011/06/07-10:39:26        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about="">
         <xmp:MetadataDate>2015-11-05T21:29:38Z</xmp:MetadataDate>
         <xmp:CreatorTool>Adobe LiveCycle Designer ES 10.0</xmp:CreatorTool>
      </rdf:Description>
      <rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about="">
         <pdf:Producer>Adobe LiveCycle Designer ES 10.0</pdf:Producer>
      </rdf:Description>
      <rdf:Description xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/" rdf:about="">
         <xmpMM:DocumentID>uuid:36eb4243-5ca2-4cc2-a15b-2c94480b65ad</xmpMM:DocumentID>
         <xmpMM:InstanceID>uuid:a4958ee8-0b65-4c54-9b59-985b81fb784f</xmpMM:InstanceID>
      </rdf:Description>
      <rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about="">
         <dc:format>application/pdf</dc:format>
         <dc:date>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Date: 2015-07-21$</rdf:value>
                  <dc:element-refinement>dc:created</dc:element-refinement>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <rdf:value>$Revision date: 2015-07-22$</rdf:value>
                  <dc:element-refinement>dc:issued</dc:element-refinement>
               </rdf:li>
            </rdf:Seq>
         </dc:date>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>Bianca Andreescu</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">QUALIFIED INVESTIGATOR UNDERTAKING</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description xmlns:desc="http://ns.adobe.com/xfa/promoted-desc/" rdf:about="">
         <desc:version rdf:parseType="Resource">
            <rdf:value>$Revision No: 1.18$</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:version>
         <desc:department rdf:parseType="Resource">
            <rdf:value>Health Canada - Sante Canada</rdf:value>
            <desc:ref>/template/subform[1]</desc:ref>
         </desc:department>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
<xfdf xmlns="http://ns.adobe.com/xfdf/" xml:space="preserve">
   <annots/>
</xfdf></xdp:xdp>
